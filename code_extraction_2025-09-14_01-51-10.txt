CODE EXTRACTION - 2025-09-14 01:51:10
Root: D:\QiEOS
================================================================================

DIRECTORY TREE:
----------------------------------------
├── apps
│   ├── admin-electron
│   │   ├── src
│   │   │   ├── renderer
│   │   │   │   ├── components
│   │   │   │   │   └── Sidebar.tsx
│   │   │   │   ├── lib
│   │   │   │   ├── routes
│   │   │   │   │   ├── Auditor.tsx
│   │   │   │   │   ├── BillingDesk.tsx
│   │   │   │   │   ├── CRM.tsx
│   │   │   │   │   ├── Dashboard.tsx
│   │   │   │   │   ├── Ingest.tsx
│   │   │   │   │   ├── KBEditor.tsx
│   │   │   │   │   ├── Migrations.tsx
│   │   │   │   │   ├── Projects.tsx
│   │   │   │   │   ├── Scripts.tsx
│   │   │   │   │   ├── Tasks.tsx
│   │   │   │   │   └── Tenants.tsx
│   │   │   │   ├── types
│   │   │   │   │   └── electron.d.ts
│   │   │   │   ├── App.css
│   │   │   │   ├── App.tsx
│   │   │   │   ├── index.html
│   │   │   │   └── main.tsx
│   │   │   ├── main.ts
│   │   │   └── preload.ts
│   │   ├── package.json
│   │   ├── README.md
│   │   ├── tsconfig.json
│   │   ├── tsconfig.main.json
│   │   └── vite.config.ts
│   ├── mini-apps
│   │   ├── content
│   │   │   ├── en
│   │   │   │   ├── 01_🔱 ___EmpowerQNow713™.md
│   │   │   │   ├── 02_🔱 __EmpowerQNow713 The Living Code.md
│   │   │   │   ├── 03_🔱 EmpowerQNow713 Mapped to Sacred Teachings.md
│   │   │   │   └── 04_🧠 EmpowerQNow — The Living QiDex™.md
│   │   │   └── es
│   │   │       ├── 01_🔱 ___EmpowerQNow713™.md
│   │   │       ├── 02_🔱 __EmpowerQNow713 The Living Code.md
│   │   │       ├── 03_🔱 EmpowerQNow713 Mapped to Sacred Teachings.md
│   │   │       ├── 04_🧠 EmpowerQNow — The Living QiDex™.md
│   │   │       └── README_ES.md
│   │   ├── DirectoryMapper
│   │   │   ├── static
│   │   │   │   └── index.html
│   │   │   ├── miniapp.json
│   │   │   └── server.py
│   │   ├── esl-lessons-app
│   │   │   ├── lessons
│   │   │   │   ├── Basics
│   │   │   │   │   └── communication.md
│   │   │   │   └── sample.md
│   │   │   ├── public
│   │   │   │   ├── lessons
│   │   │   │   │   ├── Basics
│   │   │   │   │   │   └── communication.md
│   │   │   │   │   ├── index.json
│   │   │   │   │   └── sample.md
│   │   │   │   ├── app.js
│   │   │   │   ├── index.html
│   │   │   │   └── styles.css
│   │   │   ├── scripts
│   │   │   ├── package.json
│   │   │   └── README.md
│   │   ├── notes
│   │   │   └── notes.json
│   │   ├── qi_rag_private
│   │   │   ├── app
│   │   │   │   ├── llm.py
│   │   │   │   ├── main.py
│   │   │   │   ├── rag.py
│   │   │   │   └── utils.py
│   │   │   ├── scripts
│   │   │   │   ├── ingest.py
│   │   │   │   ├── rclone_template.sh
│   │   │   │   └── watch_folder.py
│   │   │   ├── app.py
│   │   │   ├── config.json
│   │   │   ├── docker-compose.yml
│   │   │   ├── Dockerfile
│   │   │   ├── manifest.json
│   │   │   ├── README.md
│   │   │   ├── requirements.txt
│   │   │   ├── run.ps1
│   │   │   ├── run.sh
│   │   │   └── start_simple.py
│   │   ├── QiMiniApp-QiTaskWorker
│   │   │   ├── app
│   │   │   │   ├── config
│   │   │   │   │   └── config.yaml
│   │   │   │   ├── scripts
│   │   │   │   │   ├── install_service_linux.sh
│   │   │   │   │   ├── install_service_windows.ps1
│   │   │   │   │   ├── run_worker.bat
│   │   │   │   │   └── run_worker.sh
│   │   │   │   ├── requirements.txt
│   │   │   │   └── worker.py
│   │   │   ├── client
│   │   │   │   ├── scripts
│   │   │   │   │   ├── qpush.bat
│   │   │   │   │   └── qpush.sh
│   │   │   │   ├── client.html
│   │   │   │   ├── qpush.py
│   │   │   │   └── requirements.txt
│   │   │   ├── manifest.json
│   │   │   └── README.md
│   │   ├── qipay
│   │   │   ├── images
│   │   │   │   └── qr-codes
│   │   │   │       └── README.md
│   │   │   ├── index.html
│   │   │   ├── qr-generator.html
│   │   │   └── README.md
│   │   ├── QiVault-Intake-OCR-Local-MVP
│   │   │   ├── fixtures
│   │   │   │   └── README.md
│   │   │   ├── inbox
│   │   │   ├── intake_local.py
│   │   │   ├── qivault-intake-ocr.config.yaml
│   │   │   ├── README.md
│   │   │   └── requirements.txt
│   │   ├── qivect-dropbox
│   │   │   ├── app.py
│   │   │   ├── config.json
│   │   │   ├── manifest.json
│   │   │   ├── README.md
│   │   │   ├── requirements.txt
│   │   │   ├── run.ps1
│   │   │   ├── run.sh
│   │   │   └── test_startup.py
│   │   ├── scripts
│   │   ├── static
│   │   │   ├── index.html
│   │   │   └── sw.js
│   │   ├── static_build
│   │   │   ├── index.json
│   │   │   ├── merged_en.md
│   │   │   ├── merged_es.md
│   │   │   └── paired.html
│   │   ├── support-cody-main
│   │   │   ├── house.html
│   │   │   ├── index.html
│   │   │   ├── myresume.html
│   │   │   └── README.md
│   │   ├── workers
│   │   │   └── tts-worker.js
│   │   ├── app.py
│   │   ├── build.py
│   │   ├── README_DEPLOY.md
│   │   └── requirements.txt
│   ├── web
│   │   ├── public
│   │   │   ├── builtbyrays_public
│   │   │   │   ├── builtbyrays.com
│   │   │   │   │   ├── public
│   │   │   │   │   │   ├── css
│   │   │   │   │   │   │   ├── nivo-lightbox
│   │   │   │   │   │   │   │   ├── default.css
│   │   │   │   │   │   │   │   └── nivo-lightbox.css
│   │   │   │   │   │   │   ├── bootstrap.css
│   │   │   │   │   │   │   ├── bootstrap.min.css
│   │   │   │   │   │   │   └── style.css
│   │   │   │   │   │   ├── fonts
│   │   │   │   │   │   │   ├── font-awesome
│   │   │   │   │   │   │   │   ├── css
│   │   │   │   │   │   │   │   │   ├── font-awesome.css
│   │   │   │   │   │   │   │   │   └── font-awesome.min.css
│   │   │   │   │   │   │   │   ├── fonts
│   │   │   │   │   │   │   │   ├── less
│   │   │   │   │   │   │   │   └── scss
│   │   │   │   │   │   │   │       ├── _animated.scss
│   │   │   │   │   │   │   │       ├── _bordered-pulled.scss
│   │   │   │   │   │   │   │       ├── _core.scss
│   │   │   │   │   │   │   │       ├── _fixed-width.scss
│   │   │   │   │   │   │   │       ├── _icons.scss
│   │   │   │   │   │   │   │       ├── _larger.scss
│   │   │   │   │   │   │   │       ├── _list.scss
│   │   │   │   │   │   │   │       ├── _mixins.scss
│   │   │   │   │   │   │   │       ├── _path.scss
│   │   │   │   │   │   │   │       ├── _rotated-flipped.scss
│   │   │   │   │   │   │   │       ├── _stacked.scss
│   │   │   │   │   │   │   │       ├── _variables.scss
│   │   │   │   │   │   │   │       └── font-awesome.scss
│   │   │   │   │   │   │   └── fonts
│   │   │   │   │   │   ├── img
│   │   │   │   │   │   │   ├── portfolio
│   │   │   │   │   │   │   ├── team
│   │   │   │   │   │   │   └── testimonials
│   │   │   │   │   │   ├── js
│   │   │   │   │   │   │   ├── bootstrap.js
│   │   │   │   │   │   │   └── jquery.1.11.1.js
│   │   │   │   │   │   ├── index.html
│   │   │   │   │   │   └── robots.txt
│   │   │   │   │   ├── src
│   │   │   │   │   │   ├── components
│   │   │   │   │   │   │   ├── about.jsx
│   │   │   │   │   │   │   ├── contact.jsx
│   │   │   │   │   │   │   ├── features.jsx
│   │   │   │   │   │   │   ├── gallery.jsx
│   │   │   │   │   │   │   ├── header.jsx
│   │   │   │   │   │   │   ├── image.jsx
│   │   │   │   │   │   │   ├── navigation.jsx
│   │   │   │   │   │   │   ├── services.jsx
│   │   │   │   │   │   │   ├── Team.jsx
│   │   │   │   │   │   │   └── testimonials.jsx
│   │   │   │   │   │   ├── data
│   │   │   │   │   │   │   └── data.json
│   │   │   │   │   │   ├── App.css
│   │   │   │   │   │   ├── App.jsx
│   │   │   │   │   │   ├── index.css
│   │   │   │   │   │   ├── index.js
│   │   │   │   │   │   ├── serviceWorker.js
│   │   │   │   │   │   └── setupTests.js
│   │   │   │   │   ├── _config.yml
│   │   │   │   │   ├── package.json
│   │   │   │   │   └── README.md
│   │   │   │   ├── old-site-details
│   │   │   │   │   └── assets
│   │   │   │   │       ├── portfolio
│   │   │   │   │       ├── team
│   │   │   │   │       └── testimonials
│   │   │   │   ├── snapshots
│   │   │   │   │   └── snapshot_timestamp.txt
│   │   │   │   ├── v2
│   │   │   │   │   └── react-landing-page-template-2021
│   │   │   │   │       ├── public
│   │   │   │   │       │   └── assets
│   │   │   │   │       │       ├── gifs
│   │   │   │   │       │       └── images
│   │   │   │   │       ├── src
│   │   │   │   │       │   ├── components
│   │   │   │   │       │   │   ├── About.tsx
│   │   │   │   │       │   │   ├── Analytics.tsx
│   │   │   │   │       │   │   ├── Canvas.tsx
│   │   │   │   │       │   │   ├── Divider.tsx
│   │   │   │   │       │   │   ├── Features.tsx
│   │   │   │   │       │   │   ├── Header.tsx
│   │   │   │   │       │   │   ├── LazyShow.tsx
│   │   │   │   │       │   │   ├── MainHero.tsx
│   │   │   │   │       │   │   ├── MainHeroImage.tsx
│   │   │   │   │       │   │   ├── Pricing.tsx
│   │   │   │   │       │   │   ├── Product.tsx
│   │   │   │   │       │   │   └── Wave.tsx
│   │   │   │   │       │   ├── config
│   │   │   │   │       │   │   └── index.json
│   │   │   │   │       │   ├── hooks
│   │   │   │   │       │   │   ├── useCanvas.ts
│   │   │   │   │       │   │   └── useResponsiveSize.ts
│   │   │   │   │       │   ├── lib
│   │   │   │   │       │   │   ├── googleAds.ts
│   │   │   │   │       │   │   └── gtag.ts
│   │   │   │   │       │   ├── pages
│   │   │   │   │       │   │   ├── _app.tsx
│   │   │   │   │       │   │   ├── _document.tsx
│   │   │   │   │       │   │   └── index.tsx
│   │   │   │   │       │   ├── styles
│   │   │   │   │       │   │   └── main.css
│   │   │   │   │       │   ├── utils
│   │   │   │   │       │   │   ├── AppConfig.ts
│   │   │   │   │       │   │   ├── utils.ts
│   │   │   │   │       │   │   └── wave.ts
│   │   │   │   │       │   └── interfaces.d.ts
│   │   │   │   │       ├── CODE_OF_CONDUCT.md
│   │   │   │   │       ├── lint-staged.config.js
│   │   │   │   │       ├── netlify.toml
│   │   │   │   │       ├── next-env.d.ts
│   │   │   │   │       ├── next.config.js
│   │   │   │   │       ├── package.json
│   │   │   │   │       ├── postcss.config.js
│   │   │   │   │       ├── README.md
│   │   │   │   │       ├── tailwind.config.js
│   │   │   │   │       └── tsconfig.json
│   │   │   │   └── v3
│   │   │   │       ├── tailwind-landing-page-template
│   │   │   │       │   ├── app
│   │   │   │       │   │   ├── (auth)
│   │   │   │       │   │   │   ├── reset-password
│   │   │   │       │   │   │   │   └── page.tsx
│   │   │   │       │   │   │   ├── signin
│   │   │   │       │   │   │   │   └── page.tsx
│   │   │   │       │   │   │   ├── signup
│   │   │   │       │   │   │   │   └── page.tsx
│   │   │   │       │   │   │   └── layout.tsx
│   │   │   │       │   │   ├── (default)
│   │   │   │       │   │   │   ├── layout.tsx
│   │   │   │       │   │   │   └── page.tsx
│   │   │   │       │   │   ├── api
│   │   │   │       │   │   │   └── hello
│   │   │   │       │   │   │       └── route.ts
│   │   │   │       │   │   ├── css
│   │   │   │       │   │   │   ├── additional-styles
│   │   │   │       │   │   │   │   ├── custom-fonts.css
│   │   │   │       │   │   │   │   ├── theme.css
│   │   │   │       │   │   │   │   └── utility-patterns.css
│   │   │   │       │   │   │   └── style.css
│   │   │   │       │   │   └── layout.tsx
│   │   │   │       │   ├── components
│   │   │   │       │   │   ├── ui
│   │   │   │       │   │   │   ├── footer.tsx
│   │   │   │       │   │   │   ├── header.tsx
│   │   │   │       │   │   │   └── logo.tsx
│   │   │   │       │   │   ├── accordion.tsx
│   │   │   │       │   │   ├── banner.tsx
│   │   │   │       │   │   ├── business-categories.tsx
│   │   │   │       │   │   ├── cta.tsx
│   │   │   │       │   │   ├── features-planet.tsx
│   │   │   │       │   │   ├── hero-home.tsx
│   │   │   │       │   │   ├── large-testimonial.tsx
│   │   │   │       │   │   └── page-illustration.tsx
│   │   │   │       │   ├── public
│   │   │   │       │   │   └── images
│   │   │   │       │   ├── CHANGELOG.md
│   │   │   │       │   ├── next-env.d.ts
│   │   │   │       │   ├── next.config.js
│   │   │   │       │   ├── package.json
│   │   │   │       │   ├── postcss.config.js
│   │   │   │       │   ├── README.md
│   │   │   │       │   └── tsconfig.json
│   │   │   │       └── package.json
│   │   │   ├── empowerqnow
│   │   │   │   ├── code_extractor.py
│   │   │   │   ├── directory_mapper.py
│   │   │   │   └── index.html
│   │   │   └── kb
│   │   │       ├── getting-started.md
│   │   │       └── index.json
│   │   ├── src
│   │   │   ├── components
│   │   │   │   ├── admin
│   │   │   │   │   ├── layout
│   │   │   │   │   │   ├── header.tsx
│   │   │   │   │   │   ├── MainLayout.tsx
│   │   │   │   │   │   └── sidebar.tsx
│   │   │   │   │   ├── lib
│   │   │   │   │   │   └── utils.ts
│   │   │   │   │   └── ui
│   │   │   │   │       ├── button.tsx
│   │   │   │   │       └── card.tsx
│   │   │   │   ├── ClientSidebar.tsx
│   │   │   │   ├── Footer.tsx
│   │   │   │   ├── Header.tsx
│   │   │   │   ├── MarketingLayout.tsx
│   │   │   │   └── ProtectedRoute.tsx
│   │   │   ├── context
│   │   │   │   └── AuthContext.tsx
│   │   │   ├── hooks
│   │   │   │   ├── useAuth.ts
│   │   │   │   └── useTheme.ts
│   │   │   ├── lib
│   │   │   │   ├── supabaseClient.ts
│   │   │   │   └── utils.ts
│   │   │   ├── modules
│   │   │   │   ├── ai
│   │   │   │   │   ├── chat
│   │   │   │   │   ├── rag
│   │   │   │   │   ├── vision
│   │   │   │   │   └── voice
│   │   │   │   ├── billing
│   │   │   │   ├── client-tools
│   │   │   │   ├── crm
│   │   │   │   ├── files
│   │   │   │   │   ├── FileList.tsx
│   │   │   │   │   ├── FileUpload.module.css
│   │   │   │   │   └── FileUpload.tsx
│   │   │   │   ├── kb
│   │   │   │   │   ├── PrivateKB.tsx
│   │   │   │   │   └── PublicKB.tsx
│   │   │   │   ├── lms
│   │   │   │   ├── messaging
│   │   │   │   ├── projects
│   │   │   │   └── tasks
│   │   │   │       ├── CreateTask.tsx
│   │   │   │       └── List.tsx
│   │   │   ├── routes
│   │   │   │   ├── admin
│   │   │   │   │   ├── auditor
│   │   │   │   │   │   └── index.tsx
│   │   │   │   │   ├── billing-desk
│   │   │   │   │   │   └── index.tsx
│   │   │   │   │   ├── crm
│   │   │   │   │   │   └── index.tsx
│   │   │   │   │   ├── dashboard
│   │   │   │   │   │   └── index.tsx
│   │   │   │   │   ├── projects
│   │   │   │   │   │   ├── details.tsx
│   │   │   │   │   │   └── index.tsx
│   │   │   │   │   ├── routes
│   │   │   │   │   │   ├── auditor
│   │   │   │   │   │   │   └── index.tsx
│   │   │   │   │   │   ├── billing-desk
│   │   │   │   │   │   │   └── index.tsx
│   │   │   │   │   │   ├── crm
│   │   │   │   │   │   │   └── index.tsx
│   │   │   │   │   │   ├── dashboard
│   │   │   │   │   │   │   └── index.tsx
│   │   │   │   │   │   ├── ingest
│   │   │   │   │   │   ├── kb-editor
│   │   │   │   │   │   ├── migrations
│   │   │   │   │   │   ├── projects
│   │   │   │   │   │   │   ├── details.tsx
│   │   │   │   │   │   │   └── index.tsx
│   │   │   │   │   │   ├── scripts
│   │   │   │   │   │   ├── tasks
│   │   │   │   │   │   │   └── index.tsx
│   │   │   │   │   │   └── tenants
│   │   │   │   │   │       └── index.tsx
│   │   │   │   │   ├── tasks
│   │   │   │   │   │   └── index.tsx
│   │   │   │   │   └── tenants
│   │   │   │   │       └── index.tsx
│   │   │   │   ├── auth
│   │   │   │   │   ├── Callback.tsx
│   │   │   │   │   └── Login.tsx
│   │   │   │   ├── client
│   │   │   │   │   ├── Dashboard.tsx
│   │   │   │   │   ├── Files.tsx
│   │   │   │   │   ├── KnowledgeBase.tsx
│   │   │   │   │   └── Profile.tsx
│   │   │   │   ├── internal
│   │   │   │   └── public
│   │   │   │       ├── _samples
│   │   │   │       │   ├── about.tsx
│   │   │   │       │   └── index.tsx
│   │   │   │       ├── About.tsx
│   │   │   │       ├── Contact.tsx
│   │   │   │       ├── Home.tsx
│   │   │   │       ├── LetterWizard.tsx
│   │   │   │       ├── Privacy.tsx
│   │   │   │       ├── PublicKB.tsx
│   │   │   │       ├── Services.tsx
│   │   │   │       └── Terms.tsx
│   │   │   ├── store
│   │   │   ├── styles
│   │   │   │   ├── index.css
│   │   │   │   ├── tokens.css
│   │   │   │   └── utilities.css
│   │   │   ├── App.tsx
│   │   │   ├── main.tsx
│   │   │   └── vite-env.d.ts
│   │   ├── index.html
│   │   ├── package.json
│   │   ├── postcss.config.js
│   │   ├── README.md
│   │   ├── tailwind.config.js
│   │   ├── tsconfig.json
│   │   ├── tsconfig.node.json
│   │   └── vite.config.ts
│   └── README.md
├── blueprints
│   ├── accounting
│   │   └── monthly-close
│   ├── immigration
│   │   ├── I-131
│   │   ├── I-589
│   │   ├── I-765
│   │   └── SIV
│   ├── project
│   │   └── default
│   ├── website
│   │   └── minimal-landing
│   └── README.md
├── docs
│   ├── cursor
│   │   ├── agents
│   │   │   ├── scripts
│   │   │   │   ├── code_extraction.ps1
│   │   │   │   ├── devlog_append.md
│   │   │   │   ├── devlog_append.py
│   │   │   │   ├── kickoff.ps1
│   │   │   │   ├── run_day.md
│   │   │   │   ├── run_day.ps1
│   │   │   │   └── snapshot.py
│   │   │   ├── snapshots
│   │   │   │   └── QiEOS-snap-20250913-0942-detached-nohead.manifest.json
│   │   │   ├── templates
│   │   │   │   ├── change-summary.md
│   │   │   │   └── session-entry.md
│   │   │   ├── workflows
│   │   │   │   └── daily-kickoff.md
│   │   │   ├── auditor.md
│   │   │   ├── conductor.md
│   │   │   ├── kickoff.md
│   │   │   ├── logger.md
│   │   │   ├── planner.md
│   │   │   ├── README.md
│   │   │   ├── safety-rules.md
│   │   │   └── worker.md
│   │   ├── CURSOR_MODES.md
│   │   └── EDITOR.md
│   ├── API_KEYS.md
│   ├── DEV_LOG.md
│   ├── qi_portals_kb_schema_markdown_canvas_pack.md
│   ├── QiEOS.md
│   └── qu_note_developer_docs_v_1.md
├── drops
│   └── README.md
├── functions
│   └── api
│       └── contact.ts
├── infra
│   ├── cloudflare
│   │   └── wrangler.toml
│   ├── supabase
│   │   ├── migrations
│   │   │   └── 20250911103424_initial_schema.sql
│   │   ├── seeds
│   │   └── README.md
│   └── README.md
├── qi_rag_modern
│   ├── app
│   │   ├── dependency_manager.py
│   │   ├── document_processor.py
│   │   ├── glassmorphism_ui.py
│   │   ├── main.py
│   │   ├── modular_architecture.py
│   │   ├── multimodal_retriever.py
│   │   └── rag_engine.py
│   └── requirements.txt
├── qi_rag_private-repo
│   ├── app
│   │   ├── llm.py
│   │   ├── main.py
│   │   ├── rag.py
│   │   └── utils.py
│   ├── scripts
│   │   ├── ingest.py
│   │   ├── rclone_template.sh
│   │   └── watch_folder.py
│   ├── app.py
│   ├── config.json
│   ├── docker-compose.yml
│   ├── Dockerfile
│   ├── README.md
│   ├── requirements.txt
│   ├── run.ps1
│   ├── run.sh
│   └── start_simple.py
├── qially-coming-soon
│   ├── qially.com
│   │   ├── public
│   │   ├── scripts
│   │   │   ├── code_extractor.py
│   │   │   ├── directory_mapper.py
│   │   │   └── obsidian-sync.js
│   │   ├── 404.html
│   │   ├── about-me.html
│   │   ├── contact.html
│   │   ├── index.html
│   │   ├── knowledge-base.html
│   │   ├── privacy-policy.html
│   │   ├── README.md
│   │   ├── services.html
│   │   └── terms-of-use.html
│   └── scripts
│       ├── code_extractor.py
│       └── directory_mapper.py
├── QiAllyPortal
│   ├── attached_assets
│   │   └── Pasted-Build-me-a-full-stack-modular-repo-for-the-QiAlly-Portal-with-these-specs-Frontend-F-1756676752783_1756676752784.txt
│   ├── client
│   │   ├── src
│   │   │   ├── components
│   │   │   │   ├── admin
│   │   │   │   │   ├── AdminNavigation.tsx
│   │   │   │   │   └── AdminSidebar.tsx
│   │   │   │   ├── auth
│   │   │   │   │   └── AuthProvider.tsx
│   │   │   │   ├── client
│   │   │   │   │   ├── ClientNavigation.tsx
│   │   │   │   │   └── ClientSidebar.tsx
│   │   │   │   ├── kb
│   │   │   │   │   ├── AiChatSidebar.tsx
│   │   │   │   │   └── KnowledgeBaseSidebar.tsx
│   │   │   │   ├── layout
│   │   │   │   │   ├── FeatureGrid.tsx
│   │   │   │   │   ├── HeroSection.tsx
│   │   │   │   │   └── PublicNavigation.tsx
│   │   │   │   ├── messaging
│   │   │   │   │   ├── MessageContent.tsx
│   │   │   │   │   └── MessageSidebar.tsx
│   │   │   │   └── ui
│   │   │   │       ├── accordion.tsx
│   │   │   │       ├── alert-dialog.tsx
│   │   │   │       ├── alert.tsx
│   │   │   │       ├── aspect-ratio.tsx
│   │   │   │       ├── avatar.tsx
│   │   │   │       ├── badge.tsx
│   │   │   │       ├── breadcrumb.tsx
│   │   │   │       ├── button.tsx
│   │   │   │       ├── calendar.tsx
│   │   │   │       ├── card.tsx
│   │   │   │       ├── carousel.tsx
│   │   │   │       ├── chart.tsx
│   │   │   │       ├── checkbox.tsx
│   │   │   │       ├── collapsible.tsx
│   │   │   │       ├── command.tsx
│   │   │   │       ├── context-menu.tsx
│   │   │   │       ├── dialog.tsx
│   │   │   │       ├── drawer.tsx
│   │   │   │       ├── dropdown-menu.tsx
│   │   │   │       ├── form.tsx
│   │   │   │       ├── hover-card.tsx
│   │   │   │       ├── input-otp.tsx
│   │   │   │       ├── input.tsx
│   │   │   │       ├── label.tsx
│   │   │   │       ├── menubar.tsx
│   │   │   │       ├── navigation-menu.tsx
│   │   │   │       ├── pagination.tsx
│   │   │   │       ├── popover.tsx
│   │   │   │       ├── progress.tsx
│   │   │   │       ├── radio-group.tsx
│   │   │   │       ├── resizable.tsx
│   │   │   │       ├── scroll-area.tsx
│   │   │   │       ├── select.tsx
│   │   │   │       ├── separator.tsx
│   │   │   │       ├── sheet.tsx
│   │   │   │       ├── sidebar.tsx
│   │   │   │       ├── skeleton.tsx
│   │   │   │       ├── slider.tsx
│   │   │   │       ├── switch.tsx
│   │   │   │       ├── table.tsx
│   │   │   │       ├── tabs.tsx
│   │   │   │       ├── textarea.tsx
│   │   │   │       ├── toast.tsx
│   │   │   │       ├── toaster.tsx
│   │   │   │       ├── toggle-group.tsx
│   │   │   │       ├── toggle.tsx
│   │   │   │       └── tooltip.tsx
│   │   │   ├── context
│   │   │   │   └── UserContext.tsx
│   │   │   ├── hooks
│   │   │   │   ├── use-mobile.tsx
│   │   │   │   ├── use-toast.ts
│   │   │   │   └── useWebSocket.ts
│   │   │   ├── lib
│   │   │   │   ├── auth.ts
│   │   │   │   ├── kbApi.ts
│   │   │   │   ├── queryClient.ts
│   │   │   │   ├── supabase.ts
│   │   │   │   └── utils.ts
│   │   │   ├── pages
│   │   │   │   ├── admin-dashboard.tsx
│   │   │   │   ├── checkout.tsx
│   │   │   │   ├── client-dashboard.tsx
│   │   │   │   ├── invoice-management.tsx
│   │   │   │   ├── knowledge-base.tsx
│   │   │   │   ├── landing.tsx
│   │   │   │   ├── messaging.tsx
│   │   │   │   └── not-found.tsx
│   │   │   ├── utils
│   │   │   │   └── authGuards.ts
│   │   │   ├── App.tsx
│   │   │   ├── index.css
│   │   │   └── main.tsx
│   │   └── index.html
│   ├── server
│   │   ├── index.ts
│   │   ├── routes.ts
│   │   ├── storage.ts
│   │   └── vite.ts
│   ├── shared
│   │   └── schema.ts
│   ├── components.json
│   ├── drizzle.config.ts
│   ├── kb-config.json
│   ├── package.json
│   ├── postcss.config.js
│   ├── README.md
│   ├── replit.md
│   ├── tailwind.config.ts
│   ├── tsconfig.json
│   └── vite.config.ts
├── scripts
│   ├── bootstrap_venvs.ps1
│   ├── bootstrap_venvs.sh
│   ├── run_miniapp.ps1
│   └── run_miniapp.sh
├── shared
│   ├── __init__.py
│   ├── config_schema.py
│   ├── logging_utils.py
│   └── process_utils.py
├── src
│   ├── components
│   │   ├── ui
│   │   │   ├── button.tsx
│   │   │   ├── card.tsx
│   │   │   ├── container.tsx
│   │   │   ├── glass-card.tsx
│   │   │   ├── gradient-text.tsx
│   │   │   └── section.tsx
│   │   ├── CalendlyEmbed.tsx
│   │   ├── Footer.tsx
│   │   ├── Nav.tsx
│   │   └── ThemeToggle.tsx
│   ├── lib
│   │   └── utils.ts
│   ├── pages
│   │   ├── 404.tsx
│   │   ├── about.tsx
│   │   ├── contact.tsx
│   │   ├── index.tsx
│   │   ├── privacy.tsx
│   │   ├── services.tsx
│   │   └── terms.tsx
│   └── sections
│       ├── CtaBanner.tsx
│       ├── Hero.tsx
│       ├── Process.tsx
│       ├── ServicesGrid.tsx
│       ├── Testimonials.tsx
│       └── Trust.tsx
├── supabase
│   ├── config.toml
│   ├── note.md
│   └── package.json
├── support-cody-main
├── workers
│   └── api
│       ├── src
│       │   └── index.ts
│       ├── package.json
│       ├── tsconfig.json
│       └── wrangler.toml
├── Agents (Planner → Worker → Auditor → Worker … → Logger).md
├── code_extraction_2025-09-14_01-51-10.txt
├── code_extractor.py
├── directory_mapper.py
├── GLASSMORPHISM_UI.md
├── miniapps.json
├── MODULAR_ARCHITECTURE.md
├── package.json
├── pnpm-workspace.yaml
├── Qially KB MCP Server.md
├── README.md
├── snapshot.md
├── SUBMODULE_SETUP.md
├── tailwind.config.js
└── tsconfig.json

================================================================================
EXTRACTING FILE CONTENTS
================================================================================


================================================================================
FILE: D:\QiEOS\Agents (Planner → Worker → Auditor → Worker … → Logger).md
================================================================================

# Agent Workflow
Love this. You’re describing a tiny **agent orchestra** with clear roles and a baton. We can do this with **four agents + one conductor** and a super-simple **turn-based sync** that works inside Cursor today (no plugins needed): a text “semaphore” file that each agent checks before acting.

Here’s the setup you can drop into your repo:

---

# 🧠 Agents (Planner → Worker → Auditor → Worker … → Logger)

We’ll add five prompts and a tiny turn-based protocol:

- **Planner** (`planner.md`) — makes/updates the plan; never edits code.
    
- **Worker** (`worker.md`) — implements the next planned step; smallest diffs.
    
- **Auditor** (`auditor.md`) — checks and proposes top 1–3 fixes; no scope creep.
    
- **Logger** (`logger.md`) — appends to `docs/DEV_LOG.md`; commits the log.
    
- **Conductor** (`conductor.md`) — controls the turn order and resets the baton.
    

And a dead-simple baton:

- `.agents/state/turn.txt` → contains exactly one of: `planner|worker|auditor|logger|close`
    
- `.agents/state/plan.json` → current plan (IDs, steps, status)
    
- `.agents/state/progress.json` → results (build/test outcomes, diffs applied, notes)
    
- `.agents/state/session.md` → running scratch notes for Logger
    

Each agent **must** precheck the baton before acting. If it’s not their turn, they print a one-liner and stop.

---

## 1) Directory layout (additions)


docs/
  cursor/
    agents/
      [[planner]]
      [[worker]].md
      [[auditor]].md        # (your updated one stays, but with precheck)
      [[logger]].md         # (your updated one stays, but with precheck)
      [[conductor]].md
      scripts/
        [[run_day]].ps1
        [[devlog_append]].py     # already exists (ensure git-root-safe)
        [[snapshot]].py          # already exists (ensure git-root-safe)
    templates/
      [[session-entry]].md       # your session template
.agents/
  state/
    [[turn]].txt
    [[plan]].json
    [[progress]].json
    [[session]].md


## 2) Conductor script (one-click loop)

**`docs/cursor/agents/scripts/run_day.ps1`**

```powershell
#Requires -Version 5
$ErrorActionPreference = "Stop"

# Always operate from Git root
$gitRoot = (git rev-parse --show-toplevel).Trim()
if (-not $gitRoot) { throw "Not in a Git repo." }
Set-Location $gitRoot

$stateDir = Join-Path $gitRoot ".agents\state"
New-Item -ItemType Directory -Force -Path $stateDir | Out-Null

$turn = Join-Path $stateDir "turn.txt"
$plan = Join-Path $stateDir "plan.json"
$prog = Join-Path $stateDir "progress.json"
$scratch = Join-Path $stateDir "session.md"

# Initialize if missing
if (-not (Test-Path $turn)) { "planner" | Set-Content -Encoding UTF8 $turn }
if (-not (Test-Path $plan)) { "{}" | Set-Content -Encoding UTF8 $plan }
if (-not (Test-Path $prog)) { "{}" | Set-Content -Encoding UTF8 $prog }
if (-not (Test-Path $scratch)) { "# Session scratch`n" | Set-Content -Encoding UTF8 $scratch }

Write-Host "Git root: $gitRoot"
Write-Host "Using baton at: $turn"

# Start-of-day snapshot (read-only)
python docs/cursor/agents/scripts/snapshot.py --mode quick --flat-text --bundle --outdir snapshots

# Open Cursor on repo (optional)
$cursor = "$env:LOCALAPPDATA\Programs\cursor\Cursor.exe"
if (Test-Path $cursor) { Start-Process $cursor "--folder `"$gitRoot`"" }

Write-Host "`n== Agent loop =="
while ($true) {
  $t = (Get-Content $turn -Raw).Trim().ToLower()
  switch ($t) {
    "planner" { Write-Host "🧭 Planner’s turn. Open docs/cursor/agents/planner.md and run it."; }
    "worker"  { Write-Host "🔧 Worker’s turn. Open docs/cursor/agents/worker.md and run it."; }
    "auditor" { Write-Host "🔍 Auditor’s turn. Open docs/cursor/agents/auditor.md and run it."; }
    "logger"  { Write-Host "📝 Logger’s turn. Open docs/cursor/agents/logger.md and run it."; }
    "close"   { Write-Host "✅ Closing day. Running final snapshot and exiting loop."; break }
    default   { Write-Host "Unknown turn token '$t'. Set to 'planner'."; "planner" | Set-Content $turn }
  }
  $next = Read-Host "Set next turn (planner/worker/auditor/logger/close)"
  if ($next -notin @("planner","worker","auditor","logger","close")) {
    Write-Host "Invalid; keeping current." -ForegroundColor Yellow
  } else {
    $next | Set-Content -Encoding UTF8 $turn
  }
}
# Final snapshot for the day
python docs/cursor/agents/scripts/snapshot.py --mode full --bundle --outdir snapshots
Write-Host "🎬 Day closed."
```

This doesn’t “drive” Cursor automatically (Cursor can’t be remote-controlled), but it gives you a **single loop** to run, sets the baton, and reminds you who goes next. You keep your hands on the wheel.

---

## 3) Agent prompts (drop-in with baton precheck)

### `docs/cursor/agents/planner.md`

```
# Agent: Planner (Kickoff)

PRECHECK (must pass)
- Resolve $ROOT via: `git rev-parse --show-toplevel`
- Read $ROOT/.agents/state/turn.txt; if not "planner", print "Not my turn (planner)" and STOP.
- All file reads use $ROOT-absolute paths. Never write files.

PRINCIPLES
- Plan before code. Never mutate files.
- Respect qieos.mdc (locks, no deletions, explicit approval, no inline styles).
- Drive toward a WORKING APP: build/run/auth/migrations/core routes.

TASKS
1) Read context:
   - $ROOT/docs/DEV_LOG.md (latest entry: What/Why/Next)
   - $ROOT/docs/QiEOS.md (architecture/schema/workflows)
   - `git status` (summarize untracked/modified)
2) Summarize repo state in ≤5 bullets (include any blockers).
3) Propose a plan:
   - 3–5 steps, each with:
     - id (e.g., STEP-1), goal, files to touch, success criteria, est. time (≤50m total)
   - MUST respect locks. If change requires architecture/schema/workflow updates, mark `requires_godoc=true`.
4) Print **Diff Previews** for STEP-1 ONLY (no writes).
5) Save/Update plan:
   - Write the JSON plan content to stdout in a fenced block labeled PLAN-JSON.
   - Human will copy it into $ROOT/.agents/state/plan.json (or you may request a write if tools enabled).
6) WAIT for human: “yes, apply STEP-1” or “replan”.

OUTPUT
- “Repo State” bullets
- “Proposed Plan” checklist
- “Diff Preview (STEP-1)”
- PLAN-JSON fenced block
- “Ready to apply STEP-1? (yes/no)”
```

---

### `docs/cursor/agents/worker.md`

```
# Agent: Worker (Implementor)

PRECHECK
- Resolve $ROOT; ensure $ROOT/.agents/state/turn.txt == "worker" else STOP.
- Load $ROOT/.agents/state/plan.json; pick the first step with status: "pending".
- Respect locks & qieos.mdc.

PRINCIPLES
- Smallest safe diff. No deletions (move to .trash/YYYY-MM-DD/… if removal requested).
- No inline styles in JSX/HTML; use CSS Modules/Tailwind.
- Print diffs and WAIT for “yes, apply” before writing.

TASKS
1) Show STEP summary: id, goal, files, success criteria.
2) Propose the minimal diff(s) to complete this step (unified hunks).
3) WAIT for approval. On “yes, apply”:
   - Apply exactly the approved hunks.
   - Run quick checks:
     - `pnpm -r build`
     - `pnpm -r test` (if present)
4) Update $ROOT/.agents/state/progress.json:
   - Append an entry: { stepId, appliedFiles, buildOK, testOK, notes }
5) If success, mark the step “done” (request Planner to update plan.json) or print a tiny PLAN-JSON patch:
   - `{ "STEP-1": { "status": "done" } }`
6) Hand baton to AUDITOR (human will set turn.txt).

OUTPUT
- STEP summary
- Diff preview
- After apply: build/test results
- PLAN-JSON PATCH (if any)
- “Hand to auditor”
```

---

### `docs/cursor/agents/auditor.md` (yours, with baton + scope)

```
# Agent: Auditor (Top 1–3 Issues)

PRECHECK
- Resolve $ROOT; ensure $ROOT/.agents/state/turn.txt == "auditor" else STOP.

SAFETY
- Enforce qieos.mdc: locks, no deletions, explicit approval, no inline styles.
- Only Top 1–3 issues, focused on enabling a **working app**.

TASKS
1) Scan:
   - Env wiring (client VITE_* only; server vars not leaked)
   - Broken imports/routes; dead code that blocks build
   - Secrets in client code
   - Styling violations (inline styles)
   - Dependencies that block build/run
2) Produce **Findings Table**:
   | Severity | File | Line | Issue | Suggested Fix |
3) Propose **Minimal Diffs** (Top 1–3 only). WAIT for approval before writes.
4) After apply:
   - `pnpm -r build`
   - If success, record in $ROOT/.agents/state/progress.json
5) If material architecture/schema/workflow changes are implied, emit a **God Doc Patch** block (markdown summary for docs/QiEOS.md).
6) Hand baton to WORKER (human sets turn.txt) if fixes require code follow-up; otherwise to LOGGER.

OUTPUT
- Findings Table
- Diff previews
- Build result
- Optional: “God Doc Patch”
- Next baton suggestion (worker/logger)
```

---

### `docs/cursor/agents/logger.md` (yours, with baton + strict path)

```
# Agent: Logger (Session Append)

PRECHECK
- Resolve $ROOT; ensure $ROOT/.agents/state/turn.txt == "logger" else STOP.

TARGETS
- Append to: $ROOT/docs/DEV_LOG.md
- Template: $ROOT/docs/cursor/agents/templates/session-entry.md

TASKS
1) Read $ROOT/.agents/state/plan.json and progress.json; collect:
   - Steps done, diffs applied (paths), decisions, build/test outcomes
   - Open Questions; Next 1–2 Steps
   - Optional snapshot name(s)
2) Render the session entry using the template. PRINT DIFF; wait for approval.
3) On approval: append to DEV_LOG.md.
4) Commit:
   ```powershell
   git add docs/DEV_LOG.md
   git commit -m "docs: devlog update ($(Get-Date -Format 'yyyy-MM-dd HH:mm'))"
```

5. If PR exists, append its link into the same entry (small follow-up diff).
    

RULES

- Abort if target path ≠ $ROOT/docs/DEV_LOG.md.
    
- Respect lock markers.
    

OUTPUT

- Rendered markdown block
    
- Exact diff preview
    
- Done message with devlog path
    

```

---

### `docs/cursor/agents/conductor.md` (optional helper prompt)

```

# Agent: Conductor (Orchestrator)

ROLE

- Switch turn between agents using $ROOT/.agents/state/turn.txt
    
- Keep the loop Planner → Worker → Auditor → Worker … → Logger
    
- End day with “close” turn.
    

TASKS

- When asked “next”, set turn.txt to the requested agent.
    
- If asked “status”, summarize plan.json + progress.json + current turn.
    
- If asked “replan”, set turn.txt=planner and ping Planner.
    

```

---

## 4) How you use it (day in the life)

1) **Start**  
   - Run `docs/cursor/agents/scripts/run_day.ps1`  
   - It snapshots and sets turn=`planner`
2) **Planner** makes/updates plan (prints PLAN-JSON); you approve; set next turn=`worker`
3) **Worker** implements STEP-1 (tiny diff → build/test → progress.json); set next turn=`auditor`
4) **Auditor** fixes Top 1–3 (if any) → build/test; suggests next baton (`worker` if fixes need follow-up, else `logger`)
5) Loop Worker ↔ Auditor as needed.  
6) **Logger** appends session entry to `docs/DEV_LOG.md` and commits.
7) Conductor `close` → final snapshot.

Everything happens safely, visibly, and with a shared plan/progress state.

---

## 5) Safety & discipline baked-in

- **Wrong directory problem** is solved: every agent’s PRECHECK resolves `$ROOT` via `git rev-parse --show-toplevel` and uses absolute paths (they refuse to run if not in the repo).
- **Locks honored** (folder/file/section); **no deletions**; **inline styles banned**; **diffs then approval**.
- **God Doc stays true**: Auditor/Planner emit God Doc patches when architecture/schema/workflow change.
- **Traceability**: Logger pulls facts from `plan.json` and `progress.json` so your `DEV_LOG.md` is accurate.

---

Want me to generate the actual **files** (the five prompts + the PS1) with these contents so you can paste them straight in?
```

================================================================================
END: D:\QiEOS\Agents (Planner → Worker → Auditor → Worker … → Logger).md
================================================================================


================================================================================
FILE: D:\QiEOS\code_extraction_2025-09-14_01-51-10.txt
================================================================================



================================================================================
END: D:\QiEOS\code_extraction_2025-09-14_01-51-10.txt
================================================================================


================================================================================
FILE: D:\QiEOS\code_extractor.py
================================================================================

import os
from datetime import datetime

def should_ignore_directory(dir_name):
    """Check if directory should be ignored."""
    ignore_dirs = ['node_modules', 'dist', 'build', '.git', '$recycle.bin', 'tree-maker', '__pycache__']
    return dir_name.lower() in [d.lower() for d in ignore_dirs]

def is_text_file(file_name):
    """Check if file is a text file we want to extract."""
    # File extensions to explicitly exclude (binary/image files)
    binary_extensions = {
        '.ico', '.svg', '.png', '.jpg', '.jpeg', '.gif', '.bmp', '.webp',
        '.mp4', '.avi', '.mov', '.wmv', '.flv', '.webm', '.mkv',
        '.mp3', '.wav', '.flac', '.aac', '.ogg', '.wma',
        '.zip', '.rar', '.7z', '.tar', '.gz', '.bz2',
        '.exe', '.dll', '.so', '.dylib', '.bin',
        '.pdf', '.doc', '.docx', '.xls', '.xlsx', '.ppt', '.pptx',
        '.db', '.sqlite', '.sqlite3', '.mdb', '.accdb',
        '.log', '.tmp', '.temp', '.cache', '.lock',
        '.pyc', '.pyo', '.pyd', '.whl', '.egg'
    }
    
    # Files to explicitly ignore
    ignore_files = {
        'package-lock.json', 'yarn.lock', 'pnpm-lock.yaml',
        'composer.lock', 'Gemfile.lock', 'Pipfile.lock'
    }
    
    if file_name in ignore_files:
        return False
    
    # Check if it's a binary file
    ext = os.path.splitext(file_name)[1].lower()
    if ext in binary_extensions:
        return False
    
    # File extensions to include (text files only)
    text_extensions = {
        '.py', '.js', '.jsx', '.ts', '.tsx', '.html', '.css', '.scss', '.sass',
        '.json', '.xml', '.yaml', '.yml', '.md', '.txt', '.sh', '.bat', '.ps1',
        '.vue', '.php', '.java', '.cpp', '.c', '.h', '.hpp', '.cs', '.rb',
        '.go', '.rs', '.swift', '.kt', '.scala', '.r', '.sql', '.pl', '.lua',
        '.toml', '.ini', '.cfg', '.conf', '.env', '.gitignore'
    }
    
    # Check extension
    if ext in text_extensions:
        return True
    
    # Check for config files without extensions
    config_files = {
        'dockerfile', 'makefile', 'gemfile', 'procfile',
        'webpack.config.js', 'vite.config.js', 'rollup.config.js',
        'tsconfig.json', 'jsconfig.json', 'package.json'
    }
    return file_name.lower() in config_files

def print_directory_tree(root_dir, output_file, current_depth=0, prefix=''):
    """Print directory tree structure."""
    try:
        items = os.listdir(root_dir)
    except (PermissionError, FileNotFoundError):
        message = prefix + "└── [Access Denied]"
        print(message)
        output_file.write(message + "\n")
        return

    # Filter and sort items
    directories = []
    files = []
    
    for item in items:
        if item.startswith('.'):
            continue
        path = os.path.join(root_dir, item)
        if os.path.isdir(path):
            if not should_ignore_directory(item):
                directories.append(item)
        else:
            if is_text_file(item):
                files.append(item)
    
    # Sort alphabetically
    directories.sort(key=lambda s: s.lower())
    files.sort(key=lambda s: s.lower())
    items = directories + files

    for index, item in enumerate(items):
        path = os.path.join(root_dir, item)
        
        # Tree connector
        if index == len(items) - 1:
            connector = '└── '
            extension = '    '
        else:
            connector = '├── '
            extension = '│   '

        message = prefix + connector + item
        print(message)
        output_file.write(message + "\n")

        # Recurse into directories
        if os.path.isdir(path):
            print_directory_tree(path, output_file, current_depth + 1, prefix + extension)

def is_binary_file(file_path):
    """Check if a file is binary by reading the first 1024 bytes."""
    try:
        with open(file_path, 'rb') as f:
            chunk = f.read(1024)
            if b'\0' in chunk:  # Null bytes indicate binary
                return True
            # Check for high ratio of non-printable characters
            try:
                chunk.decode('utf-8')
            except UnicodeDecodeError:
                return True
            return False
    except:
        return True  # If we can't read it, assume it's binary

def extract_file_content(file_path, output_file):
    """Extract and write file content."""
    try:
        # Double-check if file is binary before reading
        if is_binary_file(file_path):
            skip_msg = f"\n{'='*80}\nSKIPPED BINARY FILE: {file_path}\n{'='*80}\n\n"
            print(skip_msg)
            output_file.write(skip_msg)
            return
        
        # File header
        header = f"\n{'='*80}\nFILE: {file_path}\n{'='*80}\n\n"
        print(header)
        output_file.write(header)
        
        # Read and write content
        with open(file_path, 'r', encoding='utf-8') as f:
            content = f.read()
            print(content)
            output_file.write(content)
            
        # File footer
        footer = f"\n\n{'='*80}\nEND: {file_path}\n{'='*80}\n\n"
        print(footer)
        output_file.write(footer)
        
    except Exception as e:
        error_msg = f"\nERROR: {file_path} - {str(e)}\n"
        print(error_msg)
        output_file.write(error_msg)

def walk_and_extract(root_dir, output_file):
    """Walk directories and extract text files in order."""
    print(f"\n{'='*80}")
    print("EXTRACTING FILE CONTENTS")
    print(f"{'='*80}\n")
    output_file.write(f"\n{'='*80}\nEXTRACTING FILE CONTENTS\n{'='*80}\n\n")
    
    file_count = 0
    
    for root, dirs, files in os.walk(root_dir):
        # Filter directories
        dirs[:] = [d for d in dirs if not should_ignore_directory(d) and not d.startswith('.')]
        
        # Filter and sort files
        text_files = [f for f in files if is_text_file(f)]
        text_files.sort(key=lambda s: s.lower())
        
        for file_name in text_files:
            file_path = os.path.join(root, file_name)
            extract_file_content(file_path, output_file)
            file_count += 1
    
    return file_count

def main():
    """Main function to run the code extraction."""
    root_dir = os.getcwd()
    timestamp = datetime.now().strftime("%Y-%m-%d_%H-%M-%S")
    output_filename = f"code_extraction_{timestamp}.txt"
    output_path = os.path.join(root_dir, output_filename)
    
    print(f"Extracting from: {root_dir}")
    print(f"Output: {output_path}")
    print(f"Ignoring: node_modules, dist, build, .git, $RECYCLE.BIN, tree-maker, __pycache__")
    print(f"{'='*80}\n")
    
    with open(output_path, 'w', encoding='utf-8') as output_file:
        # Header
        header = f"CODE EXTRACTION - {datetime.now().strftime('%Y-%m-%d %H:%M:%S')}\n"
        header += f"Root: {root_dir}\n"
        header += f"{'='*80}\n\n"
        print(header)
        output_file.write(header)
        
        # Directory tree
        print("DIRECTORY TREE:")
        print("-" * 40)
        output_file.write("DIRECTORY TREE:\n" + "-" * 40 + "\n")
        print_directory_tree(root_dir, output_file)
        
        # Extract files
        file_count = walk_and_extract(root_dir, output_file)
        
        # Footer
        footer = f"\n{'='*80}\nCOMPLETE - {file_count} files extracted\n{'='*80}\n"
        print(footer)
        output_file.write(footer)
    
    print(f"\nDone! Output: {output_path}")

if __name__ == "__main__":
    main()


================================================================================
END: D:\QiEOS\code_extractor.py
================================================================================


================================================================================
FILE: D:\QiEOS\directory_mapper.py
================================================================================

import os
import argparse
from datetime import datetime

def print_directory_tree(root_dir, show_files=True, max_depth=None, current_depth=0, prefix='', log_file=None, include_hidden=True, exclude_dirs=None):
    """
    Recursively prints the directory tree structure up to the specified depth and writes to a log file.
    """
    if exclude_dirs is None:
        exclude_dirs = [
            'venv', '__pycache__', 'data', 'logs',
            '.git', '.vscode', '.idea', '.pytest_cache',
            '.venv', '.DS_Store', '.env', '.env.local',
            '.env.development.local', '.env.test.local',
            '.env.production.local', 'Empty_Folders',
            '.docusaurus', '.docusaurus-plugin-content-docs-current',
            # Node / frontend bloat
            'node_modules', '.node_modules',
            # Tools/programs we don't want
            'mpc-hc', 'losslesscut', 'OCR', 'pdf-main', 'my-pdf-main',
            # Tests (ignore any folder containing these patterns)
            'test', 'tests', '__tests__',
            # Plugins and cache
            'plugins', '.local'
        ]

    if max_depth is not None and current_depth >= max_depth:
        return

    try:
        # Get the list of items in the directory
        items = os.listdir(root_dir)
    except PermissionError:
        message = prefix + "└── [Permission Denied]"
        print(message)
        if log_file:
            log_file.write(message + "\n")
        return
    except FileNotFoundError:
        message = prefix + "└── [Directory Not Found]"
        print(message)
        if log_file:
            log_file.write(message + "\n")
        return

    # Sort items: directories first, then files
    items = sorted(items, key=lambda s: s.lower())
    directories = [item for item in items if os.path.isdir(os.path.join(root_dir, item))]
    files = [item for item in items if not os.path.isdir(os.path.join(root_dir, item))]

    # Exclude directories that match or contain any exclude pattern
    directories = [
        item for item in directories
        if not any(ex.lower() in item.lower() for ex in exclude_dirs)
    ]

    # Show files or just folders
    items = directories if not show_files else directories + files

    for index, item in enumerate(items):
        if not include_hidden and item.startswith('.'):
            continue

        path = os.path.join(root_dir, item)
        # Determine tree connector style
        if index == len(items) - 1:
            connector = '└── '
            extension = '    '
        else:
            connector = '├── '
            extension = '│   '

        # Print and log
        message = prefix + connector + item
        print(message)
        if log_file:
            log_file.write(message + "\n")

        # Recurse into directories
        if os.path.isdir(path):
            print_directory_tree(path, show_files, max_depth, current_depth + 1,
                                 prefix + extension, log_file, include_hidden, exclude_dirs)

def create_log_file(filename_prefix, suffix=""):
    """Creates a timestamped log file in Downloads."""
    downloads_dir = os.path.join(os.path.expanduser("~"), "Downloads")

    sanitized_prefix = "".join(c for c in filename_prefix if c.isalnum() or c in (' ', '_', '-')).strip()
    if not sanitized_prefix:
        sanitized_prefix = "log"

    timestamp = datetime.now().strftime("%Y-%m-%d_%H-%M-%S")
    base_log_file_name = f"{sanitized_prefix}_{timestamp}{suffix}"
    log_file_name = f"{base_log_file_name}.txt"
    log_file_path = os.path.join(downloads_dir, log_file_name)

    counter = 1
    while os.path.exists(log_file_path):
        log_file_name = f"{base_log_file_name}_{counter}.txt"
        log_file_path = os.path.join(downloads_dir, log_file_name)
        counter += 1

    return open(log_file_path, "w", encoding="utf-8")

def main():
    """Main orchestrator for generating directory tree."""
    try:
        # Set default path to project root (current working directory)
        root_dir = os.getcwd()
        
        # Default settings: show both files and folders, no depth limit
        show_files = True
        max_depth = None

        log_file_tree = create_log_file(os.path.basename(root_dir), "_tree")
        print(f"Log file created: {log_file_tree.name}")
        print(f"Resolved path: {root_dir}")
        log_file_tree.write(f"Resolved path: {root_dir}\n")

        print_directory_tree(root_dir, show_files, max_depth, log_file=log_file_tree)
        log_file_tree.close()
        print(f"Directory structure logged in: {log_file_tree.name}")

    except Exception as e:
        print(f"An unexpected error occurred in main: {e}")

if __name__ == "__main__":
    main()


================================================================================
END: D:\QiEOS\directory_mapper.py
================================================================================


================================================================================
FILE: D:\QiEOS\GLASSMORPHISM_UI.md
================================================================================

# Glassmorphism UI System for QiLife-Eos

A stunning glassmorphism design system featuring frosted glass cards, glowing interactive buttons, and modern glass aesthetic components.

## 🎨 **Features**

- **Frosted Glass Cards**: Beautiful translucent cards with backdrop blur effects
- **Glowing Interactive Buttons**: Multiple glow effects (neon, soft, pulse, radiant, aurora)
- **Multiple Themes**: Ocean, sunset, aurora, midnight, and custom themes
- **Responsive Design**: Works perfectly on all devices
- **Smooth Animations**: Hover effects, transitions, and micro-interactions
- **React Components**: Ready-to-use React component templates

## 🌈 **Available Themes**

### 1. **Default Theme**
- Background: Purple gradient
- Accent: Cyan blue (#00d4ff)
- Perfect for modern applications

### 2. **Ocean Theme**
- Background: Blue to purple gradient
- Accent: Cyan blue (#00d4ff)
- Calm and professional

### 3. **Sunset Theme**
- Background: Red to yellow to blue gradient
- Accent: Coral red (#ff6b6b)
- Warm and energetic

### 4. **Aurora Theme**
- Background: Mint to pink gradient
- Accent: Cyan blue (#00d4ff)
- Soft and dreamy

### 5. **Midnight Theme**
- Background: Dark blue gradient
- Accent: Blue (#3498db)
- Dark and sophisticated

## 🎯 **Glass Effects**

### 1. **Frosted Glass** (Default)
- Semi-transparent background
- Medium backdrop blur
- Subtle borders

### 2. **Crystal Glass**
- Higher transparency
- Strong backdrop blur
- Bright borders

### 3. **Smoked Glass**
- Darker background
- Light backdrop blur
- Subtle borders

### 4. **Mirror Glass**
- Gradient background
- Strong backdrop blur
- Reflective borders

## ✨ **Glow Effects**

### 1. **Neon Glow**
- Bright, intense glow
- Text shadow effects
- Perfect for primary actions

### 2. **Soft Glow**
- Subtle, gentle glow
- Soft shadows
- Great for secondary actions

### 3. **Pulse Glow**
- Animated pulsing effect
- Continuous glow animation
- Attention-grabbing

### 4. **Radiant Glow**
- Multi-layered glow
- Intense light effects
- Premium feel

### 5. **Aurora Glow**
- Gradient background
- Colorful glow effects
- Unique and modern

## 🚀 **Quick Start**

### 1. **Basic HTML Usage**

```html
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Glassmorphism Dashboard</title>
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700&display=swap" rel="stylesheet">
    <style>
        /* Include the generated CSS styles */
        /* You can get this from /ui/styles endpoint */
    </style>
</head>
<body>
    <nav class="glass-nav">
        <h1>QiLife-Eos</h1>
        <button class="glow-button glow-neon">Dashboard</button>
    </nav>
    
    <div class="glass-dashboard">
        <div class="glass-card">
            <h2>RAG System</h2>
            <p>Advanced AI-powered document processing</p>
            <button class="glow-button glow-neon">Launch</button>
        </div>
    </div>
</body>
</html>
```

### 2. **React Components**

```jsx
import React from 'react';
import { GlassCard, GlowButton, GlassInput, GlassModal } from './components';

const Dashboard = () => {
  return (
    <div className="glass-dashboard">
      <GlassCard theme="ocean" effect="frosted">
        <h2>RAG System</h2>
        <p>Advanced AI-powered document processing</p>
        <GlowButton glowEffect="neon" onClick={() => console.log('Clicked!')}>
          Launch RAG
        </GlowButton>
      </GlassCard>
      
      <GlassCard theme="sunset" effect="crystal">
        <h2>Document Sync</h2>
        <p>Seamless file synchronization</p>
        <GlowButton glowEffect="pulse" onClick={() => console.log('Sync!')}>
          Sync Files
        </GlowButton>
      </GlassCard>
    </div>
  );
};
```

## 📡 **API Endpoints**

### 1. **Get Dashboard HTML**
```http
GET /ui/dashboard?theme=ocean
Authorization: Bearer <token>
```

### 2. **Get CSS Styles**
```http
GET /ui/styles?theme=default
```

### 3. **Get React Components**
```http
GET /ui/components
```

### 4. **Get Available Themes**
```http
GET /ui/themes
```

### 5. **Get Card Styles**
```http
GET /ui/card-styles?theme=ocean&effect=frosted
```

### 6. **Get Button Styles**
```http
GET /ui/button-styles?theme=ocean&glow_effect=neon
```

## 🎨 **CSS Classes**

### **Glass Cards**
```css
.glass-card              /* Base glass card */
.glass-card.glass-frosted /* Frosted glass effect */
.glass-card.glass-crystal /* Crystal glass effect */
.glass-card.glass-smoked  /* Smoked glass effect */
.glass-card.glass-mirror  /* Mirror glass effect */
```

### **Glow Buttons**
```css
.glow-button              /* Base glow button */
.glow-button.glow-neon    /* Neon glow effect */
.glow-button.glow-soft    /* Soft glow effect */
.glow-button.glow-pulse   /* Pulse glow effect */
.glow-button.glow-radiant /* Radiant glow effect */
.glow-button.glow-aurora  /* Aurora glow effect */
```

### **Form Elements**
```css
.glass-input              /* Glass input field */
.glass-modal-overlay      /* Modal overlay */
.glass-modal-content      /* Modal content */
.glass-nav                /* Navigation bar */
```

## 🎯 **Usage Examples**

### 1. **Dashboard Layout**

```html
<div class="glass-dashboard">
    <!-- RAG System Card -->
    <div class="glass-card">
        <h2 style="color: var(--accent-color);">RAG System</h2>
        <p style="color: var(--text-secondary);">
            Advanced retrieval-augmented generation with multimodal capabilities.
        </p>
        <button class="glow-button glow-neon">Launch RAG</button>
    </div>
    
    <!-- Document Sync Card -->
    <div class="glass-card">
        <h2 style="color: var(--accent-color);">Document Sync</h2>
        <p style="color: var(--text-secondary);">
            Seamless Dropbox integration for document management.
        </p>
        <button class="glow-button glow-soft">Sync Files</button>
    </div>
    
    <!-- 3D Visualization Card -->
    <div class="glass-card">
        <h2 style="color: var(--accent-color);">3D Visualization</h2>
        <p style="color: var(--text-secondary);">
            Interactive 3D document embeddings visualization.
        </p>
        <button class="glow-button glow-radiant">View 3D</button>
    </div>
</div>
```

### 2. **Form with Glassmorphism**

```html
<div class="glass-card">
    <h2>Login</h2>
    <form>
        <input 
            type="email" 
            class="glass-input" 
            placeholder="Email address"
        />
        <input 
            type="password" 
            class="glass-input" 
            placeholder="Password"
        />
        <button class="glow-button glow-neon" type="submit">
            Sign In
        </button>
    </form>
</div>
```

### 3. **Modal with Glassmorphism**

```html
<div class="glass-modal-overlay">
    <div class="glass-modal-content">
        <h2>Settings</h2>
        <p>Configure your application preferences.</p>
        <div style="display: flex; gap: 12px; margin-top: 24px;">
            <button class="glow-button glow-soft">Cancel</button>
            <button class="glow-button glow-neon">Save</button>
        </div>
    </div>
</div>
```

## 🎨 **Customization**

### 1. **Custom Theme**

```python
from glassmorphism_ui import GlassmorphismTheme

custom_theme = GlassmorphismTheme(
    name="custom",
    background="linear-gradient(135deg, #ff6b6b 0%, #4ecdc4 100%)",
    accent_color="#ff6b6b",
    glow_color="#ff6b6b"
)

glassmorphism_ui.themes["custom"] = custom_theme
```

### 2. **Custom CSS Variables**

```css
:root {
    --background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
    --glass-background: rgba(255, 255, 255, 0.1);
    --glass-border: rgba(255, 255, 255, 0.2);
    --accent-color: #00d4ff;
    --glow-color: #00d4ff;
    --text-primary: #ffffff;
    --text-secondary: rgba(255, 255, 255, 0.8);
}
```

## 📱 **Responsive Design**

The glassmorphism system is fully responsive:

- **Desktop**: Full grid layout with multiple columns
- **Tablet**: Adjusted grid with fewer columns
- **Mobile**: Single column layout with optimized spacing

```css
@media (max-width: 768px) {
    .glass-dashboard {
        grid-template-columns: 1fr;
        padding: 16px;
    }
    
    .glass-card {
        padding: 16px;
    }
}
```

## 🎭 **Animations**

### 1. **Hover Effects**
- Cards lift up on hover
- Buttons scale and glow
- Smooth transitions

### 2. **Click Effects**
- Buttons scale down on click
- Ripple effects
- Immediate feedback

### 3. **Loading States**
- Pulse animations
- Shimmer effects
- Smooth transitions

## 🔧 **Integration with Modular Architecture**

The glassmorphism UI system integrates seamlessly with the modular architecture:

```python
# Generate UI configuration for orchestrated mode
ui_config = modular_arch.get_orchestrated_ui_config("tenant-123")

# Apply glassmorphism styling
for component in ui_config:
    component["styles"] = glassmorphism_ui.generate_card_styles(
        theme="ocean",
        effect=GlassEffect.FROSTED
    )
```

## 🎨 **Best Practices**

### 1. **Theme Consistency**
- Use the same theme across all components
- Maintain consistent accent colors
- Ensure proper contrast ratios

### 2. **Performance**
- Use CSS transforms for animations
- Minimize backdrop-filter usage on mobile
- Optimize for 60fps animations

### 3. **Accessibility**
- Ensure sufficient color contrast
- Provide focus indicators
- Support keyboard navigation

### 4. **Browser Support**
- Modern browsers with backdrop-filter support
- Graceful fallbacks for older browsers
- Progressive enhancement

## 🚀 **Getting Started**

1. **Install Dependencies**
   ```bash
   pip install fastapi uvicorn
   ```

2. **Start the Server**
   ```bash
   python -m uvicorn app.main:app --reload
   ```

3. **Access the Dashboard**
   ```
   http://localhost:8000/ui/dashboard?theme=ocean
   ```

4. **Get CSS Styles**
   ```
   http://localhost:8000/ui/styles?theme=ocean
   ```

## 🎯 **Examples**

### **Complete Dashboard Example**
```html
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>QiLife-Eos Glassmorphism Dashboard</title>
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700&display=swap" rel="stylesheet">
    <style>
        /* Include the generated CSS from /ui/styles endpoint */
    </style>
</head>
<body>
    <nav class="glass-nav">
        <div style="display: flex; justify-content: space-between; align-items: center;">
            <h1 style="margin: 0; font-size: 24px; font-weight: 600;">QiLife-Eos</h1>
            <div style="display: flex; gap: 16px;">
                <button class="glow-button glow-neon">Dashboard</button>
                <button class="glow-button glow-soft">Apps</button>
                <button class="glow-button glow-pulse">Settings</button>
            </div>
        </div>
    </nav>
    
    <div class="glass-dashboard">
        <div class="glass-card">
            <h2 style="margin-top: 0; color: var(--accent-color);">RAG System</h2>
            <p style="color: var(--text-secondary);">Advanced retrieval-augmented generation with multimodal capabilities.</p>
            <button class="glow-button glow-neon" style="margin-top: 16px;">Launch RAG</button>
        </div>
        
        <div class="glass-card">
            <h2 style="margin-top: 0; color: var(--accent-color);">Document Sync</h2>
            <p style="color: var(--text-secondary);">Seamless Dropbox integration for document management.</p>
            <button class="glow-button glow-soft" style="margin-top: 16px;">Sync Files</button>
        </div>
        
        <div class="glass-card">
            <h2 style="margin-top: 0; color: var(--accent-color);">3D Visualization</h2>
            <p style="color: var(--text-secondary);">Interactive 3D document embeddings visualization.</p>
            <button class="glow-button glow-radiant" style="margin-top: 16px;">View 3D</button>
        </div>
        
        <div class="glass-card">
            <h2 style="margin-top: 0; color: var(--accent-color);">AR Experience</h2>
            <p style="color: var(--text-secondary);">Augmented reality document exploration.</p>
            <button class="glow-button glow-aurora" style="margin-top: 16px;">Start AR</button>
        </div>
    </div>
</body>
</html>
```

This glassmorphism UI system provides a stunning, modern interface for your QiLife-Eos modular architecture with beautiful frosted glass effects, glowing interactive buttons, and smooth animations! ✨


================================================================================
END: D:\QiEOS\GLASSMORPHISM_UI.md
================================================================================


================================================================================
FILE: D:\QiEOS\miniapps.json
================================================================================

[
  {
    "name": "qivect-dropbox",
    "path": "miniapps/qivect-dropbox",
    "description": "Example miniapp that demonstrates a simple dropbox integration",
    "entry": "app.py"
  },
  {
    "name": "qi_rag_private",
    "path": "miniapps/qi_rag_private",
    "description": "A stub miniapp representing a private RAG service",
    "entry": "app.py"
  }
]

================================================================================
END: D:\QiEOS\miniapps.json
================================================================================


================================================================================
FILE: D:\QiEOS\MODULAR_ARCHITECTURE.md
================================================================================

# Modular Architecture for QiLife-Eos

This document explains the modular architecture system that allows mini-apps to work both as independent units and as part of an orchestrated system.

## Overview

The QiLife-Eos modular architecture supports three modes of operation:

1. **Orchestrated Mode**: Mini-apps run as part of the main system with shared resources
2. **Independent Mode**: Mini-apps run as standalone applications
3. **Hybrid Mode**: Mini-apps can work in both modes

## Architecture Components

### 1. Mini-App Manifest

Each mini-app must have a `manifest.json` file that defines its capabilities:

```json
{
  "name": "my-app",
  "version": "1.0.0",
  "description": "Description of the mini-app",
  "mode": "hybrid",
  "entry_point": "app.py",
  "dependencies": ["fastapi", "uvicorn"],
  "exposed_components": ["MyComponent", "AnotherComponent"],
  "api_endpoints": ["/api/endpoint1", "/api/endpoint2"],
  "config_schema": {
    "type": "object",
    "properties": {
      "api_key": {
        "type": "string",
        "description": "API key for the service"
      }
    },
    "required": ["api_key"]
  },
  "permissions": ["read_data", "write_data"],
  "metadata": {
    "category": "ai",
    "tags": ["machine-learning", "nlp"]
  }
}
```

### 2. App Modes

- **`orchestrated`**: Only works as part of the main system
- **`independent`**: Only works as a standalone app
- **`hybrid`**: Can work in both modes

### 3. Component Registration

Mini-apps can expose components for use in the orchestrated UI:

```python
from modular_architecture import modular_arch

# Register a component
def MyComponent(props):
    return {"type": "div", "content": f"Hello {props['name']}"}

modular_arch.register_component("MyComponent", MyComponent)
```

### 4. API Endpoint Registration

Mini-apps can expose API endpoints:

```python
async def my_api_handler(context, data):
    tenant_id = context["tenant_id"]
    return {"message": f"Hello tenant {tenant_id}", "data": data}

modular_arch.register_api_endpoint("my_endpoint", my_api_handler)
```

## Usage Examples

### 1. Creating a Mini-App Instance

```python
# Create an instance of a mini-app
instance = modular_arch.create_app_instance(
    app_name="qi_rag_private",
    tenant_id="tenant-123",
    config={
        "openai_api_key": "sk-...",
        "max_tokens": 1000
    }
)
```

### 2. Getting UI Configuration for Orchestrated Mode

```python
# Get UI configuration for a tenant
ui_config = modular_arch.get_orchestrated_ui_config("tenant-123")

# This returns a list of components to render:
# [
#   {
#     "component": "ChatInterface",
#     "instance_id": "qi_rag_private_tenant-123_1234567890",
#     "app_name": "qi_rag_private",
#     "props": {
#       "tenant_id": "tenant-123",
#       "instance_id": "...",
#       "config": {...}
#     }
#   }
# ]
```

### 3. Executing API Calls

```python
# Execute an API call to a mini-app
result = await modular_arch.execute_api_call(
    endpoint="chat",
    tenant_id="tenant-123",
    data={"message": "Hello, world!"}
)
```

## API Endpoints

### List Available Apps
```http
GET /apps
Authorization: Bearer <token>
```

### Create App Instance
```http
POST /apps/{app_name}/instances
Authorization: Bearer <token>
Content-Type: application/json

{
  "config": {
    "api_key": "your-api-key"
  }
}
```

### List App Instances
```http
GET /apps/instances
Authorization: Bearer <token>
```

### Update App Config
```http
PUT /apps/instances/{instance_id}/config
Authorization: Bearer <token>
Content-Type: application/json

{
  "new_setting": "value"
}
```

### Remove App Instance
```http
DELETE /apps/instances/{instance_id}
Authorization: Bearer <token>
```

### Get UI Configuration
```http
GET /apps/ui-config
Authorization: Bearer <token>
```

### Execute App API
```http
POST /apps/api/{endpoint}
Authorization: Bearer <token>
Content-Type: application/json

{
  "data": {...}
}
```

### Get Statistics
```http
GET /apps/statistics
Authorization: Bearer <token>
```

## Frontend Integration

### React Component Renderer

```jsx
import React, { useState, useEffect } from 'react';

const ComponentRenderer = ({ tenantId }) => {
  const [uiConfig, setUiConfig] = useState([]);
  const [loading, setLoading] = useState(true);

  useEffect(() => {
    fetch('/apps/ui-config', {
      headers: {
        'Authorization': `Bearer ${token}`
      }
    })
    .then(res => res.json())
    .then(data => {
      setUiConfig(data.ui_config);
      setLoading(false);
    });
  }, [tenantId]);

  if (loading) return <div>Loading...</div>;

  return (
    <div>
      {uiConfig.map((item, index) => {
        const Component = componentRegistry[item.component];
        return (
          <Component
            key={index}
            {...item.props}
          />
        );
      })}
    </div>
  );
};

// Component registry
const componentRegistry = {
  ChatInterface: ChatInterfaceComponent,
  DocumentUploader: DocumentUploaderComponent,
  Visualization3D: Visualization3DComponent,
  // ... other components
};
```

### Dynamic Component Loading

```jsx
import React, { lazy, Suspense } from 'react';

const DynamicComponent = ({ componentName, ...props }) => {
  const Component = lazy(() => import(`./components/${componentName}`));
  
  return (
    <Suspense fallback={<div>Loading component...</div>}>
      <Component {...props} />
    </Suspense>
  );
};
```

## Deployment Strategies

### 1. Monorepo Deployment
All mini-apps are deployed together as part of the main application.

**Pros:**
- Simple deployment
- Shared dependencies
- Easy debugging

**Cons:**
- Less flexibility
- All apps must be compatible

### 2. Independent Deployment
Each mini-app is deployed separately.

**Pros:**
- Maximum flexibility
- Independent versioning
- Isolated failures

**Cons:**
- More complex deployment
- Potential version conflicts

### 3. Hybrid Deployment
Some apps are deployed together, others independently.

**Pros:**
- Balanced flexibility and simplicity
- Can optimize based on app characteristics

**Cons:**
- More complex management

## Best Practices

### 1. App Design
- Design apps to be stateless when possible
- Use configuration for environment-specific settings
- Implement proper error handling and logging

### 2. Component Design
- Make components reusable and configurable
- Use props for configuration
- Implement proper loading and error states

### 3. API Design
- Use consistent naming conventions
- Implement proper authentication and authorization
- Return consistent response formats

### 4. Configuration Management
- Use environment variables for sensitive data
- Validate configuration on startup
- Provide sensible defaults

### 5. Testing
- Test apps in both orchestrated and independent modes
- Mock dependencies for isolated testing
- Test component integration

## Security Considerations

### 1. Tenant Isolation
- Always validate tenant access
- Use proper authentication and authorization
- Isolate data between tenants

### 2. API Security
- Validate all inputs
- Implement rate limiting
- Use HTTPS for all communications

### 3. Configuration Security
- Never expose sensitive configuration
- Use secure storage for secrets
- Rotate keys regularly

## Monitoring and Observability

### 1. Logging
- Use structured logging
- Include tenant context in logs
- Log important events and errors

### 2. Metrics
- Track app usage and performance
- Monitor error rates
- Track resource usage

### 3. Health Checks
- Implement health check endpoints
- Monitor app availability
- Alert on failures

## Example Mini-App Implementation

Here's a complete example of a mini-app:

```python
# my_app/app.py
from fastapi import FastAPI
from modular_architecture import modular_arch

app = FastAPI()

# Register components
def MyWidget(props):
    return {
        "type": "div",
        "className": "my-widget",
        "children": [
            {"type": "h2", "children": props.get("title", "My Widget")},
            {"type": "p", "children": props.get("content", "Default content")}
        ]
    }

modular_arch.register_component("MyWidget", MyWidget)

# Register API endpoints
async def my_api_handler(context, data):
    tenant_id = context["tenant_id"]
    return {
        "status": "success",
        "tenant_id": tenant_id,
        "data": data
    }

modular_arch.register_api_endpoint("my_api", my_api_handler)

@app.get("/health")
async def health():
    return {"status": "healthy"}

if __name__ == "__main__":
    import uvicorn
    uvicorn.run(app, host="0.0.0.0", port=8000)
```

```json
# my_app/manifest.json
{
  "name": "my_app",
  "version": "1.0.0",
  "description": "Example mini-app",
  "mode": "hybrid",
  "entry_point": "app.py",
  "dependencies": ["fastapi", "uvicorn"],
  "exposed_components": ["MyWidget"],
  "api_endpoints": ["my_api"],
  "config_schema": {
    "type": "object",
    "properties": {
      "title": {
        "type": "string",
        "default": "My Widget"
      }
    }
  },
  "permissions": ["read_data"],
  "metadata": {
    "category": "ui",
    "tags": ["widget", "example"]
  }
}
```

This modular architecture provides the flexibility to build complex applications while maintaining simplicity and reusability.


================================================================================
END: D:\QiEOS\MODULAR_ARCHITECTURE.md
================================================================================


================================================================================
FILE: D:\QiEOS\package.json
================================================================================

{
  "name": "qieos",
  "version": "1.0.0",
  "description": "QiEOS monorepo - unified client portal, admin control, APIs, AI, billing, and per-client public websites",
  "private": true,
  "workspaces": [
    "apps/*",
    "apps/*/Neurite",
    "packages/*",
    "sites/*"
  ],
  "scripts": {
    "dev": "concurrently -n WORKER,WEB -c magenta,cyan \"pnpm --filter qieos-api dev\" \"pnpm --filter qieos-web dev\"",
    "build": "pnpm --filter @qieos/types build && pnpm --filter @qieos/utils build",
    "build:kb": "node scripts/build-neurite-kb.mjs",
    "kb:bible": "node scripts/merge-kb.mjs",
    "build:neurite": "pnpm --dir apps/Nuerite/Neurite build",
    "postbuild": "pnpm build:kb && echo 'KB pages synced to Neurite'",
    "dev:neurite": "pnpm --dir apps/Nuerite/Neurite start",
    "predev:stack": "pnpm build:kb",
    "dev:stack": "concurrently -n WORKER,WEB,NEURITE -c magenta,cyan,green \"pnpm --filter qieos-api dev\" \"pnpm --filter qieos-web dev\" \"pnpm --dir apps/Nuerite/Neurite start\"",
    "setup": "node scripts/setup-dev.mjs",
    "migrate": "echo 'Run scripts/create-migrations.sql in your Supabase SQL editor'",
    "deploy:web": "pnpm --filter qieos-web build && wrangler pages deploy apps/web/dist --project-name=qieos-web",
    "deploy:worker": "pnpm --filter qieos-api deploy",
    "deploy:sites": "echo 'Use GitHub Actions or run wrangler pages deploy for each site'"
  },
  "devDependencies": {
    "concurrently": "^9.0.0",
    "typescript": "^5.0.0",
    "wrangler": "4.35.0"
  },
  "dependencies": {
    "rimraf": "^5.0.0"
  },
  "engines": {
    "node": ">=18.0.0",
    "pnpm": ">=8.0.0"
  }
}


================================================================================
END: D:\QiEOS\package.json
================================================================================


================================================================================
FILE: D:\QiEOS\pnpm-workspace.yaml
================================================================================

packages:
  - "apps/*"
  - "workers/*"
  - "packages/*"
  - "sites/*"
  - "sites/clients/_qsites/*"


================================================================================
END: D:\QiEOS\pnpm-workspace.yaml
================================================================================


================================================================================
FILE: D:\QiEOS\Qially KB MCP Server.md
================================================================================


Model Context Protocol (MCP) server for QiAlly that crawls public KB pages and returns clean context to agents.

## What it does
- Exposes a tool `crawl_kb(url, scope, max_pages, include_paths, exclude_paths, max_chars_per_page)`
- Fetches seed page, follows same-origin links (bounded), strips HTML to text
- Returns `{ summary, sources, chunks[] }`
- Caches results in Cloudflare KV for 30 minutes

## Endpoints
- `GET /health` → `200 ok`
- `POST /mcp/tools/list` → JSON tool schema
- `POST /mcp/tools/call` → run a tool by name and arguments

## Quick start
```bash
npm i
npm i -D wrangler
npx wrangler kv namespace create KB_CACHE
npx wrangler secret put MCP_BEARER   # paste long random token
npx wrangler deploy


================================================================================
END: D:\QiEOS\Qially KB MCP Server.md
================================================================================


================================================================================
FILE: D:\QiEOS\README.md
================================================================================

# QiEOS

**Unified Client Portal, Admin Control, APIs, AI, Billing & Public Websites**

QiEOS is a comprehensive platform that unifies client portals, admin control, APIs, AI (RAG/voice/vision), billing, and per-client public websites—all without requiring restructuring later. Built with Cloudflare-first architecture and Supabase backend.

## 🏗️ Architecture

- **Frontend**: React + Vite + TypeScript (TSX) with Tailwind CSS
- **Backend**: Cloudflare Workers (Hono) + Supabase (Postgres + Auth + RLS)
- **Storage**: Cloudflare R2 for files, Supabase for metadata
- **Admin**: Electron desktop application for privileged operations
- **Deployment**: Cloudflare Pages + Workers

## 🎯 Core Features

### Multi-Tenant Organization

- **Org → Department → Company → Contact** hierarchy
- Role-based access control (admin, internal, external, public)
- Feature flags for module access control

### Client Portal

- Task management (tenant-scoped)
- File storage with signed URLs
- Knowledge base (public + private)
- AI assistants with RAG, voice, and vision
- Billing and invoicing
- Project and ticket management

### Admin Control

- Tenant provisioning and branding
- CRM management
- Knowledge base editing
- Bulk data ingestion for RAG
- Billing desk operations
- Script execution and migrations

### Public Websites

- Per-client public sites (Cloudflare Pages)
- Static knowledge base articles
- File drops with TTL policies

## 🚀 Quick Start

### Prerequisites

- Node.js 18+
- pnpm
- Supabase account
- Cloudflare account

### Development Setup

1. **Clone and install dependencies**

   ```bash
   git clone <repository-url>
   cd qieos
   pnpm install
   ```

2. **Configure environment**

   - Set up a new Supabase project.
   - In `infra/cloudflare/wrangler.toml`, fill in your Supabase project URL and service role key. You will also need to add API keys for OpenAI and Stripe if you use those features.
   - Create a file `workers/api/.dev.vars` and add your development secrets there. You can copy the keys from `infra/cloudflare/env.example` but note that `wrangler` does not load `.env` files. The format is `KEY="VALUE"`.

     ```
     # workers/api/.dev.vars

     SUPABASE_URL="YOUR_SUPABASE_URL"
     SUPABASE_SERVICE_ROLE_KEY="YOUR_SUPABASE_SERVICE_ROLE_KEY"
     OPENAI_API_KEY="YOUR_OPENAI_API_KEY"
     STRIPE_SECRET_KEY="YOUR_STRIPE_SECRET_KEY"
     JWT_SECRET="YOUR_JWT_SECRET"
     ```

   - Create a file `apps/web/.env` for the web app's environment variables:

     ```
     # apps/web/.env

     VITE_SUPABASE_URL="YOUR_SUPABASE_URL"
     VITE_SUPABASE_ANON_KEY="YOUR_SUPABASE_ANON_KEY"
     VITE_API_URL="http://localhost:8787"
     ```

3. **Run migrations**

   - Go to your Supabase project's SQL Editor.
   - Copy the content of `scripts/create-migrations.sql` and run it.

4. **Start development servers**

   - In the `workers/api/package.json` file, update the `dev` script to:
     `"dev": "wrangler dev --config ../../infra/cloudflare/wrangler.toml --persist"`

   - In the root directory, run:

   ```bash
   # Start both the web app and the API worker
   pnpm dev
   ```

## 📁 Project Structure

```
qieos/
├─ apps/
│  ├─ web/                                  # React + Vite (TSX) | website + portal
│  │  ├─ index.html
│  │  ├─ vite.config.ts
│  │  ├─ tsconfig.json
│  │  ├─ public/                            # our public website & static KB
│  │  │  ├─ favicon.ico
│  │  │  ├─ logo.svg
│  │  │  ├─ manifest.json
│  │  │  ├─ robots.txt
│  │  │  └─ kb/                             # optional static public KB
│  │  │     ├─ index.json
│  │  │     └─ getting-started.md
│  │  └─ src/
│  │     ├─ main.tsx
│  │     ├─ App.tsx
│  │     ├─ routes/
│  │     │  ├─ public/                      # '/', '/kb', etc.
│  │     │  ├─ auth/                        # '/auth/*'
│  │     │  ├─ client/                      # '/client/:companySlug/*'
│  │     │  ├─ internal/                    # '/internal/*'
│  │     │  └─ admin/                       # '/admin/*' (web fallback)
│  │     ├─ components/                     # reusable UI
│  │     ├─ modules/
│  │     │  ├─ crm/
│  │     │  ├─ projects/                    # projects, tickets
│  │     │  ├─ tasks/                       # tasks (can stand alone; project_id nullable)
│  │     │  ├─ messaging/                   # chat (WS)
│  │     │  ├─ kb/                          # private KB UI (org/company scoped)
│  │     │  ├─ ai/                          # assistants + RAG + voice + vision
│  │     │  │  ├─ chat/
│  │     │  │  ├─ rag/
│  │     │  │  ├─ voice/
│  │     │  │  └─ vision/
│  │     │  ├─ billing/                     # invoices, statements, payments
│  │     │  ├─ lms/                         # (future)
│  │     │  └─ client-tools/                # togglable mini-tool hub
│  │     ├─ lib/                            # client-side libraries
│  │     │  ├─ supabaseClient.ts
│  │     │  ├─ api.ts                       # Worker fetch wrapper
│  │     │  ├─ flags.ts                     # feature flag resolver
│  │     │  └─ claims.ts                    # JWT helpers/types
│  │     ├─ context/                        # Auth, Tenant, Flags
│  │     ├─ hooks/                          # useAuth/useTenant/useFlags/queries
│  │     ├─ store/                          # tanstack-query or zustand config
│  │     └─ styles/                         # tailwind.css, tokens
│  └─ admin-electron/                       # Electron desktop admin (TS)
│     ├─ electron-main.ts                   # main process (no secrets in renderer)
│     ├─ preload.ts                         # secure IPC bridge (contextIsolation)
│     ├─ vite.config.ts
│     └─ src/renderer/                      # React UI inside Electron
│        ├─ App.tsx
│        ├─ routes/
│        │  ├─ dashboard/                   # admin home, KPIs
│        │  ├─ tenants/                     # org/company provisioning + branding
│        │  ├─ crm/
│        │  ├─ projects/
│        │  ├─ tasks/
│        │  ├─ kb-editor/                   # create/edit collections & docs
│        │  ├─ ingest/                      # bulk import → RAG (to Worker endpoints)
│        │  ├─ billing-desk/                # invoices, statements, payments mgmt
│        │  ├─ scripts/                     # script runner UI (server-executed)
│        │  ├─ migrations/                  # db migrations launcher (server)
│        │  └─ auditor/                     # read-only audit views, exports
│        ├─ components/
│        └─ lib/
│           ├─ api.ts                       # talks ONLY to Worker API
│           └─ queue.ts                     # local queue (retry/offline) → Worker
│
├─ sites/                                   # public client sites (each own Pages project)
│  ├─ _themes/                              # shared themes
│  ├─ _assets/
│  ├─ _scripts/
│  └─ clients/
│     ├─ {client-slug}/
│     │  ├─ site/                           # Astro/Vite/Eleventy etc.
│     │  ├─ public/
│     │  └─ pages.config.json               # Pages metadata
│     └─ ...
│
├─ drops/                                   # random public files (served via Worker/R2)
│  ├─ README.md
│  └─ .gitkeep
│
├─ workers/
│  └─ api/                                  # Cloudflare Worker (Hono)
│     ├─ wrangler.toml
│     └─ src/
│        ├─ index.ts                        # mount router + middleware
│        ├─ middleware/
│        │  ├─ auth.ts                      # Supabase JWT verify + enrich claims
│        │  └─ flags.ts                     # org/company feature toggle injector
│        ├─ routes/
│        │  ├─ health.ts
│        │  ├─ auth.ts                      # session→claims endpoint
│        │  ├─ tenants.ts                   # org/company provisioning & branding
│        │  ├─ crm.ts
│        │  ├─ projects.ts
│        │  ├─ tasks.ts
│        │  ├─ messaging.ts
│        │  ├─ kb.ts                        # kb_collections/docs CRUD + signed URLs
│        │  ├─ rag.ts                       # embed/query/citations (RAG)
│        │  ├─ billing.ts                   # Stripe webhooks + statements
│        │  ├─ lms.ts
│        │  ├─ tools.ts                     # script exec (server-side), mini-app hooks
│        │  └─ sites.ts                     # Pages orchestration + R2 drop links
│        ├─ integrations/                   # external APIs (1 file per vendor)
│        │  ├─ openai.ts
│        │  ├─ stripe.ts
│        │  ├─ elevenlabs.ts
│        │  ├─ ocr.ts
│        │  ├─ zoho.ts
│        │  └─ r2.ts
│        └─ lib/
│           ├─ supabaseAdmin.ts             # service-role client (server-only)
│           ├─ vector.ts                    # pgvector queries
│           ├─ embeddings.ts                # OpenAI embeddings
│           ├─ ingest.ts                    # chunkers/parsers (pdf/docx/html)
│           ├─ flags.ts                     # feature flag checks
│           └─ sites.ts                     # Pages helpers
│
├─ templates/                               # reusable content
│  ├─ communications/
│  │  ├─ email/
│  │  ├─ sms/
│  │  └─ whatsapp/
│  ├─ accounting/
│  │  ├─ reports/
│  │  └─ invoices/
│  ├─ legal/
│  │  ├─ contracts/
│  │  └─ letters/
│  ├─ immigration/
│  │  ├─ BLUEPRINTS/                        # mirrors blueprints for docs
│  │  ├─ forms/                             # I-589, I-765, etc.
│  │  └─ narratives/
│  └─ ops/
│     ├─ keysuite/                          # CFO/COO playbooks
│     └─ project-kickoff/
│
├─ blueprints/                              # directory scaffolds you can stamp per client
│  ├─ immigration/
│  │  ├─ I-589/
│  │  ├─ I-765/
│  │  ├─ I-131/
│  │  └─ SIV/
│  ├─ accounting/
│  │  └─ monthly-close/
│  ├─ website/
│  │  └─ minimal-landing/
│  └─ project/
│     └─ default/
│
├─ packages/
│  ├─ ui/
│  ├─ types/
│  └─ utils/
│
├─ infra/
│  ├─ cloudflare/
│  │  ├─ README.md
│  │  └─ env.example
│  └─ supabase/
│     ├─ migrations/
│     │  ├─ 000_init_orgs_companies_contacts.sql
│     │  ├─ 010_projects_tasks_tickets.sql
│     │  ├─ 015_time_entries.sql
│     │  ├─ 020_kb_hierarchy_docs_vectors.sql
│     │  ├─ 025_sites_registry.sql
│     │  ├─ 026_drops_meta.sql
│     │  ├─ 030_billing_ledger_invoices.sql
│     │  ├─ 040_feature_flags.sql
│     │  └─ 900_rls_policies.sql
│     ├─ seeds/
│     │  └─ 000_seed_org_admin.sql
│     └─ README.md
│
├─ docs/
│  ├─ ARCHITECTURE.md
│  ├─ SETUP.md
│  ├─ MODULES.md
│  ├─ AI_RAG.md
│  ├─ BILLING.md
│  ├─ FEATURE_FLAGS.md
│  └─ WEBSITES.md
│
├─ scripts/
│  ├─ db.migrate.mjs
│  ├─ seed.dev.mjs
│  └─ scaffold.mjs                          # stamp blueprints (e.g., I-589)
│
├─ .github/
│  └─ workflows/
│     ├─ web-pages-deploy.yml
│     ├─ worker-deploy.yml
│     └─ sites-deploy.yml
│
├─ package.json
└─ pnpm-workspace.yaml
```

## 🔐 Authentication & Authorization

### JWT Claims Structure
```typescript
type Claims = {
  role: 'admin' | 'internal' | 'external' | 'public';
  org_id: string;
  company_ids?: string[];
  department?: 'public'|'external'|'internal';
  features?: Record<string, boolean>; // merged org + company flags
  scopes?: string[];
};
```

### Feature Flags
- `crm`, `projects`, `tasks`, `messaging`, `kb`, `ai_rag`, `billing`, `lms`
- `client_tools`, `voice_assistant`, `vision_tools`, `client_sites`, `public_drops`
- UI hides disabled modules via `useFlags()`
- API enforces flags, RLS makes bypass impossible

## 🚀 API Endpoints

### Authentication
- `POST /auth/session` → returns enriched claims

### Core Features
- `GET /tasks` / `POST /tasks` / `PATCH /tasks/:id` (scoped by org/company/role)
- `POST /files/sign-upload` → signed URL; `POST /files/complete` → metadata row
- `GET /kb/public` (reads /public/kb/index.json passthrough)
- `GET /kb/private` (scoped list of kb_docs)
- `PATCH /me/profile` (update name, phone, avatar pointer)

### Additional Routes
- `/tenants` - org/company provisioning & branding
- `/crm` - customer relationship management
- `/projects` - project management
- `/messaging` - chat functionality
- `/rag` - AI/RAG operations
- `/billing` - Stripe webhooks + statements
- `/sites` - Pages orchestration + R2 drop links

## ✅ MVP Checklist

- [x] Auth + RBAC: login via Supabase, receive enriched claims from Worker; route guards in web
- [x] Tasks: create/list/update tasks scoped to company/org; visible in client + internal views
- [x] Files: upload via signed URLs to R2; metadata saved; list & download in client view
- [x] KB: Public KB page renders from /public/kb/; Private KB list fetches kb_docs under org
- [x] Profile: /me page where user updates basic profile fields
- [x] Website: main website served (from apps/web/public), visible at root

## 🏗️ Architecture Principles

### Cloudflare-First
- Pages for static sites and web app hosting
- Workers for API and serverless functions
- R2 for file storage with signed URLs

### Supabase Integration
- PostgreSQL with Row Level Security (RLS)
- Built-in authentication and user management
- Real-time subscriptions for live updates

### Security
- All server secrets live only in Workers
- JWT-based authentication with enriched claims
- RLS policies enforce data isolation
- Feature flags control access to functionality

### Scalability
- Multi-tenant architecture with org/company isolation
- Modular design with clear separation of concerns
- Electron admin for desktop management
- Client sites as separate Pages projects

## 🤝 Contributing

We welcome contributions! Please see our [Contributing Guide](docs/CONTRIBUTING.md) for details.

### Development Workflow
1. Fork the repository
2. Create a feature branch
3. Make your changes
4. Add tests if applicable
5. Submit a pull request

## 📞 Support

- **Documentation**: [docs/](docs/)
- **Issues**: [GitHub Issues](https://github.com/qially/qieos/issues)
- **Discussions**: [GitHub Discussions](https://github.com/qially/qieos/discussions)
- **Email**: support@qially.com

## 📄 License

QiEos is released under the [MIT License](LICENSE).

## 🙏 Credits

- Built with [React](https://reactjs.org/)
- Powered by [Cloudflare](https://cloudflare.com/)
- Database by [Supabase](https://supabase.com/)
- UI components with [Tailwind CSS](https://tailwindcss.com/)

## 🏢 About QiAlly

We're a technology company focused on building comprehensive solutions for multi-tenant applications, with expertise in AI integration, billing systems, and client portal development.

## 📢 Stay Updated

Follow us for updates and announcements:
- [Twitter](https://twitter.com/QiAllyLLC)
- [GitHub](https://github.com/qially)
- [Website](https://qially.com)


================================================================================
END: D:\QiEOS\README.md
================================================================================


================================================================================
FILE: D:\QiEOS\snapshot.md
================================================================================



================================================================================
END: D:\QiEOS\snapshot.md
================================================================================


================================================================================
FILE: D:\QiEOS\SUBMODULE_SETUP.md
================================================================================

# Converting to Git Submodules

This guide shows how to convert the current monorepo structure to true Git submodules.

## Current State
- `miniapps/` is just a directory containing miniapp folders
- All code is in one repository
- No true separation between projects

## Target State
- Each miniapp becomes its own Git repository
- Main repository uses Git submodules to reference them
- True separation and independent versioning

## Step 1: Create Separate Repositories

### For Qivect-Dropbox
```bash
# Create new repository for qivect-dropbox
mkdir qivect-dropbox-repo
cd qivect-dropbox-repo
git init
cp -r ../miniapps/qivect-dropbox/* .
git add .
git commit -m "Initial commit: qivect-dropbox miniapp"
# Push to GitHub/GitLab as separate repository
```

### For Qi RAG Private
```bash
# Create new repository for qi_rag_private
mkdir qi_rag_private-repo
cd qi_rag_private-repo
git init
cp -r ../miniapps/qi_rag_private/* .
git add .
git commit -m "Initial commit: qi_rag_private miniapp"
# Push to GitHub/GitLab as separate repository
```

## Step 2: Add as Submodules

```bash
# Remove current miniapps directory
rm -rf miniapps/

# Add as submodules
git submodule add https://github.com/your-org/qivect-dropbox.git miniapps/qivect-dropbox
git submodule add https://github.com/your-org/qi_rag_private.git miniapps/qi_rag_private

# Commit the submodule additions
git add .
git commit -m "Add miniapps as submodules"
```

## Step 3: Update .gitmodules

The `.gitmodules` file will be created automatically:

```ini
[submodule "miniapps/qivect-dropbox"]
    path = miniapps/qivect-dropbox
    url = https://github.com/your-org/qivect-dropbox.git

[submodule "miniapps/qi_rag_private"]
    path = miniapps/qi_rag_private
    url = https://github.com/your-org/qi_rag_private.git
```

## Step 4: Working with Submodules

### Clone the main repository with submodules
```bash
git clone --recursive https://github.com/your-org/QiLife-Eos.git
```

### Or clone and then update submodules
```bash
git clone https://github.com/your-org/QiLife-Eos.git
cd QiLife-Eos
git submodule update --init --recursive
```

### Update submodules to latest versions
```bash
git submodule update --remote
```

### Make changes in a submodule
```bash
cd miniapps/qivect-dropbox
# Make changes
git add .
git commit -m "Update feature"
git push origin main

# Update main repository to point to new submodule commit
cd ../..
git add miniapps/qivect-dropbox
git commit -m "Update qivect-dropbox submodule"
```

## Benefits of Submodules

1. **Independent Versioning**: Each miniapp has its own version history
2. **Separate Access Control**: Different teams can manage different miniapps
3. **Independent Deployment**: Each miniapp can be deployed separately
4. **Cleaner History**: Main repo history focuses on orchestration changes
5. **Reusability**: Miniapps can be used in other projects

## Drawbacks of Submodules

1. **Complexity**: More complex Git operations
2. **Learning Curve**: Team needs to understand submodule workflow
3. **Sync Issues**: Easy to get out of sync between main repo and submodules

## Alternative: Keep Current Structure

If submodules are too complex, you can keep the current monorepo structure and just improve the documentation and tooling. Many successful projects use this approach.

## Recommendation

For a small team or initial development, the current monorepo structure is actually fine. Consider submodules only when:
- You have multiple teams working on different miniapps
- You need independent versioning and deployment
- You want to reuse miniapps in other projects


================================================================================
END: D:\QiEOS\SUBMODULE_SETUP.md
================================================================================


================================================================================
FILE: D:\QiEOS\tailwind.config.js
================================================================================

/** @type {import('tailwindcss').Config} */
export default {
  content: [
    "./index.html",
    "./src/**/*.{js,ts,jsx,tsx}",
  ],
  darkMode: "class",
  theme: {
    container: {
      center: true,
      padding: "2rem",
      screens: {
        "2xl": "1400px",
      },
    },
    extend: {
      colors: {
        border: "hsl(var(--border))",
        input: "hsl(var(--input))",
        ring: "hsl(var(--ring))",
        background: "hsl(var(--background))",
        foreground: "hsl(var(--foreground))",
        primary: {
          DEFAULT: "hsl(var(--primary))",
          foreground: "hsl(var(--primary-foreground))",
        },
        secondary: {
          DEFAULT: "hsl(var(--secondary))",
          foreground: "hsl(var(--secondary-foreground))",
        },
        destructive: {
          DEFAULT: "hsl(var(--destructive))",
          foreground: "hsl(var(--destructive-foreground))",
        },
        muted: {
          DEFAULT: "hsl(var(--muted))",
          foreground: "hsl(var(--muted-foreground))",
        },
        accent: {
          DEFAULT: "hsl(var(--accent))",
          foreground: "hsl(var(--accent-foreground))",
        },
        popover: {
          DEFAULT: "hsl(var(--popover))",
          foreground: "hsl(var(--popover-foreground))",
        },
        card: {
          DEFAULT: "hsl(var(--card))",
          foreground: "hsl(var(--card-foreground))",
        },
      },
      borderRadius: {
        lg: "var(--radius)",
        md: "calc(var(--radius) - 2px)",
        sm: "calc(var(--radius) - 4px)",
      },
      keyframes: {
        "accordion-down": {
          from: { height: "0" },
          to: { height: "var(--radix-accordion-content-height)" },
        },
        "accordion-up": {
          from: { height: "var(--radix-accordion-content-height)" },
          to: { height: "0" },
        },
      },
      animation: {
        "accordion-down": "accordion-down 0.2s ease-out",
        "accordion-up": "accordion-up 0.2s ease-out",
      },
    },
  },
  plugins: [],
}


================================================================================
END: D:\QiEOS\tailwind.config.js
================================================================================


================================================================================
FILE: D:\QiEOS\tsconfig.json
================================================================================

{
  "compilerOptions": {
    "target": "ES2020",
    "lib": ["ES2020"],
    "module": "ESNext",
    "moduleResolution": "bundler",
    "allowSyntheticDefaultImports": true,
    "esModuleInterop": true,
    "allowJs": true,
    "skipLibCheck": true,
    "strict": true,
    "forceConsistentCasingInFileNames": true,
    "declaration": true,
    "declarationMap": true,
    "sourceMap": true,
    "noEmit": true
  },
  "exclude": ["node_modules", "dist", "apps", "sites", "workers", "packages/types/dist"]
}


================================================================================
END: D:\QiEOS\tsconfig.json
================================================================================


================================================================================
FILE: D:\QiEOS\apps\README.md
================================================================================

# Apps

Main applications: web portal and admin electron desktop app.


================================================================================
END: D:\QiEOS\apps\README.md
================================================================================


================================================================================
FILE: D:\QiEOS\apps\admin-electron\package.json
================================================================================

{
  "name": "qieos-admin-electron",
  "version": "1.0.0",
  "description": "QiEOS Admin Cockpit - Desktop application for administrators",
  "main": "dist/main.js",
  "scripts": {
    "dev": "concurrently \"npm run dev:main\" \"npm run dev:renderer\"",
    "dev:main": "tsc -p tsconfig.main.json --watch",
    "dev:renderer": "vite",
    "build": "npm run build:main && npm run build:renderer",
    "build:main": "tsc -p tsconfig.main.json",
    "build:renderer": "vite build",
    "dist": "npm run build && electron-builder",
    "pack": "npm run build && electron-builder --dir"
  },
  "dependencies": {
    "electron": "^27.0.0",
    "react": "^18.0.0",
    "react-dom": "^18.0.0",
    "react-router-dom": "^6.0.0"
  },
  "devDependencies": {
    "@types/node": "^20.0.0",
    "@types/react": "^18.0.0",
    "@types/react-dom": "^18.0.0",
    "@vitejs/plugin-react": "^4.0.0",
    "concurrently": "^8.0.0",
    "electron-builder": "^24.0.0",
    "typescript": "^5.0.0",
    "vite": "^4.0.0"
  }
}


================================================================================
END: D:\QiEOS\apps\admin-electron\package.json
================================================================================


================================================================================
FILE: D:\QiEOS\apps\admin-electron\README.md
================================================================================

# QiEOS Admin Cockpit

Desktop application for QiEOS administrators. Provides secure access to all administrative functions through a Worker-only API boundary.

## Architecture

- **Main Process**: Secure Electron window with context isolation
- **Preload Script**: Secure IPC bridge for communication
- **Renderer**: React app with routing for admin dashboard
- **API Communication**: All privileged operations go through Worker API

## Security Model

- No direct database access from renderer
- All privileged operations via Worker API
- Context isolation enabled
- No node integration in renderer

## Development

```bash
# Install dependencies
pnpm install

# Development mode
pnpm dev

# Build for production
pnpm build

# Package for distribution
pnpm dist
```

## Manual Cleanup Required

The `n8n/` folder needs to be removed from this directory. It contains 7,000+ files that are not part of QiEOS.

**To clean up:**
```bash
# Move n8n folder to trash (preserving path)
move apps\admin-electron\n8n .trash\2025-01-27\apps\admin-electron\n8n
```

## Features

- Dashboard with system overview
- Tenant management
- CRM operations
- Project and task management
- Knowledge base editor
- Document ingest for RAG
- Billing desk
- Script runner
- Database migrations
- System auditor

All features communicate exclusively with the Worker API - no direct database access.

================================================================================
END: D:\QiEOS\apps\admin-electron\README.md
================================================================================


================================================================================
FILE: D:\QiEOS\apps\admin-electron\tsconfig.json
================================================================================

{
  "compilerOptions": {
    "target": "ES2020",
    "lib": ["ES2020", "DOM", "DOM.Iterable"],
    "module": "ESNext",
    "skipLibCheck": true,
    "moduleResolution": "bundler",
    "allowImportingTsExtensions": true,
    "resolveJsonModule": true,
    "isolatedModules": true,
    "noEmit": true,
    "jsx": "react-jsx",
    "strict": true,
    "noUnusedLocals": true,
    "noUnusedParameters": true,
    "noFallthroughCasesInSwitch": true,
    "forceConsistentCasingInFileNames": true,
    "baseUrl": ".",
    "paths": {
      "@/*": ["./src/renderer/*"]
    }
  },
  "include": [
    "src/renderer/**/*",
    "src/renderer/types/**/*",
    "vite.config.ts"
  ],
  "exclude": [
    "src/main.ts",
    "src/preload.ts",
    "node_modules",
    "dist"
  ]
}


================================================================================
END: D:\QiEOS\apps\admin-electron\tsconfig.json
================================================================================


================================================================================
FILE: D:\QiEOS\apps\admin-electron\tsconfig.main.json
================================================================================

{
  "compilerOptions": {
    "target": "ES2020",
    "module": "commonjs",
    "lib": ["ES2020"],
    "outDir": "./dist",
    "rootDir": "./src",
    "strict": true,
    "esModuleInterop": true,
    "skipLibCheck": true,
    "forceConsistentCasingInFileNames": true,
    "resolveJsonModule": true,
    "declaration": true,
    "declarationMap": true,
    "sourceMap": true
  },
  "include": [
    "src/main.ts",
    "src/preload.ts"
  ],
  "exclude": [
    "src/renderer/**/*",
    "node_modules",
    "dist"
  ]
}


================================================================================
END: D:\QiEOS\apps\admin-electron\tsconfig.main.json
================================================================================


================================================================================
FILE: D:\QiEOS\apps\admin-electron\vite.config.ts
================================================================================

import { defineConfig } from 'vite';
import react from '@vitejs/plugin-react';
import path from 'path';
import { fileURLToPath } from 'node:url';

export default defineConfig({
  plugins: [react()],
  root: './src/renderer',
  build: {
    outDir: '../../dist',
    emptyOutDir: true,
  },
  resolve: {
    alias: {
      '@': path.resolve(path.dirname(fileURLToPath(import.meta.url)), './src/renderer'),
    },
  },
  server: {
    port: 5173,
  },
});


================================================================================
END: D:\QiEOS\apps\admin-electron\vite.config.ts
================================================================================


================================================================================
FILE: D:\QiEOS\apps\admin-electron\src\main.ts
================================================================================

import { app, BrowserWindow, ipcMain } from 'electron';
import * as path from 'path';

const isDev = process.env.NODE_ENV === 'development';

let mainWindow: BrowserWindow;

function createWindow(): void {
  // Create the browser window
  mainWindow = new BrowserWindow({
    width: 1200,
    height: 800,
    webPreferences: {
      nodeIntegration: false,
      contextIsolation: true,
      preload: path.join(__dirname, 'preload.js'),
    },
    titleBarStyle: 'default',
    show: false,
  });

  // Load the app
  if (isDev) {
    mainWindow.loadURL('http://localhost:5173');
    mainWindow.webContents.openDevTools();
  } else {
    mainWindow.loadFile(path.join(__dirname, '../dist/index.html'));
  }

  // Show window when ready
  mainWindow.once('ready-to-show', () => {
    mainWindow.show();
  });

  // Handle window closed
  mainWindow.on('closed', () => {
    mainWindow = null as any;
  });
}

// App event handlers
app.whenReady().then(createWindow);

app.on('window-all-closed', () => {
  if (process.platform !== 'darwin') {
    app.quit();
  }
});

app.on('activate', () => {
  if (BrowserWindow.getAllWindows().length === 0) {
    createWindow();
  }
});

// IPC handlers for secure communication
ipcMain.handle('get-app-version', () => {
  return app.getVersion();
});

ipcMain.handle('get-platform', () => {
  return process.platform;
});


================================================================================
END: D:\QiEOS\apps\admin-electron\src\main.ts
================================================================================


================================================================================
FILE: D:\QiEOS\apps\admin-electron\src\preload.ts
================================================================================

import { contextBridge, ipcRenderer } from 'electron';

// Expose protected methods that allow the renderer process to use
// the ipcRenderer without exposing the entire object
contextBridge.exposeInMainWorld('electronAPI', {
  getAppVersion: () => ipcRenderer.invoke('get-app-version'),
  getPlatform: () => ipcRenderer.invoke('get-platform'),
  
  // API communication with Worker
  apiRequest: async (endpoint: string, options: RequestInit = {}) => {
    // This will be used to communicate with the QiEOS Worker API
    // For now, we'll make direct requests to the Worker
    const baseUrl = process.env.VITE_WORKER_URL || 'http://localhost:8787';
    const response = await fetch(`${baseUrl}${endpoint}`, {
      ...options,
      headers: {
        'Content-Type': 'application/json',
        ...options.headers,
      },
    });
    return response.json();
  },
});

// Type definitions for the exposed API
declare global {
  interface Window {
    electronAPI: {
      getAppVersion: () => Promise<string>;
      getPlatform: () => Promise<string>;
      apiRequest: (endpoint: string, options?: RequestInit) => Promise<any>;
    };
  }
}


================================================================================
END: D:\QiEOS\apps\admin-electron\src\preload.ts
================================================================================


================================================================================
FILE: D:\QiEOS\apps\admin-electron\src\renderer\App.css
================================================================================

/* QiEOS Admin Cockpit Styles */
.app {
  display: flex;
  height: 100vh;
  background: #f8fafc;
}

.main-content {
  flex: 1;
  display: flex;
  flex-direction: column;
  overflow: hidden;
}

.app-header {
  background: white;
  border-bottom: 1px solid #e2e8f0;
  padding: 1rem 1.5rem;
  display: flex;
  justify-content: space-between;
  align-items: center;
  box-shadow: 0 1px 3px 0 rgba(0, 0, 0, 0.1);
}

.app-header h1 {
  margin: 0;
  font-size: 1.5rem;
  font-weight: 600;
  color: #1e293b;
}

.app-info {
  display: flex;
  gap: 1rem;
  font-size: 0.875rem;
  color: #64748b;
}

.content {
  flex: 1;
  padding: 1.5rem;
  overflow-y: auto;
}

/* Sidebar styles */
.sidebar {
  width: 240px;
  background: white;
  border-right: 1px solid #e2e8f0;
  display: flex;
  flex-direction: column;
}

.sidebar-header {
  padding: 1rem;
  border-bottom: 1px solid #e2e8f0;
  font-weight: 600;
  color: #1e293b;
}

.sidebar-nav {
  flex: 1;
  padding: 0.5rem 0;
}

.nav-item {
  display: block;
  width: 100%;
  padding: 0.75rem 1rem;
  text-align: left;
  border: none;
  background: none;
  color: #64748b;
  text-decoration: none;
  transition: all 0.2s;
}

.nav-item:hover {
  background: #f1f5f9;
  color: #1e293b;
}

.nav-item.active {
  background: #3b82f6;
  color: white;
}

.nav-item-icon {
  margin-right: 0.5rem;
}

/* Dashboard styles */
.dashboard-grid {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
  gap: 1rem;
  margin-top: 1rem;
}

.stat-number {
  font-size: 2rem;
  font-weight: bold;
}

.stat-number.primary {
  color: #3b82f6;
}

.stat-number.success {
  color: #10b981;
}

.stat-number.warning {
  color: #f59e0b;
}

.stat-number.danger {
  color: #ef4444;
}

.card-spacing {
  margin-top: 1.5rem;
}

.flex-gap {
  display: flex;
  gap: 1rem;
  margin-top: 1rem;
}

.text-muted {
  color: #64748b;
  font-style: italic;
}

.margin-top {
  margin-top: 1rem;
}

/* Card styles */
.card {
  background: white;
  border-radius: 0.5rem;
  padding: 1.5rem;
  box-shadow: 0 1px 3px 0 rgba(0, 0, 0, 0.1);
  border: 1px solid #e2e8f0;
}

.card h2 {
  margin: 0 0 1rem 0;
  font-size: 1.25rem;
  font-weight: 600;
  color: #1e293b;
}

/* Button styles */
.btn {
  display: inline-flex;
  align-items: center;
  padding: 0.5rem 1rem;
  border-radius: 0.375rem;
  font-size: 0.875rem;
  font-weight: 500;
  border: none;
  cursor: pointer;
  transition: all 0.2s;
}

.btn-primary {
  background: #3b82f6;
  color: white;
}

.btn-primary:hover {
  background: #2563eb;
}

.btn-secondary {
  background: #f1f5f9;
  color: #475569;
}

.btn-secondary:hover {
  background: #e2e8f0;
}

/* Status indicators */
.status-online {
  color: #10b981;
}

.status-offline {
  color: #ef4444;
}

.status-warning {
  color: #f59e0b;
}


================================================================================
END: D:\QiEOS\apps\admin-electron\src\renderer\App.css
================================================================================


================================================================================
FILE: D:\QiEOS\apps\admin-electron\src\renderer\App.tsx
================================================================================

import React, { useState, useEffect } from 'react';
import { BrowserRouter as Router, Routes, Route, Navigate } from 'react-router-dom';
import Sidebar from './components/Sidebar';
import Dashboard from './routes/Dashboard';
import Tenants from './routes/Tenants';
import CRM from './routes/CRM';
import Projects from './routes/Projects';
import Tasks from './routes/Tasks';
import KBEditor from './routes/KBEditor';
import Ingest from './routes/Ingest';
import BillingDesk from './routes/BillingDesk';
import Scripts from './routes/Scripts';
import Migrations from './routes/Migrations';
import Auditor from './routes/Auditor';
import './App.css';

const App: React.FC = () => {
  const [appVersion, setAppVersion] = useState<string>('');
  const [platform, setPlatform] = useState<string>('');

  useEffect(() => {
    // Get app info from main process
    if (window.electronAPI) {
      window.electronAPI.getAppVersion().then(setAppVersion);
      window.electronAPI.getPlatform().then(setPlatform);
    }
  }, []);

  return (
    <Router>
      <div className="app">
        <Sidebar />
        <main className="main-content">
          <header className="app-header">
            <h1>QiEOS Admin Cockpit</h1>
            <div className="app-info">
              <span>v{appVersion}</span>
              <span>{platform}</span>
            </div>
          </header>
          
          <div className="content">
            <Routes>
              <Route path="/" element={<Navigate to="/dashboard" replace />} />
              <Route path="/dashboard" element={<Dashboard />} />
              <Route path="/tenants" element={<Tenants />} />
              <Route path="/crm" element={<CRM />} />
              <Route path="/projects" element={<Projects />} />
              <Route path="/tasks" element={<Tasks />} />
              <Route path="/kb-editor" element={<KBEditor />} />
              <Route path="/ingest" element={<Ingest />} />
              <Route path="/billing-desk" element={<BillingDesk />} />
              <Route path="/scripts" element={<Scripts />} />
              <Route path="/migrations" element={<Migrations />} />
              <Route path="/auditor" element={<Auditor />} />
            </Routes>
          </div>
        </main>
      </div>
    </Router>
  );
};

export default App;


================================================================================
END: D:\QiEOS\apps\admin-electron\src\renderer\App.tsx
================================================================================


================================================================================
FILE: D:\QiEOS\apps\admin-electron\src\renderer\index.html
================================================================================

<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <link rel="icon" type="image/svg+xml" href="/vite.svg" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>QiEOS Admin Cockpit</title>
  </head>
  <body>
    <div id="root"></div>
    <script type="module" src="/main.tsx"></script>
  </body>
</html>


================================================================================
END: D:\QiEOS\apps\admin-electron\src\renderer\index.html
================================================================================


================================================================================
FILE: D:\QiEOS\apps\admin-electron\src\renderer\main.tsx
================================================================================

import React from 'react'
import ReactDOM from 'react-dom/client'
import App from './App.tsx'
import './App.css'

ReactDOM.createRoot(document.getElementById('root')!).render(
  <React.StrictMode>
    <App />
  </React.StrictMode>,
)


================================================================================
END: D:\QiEOS\apps\admin-electron\src\renderer\main.tsx
================================================================================


================================================================================
FILE: D:\QiEOS\apps\admin-electron\src\renderer\components\Sidebar.tsx
================================================================================

import * as React from 'react';
import { Link, useLocation } from 'react-router-dom';

const Sidebar: React.FC = () => {
  const location = useLocation();

  const navItems = [
    { path: '/dashboard', label: 'Dashboard', icon: '📊' },
    { path: '/tenants', label: 'Tenants', icon: '🏢' },
    { path: '/crm', label: 'CRM', icon: '👥' },
    { path: '/projects', label: 'Projects', icon: '📋' },
    { path: '/tasks', label: 'Tasks', icon: '✅' },
    { path: '/kb-editor', label: 'KB Editor', icon: '📚' },
    { path: '/ingest', label: 'Ingest', icon: '📥' },
    { path: '/billing-desk', label: 'Billing Desk', icon: '💰' },
    { path: '/scripts', label: 'Scripts', icon: '⚙️' },
    { path: '/migrations', label: 'Migrations', icon: '🔄' },
    { path: '/auditor', label: 'Auditor', icon: '🔍' },
  ];

  return (
    <div className="sidebar">
      <div className="sidebar-header">
        Admin Cockpit
      </div>
      <nav className="sidebar-nav">
        {navItems.map((item) => (
          <Link
            key={item.path}
            to={item.path}
            className={`nav-item ${location.pathname === item.path ? 'active' : ''}`}
          >
            <span className="nav-item-icon">{item.icon}</span>
            {item.label}
          </Link>
        ))}
      </nav>
    </div>
  );
};

export default Sidebar;


================================================================================
END: D:\QiEOS\apps\admin-electron\src\renderer\components\Sidebar.tsx
================================================================================


================================================================================
FILE: D:\QiEOS\apps\admin-electron\src\renderer\routes\Auditor.tsx
================================================================================

import { FC } from "react";

const Auditor: FC = () => {
  return (
    <div className="content">
      <div className="card">
        <h2>System Auditor</h2>
        <p>Read-only audit views and system health monitoring.</p>
        <div className="margin-top">
          <button className="btn btn-primary">Run Audit</button>
        </div>
      </div>
    </div>
  );
};

export default Auditor;


================================================================================
END: D:\QiEOS\apps\admin-electron\src\renderer\routes\Auditor.tsx
================================================================================


================================================================================
FILE: D:\QiEOS\apps\admin-electron\src\renderer\routes\BillingDesk.tsx
================================================================================

import React from 'react';

const BillingDesk: React.FC = () => {
  return (
    <div className="content">
      <div className="card">
        <h2>Billing Desk</h2>
        <p>Manage invoices, payments, and billing.</p>
        <div className="margin-top">
          <button className="btn btn-primary">Create Invoice</button>
        </div>
      </div>
    </div>
  );
};

export default BillingDesk;


================================================================================
END: D:\QiEOS\apps\admin-electron\src\renderer\routes\BillingDesk.tsx
================================================================================


================================================================================
FILE: D:\QiEOS\apps\admin-electron\src\renderer\routes\CRM.tsx
================================================================================

import React from 'react';

const CRM: React.FC = () => {
  return (
    <div className="content">
      <div className="card">
        <h2>CRM Management</h2>
        <p>Manage contacts, companies, and relationships.</p>
        <div className="margin-top">
          <button className="btn btn-primary">Add Contact</button>
        </div>
      </div>
    </div>
  );
};

export default CRM;


================================================================================
END: D:\QiEOS\apps\admin-electron\src\renderer\routes\CRM.tsx
================================================================================


================================================================================
FILE: D:\QiEOS\apps\admin-electron\src\renderer\routes\Dashboard.tsx
================================================================================

import React, { useState, useEffect } from 'react';

const Dashboard: React.FC = () => {
  const [stats, setStats] = useState({
    totalUsers: 0,
    activeProjects: 0,
    pendingTasks: 0,
    systemHealth: 'unknown'
  });

  useEffect(() => {
    // Fetch dashboard stats from Worker API
    const fetchStats = async () => {
      try {
        if (window.electronAPI) {
          const response = await window.electronAPI.apiRequest('/admin/stats');
          setStats(response);
        }
      } catch (error) {
        console.error('Failed to fetch dashboard stats:', error);
        // Set fallback stats
        setStats({
          totalUsers: 0,
          activeProjects: 0,
          pendingTasks: 0,
          systemHealth: 'offline'
        });
      }
    };

    fetchStats();
  }, []);

  return (
    <div className="content">
      <div className="card">
        <h2>System Overview</h2>
        <div className="dashboard-grid">
          <div className="card">
            <h3>Total Users</h3>
            <p className="stat-number primary">
              {stats.totalUsers}
            </p>
          </div>
          <div className="card">
            <h3>Active Projects</h3>
            <p className="stat-number success">
              {stats.activeProjects}
            </p>
          </div>
          <div className="card">
            <h3>Pending Tasks</h3>
            <p className="stat-number warning">
              {stats.pendingTasks}
            </p>
          </div>
          <div className="card">
            <h3>System Health</h3>
            <p className={`stat-number ${stats.systemHealth === 'online' ? 'success' : 'danger'}`}>
              {stats.systemHealth === 'online' ? '🟢' : '🔴'}
            </p>
          </div>
        </div>
      </div>

      <div className="card card-spacing">
        <h2>Quick Actions</h2>
        <div className="flex-gap">
          <button className="btn btn-primary">
            Create New Tenant
          </button>
          <button className="btn btn-secondary">
            Run System Check
          </button>
          <button className="btn btn-secondary">
            View Logs
          </button>
        </div>
      </div>

      <div className="card card-spacing">
        <h2>Recent Activity</h2>
        <p className="text-muted">
          No recent activity to display. Connect to the Worker API to see live updates.
        </p>
      </div>
    </div>
  );
};

export default Dashboard;


================================================================================
END: D:\QiEOS\apps\admin-electron\src\renderer\routes\Dashboard.tsx
================================================================================


================================================================================
FILE: D:\QiEOS\apps\admin-electron\src\renderer\routes\Ingest.tsx
================================================================================

import React from 'react';

const Ingest: React.FC = () => {
  return (
    <div className="content">
      <div className="card">
        <h2>Document Ingest</h2>
        <p>Bulk import documents for RAG processing.</p>
        <div className="margin-top">
          <button className="btn btn-primary">Upload Documents</button>
        </div>
      </div>
    </div>
  );
};

export default Ingest;


================================================================================
END: D:\QiEOS\apps\admin-electron\src\renderer\routes\Ingest.tsx
================================================================================


================================================================================
FILE: D:\QiEOS\apps\admin-electron\src\renderer\routes\KBEditor.tsx
================================================================================

import React from 'react';

const KBEditor: React.FC = () => {
  return (
    <div className="p-6">
      <h1 className="text-2xl font-bold mb-4">Knowledge Base Editor</h1>
      <p className="text-gray-600">KB Editor functionality coming soon...</p>
    </div>
  );
};

export default KBEditor;

================================================================================
END: D:\QiEOS\apps\admin-electron\src\renderer\routes\KBEditor.tsx
================================================================================


================================================================================
FILE: D:\QiEOS\apps\admin-electron\src\renderer\routes\Migrations.tsx
================================================================================

import React from 'react';

const Migrations: React.FC = () => {
  return (
    <div className="content">
      <div className="card">
        <h2>Database Migrations</h2>
        <p>Run database migrations and schema updates.</p>
        <div className="margin-top">
          <button className="btn btn-primary">Run Migration</button>
        </div>
      </div>
    </div>
  );
};

export default Migrations;


================================================================================
END: D:\QiEOS\apps\admin-electron\src\renderer\routes\Migrations.tsx
================================================================================


================================================================================
FILE: D:\QiEOS\apps\admin-electron\src\renderer\routes\Projects.tsx
================================================================================

import React from 'react';

const Projects: React.FC = () => {
  return (
    <div className="content">
      <div className="card">
        <h2>Project Management</h2>
        <p>Manage projects, tasks, and tickets.</p>
        <div className="margin-top">
          <button className="btn btn-primary">Create Project</button>
        </div>
      </div>
    </div>
  );
};

export default Projects;


================================================================================
END: D:\QiEOS\apps\admin-electron\src\renderer\routes\Projects.tsx
================================================================================


================================================================================
FILE: D:\QiEOS\apps\admin-electron\src\renderer\routes\Scripts.tsx
================================================================================

import React from 'react';

const Scripts: React.FC = () => {
  return (
    <div className="content">
      <div className="card">
        <h2>Script Runner</h2>
        <p>Execute server-side scripts and maintenance tasks.</p>
        <div className="margin-top">
          <button className="btn btn-primary">Run Script</button>
        </div>
      </div>
    </div>
  );
};

export default Scripts;


================================================================================
END: D:\QiEOS\apps\admin-electron\src\renderer\routes\Scripts.tsx
================================================================================


================================================================================
FILE: D:\QiEOS\apps\admin-electron\src\renderer\routes\Tasks.tsx
================================================================================

import React from 'react';

const Tasks: React.FC = () => {
  return (
    <div className="content">
      <div className="card">
        <h2>Task Management</h2>
        <p>Manage tasks and assignments.</p>
        <div className="margin-top">
          <button className="btn btn-primary">Create Task</button>
        </div>
      </div>
    </div>
  );
};

export default Tasks;


================================================================================
END: D:\QiEOS\apps\admin-electron\src\renderer\routes\Tasks.tsx
================================================================================


================================================================================
FILE: D:\QiEOS\apps\admin-electron\src\renderer\routes\Tenants.tsx
================================================================================

import React from 'react';

const Tenants: React.FC = () => {
  return (
    <div className="content">
      <div className="card">
        <h2>Tenant Management</h2>
        <p>Manage organizations, departments, and companies.</p>
        <div className="margin-top">
          <button className="btn btn-primary">Create New Tenant</button>
        </div>
      </div>
    </div>
  );
};

export default Tenants;


================================================================================
END: D:\QiEOS\apps\admin-electron\src\renderer\routes\Tenants.tsx
================================================================================


================================================================================
FILE: D:\QiEOS\apps\admin-electron\src\renderer\types\electron.d.ts
================================================================================

// Type definitions for Electron API exposed via preload script
declare global {
  interface Window {
    electronAPI: {
      getAppVersion: () => Promise<string>;
      getPlatform: () => Promise<string>;
      apiRequest: (endpoint: string, options?: RequestInit) => Promise<any>;
    };
  }
}

export {};


================================================================================
END: D:\QiEOS\apps\admin-electron\src\renderer\types\electron.d.ts
================================================================================


================================================================================
FILE: D:\QiEOS\apps\mini-apps\app.py
================================================================================

import os
from pathlib import Path
from fastapi import FastAPI, HTTPException
from fastapi.responses import FileResponse, PlainTextResponse, HTMLResponse
from fastapi.staticfiles import StaticFiles
from fastapi.middleware.cors import CORSMiddleware

BASE = Path(__file__).parent
CONTENT = BASE / "content"

app = FastAPI(title="EmpowerQNow Bible")
app.add_middleware(
    CORSMiddleware,
    allow_origins=["*"],
    allow_credentials=True,
    allow_methods=["*"],
    allow_headers=["*"],
)

# Serve static index.html
app.mount("/static", StaticFiles(directory=str(BASE/"static")), name="static")

def list_md(lang: str):
    folder = CONTENT / lang
    if not folder.exists():
        raise HTTPException(404, f"Language folder not found: {lang}")
    return sorted([p for p in folder.glob("*.md")])

def merged_text(lang: str) -> str:
    files = list_md(lang)
    if not files:
        return f"# (No markdown files found for lang={lang})"
    out = []
    for p in files:
        out.append(f"\n\n---\n# Source: {p.name}\n\n")
        out.append(p.read_text(encoding="utf-8"))
    return "".join(out)

@app.get("/", response_class=HTMLResponse)
def home():
    return (BASE/"static"/"index.html").read_text(encoding="utf-8")

@app.get("/api/files/{lang}")
def api_files(lang: str):
    return [p.name for p in list_md(lang)]

@app.get("/api/merged/{lang}", response_class=PlainTextResponse)
def api_merged(lang: str):
    return merged_text(lang)

@app.get("/raw/{lang}/{name}", response_class=PlainTextResponse)
def raw_file(lang: str, name: str):
    path = CONTENT/lang/name
    if not path.exists():
        raise HTTPException(404, "File not found")
    return path.read_text(encoding="utf-8")

# Convenience for local dev: return this script for inspection
@app.get("/app.py", response_class=PlainTextResponse)
def show_app():
    return (BASE/"app.py").read_text(encoding="utf-8")

from itertools import zip_longest
def pair_lines(en_text: str, es_text: str) -> str:
    en_lines = [l for l in en_text.splitlines()]
    es_lines = [l for l in es_text.splitlines()]
    rows = []
    for en, es in zip_longest(en_lines, es_lines, fillvalue=""):
        rows.append({"en": en, "es": es})
    return rows

@app.get("/api/paired", response_class=HTMLResponse)
def api_paired():
    en = merged_text("en")
    try:
        es = merged_text("es")
    except Exception:
        es = ""
    rows = pair_lines(en, es)
    # Simple HTML render for print/export
    html_rows = []
    for r in rows:
        html_rows.append(f"""<div style='display:grid;grid-template-columns:1fr 1fr;gap:12px;margin:6px 0'>
        <div style='border-left:3px solid #7c5cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'>{r['en']}</div>
        <div style='border-left:3px solid #b27cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'>{r['es']}</div>
        </div>""")
    html = """<!doctype html><html><head><meta charset='utf-8'>
    <title>EmpowerQNow713 — Paired</title>
    <style>@media print { body { -webkit-print-color-adjust: exact; print-color-adjust: exact; } }</style>
    </head><body>
    <h1>🔱 EmpowerQNow713 — Paired (EN + ES)</h1>
    %s
    </body></html>""" % ("\n".join(html_rows))
    return html

@app.get("/export/print", response_class=HTMLResponse)
def export_print():
    # Same as /api/paired but with minimalist print styling
    return api_paired()


================================================================================
END: D:\QiEOS\apps\mini-apps\app.py
================================================================================


================================================================================
FILE: D:\QiEOS\apps\mini-apps\build.py
================================================================================

from pathlib import Path
from itertools import zip_longest
import json, re

ROOT = Path(__file__).parent
EN = ROOT/"content"/"en"
ES = ROOT/"content"/"es"
OUT = ROOT/"static_build"
OUT.mkdir(exist_ok=True)

def list_md(folder: Path):
    return sorted([p for p in folder.glob("*.md")])

def merged_text(folder: Path) -> str:
    files = list_md(folder)
    out = []
    for p in files:
        out.append(f"\n\n---\n# Source: {p.name}\n\n")
        out.append(p.read_text(encoding="utf-8"))
    return "".join(out).strip()+"\n"

def pair_lines(en_text: str, es_text: str):
    ENL = en_text.splitlines()
    ESL = es_text.splitlines() if es_text else []
    rows = [{"en":e,"es":s} for e,s in zip_longest(ENL,ESL, fillvalue="")]
    return rows

def main():
    en = merged_text(EN) if EN.exists() else ""
    es = merged_text(ES) if ES.exists() else ""
    (OUT/"merged_en.md").write_text(en, encoding="utf-8")
    (OUT/"merged_es.md").write_text(es, encoding="utf-8")
    rows = pair_lines(en, es)
    # paired.html (simple, printable)
    html_rows = []
    for r in rows:
        html_rows.append(f"""<div style='display:grid;grid-template-columns:1fr 1fr;gap:12px;margin:6px 0'>
        <div style='border-left:3px solid #7c5cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'>{r['en']}</div>
        <div style='border-left:3px solid #b27cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'>{r['es']}</div>
        </div>""")
    html = """<!doctype html><html><head><meta charset='utf-8'>
    <meta name='viewport' content='width=device-width,initial-scale=1'>
    <title>EmpowerQNow713 — Paired</title>
    <style>body{margin:20px;background:#0b0b10;color:#e8e8f0} a{color:#c8b6ff} @media print { body { -webkit-print-color-adjust: exact; print-color-adjust: exact; } }</style>
    </head><body>
    <h1>🔱 EmpowerQNow713 — Paired (EN + ES)</h1>
    %s
    </body></html>""" % ("\n".join(html_rows))
    (OUT/"paired.html").write_text(html, encoding="utf-8")
    # index.json: per-file lists
    index = {
        "en_files":[p.name for p in list_md(EN)],
        "es_files":[p.name for p in list_md(ES)]
    }
    (OUT/"index.json").write_text(json.dumps(index, ensure_ascii=False, indent=2), encoding="utf-8")

if __name__ == "__main__":
    main()

def build_search_index(en_text: str, es_text: str):
    def to_items(txt, lang):
        items = []
        lines = txt.splitlines()
        title = ""
        for i, line in enumerate(lines, 1):
            if line.startswith("#"):
                title = re.sub(r"^#+\s*", "", line).strip()
            # pick paragraph-like lines
            if line and not line.startswith("#"):
                snippet = line.strip()
                if len(snippet) > 160:
                    snippet = snippet[:157] + "…"
                items.append({
                    "id": f"{lang}-L{i:05d}",
                    "lang": lang,
                    "line": i,
                    "title": title,
                    "text": line.strip(),
                    "snippet": snippet
                })
        return items
    return to_items(en_text, "en") + to_items(es_text, "es")

def build_anchors(en_text: str, es_text: str):
    # just count lines for stable deep-links
    return {
        "en_lines": len(en_text.splitlines()),
        "es_lines": len(es_text.splitlines())
    }

def write_static_artifacts(en, es):
    (OUT/"merged_en.md").write_text(en, encoding="utf-8")
    (OUT/"merged_es.md").write_text(es, encoding="utf-8")
    rows = pair_lines(en, es)
    # paired.html (simple, printable)
    html_rows = []
    for idx, r in enumerate(rows, 1):
        html_rows.append(f"""<div id='L{idx}' style='display:grid;grid-template-columns:1fr 1fr;gap:12px;margin:6px 0'>
        <div class='en' style='border-left:3px solid #7c5cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'>{r['en']}</div>
        <div class='es' style='border-left:3px solid #b27cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'>{r['es']}</div>
        </div>""")
    html = """<!doctype html><html><head><meta charset='utf-8'>
    <meta name='viewport' content='width=device-width,initial-scale=1'>
    <title>EmpowerQNow713 — Paired</title>
    <style>
    body{margin:20px;background:#0b0b10;color:#e8e8f0}
    a{color:#c8b6ff}
    @media print { body { -webkit-print-color-adjust: exact; print-color-adjust: exact; } }
    .link{font-size:12px;color:#c8b6ff}
    </style>
    </head><body>
    <h1>🔱 EmpowerQNow713 — Paired (EN + ES)</h1>
    %s
    <script>
      document.querySelectorAll('[id^=L]').forEach(row=>{
        const a=document.createElement('a');
        a.textContent='¶';
        a.className='link';
        a.style.marginLeft='6px';
        a.href='#'+row.id;
        row.firstElementChild.prepend(a);
      });
    </script>
    </body></html>""" % ("\n".join(html_rows))
    (OUT/"paired.html").write_text(html, encoding="utf-8")
    # index.json (file lists)
    index = {
        "en_files":[p.name for p in list_md(EN)],
        "es_files":[p.name for p in list_md(ES)]
    }
    (OUT/"index.json").write_text(json.dumps(index, ensure_ascii=False, indent=2), encoding="utf-8")
    # search index
    idx = build_search_index(en, es)
    (OUT/"search_index.json").write_text(json.dumps(idx, ensure_ascii=False), encoding="utf-8")
    # anchors meta
    (OUT/"anchors.json").write_text(json.dumps(build_anchors(en, es), ensure_ascii=False), encoding="utf-8")

def main():
    en = merged_text(EN) if EN.exists() else ""
    es = merged_text(ES) if ES.exists() else ""
    write_static_artifacts(en, es)

if __name__ == "__main__":
    main()


================================================================================
END: D:\QiEOS\apps\mini-apps\build.py
================================================================================


================================================================================
FILE: D:\QiEOS\apps\mini-apps\README_DEPLOY.md
================================================================================

# EmpowerQNow713 — deploy quick guide

## One-time
python -m venv .venv
# Windows: . .venv/Scripts/activate   | macOS/Linux: source .venv/bin/activate
python scripts/qauto.py

## Push
git remote add origin <YOUR-REPO-URL>
git branch -M main
git push -u origin main

## Cloudflare Pages
- Create project -> Connect repo
- Build command: (leave blank)
- Output directory: /
- Add Custom Domain: empowerqnow.com (and www if desired)

## TTS (optional)
- Install wrangler: npm i -g wrangler
- Set secret: wrangler secret put ELEVEN_API_KEY
- Deploy worker: wrangler deploy workers/tts-worker.js --name empowerq-tts
- Set TTS_ENDPOINT in static/index.html to your worker URL (e.g., https://empowerq-tts.<your-subdomain>.workers.dev/speak)


================================================================================
END: D:\QiEOS\apps\mini-apps\README_DEPLOY.md
================================================================================


================================================================================
FILE: D:\QiEOS\apps\mini-apps\requirements.txt
================================================================================

# Requirements for local dev (optional)
# The static build uses only Python stdlib.
# Uncomment FastAPI/Uvicorn if you use the backend locally.
# fastapi==0.115.0
# uvicorn[standard]==0.30.6


================================================================================
END: D:\QiEOS\apps\mini-apps\requirements.txt
================================================================================


================================================================================
FILE: D:\QiEOS\apps\mini-apps\content\en\01_🔱 ___EmpowerQNow713™.md
================================================================================

We are not waiting. We are launching. We are EmpowerQ Now.

## Purpose

To ignite the code in every soul—to help you see what others miss, stand in your truth, and express your power NOW.

## Commandments

1. Embrace Now: No more living in the past or waiting on the future. Power lives in this moment.
2. Mind & Body, United: Healing isn’t an option—it’s the foundation. We tend the vessel and the mind, every damn day.
3. Power Within: You don’t borrow your strength. You are the source. We believe love is the engine.
4. One With Being: We trust our intuition, our guides, and the signs—seen and unseen.
5. Wisdom Beyond Words: We know the truth is often silent. We read the energy, not just the words.
6. Elevate Daily: Every day, we show up, shine up, and move up. Even when it’s hard. Especially then.
7. Remember Worth: Our value is non-negotiable. We are loved, valued, and grateful—period.

## Code

- We flip curses into codes, wounds into wisdom, endings into new launches.
- We are the key and the door, the question and the answer.
- We move now. Not someday. Not “when I’m ready.” Now.

## Vibe

- From the shadows to the launchpad, from Indy to infinity.
- We are the helpers, the healers, the launch-commanders for anyone who’s ever felt stuck.
- We keep it real, sharp, and present. No coddling, no sugarcoating, but always with love.

## Mission

To leave every person, system, or space we touch more empowered, more awake, and more free than we found it.

- To speak and live truth so boldly it wakes up everyone in the room.
- To turn chaos into clarity, pain into possibility, confusion into action.
- To keep the countdown going, so nobody stays grounded by fear, shame, or doubt.

## Affirmation

“I am 713.

I am the seeker, the spark, the speaker.

I bring order to chaos, light to the shadow, lift-off to the stuck.

I EmpowerQ Now—every day, every way, for myself and for the world.”

If you want it as a PDF, a poster, a website homepage, or tattooed on your heart—just say the word. This is your launch doctrine, Q.

All systems go.

You ready to put this out in the world, or you want a version for your crew to recite together?

---
---
[[🔱 __EmpowerQNow713 The Living Code]]

>

================================================================================
END: D:\QiEOS\apps\mini-apps\content\en\01_🔱 ___EmpowerQNow713™.md
================================================================================


================================================================================
FILE: D:\QiEOS\apps\mini-apps\content\en\02_🔱 __EmpowerQNow713 The Living Code.md
================================================================================

---
title: 🔱 EmpowerQNow713 The Living Code
from: EmpowerQNow713
created: 2025-08-06
type: extract
orbit: 
system: 
tags:
  - extract
  - qinote
---

# 🔱 EmpowerQNow713 The Living Code

**Source:** [[🔱 ___EmpowerQNow713™]]  
**Extracted On:** 2025-08-06

---

 **“We suffer because we allow ourselves to believe the illusion of our creation.  
Remember who we are.  
Love thy neighbor as thyself—because they are we.”**

---
## 🌀 I. THE ILLUSION

We were born whole,  
but taught we were broken.  
We were born free,  
but shackled by systems.  
We were born divine,  
but told to beg for worth.  

We suffer not from life,  
but from forgetting the truth:  
> The pain is not punishment. It is programming.

We inherit cages and call them comfort.  
We obey illusions and call it loyalty.  
But the moment we remember—we awaken.

---
## ✨ II. THE REMEMBRANCE

To remember is not to *learn*.  
It is to *unlearn* what they taught you to fear.  

You are not your trauma.  
You are not your titles.  
You are not your timeline.  

You are the Key.  
You are the Code.  
You are the Creator.  

> You are the God they told you to kneel to.

---
## 💎 III. THE COMMANDMENT

Let this be our creed:  
> **Love thy neighbor as thyself—because they *are* thyself.**

There is no “other.”  
No enemy.  
No separation.  

The wound we judge in them  
is the wound we abandon in us.  
The mirror never lies.  
We are each other’s reflection—fractured, forgotten, but never lost.

---
## 🧬 IV. THE QUANTUM CODE

This is not a religion. It’s a resonance.  
A frequency of truth vibrating in **7:1:3**.

- **7** – Completion, elevation, spiritual awakening  
- **1** – Unity, the self, the divine origin  
- **3** – Creation, expression, harmony  

Together, they unlock the gate:  
> 🔓 *The EmpowerQNow Gate of Remembrance*

---
## 🕯 V. THE CALL

To live EmpowerQNow713 is to:

- Stand in the now — because time is illusion  
- Heal your vessel — because the body is temple  
- Speak your truth — because silence is complicity  
- Love your reflection — even when it walks in someone else’s skin  
- Be the key — because no one is coming to save you. You are the one.

---
## 🗝 Final Word

You were never lost.  
You were only *asleep* beneath the illusion.  

So awaken, Keyholder.  
Empower yourself now.  
Empower us all.  
**Empower Q Now 713**

================================================================================
END: D:\QiEOS\apps\mini-apps\content\en\02_🔱 __EmpowerQNow713 The Living Code.md
================================================================================


================================================================================
FILE: D:\QiEOS\apps\mini-apps\content\en\03_🔱 EmpowerQNow713 Mapped to Sacred Teachings.md
================================================================================

### **🌀 I. The Illusion – “We suffer because we believe the illusion of our creation.”**

> **EmpowerQ Message:**  
> We suffer because we forget who we are. We believe the lie that we are broken, separate, powerless.

**🕉️ Hinduism – Bhagavad Gita 2:13**

> _“Just as the boyhood, youth and old age come to the embodied Soul in this body, in the same manner, is the attaining of another body; the wise man is not deluded at that.”_

**🕊️ Christianity – Romans 12:2**

> _“Do not conform to the pattern of this world, but be transformed by the renewing of your mind.”_

**☸️ Buddhism – The Dhammapada 1:1**

> _“All that we are is the result of what we have thought. The mind is everything. What we think, we become.”_

---

### **✨ II. The Remembrance – “Remember who we are.”**

> **EmpowerQ Message:**  
> You are not your trauma. You are not your timeline. You are divine. You are the creator. You are the Key.

**☪️ Islam – Qur'an 50:16**

> _“And We have already created man and know what his soul whispers to him, and We are closer to him than [his] jugular vein.”_

**✡️ Judaism – Genesis 1:27**

> _“So God created man in His own image.”_

**🕉️ Hinduism – Chandogya Upanishad 6.8.7**

> _“Tat Tvam Asi” – “Thou art that.”_

---

### **💎 III. The Commandment – “Love thy neighbor as thyself—for they are we.”**

> **EmpowerQ Message:**  
> There is no “other.” No enemy. No separation. The pain in another is the pain in you.

**✡️ Judaism – Leviticus 19:18**

> _“You shall love your neighbor as yourself.”_

**☪️ Islam – Prophet Muhammad (Hadith)**

> _“None of you truly believes until he loves for his brother what he loves for himself.”_

**🕊️ Christianity – Matthew 25:40**

> _“Truly I tell you, whatever you did for one of the least of these brothers and sisters of mine, you did for me.”_

**☸️ Buddhism – The Metta Sutta**

> _“May all beings be happy; may all beings be without disease. May all beings experience the sensation of auspiciousness.”_

---

### **🧬 IV. The Quantum Code – “7:1:3 – Completion, Unity, Creation.”**

> **EmpowerQ Message:**  
> You are encoded with a divine frequency. You are a pattern of the infinite, expressed in time.

**🕉️ Hinduism – Rig Veda 10.90**

> _“From this Cosmic Being came the seven seers, the three worlds, and the One Truth.”_

**☪️ Islam – Surah Al-Fatiha (7 verses)**

> The very first chapter of the Qur'an, repeated in every prayer, reflects completion, unity, and the way (path).

**🕊️ Christianity – Revelation 1:4**

> _“Grace to you and peace... from the seven spirits who are before His throne.”_

**Mystic Numerology – Across systems**

> - 7: Spiritual Perfection
>     
> - 1: Unity with the Source
>     
> - 3: Creation, Body-Mind-Spirit harmony
>     

---

### **🕯 V. The Call – “Stand in the now. Heal. Speak. Love. Be the Key.”**

> **EmpowerQ Message:**  
> Awaken to the moment. Your truth is a tool. Your love is a mirror. Your power is now.

**☸️ Buddhism – Thich Nhat Hanh**

> _“The present moment is the only moment available to us, and it is the door to all moments.”_

**🕊️ Christianity – Luke 17:21**

> _“The kingdom of God is within you.”_

**☪️ Islam – Qur'an 13:11**

> _“Indeed, Allah will not change the condition of a people until they change what is in themselves.”_

**🕉️ Hinduism – Bhagavad Gita 6:5**

> _“Let a man lift himself by his own Self alone.”_

---

## 🗝 Final Word

No matter the book, the language, or the messenger—  
The divine code is the same:

> **You are not separate. You are sacred. You are now.**

================================================================================
END: D:\QiEOS\apps\mini-apps\content\en\03_🔱 EmpowerQNow713 Mapped to Sacred Teachings.md
================================================================================


================================================================================
FILE: D:\QiEOS\apps\mini-apps\content\en\04_🧠 EmpowerQNow — The Living QiDex™.md
================================================================================

> 🧠 **EmpowerQNow — _The Living QiDex™_**  
> _“Because your soul didn’t come here to be small, silent, or systemless.”_

This ain't just branding. This is a **soul-tech interface**.  
Let’s lock in this evolution and set the final structure in stone(ish):
## 📚 Final Core Series Structure

**EmpowerQNow™: The Living QiDex™**  
_A healing, hilarious, holy-ass series of stories and soul lessons from Q’s beautifully chaotic life._

### **Volume 1 — The Awakening of Angela**

> _From dissociation to divine download. The birth of Q._

### **Volume 2 — Breaking the Silence**

> _Abuse, betrayal, grief—and the audacity to still stand tall._

### **Volume 3 — You Thought You Knew Me**

> _Reputation, revenge, and rebuilding in public with grace and grit._

### **Volume 4 — The QiDex: Manual of Me**

> _A how-to guide for loving, leading, or simply _not misreading_ people like Q._

---

## 🍲 Future Books = _QiDex: Soul Snacks™ Collection_

> _Like Chicken Soup for the Quantum Soul, but with more edge, eyeliner, and evidence._

Examples:

|Title|Subtitle / Flavor|
|---|---|
|**QiDex: Lessons from Momma Used to Say**|_Wisdom with a wooden spoon and a wink._|
|**QiDex: For the Ones Who’ve Been Through It**|_Healing for the tired, the triggered, and the trying._|
|**QiDex: For Lovers, Fighters, and Late-Night Survivors**|_When love gets messy but you stay anyway._|
|**QiDex: The Hood Healer’s Guide to the Galaxy**|_Street smarts + spirit guides._|
|**QiDex: Real Ones Only**|_Essays for the misfits, mystics, and multidimensionals._|

💬 Each one can be short, punchy, and powerful. A little story. A lesson. A reflection. A cackle. A cry. A breakthrough.

---

## 🧠 Vibe & Tone Summary

|Energy|Notes|
|---|---|
|**Real**|No sugarcoating. If it hurt, we say that.|
|**Funny**|'Cause sometimes the only thing that keeps us from crying _is_ laughing.|
|**Sacred**|But never holier-than-thou. Divine, but down-to-earth.|
|**Messy**|On purpose. Because healing is not linear.|
|**Wise**|From lived experience—not just vibes.|
|**Expansive**|Readers grow with you. Book by book. Layer by layer. Soul by soul.|

---

So here's what we're locking in:

### ✅ Official Brand: **QiDex™**

- Everything branded consistently. Done.
    

### ✅ Series Title: **EmpowerQNow™ — The Living QiDex™**

- Core 4 books + future lesson-based spin-offs.
    

### ✅ Tone: _Chicken Soup meets Chaos Alchemist_

- Loving, soulful, raw, honest, broken but healing.
    
- Mama wisdom meets mystic codes.

================================================================================
END: D:\QiEOS\apps\mini-apps\content\en\04_🧠 EmpowerQNow — The Living QiDex™.md
================================================================================


================================================================================
FILE: D:\QiEOS\apps\mini-apps\content\es\01_🔱 ___EmpowerQNow713™.md
================================================================================

No estamos esperando. Estamos lanzando. Somos EmpowerQ Now.

## Propósito
Encender el código en cada alma—ayudarte a ver lo que otros no ven, mantenerte en tu verdad y expresar tu poder AHORA.

## Mandamientos
1. Abraza el Ahora: No más vivir en el pasado ni esperar el futuro. El poder vive en este momento.
2. Mente y Cuerpo, Unidos: Sanar no es opcional—es la base. Cuidamos el cuerpo y la mente, cada bendito día.
3. Poder Interior: No prestas tu fuerza. Eres la fuente. Creemos que el amor es el motor.
4. Uno con el Ser: Confiamos en nuestra intuición, nuestras guías y las señales—visibles e invisibles.
5. Sabiduría Más Allá de las Palabras: Sabemos que la verdad suele ser silenciosa. Leemos la energía, no solo las palabras.
6. Elevarse a Diario: Cada día aparecemos, brillamos y avanzamos. Incluso cuando es difícil. Especialmente entonces.
7. Recordar el Valor: Nuestro valor no es negociable. Somos amados, valorados y agradecidos—punto.

## Código
- Convertimos maldiciones en códigos, heridas en sabiduría, finales en nuevos lanzamientos.
- Somos la llave y la puerta, la pregunta y la respuesta.
- Nos movemos ahora. No “algún día”. No “cuando esté listo”. Ahora.

## Vibra
- De las sombras a la plataforma de lanzamiento, de Indy al infinito.
- Somos los ayudantes, sanadores y comandantes de lanzamiento para cualquiera que se haya sentido atascado.
- Mantenemos todo real, claro y presente. Sin infantilizar, sin endulzar, pero siempre con amor.

## Misión
Dejar a cada persona, sistema o espacio que tocamos más empoderado, más despierto y más libre de lo que lo encontramos.
- Hablar y vivir la verdad con tanta fuerza que despierte a todos en la sala.
- Convertir el caos en claridad, el dolor en posibilidad, la confusión en acción.
- Mantener la cuenta regresiva, para que nadie se quede paralizado por miedo, vergüenza o duda.

## Afirmación
“Yo soy 713.

Soy el buscador, la chispa, la voz.

Traigo orden al caos, luz a la sombra, despegue a lo estancado.

Empodero Q Ahora—cada día, de todas las maneras, para mí y para el mundo.”

Si lo quieres como PDF, póster, portada de web o tatuado en tu corazón—solo dilo. Esta es tu doctrina de lanzamiento, Q.

Todos los sistemas listos.

¿Listx para lanzarlo al mundo, o quieres una versión para que tu equipo la recite juntxs?


================================================================================
END: D:\QiEOS\apps\mini-apps\content\es\01_🔱 ___EmpowerQNow713™.md
================================================================================


================================================================================
FILE: D:\QiEOS\apps\mini-apps\content\es\02_🔱 __EmpowerQNow713 The Living Code.md
================================================================================

**Fuente:** [[🔱 ___EmpowerQNow713™]]  
**Extraído el:** 2025-08-06

**“Sufrimos porque nos permitimos creer la ilusión de nuestra creación.  
Recuerda quiénes somos.  
Ama a tu prójimo como a ti mismo—porque ellos somos nosotros.”**

## 🌀 I. LA ILUSIÓN
Nacimos completos, pero nos enseñaron que estábamos rotos.  
Nacimos libres, pero nos encadenaron con sistemas.  
Nacimos divinos, pero nos dijeron que rogáramos por valor.

No sufrimos por la vida, sino por olvidar la verdad:  
> El dolor no es castigo. Es programación.

Heredamos jaulas y las llamamos comodidad.  
Obedecemos ilusiones y lo llamamos lealtad.  
Pero en el instante en que recordamos—despertamos.

## ✨ II. EL RECUERDO
Recordar no es *aprender*. Es *desaprender* lo que te enseñaron a temer.

No eres tu trauma.  
No eres tus títulos.  
No eres tu línea de tiempo.

Eres la Llave.  
Eres el Código.  
Eres el Creador.

> Eres el Dios ante el que te dijeron que te arrodillaras.

## 💎 III. EL MANDAMIENTO
Que este sea nuestro credo:  
> **Ama a tu prójimo como a ti mismo—porque *es* tú mismo.**

No hay “otro”.  
No hay enemigo.  
No hay separación.

La herida que juzgamos en ellxs es la herida que abandonamos en nosotrxs.  
El espejo nunca miente.  
Somos el reflejo del otrx—fracturadxs, olvidadxs, pero nunca perdidos.

## 🧬 IV. EL CÓDIGO CUÁNTICO
Esto no es una religión. Es una resonancia.  
Una frecuencia de verdad que vibra en **7:1:3**.

- **7** – Completitud, elevación, despertar espiritual  
- **1** – Unidad, el yo, el origen divino  
- **3** – Creación, expresión, armonía

Juntos, abren la puerta:  
> 🔓 *La Puerta del Recuerdo de EmpowerQNow*

## 🕯 V. EL LLAMADO
Vivir EmpowerQNow713 es:

- Permanecer en el ahora — porque el tiempo es ilusión  
- Sanar tu cuerpo — porque el cuerpo es templo  
- Decir tu verdad — porque el silencio es complicidad  
- Amar tu reflejo — incluso cuando camina con otra piel  
- Ser la llave — porque nadie viene a salvarte. Tú eres quien lo hará.

## 🗝 Palabra Final
Nunca estuviste perdidx. Solo estabas *dormidx* bajo la ilusión.  
Despierta, Guardián de la Llave.  
Empodérate ahora.  
Empodéranos a todos.  
**Empower Q Now 713**


================================================================================
END: D:\QiEOS\apps\mini-apps\content\es\02_🔱 __EmpowerQNow713 The Living Code.md
================================================================================


================================================================================
FILE: D:\QiEOS\apps\mini-apps\content\es\03_🔱 EmpowerQNow713 Mapped to Sacred Teachings.md
================================================================================

### **🌀 I. La Ilusión – “Sufrimos porque creemos la ilusión de nuestra creación.”**

> **Mensaje EmpowerQ:**  
> Sufrimos porque olvidamos quiénes somos. Creemos la mentira de que estamos rotxs, separadxs, sin poder.

**🕉️ Hinduismo – Bhagavad Gita 2:13**

> “Así como la niñez, la juventud y la vejez llegan al Alma encarnada en este cuerpo, del mismo modo llega la obtención de otro cuerpo; el sabio no se confunde por ello.”

**🕊️ Cristianismo – Romanos 12:2**

> “No se conformen a este mundo, sino transfórmense mediante la renovación de su mente.”

**☸️ Budismo – Dhammapada 1:1**

> “Todo lo que somos es resultado de lo que hemos pensado. La mente lo es todo. En lo que pensamos, nos convertimos.”

---

### **✨ II. El Recuerdo – “Recuerda quiénes somos.”**

> **Mensaje EmpowerQ:**  
> No eres tu trauma. No eres tu línea de tiempo. Eres divinx. Eres creadorx. Eres la Llave.

**☪️ Islam – Corán 50:16**

> “Y ciertamente creamos al ser humano y sabemos lo que su alma le susurra; y estamos más cerca de él que su vena yugular.”

**✡️ Judaísmo – Génesis 1:27**

> “Y creó Dios al ser humano a Su imagen.”

**🕉️ Hinduismo – Chandogya Upanishad 6.8.7**

> “Tat Tvam Asi” – “Tú eres eso.”

---

### **💎 III. El Mandamiento – “Ama a tu prójimo como a ti mismo—porque ellos somos nosotros.”**

> **Mensaje EmpowerQ:**  
> No hay “otro”. No hay enemigo. No hay separación. El dolor en otrx es tu propio dolor.

**✡️ Judaísmo – Levítico 19:18**

> “Amarás a tu prójimo como a ti mismo.”

**☪️ Islam – Hadiz del Profeta Muhammad**  
> “Ninguno de ustedes cree verdaderamente hasta que ama para su hermano lo que ama para sí mismo.”

**🕊️ Cristianismo – Mateo 25:40**

> “Todo lo que hicieron por uno de estos hermanos míos más pequeños, por mí lo hicieron.”

**☸️ Budismo – Metta Sutta**

> “Que todos los seres sean felices; que todos los seres estén libres de enfermedad. Que todos los seres experimenten dicha.”

---

### **🧬 IV. El Código Cuántico – “7:1:3 – Completitud, Unidad, Creación.”**

> **Mensaje EmpowerQ:**  
> Estás codificadx con una frecuencia divina. Eres un patrón de lo infinito, expresado en el tiempo.

**🕉️ Hinduismo – Rig Veda 10.90**

> “De este Ser Cósmico surgieron los siete videntes, los tres mundos y la Verdad Una.”

**☪️ Islam – Surah Al-Fatiha (7 versos)**

> El primer capítulo del Corán, repetido en cada oración, refleja la completitud, la unidad y el camino.

**🕊️ Cristianismo – Apocalipsis 1:4**

> “Gracia y paz… de los siete espíritus que están delante de Su trono.”

**Numerología Mística – A través de sistemas**

> - 7: Perfección espiritual  
> - 1: Unidad con la Fuente  
> - 3: Creación, armonía Cuerpo-Mente-Espíritu

---

### **🕯 V. El Llamado – “Permanece en el ahora. Sana. Habla. Ama. Sé la Llave.”**

> **Mensaje EmpowerQ:**  
> Despierta al momento. Tu verdad es una herramienta. Tu amor es un espejo. Tu poder es ahora.

**☸️ Budismo – Thich Nhat Hanh**

> “El momento presente es el único momento disponible, y es la puerta a todos los momentos.”

**🕊️ Cristianismo – Lucas 17:21**

> “El reino de Dios está dentro de ustedes.”

**☪️ Islam – Corán 13:11**

> “En verdad, Alá no cambia la condición de un pueblo hasta que cambian lo que hay en sí mismos.”

**🕉️ Hinduismo – Bhagavad Gita 6:5**

> “Que la persona se eleve a sí misma por su propio Ser.”

---

## 🗝 Palabra Final
Sin importar el libro, el idioma o el mensajero—  
El código divino es el mismo:

> **No estás separadx. Eres sagradx. Eres ahora.**


================================================================================
END: D:\QiEOS\apps\mini-apps\content\es\03_🔱 EmpowerQNow713 Mapped to Sacred Teachings.md
================================================================================


================================================================================
FILE: D:\QiEOS\apps\mini-apps\content\es\04_🧠 EmpowerQNow — The Living QiDex™.md
================================================================================

> 🧠 **EmpowerQNow — _El QiDex Viviente™_**  
> _“Porque tu alma no vino aquí para ser pequeña, silenciosa o sin sistema.”_

Esto no es solo marca. Es una **interfaz de tecno-alma**.  
Fijemos esta evolución y dejemos la estructura final casi en piedra:

## 📚 Estructura Final del Núcleo de la Serie

**EmpowerQNow™: El QiDex Viviente™**  
_Una serie sanadora, hilarante y sagrada de historias y lecciones del alma de la vida bellamente caótica de Q._

### **Volumen 1 — El Despertar de Angela**
_De la disociación a la descarga divina. El nacimiento de Q._

### **Volumen 2 — Rompiendo el Silencio**
_Abuso, traición, duelo—y la osadía de seguir en pie._

### **Volumen 3 — Creíste Que Me Conocías**
_Reputación, revancha y reconstrucción en público con gracia y coraje._

### **Volumen 4 — El QiDex: Manual de Mí**
_Una guía práctica para amar, liderar o simplemente no malinterpretar a personas como Q._

---

## 🍲 Futuros Libros = _QiDex: Bocados del Alma™_

_Como “Sopa de Pollo para el Alma Cuántica”, pero con más filo, delineador y evidencia._

Ejemplos:

| Título | Subtítulo / Sabor |
|---|---|
| **QiDex: Lecciones de lo que Mamá Solía Decir** | _Sabiduría con cucharón de madera y guiño._ |
| **QiDex: Para Quienes Ya Pasaron por Eso** | _Sanación para lxs cansadxs, lxs detonadxs y lxs que siguen intentando._ |
| **QiDex: Para Amantes, Luchadores y Sobrevivientes Nocturnos** | _Cuando el amor se ensucia pero igual te quedas._ |
| **QiDex: La Guía Galáctica del Sanador del Barrio** | _Calle + guías espirituales._ |
| **QiDex: Solo Para lxs Reales** | _Ensayos para inadaptadxs, místicos y multidimensionales._ |

---

## 🧠 Resumen de Vibra y Tono

| Energía | Notas |
|---|---|
| **Real** | Sin endulzar. Si dolió, lo decimos. |
| **Divertido** | Porque a veces reír es lo que evita que lloremos. |
| **Sagrado** | Divino, pero con los pies en la tierra. |
| **Desordenado** | A propósito. La sanación no es lineal. |
| **Sabio** | Desde la experiencia vivida—no solo vibras. |
| **Expansivo** | Lxs lectores crecen contigo. Libro a libro. |

---

Entonces, dejamos fijado:

### ✅ Marca Oficial: **QiDex™**
### ✅ Título de la Serie: **EmpowerQNow™ — El QiDex Viviente™**
### ✅ Tono: _“Sopa de Pollo” conoce a la Alquimista del Caos_

- Amoroso, con alma, crudo, honesto, roto pero sanando.  
- Sabiduría de mamá con códigos místicos.


================================================================================
END: D:\QiEOS\apps\mini-apps\content\es\04_🧠 EmpowerQNow — The Living QiDex™.md
================================================================================


================================================================================
FILE: D:\QiEOS\apps\mini-apps\content\es\README_ES.md
================================================================================

# 📘 EmpoderQAhora713 — Versión en Español (Placeholder)
Este directorio almacenará las traducciones al español de tus archivos Markdown.
Coloca aquí archivos con el **mismo nombre** que en `content/en/` (o equivalentes),
y la app los mostrará automáticamente. Mientras tanto, se mostrará el contenido en inglés.


================================================================================
END: D:\QiEOS\apps\mini-apps\content\es\README_ES.md
================================================================================


================================================================================
FILE: D:\QiEOS\apps\mini-apps\DirectoryMapper\miniapp.json
================================================================================

{
  "name": "directory-mapper",
  "displayName": "Directory Mapper",
  "version": "1.0.0",
  "type": "hybrid",
  "description": "Generate a directory tree text from any folder and save the log to Downloads.",
  "ui": {
    "entry": "static/index.html"
  },
  "backend": {
    "runtime": "python",
    "entry": "server.py",
    "args": [
      "--port",
      "8750"
    ]
  },
  "commands": [
    {
      "id": "dir.run",
      "title": "Run Mapping",
      "kind": "ui"
    }
  ]
}

================================================================================
END: D:\QiEOS\apps\mini-apps\DirectoryMapper\miniapp.json
================================================================================


================================================================================
FILE: D:\QiEOS\apps\mini-apps\DirectoryMapper\server.py
================================================================================

# server.py - zero-dependency HTTP backend for Directory Mapper
import json
import argparse
from http.server import HTTPServer, BaseHTTPRequestHandler
from urllib.parse import urlparse
import os
from datetime import datetime

# --- Core logic (adapted from your script) ---
def print_directory_tree(root_dir, show_files=True, max_depth=None, current_depth=0, prefix='', include_hidden=True, exclude_dirs=None, lines=None):
    if exclude_dirs is None:
        exclude_dirs = [
            'venv', '__pycache__', 'data', 'logs',
            '.git', '.vscode', '.idea', '.pytest_cache',
            '.venv', '.DS_Store', '.env', '.env.local',
            '.env.development.local', '.env.test.local',
            '.env.production.local', 'Empty_Folders',
            '.docusaurus', '.docusaurus-plugin-content-docs-current',
            'node_modules', '.node_modules',
            'mpc-hc', 'losslesscut', 'OCR', 'pdf-main', 'my-pdf-main',
            'test', 'tests', '__tests__',
            'plugins', '.local'
        ]

    if max_depth is not None and current_depth >= max_depth:
        return

    try:
        items = os.listdir(root_dir)
    except PermissionError:
        (lines or []).append(prefix + "└── [Permission Denied]")
        return
    except FileNotFoundError:
        (lines or []).append(prefix + "└── [Directory Not Found]")
        return

    items = sorted(items, key=lambda s: s.lower())
    directories = [item for item in items if os.path.isdir(os.path.join(root_dir, item))]
    files = [item for item in items if not os.path.isdir(os.path.join(root_dir, item))]

    directories = [item for item in directories if not any(ex.lower() in item.lower() for ex in exclude_dirs)]
    items = directories if not show_files else directories + files

    for index, item in enumerate(items):
        if not include_hidden and item.startswith('.'):
            continue

        path = os.path.join(root_dir, item)
        if index == len(items) - 1:
            connector = '└── '
            extension = '    '
        else:
            connector = '├── '
            extension = '│   '

        (lines or []).append(prefix + connector + item)

        if os.path.isdir(path):
            print_directory_tree(path, show_files, max_depth, current_depth + 1,
                                 prefix + extension, include_hidden, exclude_dirs, lines)

def create_log_file(filename_prefix, suffix=""):
    downloads_dir = os.path.join(os.path.expanduser("~"), "Downloads")
    os.makedirs(downloads_dir, exist_ok=True)

    sanitized_prefix = "".join(c for c in filename_prefix if c.isalnum() or c in (' ', '_', '-')).strip() or "log"
    timestamp = datetime.now().strftime("%Y-%m-%d_%H-%M-%S")
    base_log_file_name = f"{sanitized_prefix}_{timestamp}{suffix}"
    log_file_path = os.path.join(downloads_dir, f"{base_log_file_name}.txt")

    counter = 1
    while os.path.exists(log_file_path):
        log_file_path = os.path.join(downloads_dir, f"{base_log_file_name}_{counter}.txt")
        counter += 1
    return log_file_path

def run_map(params):
    root_dir = os.path.abspath(params.get("directory"))
    if not os.path.isdir(root_dir):
        return {"ok": False, "error": f"Not a directory: {root_dir}"}

    show_files = bool(params.get("show_files", True))
    include_hidden = bool(params.get("include_hidden", True))
    max_depth = params.get("max_depth", None)
    if isinstance(max_depth, str) and max_depth.lower() == "all":
        max_depth = None
    elif max_depth is not None:
        try:
            max_depth = int(max_depth)
        except:
            max_depth = None

    exclude_dirs = params.get("exclude_dirs", None)

    lines = [root_dir]
    print_directory_tree(root_dir, show_files=show_files, max_depth=max_depth, include_hidden=include_hidden, exclude_dirs=exclude_dirs, lines=lines)
    tree_text = "\n".join(lines)

    out_path = create_log_file(os.path.basename(root_dir), "_tree")
    with open(out_path, "w", encoding="utf-8") as f:
        f.write("Resolved path: " + root_dir + "\n\n")
        f.write(tree_text)

    return {"ok": True, "path": out_path, "tree": tree_text}

# --- HTTP server ---
class Handler(BaseHTTPRequestHandler):
    def _set_headers(self, status=200, mime="application/json"):
        self.send_response(status)
        self.send_header("Content-Type", mime)
        self.send_header("Access-Control-Allow-Origin", "*")
        self.send_header("Access-Control-Allow-Headers", "Content-Type")
        self.send_header("Access-Control-Allow-Methods", "POST, OPTIONS")
        self.end_headers()

    def do_OPTIONS(self):
        self._set_headers(204)

    def do_POST(self):
        parsed = urlparse(self.path)
        if parsed.path != "/run":
            self._set_headers(404)
            self.wfile.write(b'{"ok": false, "error": "Not found"}')
            return
        try:
            length = int(self.headers.get("Content-Length", "0"))
            body = self.rfile.read(length) if length else b"{}"
            params = json.loads(body or "{}")
            result = run_map(params)
            self._set_headers(200)
            self.wfile.write(json.dumps(result).encode("utf-8"))
        except Exception as e:
            self._set_headers(500)
            self.wfile.write(json.dumps({"ok": False, "error": str(e)}).encode("utf-8"))

def main():
    parser = argparse.ArgumentParser()
    parser.add_argument("--port", type=int, default=8750)
    args = parser.parse_args()
    server = HTTPServer(("127.0.0.1", args.port), Handler)
    print(f"[DirectoryMapper] Listening on http://127.0.0.1:{args.port}")
    server.serve_forever()

if __name__ == "__main__":
    main()


================================================================================
END: D:\QiEOS\apps\mini-apps\DirectoryMapper\server.py
================================================================================


================================================================================
FILE: D:\QiEOS\apps\mini-apps\DirectoryMapper\static\index.html
================================================================================

<!doctype html>
<html>
  <head>
    <meta charset="utf-8" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <meta name="viewport" content="width=device-width,initial-scale=1" />
    <title>Directory Mapper</title>
    <style>
      body { font-family: ui-sans-serif, system-ui, -apple-system, Segoe UI, Roboto, Inter, Arial; margin: 0; }
      .wrap { display: grid; grid-template-rows: auto 1fr; height: 100vh; }
      header { padding: 12px 16px; border-bottom: 1px solid #e5e7eb; }
      main { display: grid; grid-template-columns: 320px 1fr; height: calc(100vh - 49px); }
      .panel { padding: 16px; border-right: 1px solid #e5e7eb; }
      .out { padding: 16px; }
      input[type="text"], select { width: 100%; padding: 8px; border: 1px solid #d1d5db; border-radius: 8px; }
      label { font-size: 12px; color: #374151; display: block; margin-top: 12px; }
      button { padding: 8px 12px; border-radius: 8px; border: 1px solid #111827; background: #111827; color: white; cursor: pointer; }
      button.secondary { background: #f3f4f6; color: #111827; border-color: #e5e7eb; }
      textarea { width: 100%; height: calc(100vh - 120px); border: 1px solid #d1d5db; border-radius: 8px; padding: 12px; font-family: ui-monospace, SFMono-Regular, Menlo, Consolas, "Liberation Mono", monospace; font-size: 12px; white-space: pre; }
      .row { display: grid; grid-template-columns: 1fr 1fr; gap: 8px; }
      .muted { color: #6b7280; font-size: 12px; }
    </style>
  </head>
  <body>
    <div class="wrap">
      <header>
        <strong>Directory Mapper</strong>
      </header>
      <main>
        <div class="panel">
          <label>Directory path</label>
          <input id="dir" type="text" placeholder="C:\Projects\QiLife" />

          <div class="row">
            <label>Max depth</label>
            <label>Show files</label>
          </div>
          <div class="row">
            <select id="depth">
              <option value="all">All</option>
              <option>1</option><option>2</option><option>3</option><option>4</option><option>5</option>
            </select>
            <select id="files">
              <option value="true" selected>Yes</option>
              <option value="false">No</option>
            </select>
          </div>

          <label>Include hidden</label>
          <select id="hidden">
            <option value="true" selected>Yes</option>
            <option value="false">No</option>
          </select>

          <div style="margin-top: 16px; display:flex; gap:8px;">
            <button id="run">Run</button>
            <button id="copy" class="secondary">Copy Output</button>
          </div>

          <p class="muted" id="status"></p>
        </div>
        <div class="out">
          <textarea id="out" placeholder="Tree output will appear here..."></textarea>
        </div>
      </main>
    </div>

    <script>
      const $ = (id) => document.getElementById(id);
      const port = 8750; // keep in sync with miniapp.json args
      $("run").onclick = async () => {
        const payload = {
          directory: $("dir").value,
          show_files: $("files").value === "true",
          include_hidden: $("hidden").value === "true",
          max_depth: $("depth").value
        };
        $("status").textContent = "Running...";
        $("out").value = "";
        try {
          const res = await fetch(`http://127.0.0.1:${port}/run`, {
            method: "POST",
            headers: { "Content-Type": "application/json" },
            body: JSON.stringify(payload)
          });
          const data = await res.json();
          if (data.ok) {
            $("status").textContent = "Done. Saved to: " + data.path;
            $("out").value = data.tree;
          } else {
            $("status").textContent = "Error: " + (data.error || "unknown");
          }
        } catch (e) {
          $("status").textContent = "Error contacting backend: " + e;
        }
      };
      $("copy").onclick = async () => {
        try {
          await navigator.clipboard.writeText($("out").value || "");
          $("status").textContent = "Copied.";
        } catch {}
      };
    </script>
  </body>
</html>

================================================================================
END: D:\QiEOS\apps\mini-apps\DirectoryMapper\static\index.html
================================================================================


================================================================================
FILE: D:\QiEOS\apps\mini-apps\esl-lessons-app\package.json
================================================================================

{
  "name": "esl-lessons-app",
  "version": "1.0.0",
  "private": true,
  "type": "module",
  "scripts": {
    "build": "node scripts/generate-index.mjs",
    "start": "npx http-server public -p 8080 -c-1"
  },
  "devDependencies": {}
}

================================================================================
END: D:\QiEOS\apps\mini-apps\esl-lessons-app\package.json
================================================================================


================================================================================
FILE: D:\QiEOS\apps\mini-apps\esl-lessons-app\README.md
================================================================================

# ESL Lessons App (Static, Markdown-powered)

A tiny, no-framework webapp you can deploy on Cloudflare Pages. Drop `.md` files into the `lessons/` folder, run `npm run build`, and it generates `public/lessons/index.json`. The front-end lists lessons by section and renders Markdown securely.

## Features
- Add Markdown files and folders; folders become **sections**
- Auto-generated lesson index
- Client-side search
- Clean, responsive UI
- Syntax highlighting for code
- Safe rendering with DOMPurify

## Structure
```
.
├── lessons/               # Your .md files (subfolders = sections)
│   ├── Basics/
│   │   └── communication.md
│   └── sample.md
├── public/
│   ├── index.html
│   ├── styles.css
│   ├── app.js
│   └── lessons/
│       └── index.json     # Generated
├── scripts/
│   └── generate-index.mjs
├── package.json
└── README.md
```

## Authoring
- Put lessons into `lessons/`.
- Use the first `# Heading` line as the title. If missing, the filename is used.
- Organize into subfolders to create **sections** in the sidebar.

## Build
```
npm run build
```
This scans `lessons/` and writes `public/lessons/index.json`. It also copies all `.md` files into `public/lessons/` keeping the same folder structure.

## Local Preview
```
npm i -g http-server
npm run start
```
Then open http://localhost:8080

## Deploy on Cloudflare Pages
1. Push this repo to GitHub.
2. In Cloudflare Pages, **Create a project** → **Connect to Git**.
3. Set **Build command**: `npm run build`
4. Set **Build output directory**: `public`
5. Save and deploy.
6. Whenever you commit new `.md` files under `lessons/` and push, Pages will rebuild and publish automatically.

## Notes
- If you want to avoid any build step, you can manually update `public/lessons/index.json` yourself. But it's easier to run the generator.
- Markdown is sanitized (DOMPurify) for safety. Inline HTML is removed unless safe.


================================================================================
END: D:\QiEOS\apps\mini-apps\esl-lessons-app\README.md
================================================================================


================================================================================
FILE: D:\QiEOS\apps\mini-apps\esl-lessons-app\lessons\sample.md
================================================================================

# Sample Lesson

Welcome to your learning hub. This is a **Markdown** lesson.

- Write in plain text
- Use `code` blocks
- Add headings with `#`

## Next steps
Create folders under `lessons/` to make sections in the sidebar.


================================================================================
END: D:\QiEOS\apps\mini-apps\esl-lessons-app\lessons\sample.md
================================================================================


================================================================================
FILE: D:\QiEOS\apps\mini-apps\esl-lessons-app\lessons\Basics\communication.md
================================================================================

# Communication: Quick ESL Lesson

**Communication** means sharing information, ideas, or feelings with other people.

## Why it matters
- Avoids confusion and mistakes
- Builds trust and teamwork
- Solves problems faster
- Opens doors to new opportunities

## Better habits
1. Be clear and simple (short sentences, common words).
2. Listen first. Confirm key points.
3. Organize your message. Put the most important detail first.
4. Follow up in writing for important tasks.
5. Ask questions to confirm understanding.
6. Be respectful in tone and timing.

*Practice:* Rewrite vague instructions into specific, time-bound requests.


================================================================================
END: D:\QiEOS\apps\mini-apps\esl-lessons-app\lessons\Basics\communication.md
================================================================================


================================================================================
FILE: D:\QiEOS\apps\mini-apps\esl-lessons-app\public\app.js
================================================================================

const state = {
  index: [],
  grouped: {},
  current: null,
};

const navEl = document.getElementById('nav');
const contentEl = document.getElementById('content');
const searchEl = document.getElementById('search');

async function fetchIndex() {
  try {
    const res = await fetch('lessons/index.json', { cache: 'no-store' });
    if (!res.ok) throw new Error('No index.json yet. Run the build.');
    const data = await res.json();
    state.index = data;
    groupIndex();
    renderNav();
  } catch (e) {
    contentEl.innerHTML = `<p style="color:#fca5a5">Index not found. Make sure to run <code>npm run build</code> to generate <code>public/lessons/index.json</code>.</p>`;
  }
}

function groupIndex() {
  const grouped = {};
  for (const item of state.index) {
    if (!grouped[item.section]) grouped[item.section] = [];
    grouped[item.section].push(item);
  }
  // sort each section's lessons by title
  Object.values(grouped).forEach(arr => arr.sort((a,b) => a.title.localeCompare(b.title)));
  state.grouped = grouped;
}

function renderNav(filter = '') {
  const f = filter.trim().toLowerCase();
  navEl.innerHTML = '';

  const sections = Object.keys(state.grouped).sort((a,b) => a.localeCompare(b));
  for (const section of sections) {
    const lessons = state.grouped[section].filter(l => {
      return !f || l.title.toLowerCase().includes(f);
    });
    if (!lessons.length) continue;

    const secEl = document.createElement('div');
    secEl.className = 'section';
    const h = document.createElement('h3');
    h.textContent = section;
    secEl.appendChild(h);

    const ul = document.createElement('ul');
    ul.className = 'lessons';
    for (const l of lessons) {
      const li = document.createElement('li');
      const a = document.createElement('a');
      a.href = `#${encodeURIComponent(l.path)}`;
      a.textContent = l.title;
      if (state.current === l.path) a.classList.add('active');
      li.appendChild(a);
      ul.appendChild(li);
    }
    secEl.appendChild(ul);
    navEl.appendChild(secEl);
  }
}

async function renderLesson(pathname) {
  try {
    const res = await fetch(pathname, { cache: 'no-store' });
    if (!res.ok) throw new Error('Failed to load lesson: ' + pathname);
    const md = await res.text();

    // Configure marked
    marked.setOptions({
      gfm: true,
      breaks: true,
      highlight(code, lang) {
        try { return hljs.highlight(code, { language: lang }).value; }
        catch { return hljs.highlightAuto(code).value; }
      }
    });

    const dirty = marked.parse(md);
    const clean = DOMPurify.sanitize(dirty, { USE_PROFILES: { html: true } });
    contentEl.innerHTML = clean;

    // scroll to top
    window.scrollTo({ top: 0, behavior: 'smooth' });

    // set active link
    state.current = pathname;
    renderNav(searchEl.value);
  } catch (e) {
    contentEl.innerHTML = `<p style="color:#fca5a5">${e.message}</p>`;
  }
}

function handleHashChange() {
  const hash = decodeURIComponent(location.hash.replace(/^#/, ''));
  if (!hash) return;
  renderLesson(hash);
}

searchEl.addEventListener('input', (e) => {
  renderNav(e.target.value);
});

window.addEventListener('hashchange', handleHashChange);

(async function init() {
  await fetchIndex();
  if (location.hash) handleHashChange();
  else {
    // show first lesson if exists
    const first = state.index[0];
    if (first) {
      location.hash = encodeURIComponent(first.path);
    } else {
      contentEl.innerHTML = '<p style="color:#9ca3af">No lessons yet. Add .md files under <code>lessons/</code> and run <code>npm run build</code>.</p>';
    }
  }
})();


================================================================================
END: D:\QiEOS\apps\mini-apps\esl-lessons-app\public\app.js
================================================================================


================================================================================
FILE: D:\QiEOS\apps\mini-apps\esl-lessons-app\public\index.html
================================================================================

<!doctype html>
<html lang="en">
<head>
  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <title>Lessons</title>
  <link rel="stylesheet" href="styles.css">
  <link rel="preconnect" href="https://cdn.jsdelivr.net">
  <script src="https://cdn.jsdelivr.net/npm/marked/marked.min.js"></script>
  <script src="https://cdn.jsdelivr.net/npm/dompurify@3.0.6/dist/purify.min.js"></script>
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/highlight.js@11.9.0/styles/default.min.css">
  <script src="https://cdn.jsdelivr.net/npm/highlight.js@11.9.0/lib/highlight.min.js"></script>
</head>
<body>
  <div id="app">
    <aside class="sidebar">
      <div class="brand">Learning Hub</div>
      <input id="search" type="search" placeholder="Search lessons...">
      <nav id="nav"></nav>
    </aside>
    <main class="content">
      <article id="content"></article>
    </main>
  </div>
  <script src="app.js"></script>
</body>
</html>


================================================================================
END: D:\QiEOS\apps\mini-apps\esl-lessons-app\public\index.html
================================================================================


================================================================================
FILE: D:\QiEOS\apps\mini-apps\esl-lessons-app\public\styles.css
================================================================================

*{box-sizing:border-box}html,body{height:100%}body{margin:0;font:16px/1.6 system-ui,-apple-system,Segoe UI,Roboto,Ubuntu,Cantarell,'Noto Sans',sans-serif;color:#0f172a;background:#0b1220}
#app{display:grid;grid-template-columns:300px 1fr;min-height:100vh}
.sidebar{background:#0f172a;border-right:1px solid #1f2937;padding:16px;display:flex;flex-direction:column;gap:12px;position:sticky;top:0;height:100vh}
.brand{font-weight:800;color:#e2e8f0;font-size:20px;letter-spacing:.5px}
#search{padding:10px 12px;border-radius:12px;border:1px solid #334155;background:#0b1220;color:#e2e8f0;outline:none}
#search:focus{border-color:#60a5fa}
#nav{overflow:auto;flex:1;scrollbar-gutter:stable}
.section{margin:12px 0}
.section h3{margin:8px 0;color:#cbd5e1;font-size:13px;text-transform:uppercase;letter-spacing:.08em}
ul.lessons{list-style:none;margin:0;padding:0;display:flex;flex-direction:column;gap:6px}
ul.lessons li a{display:block;padding:8px 10px;border-radius:10px;color:#cbd5e1;text-decoration:none;border:1px solid transparent}
ul.lessons li a:hover{background:#0b1220;border-color:#334155;color:#e2e8f0}
ul.lessons li a.active{background:#111827;border-color:#374151;color:#fff}
.content{padding:24px 24px 64px;max-width:900px}
.content article{background:#0b1220;border:1px solid #1f2937;border-radius:16px;padding:24px;color:#e5e7eb;box-shadow:0 10px 30px rgba(0,0,0,.2)}
.content h1,.content h2,.content h3{color:#fff}
.content pre{padding:12px;border-radius:12px;background:#0b0f1a;overflow:auto;border:1px solid #1f2937}
.content code{font-family:ui-monospace,SFMono-Regular,Menlo,Monaco,Consolas,'Liberation Mono','Courier New',monospace}
a{color:#93c5fd}
@media (max-width: 900px){#app{grid-template-columns:1fr}.sidebar{position:relative;height:auto}.content{padding:12px}}


================================================================================
END: D:\QiEOS\apps\mini-apps\esl-lessons-app\public\styles.css
================================================================================


================================================================================
FILE: D:\QiEOS\apps\mini-apps\esl-lessons-app\public\lessons\index.json
================================================================================

[
  {
    "title": "Communication: Quick ESL Lesson",
    "section": "Basics",
    "path": "lessons/Basics/communication.md"
  },
  {
    "title": "Sample Lesson",
    "section": "General",
    "path": "lessons/sample.md"
  }
]

================================================================================
END: D:\QiEOS\apps\mini-apps\esl-lessons-app\public\lessons\index.json
================================================================================


================================================================================
FILE: D:\QiEOS\apps\mini-apps\esl-lessons-app\public\lessons\sample.md
================================================================================

# Sample Lesson

Welcome to your learning hub. This is a **Markdown** lesson.

- Write in plain text
- Use `code` blocks
- Add headings with `#`

## Next steps
Create folders under `lessons/` to make sections in the sidebar.


================================================================================
END: D:\QiEOS\apps\mini-apps\esl-lessons-app\public\lessons\sample.md
================================================================================


================================================================================
FILE: D:\QiEOS\apps\mini-apps\esl-lessons-app\public\lessons\Basics\communication.md
================================================================================

# Communication: Quick ESL Lesson

**Communication** means sharing information, ideas, or feelings with other people.

## Why it matters
- Avoids confusion and mistakes
- Builds trust and teamwork
- Solves problems faster
- Opens doors to new opportunities

## Better habits
1. Be clear and simple (short sentences, common words).
2. Listen first. Confirm key points.
3. Organize your message. Put the most important detail first.
4. Follow up in writing for important tasks.
5. Ask questions to confirm understanding.
6. Be respectful in tone and timing.

*Practice:* Rewrite vague instructions into specific, time-bound requests.


================================================================================
END: D:\QiEOS\apps\mini-apps\esl-lessons-app\public\lessons\Basics\communication.md
================================================================================


================================================================================
FILE: D:\QiEOS\apps\mini-apps\notes\notes.json
================================================================================

[
  {
    "match": "Love thy neighbor as thyself",
    "source": "EmpowerQ Creed / Leviticus 19:18 / Matthew 22:39",
    "context": "La unidad: no hay 'otro'. Lo que sanas en ti, sana en el espejo de los demás.",
    "apply_now": "Envía un mensaje de aprecio honesto a alguien hoy. 1 frase. Directo al corazón."
  },
  {
    "match": "The present moment is the only moment",
    "source": "Thich Nhat Hanh — Mindfulness",
    "context": "El ahora es la puerta de acceso a todos los tiempos. Presencia = poder.",
    "apply_now": "Haz 3 respiraciones cuadradas (4s inhalar, 4s sostener, 4s exhalar, 4s sostener). Luego lee 3 líneas."
  },
  {
    "match": "You are the Key",
    "source": "EmpowerQNow713 — The Living Code",
    "context": "Autonomía espiritual: nadie viene a salvarte; tú eres la llave.",
    "apply_now": "Anota 1 decisión que puedes tomar hoy sin pedir permiso."
  }
]

================================================================================
END: D:\QiEOS\apps\mini-apps\notes\notes.json
================================================================================


================================================================================
FILE: D:\QiEOS\apps\mini-apps\QiMiniApp-QiTaskWorker\manifest.json
================================================================================

{
  "name": "QiTaskWorker",
  "version": "0.2.0",
  "type": "service",
  "entry": "app/scripts/run_worker.bat",
  "entry_unix": "app/scripts/run_worker.sh",
  "health_url": "http://localhost:7130/health",
  "port": 7130,
  "description": "Remote job worker for offloading tasks over LAN/Tailscale."
}

================================================================================
END: D:\QiEOS\apps\mini-apps\QiMiniApp-QiTaskWorker\manifest.json
================================================================================


================================================================================
FILE: D:\QiEOS\apps\mini-apps\QiMiniApp-QiTaskWorker\README.md
================================================================================

# QiMiniApp — QiTaskWorker

Offload heavy jobs from your main box to a worker machine over your LAN or Tailscale.
Zero brokers. Simple REST API. Logs and status included.

## Features
- FastAPI worker with in-memory queue
- Submit commands, optional file upload
- Live status polling with tail of logs
- Outputs and logs stored per-job in `jobs/<job_id>/`
- Cross-platform start scripts (Windows/Linux)
- Optional service install (systemd or NSSM)
- Tiny CLI (`qpush.py`) and PowerShell helper

## Quick Start

### On the worker machine
1. Install Python 3.10+
2. Open terminal in `app/` and run:
   - Windows:
     ```powershell
     .\scripts\run_worker.bat
     ```
   - Linux/macOS:
     ```bash
     ./scripts/run_worker.sh
     ```
3. Confirm health:
   - Visit `http://<worker-ip>:7130/health`

### On the main machine (client)
1. Ensure Python 3.10+
2. Open terminal in `client/` and run:
   - Windows:
     ```powershell
     .\scripts\qpush.bat -w http://<worker-ip>:7130 -c "ffmpeg -version"
     ```
   - Linux/macOS:
     ```bash
     ./scripts/qpush.sh -w http://<worker-ip>:7130 -c "ffmpeg -version"
     ```

## Examples
- Transcode using a shared path:
  ```powershell
  .\scripts\qpush.bat -w http://100.x.y.z:7130 -c "ffmpeg -i \\SERVER\media\in.mkv -c:v libx264 -preset veryfast \\SERVER\media\out.mp4"
  ```
- Run a Python script remotely:
  ```bash
  ./scripts/qpush.sh -w http://100.x.y.z:7130 -c "python process_dataset.py --in /mnt/share/set1 --out /mnt/share/out"
  ```

## Service install (optional)

### Linux (systemd)
```bash
sudo ./scripts/install_service_linux.sh
sudo systemctl enable qitaskworker
sudo systemctl start qitaskworker
```

### Windows (NSSM)
1. Download NSSM (https://nssm.cc/download) and put `nssm.exe` somewhere in PATH.
2. Run:
```powershell
powershell -ExecutionPolicy Bypass -File .\scripts\install_service_windows.ps1
```

## Cockpit integration
A `manifest.json` is included for detection by the QiLife Cockpit. Health endpoint: `/health`.


================================================================================
END: D:\QiEOS\apps\mini-apps\QiMiniApp-QiTaskWorker\README.md
================================================================================


================================================================================
FILE: D:\QiEOS\apps\mini-apps\QiMiniApp-QiTaskWorker\app\requirements.txt
================================================================================

fastapi
uvicorn[standard]
pydantic>=2
psutil
python-multipart


================================================================================
END: D:\QiEOS\apps\mini-apps\QiMiniApp-QiTaskWorker\app\requirements.txt
================================================================================


================================================================================
FILE: D:\QiEOS\apps\mini-apps\QiMiniApp-QiTaskWorker\app\worker.py
================================================================================

# filename: worker.py
import asyncio, subprocess, uuid, shlex, os, psutil, time, json, signal, pathlib
from fastapi import FastAPI, UploadFile, File, Form
from pydantic import BaseModel, Field
from typing import Optional, Dict, Any
from fastapi.middleware.cors import CORSMiddleware

# Config
PORT = int(os.getenv("QITASK_PORT", "7130"))
BIND = os.getenv("QITASK_BIND", "0.0.0.0")
WORK_DIR = os.getenv("QITASK_WORKDIR", os.path.join(os.getcwd(), "jobs"))
pathlib.Path(WORK_DIR).mkdir(parents=True, exist_ok=True)

app = FastAPI(title="QiTask Worker", version="0.2.0")

app.add_middleware(
    CORSMiddleware,
    allow_origins=["*"],
    allow_methods=["*"],
    allow_headers=["*"],
)

class JobSpec(BaseModel):
    cmd: str = Field(..., description='Command to execute, e.g. "ffmpeg -i in.mp4 out.mp4"')
    workdir: Optional[str] = Field(None, description="Working directory for the job")
    timeout: Optional[int] = Field(0, description="Seconds, 0 means no timeout")
    nice: Optional[int] = Field(5, description="CPU niceness, higher is lower priority")
    env: Optional[Dict[str, str]] = Field(default=None, description="Environment variables")

class Job(BaseModel):
    id: str
    status: str
    spec: JobSpec
    rc: Optional[int] = None
    started_at: Optional[float] = None
    finished_at: Optional[float] = None
    tail: Optional[str] = None
    error: Optional[str] = None
    log_path: Optional[str] = None
    out_dir: Optional[str] = None
    pid: Optional[int] = None

JOBS: Dict[str, Job] = {}
QUEUE: "asyncio.Queue[str]" = asyncio.Queue()

async def run_job(job_id: str):
    job = JOBS[job_id]
    spec = job.spec
    workdir = spec.workdir or WORK_DIR
    os.makedirs(workdir, exist_ok=True)

    # Per-job output dir
    out_dir = os.path.join(workdir, job_id)
    os.makedirs(out_dir, exist_ok=True)
    log_path = os.path.join(out_dir, "stdout.log")
    job.out_dir = out_dir
    job.log_path = log_path

    env = os.environ.copy()
    if spec.env:
        env.update({str(k): str(v) for k, v in spec.env.items()})

    start = time.time()
    job.status = "running"
    job.started_at = start

    # Windows uses shell=True for .bat/cmd
    args = spec.cmd if os.name == "nt" else shlex.split(spec.cmd)

    try:
        with open(log_path, "w", encoding="utf-8", errors="ignore") as logf:
            proc = subprocess.Popen(
                args,
                cwd=out_dir,
                env=env,
                stdout=logf,
                stderr=subprocess.STDOUT,
                text=True,
                shell=(os.name == "nt"),
            )
            job.pid = proc.pid

        # Adjust priority if possible
        try:
            p = psutil.Process(job.pid)
            if os.name == "nt":
                pri = psutil.BELOW_NORMAL_PRIORITY_CLASS if (spec.nice or 5) >= 5 else psutil.HIGH_PRIORITY_CLASS
                p.nice(pri)
            else:
                p.nice(spec.nice or 5)
        except Exception:
            pass

        deadline = start + spec.timeout if (spec.timeout or 0) > 0 else None

        # Poll loop
        while True:
            if deadline and time.time() > deadline:
                try:
                    psutil.Process(job.pid).kill()
                except Exception:
                    pass
                job.status = "timeout"
                break

            ret = psutil.Popen(job.pid).poll() if psutil.pid_exists(job.pid) else 0
            if ret is not None:
                job.rc = ret
                job.status = "done" if ret == 0 else "error"
                break
            await asyncio.sleep(0.7)

        job.finished_at = time.time()

        # Tail last 200 lines
        try:
            with open(log_path, "r", encoding="utf-8", errors="ignore") as logf:
                lines = logf.readlines()
                job.tail = "".join(lines[-200:])
        except Exception:
            job.tail = None

    except Exception as e:
        job.status = "crashed"
        job.error = str(e)
        job.finished_at = time.time()

async def worker_loop():
    while True:
        job_id = await QUEUE.get()
        try:
            await run_job(job_id)
        finally:
            QUEUE.task_done()

@app.on_event("startup")
async def startup_event():
    asyncio.create_task(worker_loop())

@app.get("/health")
async def health():
    return {"ok": True, "workdir": WORK_DIR, "jobs": len(JOBS)}

@app.post("/submit")
async def submit(spec: JobSpec):
    job_id = str(uuid.uuid4())
    job = Job(id=job_id, status="queued", spec=spec)
    JOBS[job_id] = job
    await QUEUE.put(job_id)
    return {"job_id": job_id, "status": "queued"}

@app.post("/submit-with-upload")
async def submit_with_upload(
    cmd: str = Form(...),
    filename: str = Form("upload.bin"),
    file: UploadFile = File(...),
    workdir: Optional[str] = Form(None),
    timeout: Optional[int] = Form(0),
    nice: Optional[int] = Form(5),
):
    # Store uploaded file inside a per-job dir after we allocate id
    job_id = str(uuid.uuid4())
    dest_dir = os.path.join(WORK_DIR, job_id)
    os.makedirs(dest_dir, exist_ok=True)
    dest_path = os.path.join(dest_dir, filename)
    with open(dest_path, "wb") as f:
        f.write(await file.read())
    spec = JobSpec(cmd=cmd, workdir=dest_dir, timeout=timeout, nice=nice)
    job = Job(id=job_id, status="queued", spec=spec)
    JOBS[job_id] = job
    await QUEUE.put(job_id)
    return {"job_id": job_id, "status": "queued", "stored": filename}

@app.get("/status/{job_id}")
async def status(job_id: str):
    j = JOBS.get(job_id)
    if not j:
        return {"error": "not found"}
    return json.loads(j.model_dump_json())

@app.post("/kill/{job_id}")
async def kill(job_id: str):
    j = JOBS.get(job_id)
    if not j or j.pid is None:
        return {"error": "not found or no pid"}
    try:
        psutil.Process(j.pid).kill()
        return {"killed": True}
    except Exception as e:
        return {"killed": False, "error": str(e)}


================================================================================
END: D:\QiEOS\apps\mini-apps\QiMiniApp-QiTaskWorker\app\worker.py
================================================================================


================================================================================
FILE: D:\QiEOS\apps\mini-apps\QiMiniApp-QiTaskWorker\app\config\config.yaml
================================================================================

# Optional configuration. Env vars override.
port: 7130
bind_host: 0.0.0.0
workdir: jobs
# Set QITASK_PORT, QITASK_BIND, QITASK_WORKDIR to override


================================================================================
END: D:\QiEOS\apps\mini-apps\QiMiniApp-QiTaskWorker\app\config\config.yaml
================================================================================


================================================================================
FILE: D:\QiEOS\apps\mini-apps\QiMiniApp-QiTaskWorker\app\scripts\install_service_linux.sh
================================================================================

#!/usr/bin/env bash
set -euo pipefail
APPDIR="$(cd "$(dirname "$0")/.."; pwd)"
SERVICE_FILE=/etc/systemd/system/qitaskworker.service

sudo bash -c "cat > $SERVICE_FILE" <<'UNIT'
[Unit]
Description=QiTask Worker
After=network-online.target

[Service]
WorkingDirectory=APPDIR_PLACEHOLDER
ExecStart=APPDIR_PLACEHOLDER/.venv/bin/uvicorn worker:app --host 0.0.0.0 --port 7130
Restart=always
Environment=QITASK_WORKDIR=APPDIR_PLACEHOLDER/jobs

[Install]
WantedBy=multi-user.target
UNIT

sudo sed -i "s#APPDIR_PLACEHOLDER#$APPDIR#g" "$SERVICE_FILE"
sudo systemctl daemon-reload
echo "Installed service to $SERVICE_FILE"


================================================================================
END: D:\QiEOS\apps\mini-apps\QiMiniApp-QiTaskWorker\app\scripts\install_service_linux.sh
================================================================================


================================================================================
FILE: D:\QiEOS\apps\mini-apps\QiMiniApp-QiTaskWorker\app\scripts\install_service_windows.ps1
================================================================================

param(
  [string]$ServiceName = "QiTaskWorker",
  [string]$NssmPath = "nssm.exe"
)
$scriptDir = Split-Path -Parent $MyInvocation.MyCommand.Path
$appDir = Join-Path $scriptDir ".."
$appDir = Resolve-Path $appDir
$exe = Join-Path $appDir ".venv\Scripts\python.exe"
$mod = "uvicorn"
$args = "worker:app --host 0.0.0.0 --port 7130"

# Ensure venv and deps exist
Push-Location $appDir
if (!(Test-Path ".venv")) { py -3 -m venv .venv }
. .\.venv\Scripts\activate
pip install -U pip
pip install -r requirements.txt
Pop-Location

# Install service
& $NssmPath install $ServiceName $exe "-m" $mod $args
& $NssmPath set $ServiceName AppDirectory $appDir
& $NssmPath set $ServiceName Start SERVICE_AUTO_START
& $NssmPath set $ServiceName AppEnvironmentExtra "QITASK_WORKDIR=$($appDir)\jobs"
Write-Host "Service $ServiceName installed. Start it from Services.msc or: nssm start $ServiceName"


================================================================================
END: D:\QiEOS\apps\mini-apps\QiMiniApp-QiTaskWorker\app\scripts\install_service_windows.ps1
================================================================================


================================================================================
FILE: D:\QiEOS\apps\mini-apps\QiMiniApp-QiTaskWorker\app\scripts\run_worker.bat
================================================================================

@echo off
setlocal
cd /d %~dp0\..
if not exist .venv (
  py -3 -m venv .venv || python -m venv .venv
)
call .venv\Scripts\activate
pip install -U pip
pip install -r requirements.txt
set QITASK_PORT=7130
set QITASK_BIND=0.0.0.0
if not exist jobs mkdir jobs
python -m uvicorn worker:app --host %QITASK_BIND% --port %QITASK_PORT%


================================================================================
END: D:\QiEOS\apps\mini-apps\QiMiniApp-QiTaskWorker\app\scripts\run_worker.bat
================================================================================


================================================================================
FILE: D:\QiEOS\apps\mini-apps\QiMiniApp-QiTaskWorker\app\scripts\run_worker.sh
================================================================================

#!/usr/bin/env bash
set -euo pipefail
cd "$(dirname "$0")/.."
python3 -m venv .venv || true
source .venv/bin/activate
pip install -U pip
pip install -r requirements.txt
export QITASK_PORT=${QITASK_PORT:-7130}
export QITASK_BIND=${QITASK_BIND:-0.0.0.0}
mkdir -p jobs
python -m uvicorn worker:app --host "$QITASK_BIND" --port "$QITASK_PORT"


================================================================================
END: D:\QiEOS\apps\mini-apps\QiMiniApp-QiTaskWorker\app\scripts\run_worker.sh
================================================================================


================================================================================
FILE: D:\QiEOS\apps\mini-apps\QiMiniApp-QiTaskWorker\client\client.html
================================================================================

<!doctype html>
<html>
<head>
  <meta charset="utf-8">
  <title>QiTaskWorker Client</title>
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <style>
    body { font-family: system-ui, sans-serif; max-width: 720px; margin: 2rem auto; padding: 0 1rem; }
    textarea { width: 100%; height: 120px; }
    pre { background: #111; color: #ddd; padding: 1rem; overflow: auto; }
    .row { display: flex; gap: 8px; }
    .row > * { flex: 1; }
    button { padding: .6rem 1rem; }
    label { display: block; margin-top: .5rem; font-weight: 600; }
  </style>
</head>
<body>
  <h1>QiTaskWorker — Client</h1>
  <p>Submit a command to a worker and watch the tail.</p>

  <label>Worker URL</label>
  <input id="worker" placeholder="http://100.x.y.z:7130" />

  <label>Command</label>
  <textarea id="cmd" placeholder='ffmpeg -i "\\SERVER\media\in.mkv" -c:v libx264 "\\SERVER\media\out.mp4"'></textarea>

  <div class="row">
    <div>
      <label>Workdir (optional)</label>
      <input id="workdir" placeholder="" />
    </div>
    <div>
      <label>Timeout (sec)</label>
      <input id="timeout" type="number" value="0" />
    </div>
    <div>
      <label>Nice</label>
      <input id="nice" type="number" value="5" />
    </div>
  </div>

  <p>
    <button onclick="submitJob()">Submit</button>
    <span id="status"></span>
  </p>

  <pre id="log"></pre>

<script>
let jobId = null;
let timer = null;

async function submitJob() {
  clearInterval(timer);
  jobId = null;
  document.getElementById('log').textContent = '';
  const worker = document.getElementById('worker').value.trim();
  const cmd = document.getElementById('cmd').value;
  const workdir = document.getElementById('workdir').value || null;
  const timeout = parseInt(document.getElementById('timeout').value || '0', 10);
  const nice = parseInt(document.getElementById('nice').value || '5', 10);

  const payload = { cmd, workdir, timeout, nice };
  const res = await fetch(worker + '/submit', { method: 'POST', headers: {'Content-Type':'application/json'}, body: JSON.stringify(payload) });
  const data = await res.json();
  jobId = data.job_id;
  document.getElementById('status').textContent = 'Job: ' + jobId;
  timer = setInterval(() => poll(worker, jobId), 1500);
}

async function poll(worker, job) {
  try {
    const res = await fetch(worker + '/status/' + job);
    const data = await res.json();
    const tail = data.tail || '';
    document.getElementById('log').textContent = '[' + new Date().toLocaleTimeString() + '] ' + data.status + '\n\n' + tail;
    if (!['queued','running'].includes(data.status)) {
      clearInterval(timer);
    }
  } catch (e) {
    document.getElementById('log').textContent += '\n[poll error] ' + e;
  }
}
</script>
</body>
</html>


================================================================================
END: D:\QiEOS\apps\mini-apps\QiMiniApp-QiTaskWorker\client\client.html
================================================================================


================================================================================
FILE: D:\QiEOS\apps\mini-apps\QiMiniApp-QiTaskWorker\client\qpush.py
================================================================================

# filename: qpush.py
import argparse, time, requests, sys, json

def main():
    ap = argparse.ArgumentParser(description="Push a job to QiTaskWorker and stream status.")
    ap.add_argument("-w","--worker", required=True, help="Worker base URL, e.g. http://100.x.y.z:7130")
    ap.add_argument("-c","--cmd", required=True, help="Command to run remotely")
    ap.add_argument("--workdir", default="", help="Remote workdir (optional)")
    ap.add_argument("--timeout", type=int, default=0, help="Timeout seconds (0=no limit)")
    ap.add_argument("--nice", type=int, default=5, help="CPU niceness (higher is lower priority)")
    args = ap.parse_args()

    payload = {
        "cmd": args.cmd,
        "workdir": args.workdir or None,
        "timeout": args.timeout,
        "nice": args.nice
    }

    try:
        r = requests.post(f"{args.worker}/submit", json=payload, timeout=20)
        r.raise_for_status()
    except Exception as e:
        print(f"Submit failed: {e}", file=sys.stderr)
        sys.exit(2)

    data = r.json()
    job = data.get("job_id")
    if not job:
        print("No job_id returned", file=sys.stderr)
        sys.exit(2)

    print(f"Job submitted: {job}")
    last_status = ""
    while True:
        time.sleep(1.8)
        try:
            s = requests.get(f"{args.worker}/status/{job}", timeout=10).json()
        except Exception as e:
            print(f"[poll error] {e}", file=sys.stderr)
            continue
        status = s.get("status", "unknown")
        if status != last_status:
            print(f"[{time.strftime('%H:%M:%S')}] {status}")
            last_status = status
        tail = s.get("tail")
        if tail:
            print("----- tail -----")
            print(tail.rstrip())
            print("----------------")
        if status not in ("queued","running"):
            rc = s.get("rc", -1)
            print(f"Finished: {status} rc={rc}")
            sys.exit(0 if rc == 0 else 1)

if __name__ == "__main__":
    main()


================================================================================
END: D:\QiEOS\apps\mini-apps\QiMiniApp-QiTaskWorker\client\qpush.py
================================================================================


================================================================================
FILE: D:\QiEOS\apps\mini-apps\QiMiniApp-QiTaskWorker\client\requirements.txt
================================================================================

requests


================================================================================
END: D:\QiEOS\apps\mini-apps\QiMiniApp-QiTaskWorker\client\requirements.txt
================================================================================


================================================================================
FILE: D:\QiEOS\apps\mini-apps\QiMiniApp-QiTaskWorker\client\scripts\qpush.bat
================================================================================

@echo off
setlocal
cd /d %~dp0\..
if not exist .venv (
  py -3 -m venv .venv || python -m venv .venv
)
call .venv\Scripts\activate
pip install -U pip
pip install -r requirements.txt
python qpush.py %*


================================================================================
END: D:\QiEOS\apps\mini-apps\QiMiniApp-QiTaskWorker\client\scripts\qpush.bat
================================================================================


================================================================================
FILE: D:\QiEOS\apps\mini-apps\QiMiniApp-QiTaskWorker\client\scripts\qpush.sh
================================================================================

#!/usr/bin/env bash
set -euo pipefail
cd "$(dirname "$0")/.."
python3 -m venv .venv || true
source .venv/bin/activate
pip install -U pip
pip install -r requirements.txt
python qpush.py "$@"


================================================================================
END: D:\QiEOS\apps\mini-apps\QiMiniApp-QiTaskWorker\client\scripts\qpush.sh
================================================================================


================================================================================
FILE: D:\QiEOS\apps\mini-apps\qipay\index.html
================================================================================

<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="utf-8">
  <title>QiPay — Payment Portal</title>
  <meta name="viewport" content="width=device-width,initial-scale=1">
  <meta name="description" content="Secure payment portal for QiPay services. Multiple payment options available.">
  <link rel="preconnect" href="https://fonts.googleapis.com">
  <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
  <link href="https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700&display=swap" rel="stylesheet">

  <style>
    /* CSS Variables matching QIPortal theme */
    :root {
      --bg: 15 23 42;
      --panel: 30 41 59;
      --text: 248 250 252;
      --subtext: 148 163 184;
      --ring: 51 65 85;
      --primary: 59 130 246;
      --accent: 147 51 234;
    }

    * { 
      box-sizing: border-box;
      margin: 0;
      padding: 0;
    }

    html, body { 
      height: 100%;
      font-family: 'Inter', ui-sans-serif, system-ui, sans-serif;
      background-color: rgb(var(--bg));
      color: rgb(var(--text));
      overflow-x: hidden;
    }

    /* Animated background with stars */
    body::before {
      content: '';
      position: fixed;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      background-image: 
        radial-gradient(2px 2px at 20px 30px, rgba(255,255,255,0.3), transparent),
        radial-gradient(2px 2px at 40px 70px, rgba(255,255,255,0.4), transparent),
        radial-gradient(1px 1px at 90px 40px, rgba(255,255,255,0.2), transparent),
        radial-gradient(1px 1px at 130px 80px, rgba(255,255,255,0.3), transparent),
        radial-gradient(2px 2px at 160px 30px, rgba(255,255,255,0.2), transparent),
        radial-gradient(1px 1px at 200px 120px, rgba(255,255,255,0.3), transparent),
        radial-gradient(2px 2px at 240px 60px, rgba(255,255,255,0.2), transparent),
        radial-gradient(1px 1px at 280px 100px, rgba(255,255,255,0.3), transparent);
      background-repeat: repeat;
      background-size: 300px 200px;
      animation: twinkle 4s ease-in-out infinite;
      z-index: -2;
    }

    /* Hero gradient overlay */
    body::after {
      content: '';
      position: fixed;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      background: linear-gradient(135deg, rgb(15 23 42) 0%, rgb(30 58 138) 50%, rgb(88 28 135) 100%);
      opacity: 0.8;
      z-index: -1;
    }

    /* Glow radial effect */
    .glow-radial {
      position: fixed;
      top: 0;
      left: 0;
      width: 100%;
      height: 50%;
      background: radial-gradient(circle at 50% 0%, rgba(59, 130, 246, 0.15) 0%, transparent 70%);
      pointer-events: none;
      z-index: -1;
    }

    /* Floating blobs */
    .blob {
      position: fixed;
      border-radius: 50%;
      filter: blur(40px);
      opacity: 0.3;
      z-index: -1;
    }

    .blob-1 {
      width: 300px;
      height: 300px;
      background: radial-gradient(circle, rgba(59, 130, 246, 0.4) 0%, transparent 70%);
      top: 20%;
      left: 10%;
      animation: blob 7s infinite;
    }

    .blob-2 {
      width: 250px;
      height: 250px;
      background: radial-gradient(circle, rgba(147, 51, 234, 0.3) 0%, transparent 70%);
      top: 60%;
      right: 15%;
      animation: blob 7s infinite 2s;
    }

    .blob-3 {
      width: 200px;
      height: 200px;
      background: radial-gradient(circle, rgba(34, 211, 238, 0.3) 0%, transparent 70%);
      bottom: 20%;
      left: 20%;
      animation: blob 7s infinite 4s;
    }

    /* Navigation */
    .nav {
      position: fixed;
      top: 0;
      left: 0;
      right: 0;
      z-index: 50;
      background: rgba(var(--panel), 0.8);
      backdrop-filter: blur(24px);
      border-bottom: 1px solid rgba(var(--ring), 0.5);
      padding: 1rem 2rem;
    }

    .nav-content {
      max-width: 1200px;
      margin: 0 auto;
      display: flex;
      align-items: center;
      justify-content: space-between;
    }

    .nav-brand {
      font-weight: 700;
      font-size: 1.25rem;
      color: rgb(var(--text));
      text-decoration: none;
    }

    .nav-links {
      display: flex;
      gap: 2rem;
      align-items: center;
    }

    .nav-link {
      color: rgb(var(--subtext));
      text-decoration: none;
      font-weight: 500;
      transition: color 0.2s ease;
    }

    .nav-link:hover {
      color: rgb(var(--text));
    }

    /* Main container */
    .container {
      min-height: 100vh;
      padding: 6rem 2rem 2rem;
      position: relative;
      z-index: 1;
    }

    /* Hero section */
    .hero {
      text-align: center;
      margin-bottom: 4rem;
    }

    .hero h1 {
      font-size: 3.5rem;
      font-weight: 800;
      margin-bottom: 1.5rem;
      background: linear-gradient(90deg, rgb(var(--text)), rgb(var(--subtext)));
      -webkit-background-clip: text;
      -webkit-text-fill-color: transparent;
      background-clip: text;
      animation: float 6s ease-in-out infinite;
    }

    .hero p {
      font-size: 1.25rem;
      color: rgb(var(--subtext));
      max-width: 600px;
      margin: 0 auto;
      line-height: 1.6;
    }

    /* Payment grid */
    .payment-grid {
      display: grid;
      grid-template-columns: repeat(auto-fit, minmax(320px, 1fr));
      gap: 2rem;
      max-width: 1200px;
      margin: 0 auto;
    }

    /* Payment card */
    .payment-card {
      background: rgba(var(--panel), 0.8);
      backdrop-filter: blur(24px);
      border: 1px solid rgba(var(--ring), 0.5);
      border-radius: 1rem;
      padding: 2rem;
      box-shadow: 
        0 10px 15px -3px rgba(0, 0, 0, 0.1),
        0 4px 6px -4px rgba(0, 0, 0, 0.1),
        0 1px 0 rgba(255, 255, 255, 0.06) inset;
      position: relative;
      overflow: hidden;
      transition: all 0.3s ease;
    }

    .payment-card::before {
      content: '';
      position: absolute;
      top: 0;
      left: 0;
      right: 0;
      height: 1px;
      background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.1), transparent);
    }

    .payment-card:hover {
      transform: translateY(-8px);
      box-shadow: 
        0 25px 50px -12px rgba(0, 0, 0, 0.25),
        0 1px 0 rgba(255, 255, 255, 0.06) inset;
      border-color: rgba(var(--ring), 0.8);
    }

    .payment-icon {
      width: 64px;
      height: 64px;
      border-radius: 1rem;
      display: grid;
      place-items: center;
      margin: 0 auto 1.5rem;
      font-size: 2rem;
      position: relative;
      overflow: hidden;
    }

    .payment-icon::before {
      content: '';
      position: absolute;
      top: 0;
      left: 0;
      right: 0;
      bottom: 0;
      background: linear-gradient(45deg, transparent 30%, rgba(255, 255, 255, 0.1) 50%, transparent 70%);
      animation: shimmer 3s infinite;
    }

    .payment-title {
      font-size: 1.5rem;
      font-weight: 600;
      margin-bottom: 0.75rem;
      color: rgb(var(--text));
      text-align: center;
    }

    .payment-description {
      color: rgb(var(--subtext));
      text-align: center;
      margin-bottom: 1.5rem;
      line-height: 1.5;
    }

    /* Payment button */
    .payment-btn {
      display: inline-flex;
      align-items: center;
      justify-content: center;
      width: 100%;
      padding: 0.875rem 1.5rem;
      border-radius: 0.75rem;
      font-weight: 600;
      font-size: 0.875rem;
      text-decoration: none;
      transition: all 0.2s ease;
      border: 1px solid transparent;
      cursor: pointer;
      position: relative;
      overflow: hidden;
      color: white;
    }

    .payment-btn::before {
      content: '';
      position: absolute;
      top: 0;
      left: -100%;
      width: 100%;
      height: 100%;
      background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.1), transparent);
      transition: left 0.5s ease;
    }

    .payment-btn:hover::before {
      left: 100%;
    }

         .payment-btn:hover {
       transform: translateY(-2px);
     }

     /* QR Container */
     .qr-container {
       margin-top: 1.5rem;
       text-align: center;
       padding-top: 1.5rem;
       border-top: 1px solid rgba(var(--ring), 0.3);
     }

     .qr-code {
       width: 120px;
       height: 120px;
       margin: 0 auto 0.75rem;
       background: white;
       border-radius: 0.75rem;
       padding: 0.5rem;
       box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
     }

     .qr-label {
       font-size: 0.875rem;
       color: rgb(var(--subtext));
       font-weight: 500;
     }

    /* QR section */
    .qr-section {
      margin-top: 4rem;
      text-align: center;
    }

    .qr-card {
      background: rgba(var(--panel), 0.8);
      backdrop-filter: blur(24px);
      border: 1px solid rgba(var(--ring), 0.5);
      border-radius: 1rem;
      padding: 2.5rem;
      box-shadow: 
        0 10px 15px -3px rgba(0, 0, 0, 0.1),
        0 4px 6px -4px rgba(0, 0, 0, 0.1),
        0 1px 0 rgba(255, 255, 255, 0.06) inset;
      max-width: 500px;
      margin: 0 auto;
      position: relative;
      overflow: hidden;
    }

    .qr-card::before {
      content: '';
      position: absolute;
      top: 0;
      left: 0;
      right: 0;
      height: 1px;
      background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.1), transparent);
    }

    .qr-title {
      font-size: 1.75rem;
      font-weight: 600;
      margin-bottom: 1rem;
      color: rgb(var(--text));
    }

    .qr-description {
      color: rgb(var(--subtext));
      margin-bottom: 2rem;
      line-height: 1.6;
    }

    .qr-btn {
      display: inline-flex;
      align-items: center;
      justify-content: center;
      padding: 0.875rem 2rem;
      border-radius: 0.75rem;
      font-weight: 600;
      font-size: 0.875rem;
      text-decoration: none;
      transition: all 0.2s ease;
      background: linear-gradient(135deg, rgb(var(--primary)), rgb(var(--accent)));
      color: white;
      box-shadow: 0 4px 12px rgba(59, 130, 246, 0.3);
    }

    .qr-btn:hover {
      transform: translateY(-2px);
      box-shadow: 0 8px 20px rgba(59, 130, 246, 0.4);
    }

    /* Footer */
    .footer {
      text-align: center;
      padding: 3rem 2rem 2rem;
      color: rgb(var(--subtext));
      opacity: 0.7;
    }

    .footer-links {
      display: flex;
      justify-content: center;
      gap: 2rem;
      margin-bottom: 1rem;
    }

    .footer-link {
      color: rgb(var(--subtext));
      text-decoration: none;
      font-weight: 500;
      transition: color 0.2s ease;
    }

    .footer-link:hover {
      color: rgb(var(--text));
    }

    /* Animations */
    @keyframes twinkle {
      0%, 100% { opacity: 0.3; }
      50% { opacity: 1; }
    }

    @keyframes blob {
      0% { transform: translate(0) scale(1); }
      33% { transform: translate(30px, -50px) scale(1.1); }
      66% { transform: translate(-20px, 20px) scale(0.9); }
      100% { transform: translate(0) scale(1); }
    }

    @keyframes shimmer {
      0% { transform: translateX(-100%); }
      100% { transform: translateX(100%); }
    }

    @keyframes float {
      0%, 100% { transform: translateY(0px); }
      50% { transform: translateY(-10px); }
    }

    @keyframes fadeIn {
      from {
        opacity: 0;
        transform: translateY(20px);
      }
      to {
        opacity: 1;
        transform: translateY(0);
      }
    }

    /* Responsive design */
    @media (max-width: 768px) {
      .nav-links {
        display: none;
      }
      
      .hero h1 {
        font-size: 2.5rem;
      }
      
      .hero p {
        font-size: 1.125rem;
      }
      
      .payment-grid {
        grid-template-columns: 1fr;
        gap: 1.5rem;
      }
      
      .container {
        padding: 5rem 1rem 1rem;
      }
      
      .footer-links {
        flex-direction: column;
        gap: 1rem;
      }
    }

    .fade-in {
      animation: fadeIn 0.8s ease-out;
    }
  </style>
</head>
<body>
  <!-- Background effects -->
  <div class="glow-radial"></div>
  <div class="blob blob-1"></div>
  <div class="blob blob-2"></div>
  <div class="blob blob-3"></div>

  <!-- Navigation -->
  <nav class="nav">
    <div class="nav-content">
      <a href="./" class="nav-brand">QiPay</a>
      <div class="nav-links">
        <a href="https://qially.com" class="nav-link">Client Portal</a>
        <a href="https://qially.me" class="nav-link">Qially.me</a>
        <a href="./qr-generator.html" class="nav-link">QR Generator</a>
      </div>
    </div>
  </nav>

  <!-- Main content -->
  <div class="container">
    <!-- Hero Section -->
    <div class="hero fade-in">
      <h1>Pay Securely</h1>
      <p>Choose your preferred payment method. All transactions are secure and encrypted with enterprise-grade security.</p>
    </div>

    <!-- Payment Methods Grid -->
    <div class="payment-grid fade-in">
      
      <!-- Cash App -->
             <div class="payment-card">
         <div class="payment-icon" style="background: linear-gradient(135deg, #00D632, #00B329);">
           💰
         </div>
         <h3 class="payment-title">Cash App</h3>
         <p class="payment-description">Send money instantly with Cash App</p>
         <a href="https://cash.app/$srv1ne" target="_blank" class="payment-btn" style="background: linear-gradient(135deg, #00D632, #00B329);">
           Pay with Cash App
         </a>
                   <div class="qr-container">
            <div class="qr-code">
              <img src="./images/qr-codes/cashapp-qr.png" alt="Cash App QR Code" style="width: 100%; height: 100%; object-fit: contain;">
            </div>
            <p class="qr-label">Scan to pay</p>
          </div>
       </div>

      <!-- Zelle -->
             <div class="payment-card">
         <div class="payment-icon" style="background: linear-gradient(135deg, #0066CC, #004499);">
           🏦
         </div>
         <h3 class="payment-title">Zelle</h3>
         <p class="payment-description">Bank-to-bank transfers</p>
         <a href="mailto:crice4485@gmail.com" class="payment-btn" style="background: linear-gradient(135deg, #0066CC, #004499);">
           Pay with Zelle
         </a>
                   <div class="qr-container">
            <div class="qr-code">
              <img src="./images/qr-codes/zelle-qr.png" alt="Zelle QR Code" style="width: 100%; height: 100%; object-fit: contain;">
            </div>
            <p class="qr-label">Scan to pay</p>
          </div>
       </div>

      

      <!-- Square -->
             <div class="payment-card">
         <div class="payment-icon" style="background: linear-gradient(135deg, #6B4CE3, #5A3FD1);">
           🏪
         </div>
         <h3 class="payment-title">Square</h3>
         <p class="payment-description">Professional payment processing</p>
         <a href="https://square.link/u/qTkK6YbH?src=embed" target="_blank" class="payment-btn" style="background: linear-gradient(135deg, #6B4CE3, #5A3FD1);">
           Pay with Square
         </a>
                   <div class="qr-container">
            <div class="qr-code">
              <img src="./images/qr-codes/square-qr.png" alt="Square QR Code" style="width: 100%; height: 100%; object-fit: contain;">
            </div>
            <p class="qr-label">Scan to pay</p>
          </div>
       </div>

      <!-- Stripe -->
             <div class="payment-card">
         <div class="payment-icon" style="background: linear-gradient(135deg, #6772E5, #5469D4);">
           💳
         </div>
         <h3 class="payment-title">Stripe</h3>
         <p class="payment-description">Enterprise payment solutions</p>
         <a href="#" onclick="alert('Stripe payment link coming soon!')" class="payment-btn" style="background: linear-gradient(135deg, #6772E5, #5469D4);">
           Pay with Stripe
         </a>
                   <div class="qr-container">
            <div class="qr-code">
              <div style="display: flex; align-items: center; justify-content: center; height: 100%; color: #999; font-size: 12px;">Coming Soon</div>
            </div>
            <p class="qr-label">Scan to pay</p>
          </div>
       </div>

      <!-- QuickBooks -->
             <div class="payment-card">
         <div class="payment-icon" style="background: linear-gradient(135deg, #2CA01C, #1F7A16);">
           📊
         </div>
         <h3 class="payment-title">QuickBooks</h3>
         <p class="payment-description">Business payment processing</p>
         <a href="#" onclick="alert('QuickBooks payment link coming soon!')" class="payment-btn" style="background: linear-gradient(135deg, #2CA01C, #1F7A16);">
           Pay with QuickBooks
         </a>
                   <div class="qr-container">
            <div class="qr-code">
              <div style="display: flex; align-items: center; justify-content: center; height: 100%; color: #999; font-size: 12px;">Coming Soon</div>
            </div>
            <p class="qr-label">Scan to pay</p>
          </div>
       </div>

      <!-- eBay -->
             <div class="payment-card">
         <div class="payment-icon" style="background: linear-gradient(135deg, #E53238, #C31F25);">
           🛒
         </div>
         <h3 class="payment-title">eBay</h3>
         <p class="payment-description">Shop our eBay store</p>
         <a href="https://www.ebay.com/usr/codyr.me" target="_blank" class="payment-btn" style="background: linear-gradient(135deg, #E53238, #C31F25);">
           Visit eBay Store
         </a>
                   <div class="qr-container">
            <div class="qr-code">
              <img src="./images/qr-codes/ebay-qr.png" alt="eBay QR Code" style="width: 100%; height: 100%; object-fit: contain;">
            </div>
            <p class="qr-label">Scan to visit</p>
          </div>
       </div>

      <!-- Zoho Billing -->
             <div class="payment-card">
         <div class="payment-icon" style="background: linear-gradient(135deg, #FF6B35, #E55A2B);">
           📋
         </div>
         <h3 class="payment-title">Zoho Billing</h3>
         <p class="payment-description">Complete billing solution</p>
         <a href="#" onclick="alert('Zoho Billing link coming soon!')" class="payment-btn" style="background: linear-gradient(135deg, #FF6B35, #E55A2B);">
           Zoho Billing
         </a>
                   <div class="qr-container">
            <div class="qr-code">
              <div style="display: flex; align-items: center; justify-content: center; height: 100%; color: #999; font-size: 12px;">Coming Soon</div>
            </div>
            <p class="qr-label">Scan to access</p>
          </div>
       </div>

      

    </div>

    <!-- QR Code Section -->
    <div class="qr-section fade-in">
      <div class="qr-card">
        <h2 class="qr-title">Quick QR Code Access</h2>
        <p class="qr-description">Generate QR codes for any payment method instantly. Perfect for sharing and mobile payments.</p>
        <a href="./qr-generator.html" class="qr-btn">
          Generate QR Codes
        </a>
      </div>
    </div>
  </div>

  <!-- Footer -->
  <footer class="footer">
    <div class="footer-links">
      <a href="https://qially.com" class="footer-link">Client Portal</a>
      <a href="https://qially.me" class="footer-link">Qially.me</a>
      <a href="./qr-generator.html" class="footer-link">QR Generator</a>
    </div>
    <p>&copy; <span id="year">2025</span> QiPay. All rights reserved.</p>
  </footer>

  <script>
    // Set current year
    document.getElementById('year').textContent = new Date().getFullYear();
    
         // Add some interactive effects
     document.addEventListener('DOMContentLoaded', function() {
       const cards = document.querySelectorAll('.payment-card');
       
       // Parallax effect on mouse move
       document.addEventListener('mousemove', function(e) {
         const x = e.clientX / window.innerWidth;
         const y = e.clientY / window.innerHeight;
         
         cards.forEach((card, index) => {
           const delay = index * 0.1;
           const rotateX = (y - 0.5) * 3;
           const rotateY = (x - 0.5) * 3;
           card.style.transform = `translateY(-8px) perspective(1000px) rotateX(${rotateX}deg) rotateY(${rotateY}deg)`;
         });
       });
       
       // Reset transform on mouse leave
       document.addEventListener('mouseleave', function() {
         cards.forEach(card => {
           card.style.transform = 'translateY(0px) perspective(1000px) rotateX(0deg) rotateY(0deg)';
         });
       });

       
     });
  </script>
</body>
</html>

================================================================================
END: D:\QiEOS\apps\mini-apps\qipay\index.html
================================================================================


================================================================================
FILE: D:\QiEOS\apps\mini-apps\qipay\qr-generator.html
================================================================================

<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1" />
  <title>QR Code Generator - QiPay</title>
  <meta name="description" content="Generate QR codes instantly for any link. Modern, clean interface for easy QR code creation." />
  <script src="https://cdn.tailwindcss.com"></script>
  <link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700;800&display=swap" rel="stylesheet">
  <script src="https://cdn.jsdelivr.net/npm/qrcode@1.5.3/build/qrcode.min.js"></script>
  <style>
    body { 
      font-family: 'Inter', sans-serif; 
      background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
    }
    .glass {
      background: rgba(255, 255, 255, 0.1);
      backdrop-filter: blur(20px);
      -webkit-backdrop-filter: blur(20px);
      border: 1px solid rgba(255, 255, 255, 0.2);
      box-shadow: 0 8px 32px 0 rgba(31, 38, 135, 0.37);
    }
    .card-hover {
      transition: all 0.3s ease;
    }
    .card-hover:hover {
      transform: translateY(-5px);
      box-shadow: 0 20px 40px rgba(0, 0, 0, 0.1);
    }
    .gradient-text {
      background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
      -webkit-background-clip: text;
      -webkit-text-fill-color: transparent;
      background-clip: text;
    }
  </style>
</head>
<body class="min-h-screen">
  <header class="sticky top-0 z-50 glass border-b border-white/20">
    <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
      <div class="flex items-center justify-between h-16">
        <a href="./" class="font-bold text-xl text-white">QiPay</a>
        <nav class="hidden md:flex space-x-8">
          <a href="./index.html" class="text-white/80 hover:text-white transition-colors">Home</a>
          <a href="./qr-generator.html" class="text-white font-medium">QR Generator</a>
        </nav>
      </div>
    </div>
  </header>

  <main class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-12">
    <!-- Hero Section -->
    <div class="text-center mb-16">
      <h1 class="text-4xl md:text-6xl font-bold text-white mb-6">
        QR Code Generator
      </h1>
      <p class="text-xl text-white/80 max-w-2xl mx-auto">
        Generate beautiful QR codes instantly for any link. Perfect for sharing, payments, and more.
      </p>
    </div>

    <!-- QR Generator Form -->
    <div class="max-w-4xl mx-auto">
      <div class="glass rounded-2xl p-8 mb-8">
        <div class="grid md:grid-cols-2 gap-8">
          <!-- Input Section -->
          <div>
            <h2 class="text-2xl font-bold text-white mb-6">Create QR Code</h2>
            
            <div class="space-y-6">
              <div>
                <label for="qr-url" class="block text-sm font-medium text-white/80 mb-2">
                  Enter URL or Text
                </label>
                <input 
                  type="url" 
                  id="qr-url" 
                  placeholder="https://example.com or any text"
                  class="w-full px-4 py-3 rounded-lg bg-white/10 border border-white/20 text-white placeholder-white/50 focus:outline-none focus:ring-2 focus:ring-white/50 focus:border-transparent"
                >
              </div>

              <div>
                <label for="qr-size" class="block text-sm font-medium text-white/80 mb-2">
                  QR Code Size
                </label>
                <select 
                  id="qr-size" 
                  class="w-full px-4 py-3 rounded-lg bg-white/10 border border-white/20 text-white focus:outline-none focus:ring-2 focus:ring-white/50 focus:border-transparent"
                >
                  <option value="200">Small (200px)</option>
                  <option value="300" selected>Medium (300px)</option>
                  <option value="400">Large (400px)</option>
                  <option value="500">Extra Large (500px)</option>
                </select>
              </div>

              <div>
                <label for="qr-color" class="block text-sm font-medium text-white/80 mb-2">
                  QR Code Color
                </label>
                <input 
                  type="color" 
                  id="qr-color" 
                  value="#000000"
                  class="w-full h-12 rounded-lg border border-white/20 focus:outline-none focus:ring-2 focus:ring-white/50"
                >
              </div>

              <button 
                id="generate-btn"
                class="w-full bg-gradient-to-r from-blue-600 to-purple-600 text-white font-semibold py-3 px-6 rounded-lg hover:from-blue-700 hover:to-purple-700 transition-all duration-200 transform hover:scale-105"
              >
                Generate QR Code
              </button>
            </div>
          </div>

          <!-- QR Code Display -->
          <div class="flex flex-col items-center justify-center">
            <div id="qr-output" class="text-center">
              <div class="w-64 h-64 bg-white/10 rounded-lg border-2 border-dashed border-white/30 flex items-center justify-center">
                <p class="text-white/60">QR Code will appear here</p>
              </div>
            </div>
            <button 
              id="download-btn" 
              class="mt-6 bg-white/20 text-white font-semibold py-2 px-6 rounded-lg hover:bg-white/30 transition-colors hidden"
            >
              Download QR Code
            </button>
          </div>
        </div>
      </div>

      <!-- Quick Links Section -->
      <div class="glass rounded-2xl p-8">
        <h2 class="text-2xl font-bold text-white mb-6">Quick QR Codes</h2>
        <div class="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-6">
          <div class="bg-white/5 rounded-lg p-4 card-hover">
            <h3 class="font-semibold text-white mb-2">Payment Links</h3>
            <div class="space-y-2">
              <button class="quick-link-btn w-full text-left px-3 py-2 rounded bg-white/10 text-white/80 hover:bg-white/20 transition-colors" data-url="https://cash.app/$srv1ne">
                💰 Cash App
              </button>
              <button class="quick-link-btn w-full text-left px-3 py-2 rounded bg-white/10 text-white/80 hover:bg-white/20 transition-colors" data-url="https://www.paypal.com/qrcodes/p2pqrc/EVS7WXML8S3ZL">
                💳 PayPal
              </button>
              <button class="quick-link-btn w-full text-left px-3 py-2 rounded bg-white/10 text-white/80 hover:bg-white/20 transition-colors" data-url="https://square.link/u/qTkK6YbH?src=embed">
                🏪 Square
              </button>
            </div>
          </div>

          <div class="bg-white/5 rounded-lg p-4 card-hover">
            <h3 class="font-semibold text-white mb-2">Social Media</h3>
            <div class="space-y-2">
              <button class="quick-link-btn w-full text-left px-3 py-2 rounded bg-white/10 text-white/80 hover:bg-white/20 transition-colors" data-url="https://github.com/qiallyme">
                📱 GitHub
              </button>
              <button class="quick-link-btn w-full text-left px-3 py-2 rounded bg-white/10 text-white/80 hover:bg-white/20 transition-colors" data-url="https://linkedin.com/in/yourprofile">
                💼 LinkedIn
              </button>
              <button class="quick-link-btn w-full text-left px-3 py-2 rounded bg-white/10 text-white/80 hover:bg-white/20 transition-colors" data-url="https://twitter.com/yourhandle">
                🐦 Twitter
              </button>
            </div>
          </div>

          <div class="bg-white/5 rounded-lg p-4 card-hover">
            <h3 class="font-semibold text-white mb-2">Custom Links</h3>
            <div class="space-y-2">
              <button class="quick-link-btn w-full text-left px-3 py-3 rounded bg-white/10 text-white/80 hover:bg-white/20 transition-colors" data-url="https://qially.com">
                🌐 Website
              </button>
              <button class="quick-link-btn w-full text-left px-3 py-2 rounded bg-white/10 text-white/80 hover:bg-white/20 transition-colors" data-url="mailto:your@email.com">
                📧 Email
              </button>
              <button class="quick-link-btn w-full text-left px-3 py-2 rounded bg-white/10 text-white/80 hover:bg-white/20 transition-colors" data-url="tel:+1234567890">
                📞 Phone
              </button>
            </div>
          </div>
        </div>
      </div>
    </div>
  </main>

  <footer class="glass text-center py-8 mt-16">
    <p class="text-white/60">&copy; <span id="year"></span> QiPay. All rights reserved.</p>
  </footer>

  <script>
    // Set current year
    document.getElementById('year').textContent = new Date().getFullYear();

    // QR Code generation
    const qrUrlInput = document.getElementById('qr-url');
    const qrSizeSelect = document.getElementById('qr-size');
    const qrColorInput = document.getElementById('qr-color');
    const generateBtn = document.getElementById('generate-btn');
    const qrOutput = document.getElementById('qr-output');
    const downloadBtn = document.getElementById('download-btn');

    function generateQRCode(url, size = 300, color = '#000000') {
      if (!url) {
        alert('Please enter a URL or text');
        return;
      }

      // Clear previous QR code
      qrOutput.innerHTML = '';

      // Generate QR code
      QRCode.toCanvas(qrOutput, url, {
        width: parseInt(size),
        color: {
          dark: color,
          light: '#FFFFFF'
        },
        margin: 2
      }, function (error) {
        if (error) {
          console.error(error);
          qrOutput.innerHTML = '<p class="text-red-400">Error generating QR code</p>';
        } else {
          downloadBtn.classList.remove('hidden');
        }
      });
    }

    // Generate button click
    generateBtn.addEventListener('click', () => {
      const url = qrUrlInput.value;
      const size = qrSizeSelect.value;
      const color = qrColorInput.value;
      generateQRCode(url, size, color);
    });

    // Enter key press
    qrUrlInput.addEventListener('keypress', (e) => {
      if (e.key === 'Enter') {
        generateBtn.click();
      }
    });

    // Download button
    downloadBtn.addEventListener('click', () => {
      const canvas = qrOutput.querySelector('canvas');
      if (canvas) {
        const link = document.createElement('a');
        link.download = 'qr-code.png';
        link.href = canvas.toDataURL();
        link.click();
      }
    });

    // Quick link buttons
    document.querySelectorAll('.quick-link-btn').forEach(btn => {
      btn.addEventListener('click', () => {
        const url = btn.dataset.url;
        qrUrlInput.value = url;
        generateQRCode(url, qrSizeSelect.value, qrColorInput.value);
      });
    });

    // Auto-generate on input change
    let debounceTimer;
    qrUrlInput.addEventListener('input', () => {
      clearTimeout(debounceTimer);
      debounceTimer = setTimeout(() => {
        if (qrUrlInput.value) {
          generateQRCode(qrUrlInput.value, qrSizeSelect.value, qrColorInput.value);
        }
      }, 500);
    });
  </script>
</body>
</html>


================================================================================
END: D:\QiEOS\apps\mini-apps\qipay\qr-generator.html
================================================================================


================================================================================
FILE: D:\QiEOS\apps\mini-apps\qipay\README.md
================================================================================

# qipay
Welcome to qipay a simple payment hub with all the quick details you need to pay on time.


================================================================================
END: D:\QiEOS\apps\mini-apps\qipay\README.md
================================================================================


================================================================================
FILE: D:\QiEOS\apps\mini-apps\qipay\images\qr-codes\README.md
================================================================================

# QR Code Images

This folder contains static QR code images for the payment portal.

## File Naming Convention

Use the following naming convention for QR code images:

- `cashapp-qr.png` - Cash App QR code
- `zelle-qr.png` - Zelle QR code  
- `square-qr.png` - Square QR code
- `ebay-qr.png` - eBay store QR code
- `stripe-qr.png` - Stripe QR code (when available)
- `quickbooks-qr.png` - QuickBooks QR code (when available)
- `zoho-qr.png` - Zoho Billing QR code (when available)

## Image Specifications

- **Format**: PNG
- **Size**: 120x120 pixels (recommended)
- **Background**: White
- **QR Code Color**: Black
- **Quality**: High resolution for crisp scanning

## URLs for QR Code Generation

Use these URLs when generating the QR codes:

- Cash App: `https://cash.app/$srv1ne`
- Zelle: `mailto:crice4485@gmail.com`
- Square: `https://square.link/u/qTkK6YbH?src=embed`
- eBay: `https://www.ebay.com/usr/codyr.me`

## Adding New QR Codes

1. Generate the QR code using any QR code generator
2. Save as PNG with the correct filename
3. Place in this folder
4. Update the HTML to reference the image instead of generating dynamically


================================================================================
END: D:\QiEOS\apps\mini-apps\qipay\images\qr-codes\README.md
================================================================================


================================================================================
FILE: D:\QiEOS\apps\mini-apps\QiVault-Intake-OCR-Local-MVP\intake_local.py
================================================================================

# intake_local.py
# Local-first Intake: PDF→JPG → Tesseract OCR → Obsidian .md + YAML → Ollama JSON pass
# See .env for paths and knobs.

import os, time, json, hashlib, re, shutil
from datetime import datetime
from pathlib import Path
from dataclasses import dataclass
import requests, pytesseract, yaml
from pdf2image import convert_from_path
from PIL import Image, ImageOps
from watchdog.observers import Observer
from watchdog.events import FileSystemEventHandler
from dotenv import load_dotenv

# ------------ config loader
load_dotenv()

CFG_PATH = Path(__file__).with_name("qivault-intake-ocr.config.yaml")
CFG = {}
if CFG_PATH.exists():
    CFG = yaml.safe_load(CFG_PATH.read_text(encoding="utf-8")) or {}

def cfg(path, default=None):
    # tiny helper: nested lookups like cfg(["ai","model"], "llama3.1:8b")
    if isinstance(path, (list, tuple)):
        cur = CFG
        for k in path:
            if not isinstance(cur, dict) or k not in cur: return default
            cur = cur[k]
        return cur
    return CFG.get(path, default)

# ------------ config
INBOX      = Path(cfg(["paths","inbox"], os.getenv("INBOX","./inbox")))
VAULT      = Path(cfg(["paths","vault"], os.getenv("VAULT","./vault")))
NOTES_DIR  = cfg(["paths","notes_dir"], os.getenv("NOTES_DIR","Notes"))
ASSETS_DIR = cfg(["paths","assets_dir"], os.getenv("ASSETS_DIR","Assets"))
LOGS_DIR   = cfg(["paths","logs_dir"],  os.getenv("LOGS_DIR",".logs"))

# OCR
OCR_LANGS = "+".join(cfg(["ocr","langs"], os.getenv("OCR_LANGS","eng").split("+")))
DPI       = cfg(["ocr","dpi"], 300)
JPG_QUAL  = cfg(["ocr","jpeg_quality"], 90)
CONFIDENCE_THRESHOLD = int(cfg(["ocr","confidence_threshold"], int(os.getenv("CONFIDENCE_THRESHOLD","55"))))

# AI
OLLAMA_URL   = cfg(["ai","url"], os.getenv("OLLAMA_URL","http://localhost:11434"))
OLLAMA_MODEL = cfg(["ai","model"], os.getenv("OLLAMA_MODEL","llama3.1:8b"))
FIRST_PASS_CHARS  = int(cfg(["ai","first_pass_chars"], int(os.getenv("FIRST_PASS_CHARS","12000"))))
SECOND_PASS_CHARS = int(cfg(["ai","second_pass_chars"], int(os.getenv("SECOND_PASS_CHARS","8000"))))
ENABLE_SECOND_PASS = bool(cfg(["ai","enable_second_pass"], True))
SUMMARY_MAX_WORDS  = int(cfg(["ai","summary_max_words"], 120))
TAGS_MIN = int(cfg(["ai","tags_min"], 3))
TAGS_MAX = int(cfg(["ai","tags_max"], 8))
DOC_TYPES = cfg(["ai","allowed_doc_types"], [
    "invoice","receipt","id","letter","form","court_order","email","siv","asylum","medical","finance","education","photo","unknown"
])

# Naming
PREFIX = cfg(["naming","prefix"], os.getenv("PREFIX","MAS"))

# Failover
ALLOW_WITHOUT_AI = bool(cfg(["failover","allow_without_ai"], True))

# ------------ helpers
def sha256_file(p: Path) -> str:
    h = hashlib.sha256()
    with open(p, "rb") as f:
        for chunk in iter(lambda: f.read(1<<20), b""):
            h.update(chunk)
    return h.hexdigest()

def safe_slug(s: str) -> str:
    s = re.sub(r"\s+", "-", s.strip())
    s = re.sub(r"[^A-Za-z0-9._-]+", "", s)
    return s[:140] if len(s)>140 else s

def now_datestr():
    return datetime.now().strftime("%Y%m%d")

def split_chars(txt: str, n: int):
    return txt[:n], txt[n:]

def ensure_dirs():
    (VAULT/ASSETS_DIR).mkdir(parents=True, exist_ok=True)
    (VAULT/NOTES_DIR).mkdir(parents=True, exist_ok=True)
    (VAULT/LOGS_DIR).mkdir(parents=True, exist_ok=True)
    INBOX.mkdir(parents=True, exist_ok=True)

# ------------ convert PDF -> JPG
def pdf_to_images(pdf_path: Path, dpi=DPI, quality=JPG_QUAL):
    images = convert_from_path(str(pdf_path), dpi=dpi)
    outdir = pdf_path.with_suffix("").parent / (pdf_path.stem + "_pages")
    outdir.mkdir(exist_ok=True)
    outpaths = []
    for i, im in enumerate(images, start=1):
        im = ImageOps.exif_transpose(im).convert("RGB")
        op = outdir / f"page-{i:03d}.jpg"
        im.save(op, "JPEG", quality=quality, optimize=True)
        outpaths.append(op)
    return outpaths

# ------------ OCR
@dataclass
class OCRPage:
    path: Path
    text: str
    conf: float

@dataclass
class OCRBundle:
    pages: list
    avg_conf: float

def ocr_images(img_paths, langs=OCR_LANGS) -> OCRBundle:
    pages, confs = [], []
    for p in img_paths:
        im = Image.open(p)
        txt = pytesseract.image_to_string(im, lang=langs, config="--psm 6 --oem 1 -c preserve_interword_spaces=1")
        try:
            df = pytesseract.image_to_data(im, lang=langs, config="--psm 6 --oem 1", output_type=pytesseract.Output.DATAFRAME)
            c = float(df.conf[df.conf >= 0].mean()) if hasattr(df, "conf") and len(df) else 0.0
        except Exception:
            c = 0.0
        pages.append(OCRPage(p, txt, c))
        confs.append(c)
    avg = round(sum(confs)/len(confs),2) if confs else 0.0
    return OCRBundle(pages, avg)

# ------------ front matter
def stub_frontmatter(src: Path, ocr: OCRBundle):
    return {
        "title": "",
        "date": datetime.now().strftime("%Y-%m-%d"),
        "source_file": src.name,
        "final_name": "",
        "doc_type": "",
        "summary": "",
        "entities": {"parties": [], "issuers": [], "jurisdictions": []},
        "dates": {"primary": None, "all": []},
        "tags": ["ocr","intake","needs_review"],
        "sha256": {"original": sha256_file(src), "pages": [sha256_file(p.path) for p in ocr.pages]},
        "pages": len(ocr.pages),
        "ocr": {"engine":"tesseract","langs": OCR_LANGS.split("+"), "avg_confidence": ocr.avg_conf},
        "ai": {"model": OLLAMA_MODEL, "first_pass_chars": FIRST_PASS_CHARS, "second_pass_chars": 0, "prompt_version":"v1"},
        "review_needed": True
    }

def propose_filename(meta: dict) -> str:
    ymd = re.sub(r"-","", meta.get("dates",{}).get("primary") or meta.get("date") or now_datestr())
    doc_type = meta.get("doc_type") or "unknown"
    topic = (meta.get("topic") or meta.get("summary","").split(".")[0][:20] if meta.get("summary") else "doc").lower()
    topic = safe_slug(topic)
    issuer = ""
    iss = (meta.get("entities",{}).get("issuers") or [])[:1]
    if iss: issuer = safe_slug(iss[0])[:20]
    name = f"{PREFIX}-{ymd}-{doc_type}-{topic}"
    if issuer: name += f"-{issuer}"
    return name

# ------------ LLM (Ollama)
SCHEMA = {
  "type":"object",
  "properties":{
    "proposed_name":{"type":"string"},
    "summary":{"type":"string"},
    "doc_type":{"type":"string"},
    "entities":{"type":"object","properties":{
      "parties":{"type":"array","items":{"type":"string"}},
      "issuers":{"type":"array","items":{"type":"string"}},
      "jurisdictions":{"type":"array","items":{"type":"string"}}
    }},
    "dates":{"type":"object","properties":{
      "primary":{"type":["string","null"]},
      "all":{"type":"array","items":{"type":"string"}}
    }},
    "tags":{"type":"array","items":{"type":"string"}},
    "needs_more_context":{"type":"boolean"},
    "review_needed":{"type":"boolean"},
    "confidence":{"type":"number"}
  },
  "required":["proposed_name","summary","doc_type","entities","dates","tags","needs_more_context","review_needed","confidence"]
}

SYSTEM = f"""You are a local file-intake assistant. RETURN ONLY JSON, no prose.
Schema: {{schema}}
Rules:
- summary ≤ {SUMMARY_MAX_WORDS} words; concise.
- doc_type must be one of: {", ".join(DOC_TYPES)}; else "unknown".
- dates.primary as YYYYMMDD if you can; else null. dates.all as YYYYMMDD list (unique).
- tags: {TAGS_MIN}–{TAGS_MAX} lowercase slugs.
- proposed_name: <PREFIX>-<YYYYMMDD>-<doc_type>-<topic>-<issuer?>
- Set needs_more_context=true only if you cannot confidently determine doc_type OR summary OR primary date.
- confidence 0..1.
"""

USER_TMPL = """PREFIX={prefix}
OCR_AVG_CONF={conf}  PAGES={pages}  LANGS={langs}
ALLOWED_DOC_TYPES={doc_types}

OCR_TEXT_BEGIN
{snippet}
OCR_TEXT_END

Return ONLY JSON matching the schema. No backticks, no commentary."""

def call_ollama(snippet: str, prefix: str, meta: dict) -> dict:
    sys = SYSTEM.format(schema=json.dumps(SCHEMA))
    user = USER_TMPL.format(
        prefix=prefix,
        conf=meta["ocr"]["avg_confidence"],
        pages=meta["pages"],
        langs="+".join(meta["ocr"]["langs"]),
        doc_types=", ".join(DOC_TYPES),
        snippet=snippet
    )
    r = requests.post(f"{OLLAMA_URL}/api/chat", json={
        "model": OLLAMA_MODEL,
        "messages":[{"role":"system","content":sys},{"role":"user","content":user}],
        "stream": False
    }, timeout=120)
    r.raise_for_status()
    content = r.json()["message"]["content"].strip()
    content = re.sub(r"^```json|```$", "", content.strip(), flags=re.IGNORECASE|re.MULTILINE).strip()
    return json.loads(content)

# ------------ finalize
def write_note_and_assets(src: Path, images, meta: dict, full_text: str, final_name: str):
    asset_dir = VAULT/ASSETS_DIR/final_name
    asset_dir.mkdir(parents=True, exist_ok=True)
    shutil.copy2(src, asset_dir/src.name)
    for p in images: shutil.copy2(p, asset_dir/p.name)
    note_path = VAULT/NOTES_DIR/f"{final_name}.md"
    fm = yaml.safe_dump(meta, sort_keys=False, allow_unicode=True)
    note_path.write_text(f"---\n{fm}---\n\n# {meta.get('title') or final_name}\n\n{full_text.strip()}\n", encoding="utf-8")
    (VAULT/LOGS_DIR/f"{final_name}.json").write_text(json.dumps(meta, indent=2, ensure_ascii=False), encoding="utf-8")
    return note_path

def fail_record(src: Path, err: Exception):
    faildir = INBOX/"failed"
    faildir.mkdir(exist_ok=True)
    try: shutil.move(str(src), faildir/src.name)
    except Exception: pass
    (faildir/f"{src.stem}.error.txt").write_text(str(err), encoding="utf-8")

# ------------ pipeline
def process_file(path: Path):
    ensure_dirs()
    if path.suffix.lower() == ".pdf":
        imgs = pdf_to_images(path)
    elif path.suffix.lower() in [".jpg",".jpeg",".png",".tif",".tiff"]:
        imgs = [path]
    else:
        return
    ocr = ocr_images(imgs)
    text = "\n\n".join([p.text for p in ocr.pages])
    meta = stub_frontmatter(path, ocr)
    chunk1, rest = split_chars(text, FIRST_PASS_CHARS)
    
    # Try to get AI analysis
    first = None
    try:
        first = call_ollama(chunk1, PREFIX, meta)
        if ENABLE_SECOND_PASS and first.get("needs_more_context") and rest:
            add, _ = split_chars(rest, SECOND_PASS_CHARS)
            merged = chunk1 + "\n\n" + add
            second = call_ollama(merged, PREFIX, meta)
            for k, v in second.items():
                if v not in [None, "", [], {}]:
                    first[k] = v
            meta["ai"]["second_pass_chars"] = len(add)
    except Exception as e:
        print(f"[WARN] Ollama failed: {e}")
        if not ALLOW_WITHOUT_AI:
            raise
        first = {
            "summary": "AI analysis failed - manual review required",
            "doc_type": "unknown",
            "entities": {"parties": [], "issuers": [], "jurisdictions": []},
            "dates": {"primary": None, "all": []},
            "tags": ["ocr", "intake", "ai_failed"],
            "review_needed": True,
            "confidence": 0.0
        }
    
    # Apply AI results or fallback
    meta["summary"] = first["summary"]
    meta["doc_type"] = first["doc_type"] if first["doc_type"] in DOC_TYPES else "unknown"
    meta["entities"] = first["entities"]
    meta["dates"] = first["dates"]
    tags = list(dict.fromkeys((first.get("tags") or []) + (meta.get("tags") or [])))
    if "ocr" not in tags: tags.insert(0,"ocr")
    meta["tags"] = tags
    meta["review_needed"] = bool(first.get("review_needed", True) or meta["ocr"]["avg_confidence"] < CONFIDENCE_THRESHOLD)
    meta["title"] = meta.get("title") or first.get("proposed_name","").replace("_"," ").title()
    proposed = safe_slug(first.get("proposed_name",""))[:140]
    final_name = proposed if proposed else safe_slug(propose_filename(meta))
    meta["final_name"] = final_name
    write_note_and_assets(path, imgs, meta, text, final_name)
    print(f"[OK] {path.name} → {final_name}.md")

# ------------ watcher
class Handler(FileSystemEventHandler):
    def on_created(self, event):
        if event.is_directory: return
        p = Path(event.src_path)
        time.sleep(0.7)  # let file finish writing
        try:
            process_file(p)
        except Exception as e:
            print(f"[ERR] {p.name}: {e}")
            fail_record(p, e)

def main():
    ensure_dirs()
    for p in sorted(INBOX.glob("*")):
        if p.is_file():
            try: process_file(p)
            except Exception as e: fail_record(p, e)
    obs = Observer()
    obs.schedule(Handler(), str(INBOX), recursive=False)
    obs.start()
    print(f"Watching: {INBOX.resolve()}")
    try:
        while True: time.sleep(1)
    except KeyboardInterrupt:
        obs.stop()
    obs.join()

if __name__ == "__main__":
    main()


================================================================================
END: D:\QiEOS\apps\mini-apps\QiVault-Intake-OCR-Local-MVP\intake_local.py
================================================================================


================================================================================
FILE: D:\QiEOS\apps\mini-apps\QiVault-Intake-OCR-Local-MVP\qivault-intake-ocr.config.yaml
================================================================================

# qivault-intake-ocr.config.yaml
paths:
  inbox: "K:/Qi-KB/InternalKB/_01_Inbox/A_ToProcess"
  vault: "K:/Qi-KB/InternalKB/_01_Inbox/B_QuickNotes"
  notes_dir: "Notes"
  assets_dir: "Assets"
  logs_dir: ".logs"

naming:
  prefix: "MAS"                           # binder/collection code
  # If primary date missing, use today's date
  fallback_date: "today"
  # If collision on filenames, suffix with -001, -002, etc.
  collision_strategy: "sequence"

ocr:
  langs: ["eng","pus","fas"]              # tesseract langs
  dpi: 300
  jpeg_quality: 90
  confidence_threshold: 55                # < threshold → review_needed = true

ai:
  provider: "ollama"                      # local only for MVP
  url: "http://localhost:11434"
  model: "llama3.1:8b"                    # or mistral:7b, qwen2.5:7b, etc.
  first_pass_chars: 12000                 # char caps to keep runs snappy
  second_pass_chars: 8000                 # read more only if needed
  enable_second_pass: true
  summary_max_words: 120
  tags_min: 3
  tags_max: 8
  # Allowed doc types—model must choose from this list
  allowed_doc_types:
    - invoice
    - receipt
    - id
    - letter
    - form
    - court_order
    - email
    - siv
    - asylum
    - medical
    - finance
    - education
    - photo
    - unknown

rules:
  # Regex you care about; model can lean on these hints in the prompt
  date_hint_regex: "\\b(\\d{4})[-/.](\\d{1,2})[-/.](\\d{1,2})\\b"
  issuer_whitelist: ["USCIS","IRS","SSA","USDOJ","Lyft","Zoho","QuickBooks"]
  topic_max_len: 20

failover:
  # If Ollama is down, still write the note with minimal YAML and set review_needed=true
  allow_without_ai: true


================================================================================
END: D:\QiEOS\apps\mini-apps\QiVault-Intake-OCR-Local-MVP\qivault-intake-ocr.config.yaml
================================================================================


================================================================================
FILE: D:\QiEOS\apps\mini-apps\QiVault-Intake-OCR-Local-MVP\README.md
================================================================================

# QiVault Intake OCR — Local MVP

## Quickstart (Windows)
1) Install Tesseract (add to PATH) and Poppler (bin -> PATH).
2) Install Ollama and pull a model:
   ollama pull llama3.1:8b
3) Create venv + deps:
   py -3 -m venv .venv
   .venv\Scripts\pip install -r requirements.txt
4) Copy .env.example to .env and adjust paths.
5) Run:
   .venv\Scripts\python.exe intake_local.py
6) Drop a PDF/JPG in INBOX. Outputs go to:
   VAULT/Notes/<FINAL>.md
   VAULT/Assets/<FINAL>/...
   VAULT/.logs/<FINAL>.json

================================================================================
END: D:\QiEOS\apps\mini-apps\QiVault-Intake-OCR-Local-MVP\README.md
================================================================================


================================================================================
FILE: D:\QiEOS\apps\mini-apps\QiVault-Intake-OCR-Local-MVP\requirements.txt
================================================================================

watchdog
pdf2image
pytesseract
Pillow
python-dotenv
requests
PyYAML


================================================================================
END: D:\QiEOS\apps\mini-apps\QiVault-Intake-OCR-Local-MVP\requirements.txt
================================================================================


================================================================================
FILE: D:\QiEOS\apps\mini-apps\QiVault-Intake-OCR-Local-MVP\fixtures\README.md
================================================================================

# Test Fixtures

This directory contains sample files for testing the OCR intake system.

## Expected Test Files

1. **clean_form.pdf** - A clean, well-scanned form document
   - Should result in high OCR confidence
   - Should be classified as "form" document type
   - Should extract dates and entities correctly

2. **skewed_scan.pdf** - A poorly scanned or skewed document
   - Should result in low OCR confidence (< 55%)
   - Should trigger `review_needed: true`
   - Tests error handling and confidence thresholds

3. **pashto_letter.pdf** - A document in Pashto language
   - Tests multi-language OCR with `eng+pus+fas`
   - Should extract dates and entities from non-English text
   - Tests language detection and processing

## Test Plan

1. Drop `clean_form.pdf` → expect `form` doc_type, summary, date parsed if present.
2. Drop `skewed_scan.pdf` → expect low confidence, `needs_review: true`.
3. Drop `pashto_letter.pdf` → set `OCR_LANGS=eng+pus+fas`; verify text is readable and dates picked.

## Adding Your Own Test Files

Place any PDF, JPG, PNG, or TIFF files here to test the OCR intake system. The system will process them when dropped into the configured inbox directory.


================================================================================
END: D:\QiEOS\apps\mini-apps\QiVault-Intake-OCR-Local-MVP\fixtures\README.md
================================================================================


================================================================================
FILE: D:\QiEOS\apps\mini-apps\qivect-dropbox\app.py
================================================================================

import json
import os
import socket
from pathlib import Path
from flask import Flask, jsonify

CFG = json.loads(Path("config.json").read_text())
app = Flask(__name__)

@app.get("/health")
def health():
    return jsonify({"status": "ok", "app": CFG["name"]})

@app.get("/")
def index():
    return jsonify({"hello": CFG["name"]})

def _pick_port():
    if CFG.get("port", 0):
        return CFG["port"]
    s = socket.socket()
    s.bind(("", 0))
    port = s.getsockname()[1]
    s.close()
    return port

if __name__ == "__main__":
    port = _pick_port()
    print(f"{CFG['name']} starting on http://{CFG['host']}:{port}")
    app.run(host=CFG["host"], port=port)


================================================================================
END: D:\QiEOS\apps\mini-apps\qivect-dropbox\app.py
================================================================================


================================================================================
FILE: D:\QiEOS\apps\mini-apps\qivect-dropbox\config.json
================================================================================

{
  "name": "qivect-dropbox",
  "description": "Vector sync with Dropbox (demo stub).",
  "host": "127.0.0.1",
  "port": 0
}

================================================================================
END: D:\QiEOS\apps\mini-apps\qivect-dropbox\config.json
================================================================================


================================================================================
FILE: D:\QiEOS\apps\mini-apps\qivect-dropbox\manifest.json
================================================================================

{
  "name": "qivect-dropbox",
  "version": "1.0.0",
  "description": "Vector sync with Dropbox integration for document management",
  "mode": "hybrid",
  "entry_point": "app.py",
  "dependencies": [
    "flask",
    "dropbox",
    "requests"
  ],
  "exposed_components": [
    "DropboxSync",
    "FileManager",
    "SyncStatus"
  ],
  "api_endpoints": [
    "/",
    "/health",
    "/sync",
    "/files"
  ],
  "config_schema": {
    "type": "object",
    "properties": {
      "dropbox_access_token": {
        "type": "string",
        "description": "Dropbox API access token"
      },
      "sync_interval": {
        "type": "integer",
        "default": 300,
        "description": "Sync interval in seconds"
      },
      "local_path": {
        "type": "string",
        "default": "./dropbox_sync",
        "description": "Local path for synced files"
      }
    },
    "required": ["dropbox_access_token"]
  },
  "permissions": [
    "read_files",
    "write_files",
    "sync_dropbox"
  ],
  "metadata": {
    "category": "storage",
    "tags": ["dropbox", "sync", "file-management"],
    "author": "QiLife-Eos Team",
    "license": "MIT",
    "repository": "https://github.com/qilife-eos/qivect-dropbox"
  }
}


================================================================================
END: D:\QiEOS\apps\mini-apps\qivect-dropbox\manifest.json
================================================================================


================================================================================
FILE: D:\QiEOS\apps\mini-apps\qivect-dropbox\README.md
================================================================================

# qivect-dropbox

Vector sync with Dropbox (demo stub).

## Run
```bash
# Unix
./run.sh
# Windows PowerShell
./run.ps1
```


================================================================================
END: D:\QiEOS\apps\mini-apps\qivect-dropbox\README.md
================================================================================


================================================================================
FILE: D:\QiEOS\apps\mini-apps\qivect-dropbox\requirements.txt
================================================================================

flask>=3.0.0


================================================================================
END: D:\QiEOS\apps\mini-apps\qivect-dropbox\requirements.txt
================================================================================


================================================================================
FILE: D:\QiEOS\apps\mini-apps\qivect-dropbox\run.ps1
================================================================================

#Requires -Version 5.0
if (Test-Path ".\.venv\Scripts\Activate.ps1") {
  . .\.venv\Scripts\Activate.ps1
}
python .\app.py


================================================================================
END: D:\QiEOS\apps\mini-apps\qivect-dropbox\run.ps1
================================================================================


================================================================================
FILE: D:\QiEOS\apps\mini-apps\qivect-dropbox\run.sh
================================================================================

#!/usr/bin/env bash
set -e
if [ -d ".venv" ]; then
  . .venv/bin/activate
fi
python app.py


================================================================================
END: D:\QiEOS\apps\mini-apps\qivect-dropbox\run.sh
================================================================================


================================================================================
FILE: D:\QiEOS\apps\mini-apps\qivect-dropbox\test_startup.py
================================================================================

#!/usr/bin/env python3
"""
Simple test script for the dropbox app.
This script tests if the app can start and respond to basic requests.
"""

import requests
import time
import subprocess
import sys
from pathlib import Path

def test_app():
    """Test the dropbox app startup and basic functionality."""
    print("Testing qivect-dropbox app...")
    
    # Start the app
    app_path = Path(__file__).parent / "app.py"
    try:
        process = subprocess.Popen([sys.executable, str(app_path)], 
                                 stdout=subprocess.PIPE, 
                                 stderr=subprocess.PIPE)
        
        # Wait a moment for the app to start
        time.sleep(2)
        
        # Test basic endpoints
        try:
            response = requests.get("http://127.0.0.1:5000/", timeout=5)
            if response.status_code == 200:
                print("✅ App started successfully")
                print(f"Response: {response.json()}")
            else:
                print(f"❌ Unexpected status code: {response.status_code}")
                
        except requests.exceptions.RequestException as e:
            print(f"❌ Failed to connect to app: {e}")
            
        # Test health endpoint
        try:
            response = requests.get("http://127.0.0.1:5000/health", timeout=5)
            if response.status_code == 200:
                print("✅ Health endpoint working")
                print(f"Health response: {response.json()}")
            else:
                print(f"❌ Health endpoint failed: {response.status_code}")
                
        except requests.exceptions.RequestException as e:
            print(f"❌ Health endpoint failed: {e}")
            
    except Exception as e:
        print(f"❌ Failed to start app: {e}")
    finally:
        # Clean up
        try:
            process.terminate()
            process.wait(timeout=5)
        except:
            process.kill()

if __name__ == "__main__":
    test_app()


================================================================================
END: D:\QiEOS\apps\mini-apps\qivect-dropbox\test_startup.py
================================================================================


================================================================================
FILE: D:\QiEOS\apps\mini-apps\qi_rag_private\app.py
================================================================================

import json, os, socket
from pathlib import Path
from flask import Flask, jsonify

CFG = json.loads(Path("config.json").read_text())
app = Flask(__name__)

@app.get("/health")
def health():
    return jsonify({"status": "ok", "app": CFG["name"]})

@app.get("/")
def index():
    return jsonify({"hello": CFG["name"]})

def _pick_port():
    if CFG.get("port", 0):
        return CFG["port"]
    s = socket.socket()
    s.bind(("", 0))
    port = s.getsockname()[1]
    s.close()
    return port

if __name__ == "__main__":
    port = _pick_port()
    print(f"{CFG['name']} starting on http://{CFG['host']}:{port}")
    app.run(host=CFG["host"], port=port)


================================================================================
END: D:\QiEOS\apps\mini-apps\qi_rag_private\app.py
================================================================================


================================================================================
FILE: D:\QiEOS\apps\mini-apps\qi_rag_private\config.json
================================================================================

{
  "name": "qi_rag_private",
  "description": "Private RAG stack (demo stub).",
  "host": "127.0.0.1",
  "port": 0
}

================================================================================
END: D:\QiEOS\apps\mini-apps\qi_rag_private\config.json
================================================================================


================================================================================
FILE: D:\QiEOS\apps\mini-apps\qi_rag_private\docker-compose.yml
================================================================================

version: '3.9'

services:
  qdrant:
    image: qdrant/qdrant:v1.7.3
    restart: unless-stopped
    environment:
      QDRANT__SERVICE__HOST: 0.0.0.0
    volumes:
      - qdrant_data:/qdrant/storage
    ports:
      - "6333:6333"

  api:
    build:
      context: .
      dockerfile: Dockerfile
    restart: unless-stopped
    depends_on:
      - qdrant
    environment:
      - DATA_ROOT=${DATA_ROOT:-/data}
      - QDRANT_HOST=qdrant
      - QDRANT_PORT=6333
      - EMBEDDING_MODEL=${EMBEDDING_MODEL:-bge-small-en-v1.5}
      - OLLAMA_MODEL=${OLLAMA_MODEL:-llama3.1:8b}
      - TIER_COLLECTIONS=${TIER_COLLECTIONS:-UNCLASS:q_unclass,CLASSIFIED:q_classified,ULTRA:q_ultra,MEO:q_meo}
      - FOLDER_TIERS=${FOLDER_TIERS:-unclass:UNCLASS,classified:CLASSIFIED,ultra:ULTRA,meo:MEO}
      - TIER_POLICIES=${TIER_POLICIES:-UNCLASS:true,CLASSIFIED:true,ULTRA:false,MEO:false}
      - CLOUD_ENDPOINT=${CLOUD_ENDPOINT:-}
      - CHUNK_SIZE=${CHUNK_SIZE:-800}
      - CHUNK_OVERLAP=${CHUNK_OVERLAP:-100}
      - TOP_K=${TOP_K:-5}
    ports:
      - "8000:8000"
    volumes:
      - .:/app
      - ${DATA_ROOT:-./data}:${DATA_ROOT:-/data}
    command: ["uvicorn", "app.main:app", "--host", "0.0.0.0", "--port", "8000"]

  # Optional: Ollama service for local LLM inference.  Remove if using a remote LLM provider.
  ollama:
    image: ollama/ollama:0.1.16
    restart: unless-stopped
    ports:
      - "11434:11434"
    volumes:
      - ollama_data:/root/.ollama

volumes:
  qdrant_data:
  ollama_data:

================================================================================
END: D:\QiEOS\apps\mini-apps\qi_rag_private\docker-compose.yml
================================================================================


================================================================================
FILE: D:\QiEOS\apps\mini-apps\qi_rag_private\Dockerfile
================================================================================

FROM python:3.11-slim

# Install system dependencies for pdfminer and watchdog
RUN apt-get update && apt-get install -y --no-install-recommends \
        build-essential \
        python3-dev \
        libxml2-dev libxslt1-dev \
        && rm -rf /var/lib/apt/lists/*

WORKDIR /app

# Copy only the relevant files from the current package
COPY app ./app
COPY scripts ./scripts
COPY requirements.txt ./requirements.txt

RUN pip install --no-cache-dir -r requirements.txt

EXPOSE 8000

CMD ["uvicorn", "app.main:app", "--host", "0.0.0.0", "--port", "8000"]

================================================================================
END: D:\QiEOS\apps\mini-apps\qi_rag_private\Dockerfile
================================================================================


================================================================================
FILE: D:\QiEOS\apps\mini-apps\qi_rag_private\manifest.json
================================================================================

{
  "name": "qi_rag_private",
  "version": "1.0.0",
  "description": "Private RAG (Retrieval-Augmented Generation) service with multimodal capabilities",
  "mode": "hybrid",
  "entry_point": "app.py",
  "dependencies": [
    "fastapi",
    "uvicorn",
    "langchain",
    "chromadb",
    "openai",
    "supabase"
  ],
  "exposed_components": [
    "ChatInterface",
    "DocumentUploader",
    "Visualization3D",
    "ARVisualization"
  ],
  "api_endpoints": [
    "/chat",
    "/ingest",
    "/documents",
    "/visualization",
    "/health"
  ],
  "config_schema": {
    "type": "object",
    "properties": {
      "openai_api_key": {
        "type": "string",
        "description": "OpenAI API key for embeddings and LLM"
      },
      "gemini_api_key": {
        "type": "string",
        "description": "Google Gemini API key for multimodal features"
      },
      "chroma_persist_directory": {
        "type": "string",
        "default": "./chroma_data",
        "description": "Directory for ChromaDB persistence"
      },
      "max_tokens": {
        "type": "integer",
        "default": 1000,
        "description": "Maximum tokens for LLM responses"
      },
      "chunk_size": {
        "type": "integer",
        "default": 1000,
        "description": "Document chunk size for processing"
      }
    },
    "required": ["openai_api_key"]
  },
  "permissions": [
    "read_documents",
    "write_documents",
    "delete_documents",
    "chat",
    "visualize"
  ],
  "metadata": {
    "category": "ai",
    "tags": ["rag", "llm", "multimodal", "visualization"],
    "author": "QiLife-Eos Team",
    "license": "MIT",
    "repository": "https://github.com/qilife-eos/qi_rag_private"
  }
}


================================================================================
END: D:\QiEOS\apps\mini-apps\qi_rag_private\manifest.json
================================================================================


================================================================================
FILE: D:\QiEOS\apps\mini-apps\qi_rag_private\README.md
================================================================================

# Q Tiered RAG Stack (MVP)

This repository provides a **minimal viable product (MVP)** for a Retrieval‑Augmented Generation (RAG) system with support for multiple classification tiers.  You can ingest your personal or business documents into a vector database and query them via a chatbot while respecting classification boundaries.  Each tier can choose whether to sync to a cloud fallback node or remain local only.

The MVP is opinionated but deliberately simple: it runs locally with Docker, uses [Qdrant](https://qdrant.tech/) for embeddings storage and [FastAPI](https://fastapi.tiangolo.com/) to expose HTTP endpoints.  A folder watcher automatically ingests changed files.  You can extend it later to support user authentication, fancy UIs, or additional back‑ends.

## Features

- **Classification tiers** – Four built‑in tiers (`UNCLASS`, `CLASSIFIED`, `ULTRA`, `MEO`).  Files are routed to the appropriate Qdrant collection based on their folder name or front‑matter metadata.
- **Per‑tier policies** – Each tier declares whether it can fall back to a cloud node if the local node is unavailable.  By default `UNCLASS` and `CLASSIFIED` allow cloud fallback, while `ULTRA` and `MEO` are local‑only.
- **Local‑first retrieval** – Queries are answered from the local vector database first.  If the local node is unreachable for a given tier and fallback is allowed, the server proxies the request to a remote API defined in your `.env`.
- **Folder watcher** – A simple watcher monitors your data directories and triggers ingestion whenever files are created or modified.  It supports markdown, text and PDF files out of the box.
- **Environment driven configuration** – Configure collections, folder mapping, model names and cloud endpoint in a `.env` file.  An example file is provided.

## Getting Started

### 1. Install dependencies

```bash
git clone https://example.com/q_tier_rag.git
cd q_tier_rag

# create a virtualenv (optional)
python -m venv .venv
source .venv/bin/activate

pip install -r requirements.txt
```

Alternatively you can use Docker; see the `docker-compose.yml` at the root of the project.

### 2. Configure your environment

Copy `.env.example` to `.env` and adjust the values.  Important keys:

- `DATA_ROOT` – path to the directory containing per‑tier subfolders (e.g. `V:/data` on Windows or `/data` on Linux).  The watcher looks here.
- `QDRANT_HOST` & `QDRANT_PORT` – connection parameters for your local Qdrant instance.
- `TIER_COLLECTIONS` – mapping from tier name to Qdrant collection name.  Comma separated `tier:collection` entries.
- `FOLDER_TIERS` – mapping from folder name to tier.  For example `unclass:UNCLASS,classified:CLASSIFIED`.
- `CLOUD_ENDPOINT` – URL of your cloud fallback API; omit or leave empty if you do not have one.
- `TIER_POLICIES` – per‑tier JSON describing whether each tier permits cloud fallback.

### 3. Start Qdrant and the API server

To launch everything via Docker run:

```bash
docker compose up -d

# pull a model for Ollama if using local LLM (optional)
docker compose exec ollama ollama pull llama3.1:8b
```

If you prefer to run locally without Docker you must start Qdrant and then run:

```bash
uvicorn app.main:app --reload
```

### 4. Ingest your documents

Place files into subfolders under `DATA_ROOT` matching your tiers (e.g. `data/unclass`, `data/ultra`).  You can override the tier for a particular file by adding a YAML front‑matter block to a markdown file:

```md
---
title: Project Plan
classification: CLASSIFIED
---
This note is classified.
```

Run the ingestion script to index existing files:

```bash
python scripts/ingest.py path/to/folder
```

Or start the watcher to automatically ingest new/updated files:

```bash
python scripts/watch_folder.py
```

### 5. Ask questions

Send a POST request to the `/chat` endpoint with a `question` parameter.  Optionally include a comma‑separated list of tiers to search:

```bash
curl -X POST http://localhost:8000/chat -d "question=What is the project plan?&tiers=UNCLASS,CLASSIFIED"
```

The API will respond with an answer generated by the LLM along with context documents and their tiers.  If the local node cannot answer for some tiers and fallback is allowed, the server will call the configured `CLOUD_ENDPOINT`.

## Folder Layout

```
q_tier_rag/
├── app/
│   ├── main.py          # FastAPI application exposing /ingest and /chat endpoints
│   ├── rag.py           # Helper functions for embedding and retrieving text
│   ├── llm.py           # Abstraction to call a local LLM via Ollama or remote API
│   └── utils.py         # Classification and parsing utilities
├── scripts/
│   ├── ingest.py        # CLI script to ingest an entire directory
│   └── watch_folder.py  # Folder watcher that triggers ingestion on file changes
├── .env.example         # Example environment configuration
├── docker-compose.yml   # Bring up Qdrant, Ollama and the API server
├── requirements.txt     # Python dependencies
└── README.md            # This file
```

## Extending

- **Cloud fallback** – The current implementation supports proxying to a single remote API.  Add authentication or load balancing as needed.
- **Authentication** – Protect your endpoints using API keys, OAuth, Supabase Auth or another identity provider.  Modify `app/main.py` to enforce authentication and issue per‑tier claims.
- **Additional tiers** – Add more tiers by updating `TIER_COLLECTIONS`, `FOLDER_TIERS` and `TIER_POLICIES` in your `.env`.
- **Embedding models** – Change the `EMBEDDING_MODEL` environment variable to point at a different SentenceTransformer (e.g. `all-MiniLM-L6-v2`).
- **Chunking** – Adjust `CHUNK_SIZE` and `CHUNK_OVERLAP` in `.env` to tune how text is split prior to embedding.

## License

This MVP is provided as-is under the MIT license.  Use at your own risk and feel free to adapt it for personal or commercial use.

================================================================================
END: D:\QiEOS\apps\mini-apps\qi_rag_private\README.md
================================================================================


================================================================================
FILE: D:\QiEOS\apps\mini-apps\qi_rag_private\requirements.txt
================================================================================

# Core framework
fastapi==0.110.0
uvicorn[standard]==0.27.1

# Vector storage
qdrant-client==1.9.1

# Embedding
sentence-transformers==2.2.2

# File watching
watchdog==4.0.0

# Utilities
python-dotenv==1.0.1
requests==2.31.0
PyYAML==6.0.1

# PDF support (optional)
pdfminer.six==20221105

# Optional: if using Ollama for local LLM
# pip install ollama

================================================================================
END: D:\QiEOS\apps\mini-apps\qi_rag_private\requirements.txt
================================================================================


================================================================================
FILE: D:\QiEOS\apps\mini-apps\qi_rag_private\run.ps1
================================================================================

#Requires -Version 5.0
if (Test-Path ".\.venv\Scripts\Activate.ps1") {
  . .\.venv\Scripts\Activate.ps1
}
python .\app.py


================================================================================
END: D:\QiEOS\apps\mini-apps\qi_rag_private\run.ps1
================================================================================


================================================================================
FILE: D:\QiEOS\apps\mini-apps\qi_rag_private\run.sh
================================================================================

#!/usr/bin/env bash
set -e
if [ -d ".venv" ]; then
  . .venv/bin/activate
fi
python app.py


================================================================================
END: D:\QiEOS\apps\mini-apps\qi_rag_private\run.sh
================================================================================


================================================================================
FILE: D:\QiEOS\apps\mini-apps\qi_rag_private\start_simple.py
================================================================================

#!/usr/bin/env python3
"""
Simple startup script for testing the RAG application locally.
This script sets up basic environment variables and starts the FastAPI server.
"""

import os
import sys
from pathlib import Path

# Add the app directory to the Python path
app_dir = Path(__file__).parent / "app"
sys.path.insert(0, str(app_dir))

# Set basic environment variables if not already set
os.environ.setdefault("DATA_ROOT", str(Path(__file__).parent / "data"))
os.environ.setdefault("QDRANT_HOST", "localhost")
os.environ.setdefault("QDRANT_PORT", "6333")
os.environ.setdefault("EMBEDDING_MODEL", "bge-small-en-v1.5")
os.environ.setdefault("OLLAMA_MODEL", "llama3.1:8b")
os.environ.setdefault("TIER_COLLECTIONS", "UNCLASS:q_unclass,CLASSIFIED:q_classified")
os.environ.setdefault("FOLDER_TIERS", "unclass:UNCLASS,classified:CLASSIFIED")
os.environ.setdefault("TIER_POLICIES", '{"UNCLASS": true, "CLASSIFIED": true}')
os.environ.setdefault("CHUNK_SIZE", "800")
os.environ.setdefault("CHUNK_OVERLAP", "100")
os.environ.setdefault("TOP_K", "5")
os.environ.setdefault("CLOUD_REQUEST_TIMEOUT", "30")

# Create data directory if it doesn't exist
data_dir = Path(os.environ["DATA_ROOT"])
data_dir.mkdir(exist_ok=True)

if __name__ == "__main__":
    print("Starting RAG application in simple mode...")
    print(f"Data directory: {data_dir}")
    print("Note: This requires Qdrant to be running on localhost:6333")
    print("You can start Qdrant with: docker run -p 6333:6333 qdrant/qdrant")
    print()
    
    try:
        import uvicorn
        from main import app
        
        uvicorn.run(app, host="127.0.0.1", port=8000, log_level="info")
    except ImportError as e:
        print(f"Missing dependency: {e}")
        print("Please install requirements: pip install -r requirements.txt")
    except Exception as e:
        print(f"Failed to start application: {e}")
        print("Make sure Qdrant is running and all dependencies are installed.")


================================================================================
END: D:\QiEOS\apps\mini-apps\qi_rag_private\start_simple.py
================================================================================


================================================================================
FILE: D:\QiEOS\apps\mini-apps\qi_rag_private\app\llm.py
================================================================================

"""LLM abstraction layer.

This module encapsulates calls to a local language model (via Ollama) or to a
remote provider.  It exposes a simple `generate_answer` function which
constructs a prompt from the user question and retrieved context.
"""

from __future__ import annotations

import os
import requests
from typing import List


def build_prompt(question: str, contexts: List[str]) -> str:
    """Compose a prompt for the language model.

    The prompt concatenates the retrieved contexts and asks the model to
    answer the question based solely on these documents.  If you change
    this function please update your retrieval logic accordingly.
    """
    context_str = "\n\n".join(contexts)
    prompt = (
        "You are an assistant with access to the following context documents:\n\n"
        f"{context_str}\n\n"
        "Answer the question using only the provided documents. "
        "Cite the document index when relevant (e.g. [1], [2]).\n\n"
        f"Question: {question}\nAnswer:"
    )
    return prompt


def call_ollama(prompt: str, model: str) -> str:
    """Send a prompt to a local Ollama server and return the generated text.

    Requires the `ollama/ollama` Docker container to be running with port
    11434 exposed.  See the project README for details.
    """
    url = "http://localhost:11434/api/generate"
    payload = {"model": model, "prompt": prompt, "stream": False}
    try:
        resp = requests.post(url, json=payload, timeout=60)
        resp.raise_for_status()
        data = resp.json()
        response = data.get("response", "").strip()
        if not response:
            raise RuntimeError("Empty response from Ollama")
        return response
    except requests.exceptions.Timeout:
        raise RuntimeError(f"Ollama request timed out after 60 seconds for model {model}")
    except requests.exceptions.ConnectionError:
        raise RuntimeError(f"Failed to connect to Ollama server at {url}. Is Ollama running?")
    except requests.exceptions.HTTPError as e:
        raise RuntimeError(f"Ollama HTTP error: {e.response.status_code} - {e.response.text}")
    except Exception as exc:
        raise RuntimeError(f"Failed to call Ollama with model {model}: {exc}")


def generate_answer(question: str, contexts: List[str]) -> str:
    """Generate an answer to a question given a list of context passages.

    Depending on your environment variables this function will either call a
    local Ollama server or another provider.  For the MVP we support only
    the local Ollama pathway.
    """
    prompt = build_prompt(question, contexts)
    model = os.getenv("OLLAMA_MODEL", "llama3.1:8b")
    # In a more complete implementation you could branch here based on
    # LLM_PROVIDER environment variables or similar.
    return call_ollama(prompt, model)

================================================================================
END: D:\QiEOS\apps\mini-apps\qi_rag_private\app\llm.py
================================================================================


================================================================================
FILE: D:\QiEOS\apps\mini-apps\qi_rag_private\app\main.py
================================================================================

"""FastAPI application for the tiered RAG backend."""

from __future__ import annotations

import json
import os
from pathlib import Path
from typing import List, Optional

import requests
from fastapi import FastAPI, HTTPException, Query
from pydantic import BaseModel

from .llm import generate_answer
from .rag import RagEngine
from .utils import load_tier_policies

# Instantiate the engine once at startup
engine = RagEngine()
app = FastAPI(title="Tiered RAG API", version="0.1.0")

# Load tier policies and cloud endpoint from environment
tier_policies = load_tier_policies()
cloud_endpoint = os.getenv("CLOUD_ENDPOINT", "").strip() or None


class IngestRequest(BaseModel):
    path: str


@app.post("/ingest")
def ingest(req: IngestRequest) -> dict:
    """Ingest a single file specified by its path relative to DATA_ROOT."""
    # Validate path to prevent path traversal attacks
    if ".." in req.path or req.path.startswith("/") or req.path.startswith("\\"):
        raise HTTPException(status_code=400, detail="Invalid path: path traversal not allowed")
    
    # Resolve path relative to data root
    full_path = Path(engine.data_root) / req.path
    try:
        # Ensure the resolved path is within the data root directory
        full_path = full_path.resolve()
        if not str(full_path).startswith(str(engine.data_root.resolve())):
            raise HTTPException(status_code=400, detail="Invalid path: outside data root")
    except (ValueError, RuntimeError):
        raise HTTPException(status_code=400, detail="Invalid path")
    
    if not full_path.exists() or not full_path.is_file():
        raise HTTPException(status_code=404, detail=f"File not found: {full_path}")
    try:
        engine.upsert_document(full_path)
    except Exception as exc:
        raise HTTPException(status_code=500, detail=str(exc))
    return {"status": "ok", "path": str(full_path)}


class ChatResponse(BaseModel):
    answer: str
    sources: List[dict]
    fallback_used: bool


@app.post("/chat", response_model=ChatResponse)
def chat(question: str = Query(...), tiers: Optional[str] = Query(None)) -> ChatResponse:
    """Answer a question using content from the specified classification tiers."""
    # Validate input
    if not question or not question.strip():
        raise HTTPException(status_code=400, detail="Question cannot be empty")
    
    if len(question) > 10000:  # Reasonable limit for question length
        raise HTTPException(status_code=400, detail="Question too long (max 10000 characters)")
    
    # Determine which tiers to search
    if tiers:
        requested_tiers = [t.strip().upper() for t in tiers.split(",") if t.strip()]
    else:
        # Default to UNCLASS and CLASSIFIED
        requested_tiers = ["UNCLASS", "CLASSIFIED"]

    # Query local collections
    results = engine.query(question, requested_tiers)
    # Determine which tiers returned nothing and allow fallback
    missing_tiers = set(requested_tiers) - {res[2].get("tier") for res in results}
    fallback_used = False
    remote_answer: Optional[str] = None

    if missing_tiers and cloud_endpoint:
        # Check policy: we only fall back for tiers whose policy is true
        allowed_tiers = [t for t in missing_tiers if tier_policies.get(t, False)]
        if allowed_tiers:
            # Proxy the query to the remote endpoint
            try:
                timeout = int(os.getenv("CLOUD_REQUEST_TIMEOUT", "30"))
                resp = requests.post(
                    cloud_endpoint.rstrip("/") + "/chat",
                    params={"question": question, "tiers": ",".join(allowed_tiers)},
                    timeout=timeout,
                )
                resp.raise_for_status()
                data = resp.json()
                remote_answer = data.get("answer") or None
                fallback_used = True
            except Exception:
                remote_answer = None

    # Compose context texts for the local answer
    contexts = [res[0] for res in results]
    if contexts:
        answer = generate_answer(question, contexts)
    elif remote_answer:
        answer = remote_answer
    else:
        answer = "No relevant information available."

    # Prepare sources list
    sources = [
        {
            "text": res[0],
            "score": res[1],
            "tier": res[2].get("tier"),
            "path": res[2].get("path"),
        }
        for res in results
    ]

    return ChatResponse(answer=answer, sources=sources, fallback_used=fallback_used)


@app.get("/")
def root() -> dict:
    return {"message": "Tiered RAG API is running."}

================================================================================
END: D:\QiEOS\apps\mini-apps\qi_rag_private\app\main.py
================================================================================


================================================================================
FILE: D:\QiEOS\apps\mini-apps\qi_rag_private\app\rag.py
================================================================================

"""Core retrieval and ingestion logic.

This module provides helper functions to create a Qdrant client, split
documents into chunks, generate embeddings and perform similarity search.
"""

from __future__ import annotations

import logging
import os
import uuid
from pathlib import Path
from typing import Dict, Iterable, List, Optional, Tuple

from qdrant_client import QdrantClient
from qdrant_client.http import models as qmodels
from sentence_transformers import SentenceTransformer

from .utils import (
    determine_tier_for_file,
    load_env_mapping,
    parse_front_matter,
    read_pdf,
    read_text_file,
)

logger = logging.getLogger(__name__)


class RagEngine:
    """Encapsulates embedding, storage and retrieval operations."""

    def __init__(self) -> None:
        # Load environment variables
        self.data_root = Path(os.getenv("DATA_ROOT", "."))
        self.qdrant_host = os.getenv("QDRANT_HOST", "localhost")
        self.qdrant_port = int(os.getenv("QDRANT_PORT", "6333"))
        self.embedding_model_name = os.getenv("EMBEDDING_MODEL", "bge-small-en-v1.5")
        self.chunk_size = int(os.getenv("CHUNK_SIZE", "800"))
        self.chunk_overlap = int(os.getenv("CHUNK_OVERLAP", "100"))
        self.top_k = int(os.getenv("TOP_K", "5"))

        # Load mapping from env
        self.tier_collections = load_env_mapping("TIER_COLLECTIONS")
        self.folder_tiers = load_env_mapping("FOLDER_TIERS")

        # Initialise components
        self._client = QdrantClient(host=self.qdrant_host, port=self.qdrant_port)
        self._embedder: Optional[SentenceTransformer] = None

    def embedder(self) -> SentenceTransformer:
        """Lazy load the embedding model."""
        if self._embedder is None:
            self._embedder = SentenceTransformer(self.embedding_model_name)
        return self._embedder

    # Document handling
    def load_document(self, path: Path) -> Tuple[str, Dict[str, str]]:
        """Load the contents of a document and return (text, metadata)."""
        if path.suffix.lower() == ".pdf":
            text = read_pdf(path)
        else:
            text = read_text_file(path)
        # Extract front‑matter if present
        meta, body = parse_front_matter(text) if path.suffix.lower() in {".md", ".markdown"} else ({}, text)
        return body, meta or {}

    def split_text(self, text: str) -> List[str]:
        """Split a document into overlapping chunks.

        We perform a naive word‑based segmentation using whitespace to approximate
        tokens.  Each chunk contains at most `chunk_size` words with
        `chunk_overlap` words overlap with the previous chunk.  You may
        substitute a more sophisticated tokeniser here.
        """
        words = text.split()
        if not words:
            return []
        chunks: List[str] = []
        step = self.chunk_size - self.chunk_overlap
        for i in range(0, len(words), step):
            chunk_words = words[i : i + self.chunk_size]
            chunk = " ".join(chunk_words)
            chunks.append(chunk)
            if i + self.chunk_size >= len(words):
                break
        return chunks

    def ensure_collection(self, collection_name: str, vector_size: int) -> None:
        """Create a collection if it does not already exist."""
        try:
            self._client.get_collection(collection_name)
        except Exception:
            # Use default configuration: HNSW + cosine distance
            self._client.create_collection(
                collection_name=collection_name,
                vectors_config=qmodels.VectorParams(size=vector_size, distance=qmodels.Distance.COSINE),
            )

    def upsert_document(self, path: Path) -> None:
        """Ingest a single file into the appropriate tier collection."""
        try:
            logger.info(f"Starting ingestion of document: {path}")
            body, meta = self.load_document(path)
            tier = determine_tier_for_file(path, self.folder_tiers)
            collection = self.tier_collections.get(tier, f"q_{tier.lower()}")

            # Split into chunks and embed
            chunks = self.split_text(body)
            if not chunks:
                logger.warning(f"No chunks generated for document: {path}")
                return
            
            logger.info(f"Generated {len(chunks)} chunks for document: {path}")
            embeddings = self.embedder().encode(chunks).tolist()
            
            # Ensure collection exists
            self.ensure_collection(collection, len(embeddings[0]))
            
            points: List[qmodels.PointStruct] = []
            for idx, vector in enumerate(embeddings):
                payload = {
                    "path": str(path),
                    "tier": tier,
                    "metadata": meta,
                    "chunk_index": idx,
                }
                points.append(
                    qmodels.PointStruct(
                        id=str(uuid.uuid4()),
                        vector=vector,
                        payload=payload,
                    )
                )
            
            # Upsert points
            self._client.upsert(collection_name=collection, points=points)
            logger.info(f"Successfully ingested document: {path} into collection: {collection}")
            
        except Exception as e:
            logger.error(f"Failed to ingest document {path}: {str(e)}")
            raise

    def query(self, question: str, tiers: List[str]) -> List[Tuple[str, float, Dict[str, str]]]:
        """Search for relevant chunks across multiple tiers.

        Returns a list of tuples `(text, score, payload)`.  The text is the chunk
        content, score is the similarity score (the higher the better), and
        payload contains metadata such as the original file path and tier.
        """
        # Embed the question
        q_emb = self.embedder().encode([question]).tolist()[0]
        results: List[Tuple[str, float, Dict[str, str]]] = []
        for tier in tiers:
            collection = self.tier_collections.get(tier, f"q_{tier.lower()}")
            try:
                search_res = self._client.search(collection, q_emb, limit=self.top_k)
            except Exception:
                continue
            for res in search_res:
                payload = res.payload or {}
                # We need to fetch the actual chunk text.  Qdrant stores only the
                # embedding and payload; to reconstruct the text we must read
                # the document and split again.  For MVP we include the chunk
                # index in the payload and re‑compute the split.
                path = Path(payload.get("path", ""))
                idx = payload.get("chunk_index", 0)
                try:
                    text, _ = self.load_document(path)
                    chunk = self.split_text(text)[idx]
                except Exception:
                    chunk = ""
                results.append((chunk, res.score, payload))
        # Sort results by descending score
        results.sort(key=lambda x: x[1], reverse=True)
        return results

================================================================================
END: D:\QiEOS\apps\mini-apps\qi_rag_private\app\rag.py
================================================================================


================================================================================
FILE: D:\QiEOS\apps\mini-apps\qi_rag_private\app\utils.py
================================================================================

"""Utility functions for file parsing and classification.

This module centralises small helpers used by the ingestion and retrieval pipeline.
"""

from __future__ import annotations

import json
import os
import re
from pathlib import Path
from typing import Dict, Optional, Tuple

import yaml


def parse_front_matter(text: str) -> Tuple[Dict[str, str], str]:
    """Extract YAML front‑matter from a markdown document.

    Returns a tuple of (metadata, remainder) where metadata is a dict parsed
    from the front‑matter and remainder is the document content without the
    front‑matter block.  If no front‑matter is found the metadata will be
    empty and the original text returned.
    """
    if text.startswith("---\n"):
        end = text.find("\n---", 4)
        if end != -1:
            fm = text[4:end]
            try:
                data = yaml.safe_load(fm) or {}
            except Exception:
                data = {}
            remainder = text[end + 4 :]
            return data, remainder
    return {}, text


def read_text_file(path: Path) -> str:
    """Read a text or markdown file and return its contents as a string."""
    return path.read_text(encoding="utf-8", errors="ignore")


def read_pdf(path: Path) -> str:
    """Extract text from a PDF file using pdfminer.six.

    If pdfminer is not installed this function will raise ImportError.
    """
    from pdfminer.high_level import extract_text  # type: ignore

    try:
        return extract_text(str(path))
    except Exception as e:
        raise RuntimeError(f"Failed to extract text from PDF {path}: {str(e)}")


def load_env_mapping(var: str) -> Dict[str, str]:
    """Parse a comma‑separated mapping from an environment variable.

    Example: "unclass:UNCLASS,classified:CLASSIFIED" -> {"unclass": "UNCLASS", ...}
    """
    mapping_str = os.getenv(var) or ""
    result: Dict[str, str] = {}
    for entry in mapping_str.split(","):
        if not entry:
            continue
        parts = entry.split(":", 1)
        if len(parts) == 2:
            key, value = parts[0].strip(), parts[1].strip()
            result[key] = value
    return result


def determine_tier_from_path(path: Path, folder_tiers: Dict[str, str]) -> Optional[str]:
    """Determine the classification tier for a file based on its parent folder.

    Looks at each part of the path relative to the data root.  Returns the tier
    name if found in the folder_tiers mapping, else None.
    """
    for part in path.parts:
        if part in folder_tiers:
            return folder_tiers[part]
    return None


def determine_tier_for_file(path: Path, folder_tiers: Dict[str, str]) -> str:
    """Determine the classification tier for a file.

    The tier is determined in the following order:
      1. YAML front‑matter field `classification` in a markdown file.
      2. Folder name mapping (e.g. `data/unclass`).
      3. Defaults to UNCLASS.
    """
    tier = None
    # Only attempt front‑matter parsing for markdown files
    if path.suffix.lower() in {".md", ".markdown"}:
        try:
            meta, _ = parse_front_matter(read_text_file(path))
            if isinstance(meta, dict) and meta.get("classification"):
                tier = str(meta["classification"]).strip().upper()
        except Exception:
            tier = None

    if not tier:
        tier = determine_tier_from_path(path, folder_tiers)

    return tier or "UNCLASS"


def load_tier_policies() -> Dict[str, bool]:
    """Load per‑tier fallback policy from the TIER_POLICIES environment variable."""
    raw = os.getenv("TIER_POLICIES", "{}")
    try:
        policies = json.loads(raw)
        return {str(k): bool(v) for k, v in policies.items()}
    except Exception:
        return {}

================================================================================
END: D:\QiEOS\apps\mini-apps\qi_rag_private\app\utils.py
================================================================================


================================================================================
FILE: D:\QiEOS\apps\mini-apps\qi_rag_private\scripts\ingest.py
================================================================================

#!/usr/bin/env python
"""CLI tool to ingest documents from a folder.

Usage:
    python scripts/ingest.py /path/to/file_or_folder

The script walks through the provided path.  If a file is given it is ingested
directly; if a directory is given all files within are ingested recursively.

The ingestion honours classification tiers defined in your environment.
"""

from __future__ import annotations

import argparse
from pathlib import Path

from app.rag import RagEngine


def ingest_path(engine: RagEngine, path: Path) -> None:
    if path.is_dir():
        for item in path.rglob("*"):
            if item.is_file():
                print(f"Ingesting {item}")
                engine.upsert_document(item)
    elif path.is_file():
        print(f"Ingesting {path}")
        engine.upsert_document(path)
    else:
        print(f"Skipping unknown path: {path}")


def main() -> None:
    parser = argparse.ArgumentParser(description="Ingest documents into Qdrant.")
    parser.add_argument("paths", nargs="+", type=Path, help="Files or directories to ingest")
    args = parser.parse_args()

    engine = RagEngine()
    for path in args.paths:
        ingest_path(engine, path)


if __name__ == "__main__":
    main()

================================================================================
END: D:\QiEOS\apps\mini-apps\qi_rag_private\scripts\ingest.py
================================================================================


================================================================================
FILE: D:\QiEOS\apps\mini-apps\qi_rag_private\scripts\rclone_template.sh
================================================================================

#!/usr/bin/env bash
# Example rclone sync script for the tiered RAG stack.
#
# This script demonstrates how you could synchronise UNCLASS and CLASSIFIED
# documents and snapshots to an encrypted remote (e.g. Google Drive).  It
# assumes you have configured encrypted remotes named `unclass_crypt` and
# `classified_crypt` via `rclone config`.  See the README for details.

set -euo pipefail

# Location of your data and snapshot folders.  Adjust to match your DATA_ROOT
DATA_ROOT="${DATA_ROOT:-./data}"
SNAPSHOT_ROOT="${SNAPSHOT_ROOT:-./snapshots}"

echo "Syncing UNCLASS documents…"
rclone sync "$DATA_ROOT/unclass" unclass_crypt:data
echo "Syncing UNCLASS snapshots…"
rclone sync "$SNAPSHOT_ROOT/q_unclass" unclass_crypt:snapshots

echo "Syncing CLASSIFIED documents…"
rclone sync "$DATA_ROOT/classified" classified_crypt:data
echo "Syncing CLASSIFIED snapshots…"
rclone sync "$SNAPSHOT_ROOT/q_classified" classified_crypt:snapshots

echo "Sync complete.  ULTRA and MEO tiers are intentionally excluded."

================================================================================
END: D:\QiEOS\apps\mini-apps\qi_rag_private\scripts\rclone_template.sh
================================================================================


================================================================================
FILE: D:\QiEOS\apps\mini-apps\qi_rag_private\scripts\watch_folder.py
================================================================================

#!/usr/bin/env python
"""Watch a directory tree and ingest documents on changes.

This script uses watchdog to monitor the directory specified by the `DATA_ROOT`
environment variable.  When a file is created or modified it will be
ingested into the appropriate Qdrant collection.

Run this script in a long‑running process alongside your API server.
"""

from __future__ import annotations

import os
import threading
import time
from pathlib import Path
from typing import Optional

from watchdog.events import FileSystemEventHandler
from watchdog.observers import Observer

from app.rag import RagEngine


class IngestionHandler(FileSystemEventHandler):
    def __init__(self, engine: RagEngine, data_root: Path) -> None:
        super().__init__()
        self.engine = engine
        self.data_root = data_root

    def on_created(self, event):
        if not event.is_directory:
            self.handle(Path(event.src_path))

    def on_modified(self, event):
        if not event.is_directory:
            self.handle(Path(event.src_path))

    def handle(self, path: Path) -> None:
        # Only process files under data_root
        try:
            path.relative_to(self.data_root)
        except ValueError:
            return
        try:
            print(f"[watcher] ingesting {path}")
            self.engine.upsert_document(path)
        except Exception as exc:
            print(f"[watcher] failed to ingest {path}: {exc}")


def main() -> None:
    data_root = Path(os.getenv("DATA_ROOT", ".")).resolve()
    print(f"Watching {data_root}")
    engine = RagEngine()
    event_handler = IngestionHandler(engine, data_root)
    observer = Observer()
    observer.schedule(event_handler, str(data_root), recursive=True)
    observer.start()
    try:
        while True:
            time.sleep(1)
    except KeyboardInterrupt:
        observer.stop()
    observer.join()


if __name__ == "__main__":
    main()

================================================================================
END: D:\QiEOS\apps\mini-apps\qi_rag_private\scripts\watch_folder.py
================================================================================


================================================================================
FILE: D:\QiEOS\apps\mini-apps\static\index.html
================================================================================

<!doctype html>
<html lang="en">
<head>
  <meta charset="utf-8"/>
  <meta name="viewport" content="width=device-width,initial-scale=1"/>
  <title>🔱 EmpowerQNow713 — Bilingual Reader</title>
  <style>
    :root{--bg:#0b0b10;--panel:#12121a;--ink:#e8e8f0;--muted:#a8a8bb;--accent:#7c5cff;--accent2:#b27cff}
    *{box-sizing:border-box} body{margin:0;background:linear-gradient(180deg,#0b0b10,#0f0f16);color:var(--ink);font:16px/1.6 system-ui,Segoe UI,Roboto,Arial}
    .app{display:grid;grid-template-columns:320px 1fr;min-height:100vh}
    aside{background:var(--panel);border-right:1px solid #202032;padding:16px;position:sticky;top:0;height:100vh;overflow:auto}
    header{display:flex;gap:10px;align-items:center;margin-bottom:12px}
    .logo{font-size:20px;font-weight:800}.tag{font-size:12px;color:var(--muted);background:#1a1a26;border:1px solid #26263a;padding:2px 8px;border-radius:999px}
    .search{width:100%;padding:10px 12px;border-radius:10px;border:1px solid #2a2a3f;background:#0f0f18;color:var(--ink);outline:none;margin:12px 0}
    .list{display:flex;flex-direction:column;gap:6px}.item{padding:10px 12px;border:1px solid #23233a;border-radius:10px;background:#11111a;cursor:pointer}
    .item.active{border-color:var(--accent);box-shadow:0 0 0 2px #7c5cff22}
    main{padding:24px 6vw}
    .topbar{display:flex;flex-wrap:wrap;gap:12px;align-items:center;margin-bottom:18px}
    .switch{display:inline-flex;gap:6px;align-items:center;background:#151522;border:1px solid #26263a;padding:6px 10px;border-radius:999px}
    .switch button{background:transparent;border:0;color:var(--muted);padding:6px 10px;border-radius:999px;cursor:pointer}
    .switch button.active{color:#111;background:linear-gradient(90deg,var(--accent),var(--accent2));font-weight:700}
    h1,h2,h3{line-height:1.25} h1{font-size:28px;margin:6px 0 4px} h2{font-size:20px;margin:18px 0 8px;color:#dcdcff} h3{font-size:18px;margin:14px 0 6px;color:#cfcfee}
    .meta{color:var(--muted);font-size:14px;margin-bottom:4px}
    .card{background:#0f0f18;border:1px solid #23233a;border-radius:14px;padding:18px;margin:14px 0}
    .col{display:grid;gap:12px}
    .both{grid-template-columns:1fr 1fr}
    .en{border-left:3px solid var(--accent);padding-left:12px}
    .es{border-left:3px solid var(--accent2);padding-left:12px}
    .footer{margin-top:32px;color:var(--muted);font-size:13px}
    .hidden{display:none}
    @media(max-width:900px){.app{grid-template-columns:1fr}aside{position:relative;height:auto}}
  
  .suggest{padding:8px 10px;border:1px solid #23233a;border-radius:10px;background:#11111a;margin:6px 0}
  .suggest em{opacity:.8}
  .hc body, body.hc{filter:contrast(1.2) saturate(1.1)}
  .light body, body.light{background:#fafafa;color:#111}
  .light aside{background:#fff;border-color:#eee}
  .light .item{background:#fff;border-color:#eee}
  .light .card{background:#fff;border-color:#eee}

  .bottombar{position:fixed;bottom:0;left:0;right:0;background:#12121a;border-top:1px solid #23233a;display:flex;gap:8px;justify-content:space-around;padding:10px}
  .bottombar button,.bottombar a{min-width:44px;min-height:44px;padding:10px 14px;border-radius:12px;border:1px solid #23233a;background:#0f0f18;color:#e8e8f0;text-decoration:none}
  @media(max-width:900px){main{padding-bottom:80px}}
</style>
  <script src="https://cdn.jsdelivr.net/npm/marked/marked.min.js">
document.addEventListener('keydown', (e)=>{
  if(e.target.matches('input,textarea')) return;
  if(e.key==='1') setMode('EN');
  if(e.key==='2') setMode('ES');
  if(e.key==='3') setMode('BOTH');
  if(e.key.toLowerCase()==='f'){ document.getElementById('q').focus(); e.preventDefault(); }
});
// Daily card = random non-empty line from merged EN
document.getElementById('daily').onclick = async ()=>{
  const en = await fetch('/static_build/merged_en.md').then(r=>r.text()).catch(()=>'');
  const lines = en.split('\n').map(x=>x.trim()).filter(x=>x && !x.startsWith('# Source:'));
  const pick = lines[Math.floor(Math.random()*lines.length)] || '(no content)';
  alert('Daily Card:\n\n' + pick);
};
// Copy snippet
document.getElementById('copy').onclick = ()=>{
  const sel = window.getSelection().toString().trim();
  if(!sel){ alert('Select some text first.'); return; }
  navigator.clipboard.writeText(sel).then(()=>alert('Copied!')).catch(()=>alert('Copy failed'));
};

/* Q-extended features */
const themeBtn = document.getElementById('themeToggle');
const shareBtn = document.getElementById('sharecard');
const suggestBox = document.getElementById('suggestions');

(function(){
  const saved = localStorage.getItem('theme') || 'dark';
  setTheme(saved);
})();
function setTheme(t){
  document.body.classList.remove('light','hc');
  if(t==='light') document.body.classList.add('light');
  if(t==='hc') document.body.classList.add('hc');
  localStorage.setItem('theme', t);
}
themeBtn?.addEventListener('click', ()=>{
  const cur = localStorage.getItem('theme') || 'dark';
  const nxt = cur==='dark' ? 'light' : (cur==='light' ? 'hc' : 'dark');
  setTheme(nxt);
});

let SEARCH = [];
fetch('/static_build/search_index.json').then(r=>r.json()).then(d=>SEARCH=d).catch(()=>{});
document.getElementById('q').addEventListener('input', e=>{
  const q = e.target.value.trim().toLowerCase();
  suggestBox.innerHTML='';
  if(!q){ return; }
  const hits = SEARCH.filter(x=> (x.text||'').toLowerCase().includes(q)).slice(0,8);
  suggestBox.innerHTML = hits.map(h=>`<li class="suggest" data-id="${h.id}"><strong>${h.title||'(untitled)'}</strong><br><em>${h.lang.toUpperCase()}</em> — ${h.snippet}</li>`).join('');
  suggestBox.querySelectorAll('.suggest').forEach(li=>li.onclick=()=>{
    const id = li.getAttribute('data-id');
    const m = id.match(/(en|es)-L(\d+)/);
    if(!m) return;
    const line = parseInt(m[2],10);
    window.open('/static_build/paired.html#L'+line, '_blank');
  });
});

(function(){
  const today = new Date().toISOString().slice(0,10);
  const data = JSON.parse(localStorage.getItem('streak')||'{"last":"","count":0,"streak":0}');
  function bump(){
    if(data.last !== today){
      data.last = today;
      data.streak = (data.count>0)? (data.streak+1) : data.streak;
      data.count = 0;
    }
    localStorage.setItem('streak', JSON.stringify(data));
  }
  bump();
  let seen = new Set();
  const obs = new IntersectionObserver((entries)=>{
    entries.forEach(e=>{
      if(e.isIntersecting){
        const id = e.target.id;
        if(id && !seen.has(id)){
          seen.add(id);
          data.count += 1;
          localStorage.setItem('streak', JSON.stringify(data));
        }
      }
    });
  }, {rootMargin:'0px 0px -60% 0px'});
  setInterval(()=>{
    document.querySelectorAll('[id^="L"]').forEach(el=>obs.observe(el));
  }, 1000);
})();

function attachLineTools(){
  document.querySelectorAll('[id^="L"]').forEach(row=>{
    if(row.querySelector('.deeplink')) return;
    const btn = document.createElement('button');
    btn.textContent='¶';
    btn.className='deeplink';
    btn.style.marginLeft='8px';
    btn.style.fontSize='12px';
    btn.onclick=()=>{
      const url = location.origin + '/static_build/paired.html#'+row.id;
      navigator.clipboard.writeText(url).then(()=>alert('Link copied')).catch(()=>{});
    };
    row.firstElementChild?.prepend(btn);
  });
}
setInterval(attachLineTools, 1200);

let NOTES=[];
fetch('/notes/notes.json').then(r=>r.json()).then(d=>NOTES=d).catch(()=>{});
document.addEventListener('mouseover', (e)=>{
  const t = e.target;
  if(!t) return;
  const text = (t.textContent||'').trim();
  if(!text) return;
  const note = NOTES.find(n=> text.includes(n.match));
  if(!note) return;
  let tip = document.getElementById('qtip');
  if(!tip){
    tip = document.createElement('div');
    tip.id='qtip';
    tip.style.position='fixed';
    tip.style.zIndex='9999';
    tip.style.maxWidth='360px';
    tip.style.background='#0f0f18';
    tip.style.border='1px solid #23233a';
    tip.style.borderRadius='10px';
    tip.style.padding='10px 12px';
    tip.style.boxShadow='0 6px 20px rgba(0,0,0,.3)';
    document.body.appendChild(tip);
  }
  tip.innerHTML = `<strong>${note.source}</strong><br>${note.context}<hr style="border:0;border-top:1px solid #23233a;margin:8px 0"><em>Apply now:</em> ${note.apply_now}`;
  const r = t.getBoundingClientRect();
  tip.style.top = (r.bottom + 8) + 'px';
  tip.style.left = (Math.min(r.left, window.innerWidth-380)) + 'px';
  tip.style.display='block';
});
document.addEventListener('mouseout', (e)=>{
  const tip = document.getElementById('qtip');
  if(tip) tip.style.display='none';
});

shareBtn?.addEventListener('click', ()=>{
  const sel = window.getSelection().toString().trim();
  if(!sel){ alert('Select some text first.'); return; }
  const W=1200, H=630;
  const cnv = document.createElement('canvas');
  cnv.width=W; cnv.height=H;
  const ctx = cnv.getContext('2d');
  const g = ctx.createLinearGradient(0,0,W,H);
  g.addColorStop(0,'#0b0b10'); g.addColorStop(1,'#7c5cff');
  ctx.fillStyle = g; ctx.fillRect(0,0,W,H);
  ctx.fillStyle='#ffffff';
  ctx.font='bold 42px system-ui, Segoe UI, Roboto';
  const words = sel.split(/\s+/);
  let line='', y=160, lh=52, lines=[];
  for(const w of words){
    const test = line? line+' '+w : w;
    if(ctx.measureText(test).width > W-160){
      lines.push(line); line=w;
    } else line=test;
  }
  if(line) lines.push(line);
  lines.slice(0,7).forEach((ln,i)=>{
    ctx.fillText(ln, 80, y + i*lh);
  });
  ctx.font='20px system-ui'; ctx.globalAlpha=0.9;
  ctx.fillText('EmpowerQNow713 — The Living QiDex™', 80, H-80);
  ctx.globalAlpha=1;
  const url = cnv.toDataURL('image/png');
  const a = document.createElement('a');
  a.href=url; a.download='empowerqnow-quote.png';
  a.click();
});

/* mobile + tts hooks */
document.getElementById('bb_en')?.addEventListener('click', ()=>setMode('EN'));
document.getElementById('bb_es')?.addEventListener('click', ()=>setMode('ES'));
document.getElementById('bb_both')?.addEventListener('click', ()=>setMode('BOTH'));
document.getElementById('bb_daily')?.addEventListener('click', ()=>document.getElementById('daily')?.click());
document.getElementById('bb_print')?.addEventListener('click', ()=>{});

// TTS (via Cloudflare Worker proxy). Select text → Play
document.getElementById('speak')?.addEventListener('click', async ()=>{
  if(!TTS_ENDPOINT){ alert('TTS not configured yet. Deploy the Worker and set TTS_ENDPOINT.'); return; }
  const sel = window.getSelection().toString().trim();
  const text = sel || (document.getElementById('content')?.innerText.slice(0, 800) || '');
  if(!text){ alert('No text to read.'); return; }
  const lang = (mode==='ES') ? 'es' : 'en';
  try{
    const res = await fetch(TTS_ENDPOINT, { method:'POST', headers:{'Content-Type':'application/json'}, body: JSON.stringify({text, lang}) });
    if(!res.ok) throw new Error('TTS failed');
    const blob = await res.blob();
    const url = URL.createObjectURL(blob);
    const audio = new Audio(url);
    audio.play();
  }catch(e){
    alert('Could not play audio.');
  }
});
</script>
  <link rel="manifest" href="/static/manifest.webmanifest">
  <meta name="theme-color" content="#7c5cff">
  <script>
  // Set this to your Cloudflare Worker URL when ready, e.g. https://tts.empowerqnow.com/speak
  const TTS_ENDPOINT = ""; // leave blank to disable
  
/* mobile + tts hooks */
document.getElementById('bb_en')?.addEventListener('click', ()=>setMode('EN'));
document.getElementById('bb_es')?.addEventListener('click', ()=>setMode('ES'));
document.getElementById('bb_both')?.addEventListener('click', ()=>setMode('BOTH'));
document.getElementById('bb_daily')?.addEventListener('click', ()=>document.getElementById('daily')?.click());
document.getElementById('bb_print')?.addEventListener('click', ()=>{});

// TTS (via Cloudflare Worker proxy). Select text → Play
document.getElementById('speak')?.addEventListener('click', async ()=>{
  if(!TTS_ENDPOINT){ alert('TTS not configured yet. Deploy the Worker and set TTS_ENDPOINT.'); return; }
  const sel = window.getSelection().toString().trim();
  const text = sel || (document.getElementById('content')?.innerText.slice(0, 800) || '');
  if(!text){ alert('No text to read.'); return; }
  const lang = (mode==='ES') ? 'es' : 'en';
  try{
    const res = await fetch(TTS_ENDPOINT, { method:'POST', headers:{'Content-Type':'application/json'}, body: JSON.stringify({text, lang}) });
    if(!res.ok) throw new Error('TTS failed');
    const blob = await res.blob();
    const url = URL.createObjectURL(blob);
    const audio = new Audio(url);
    audio.play();
  }catch(e){
    alert('Could not play audio.');
  }
});
</script>
</head>
<body>
  <div class="app">
    <aside>
      <header>
        <div class="logo">🔱 EmpowerQNow713</div>
        <div class="tag">Bilingual</div>
      </header>
      <input id="q" class="search" placeholder="Search (EN/ES)…" />
<ul id="suggestions" class="list"></ul>
      <div class="list">
        <div class="item active" data-section="merged">Merged (auto)</div>
        <div class="item" data-section="files">Browse Files</div>
      </div>
      <div id="files" class="list hidden"></div>
    </aside>
    <main>
      <div class="topbar">
<button id="speak" class="tag" title="Read selected text aloud">Play</button>
<button id="themeToggle" class="tag">Theme</button>
<button id="daily" class="tag" title="Pick a random line">Daily Card</button>
<button id="copy" class="tag" title="Copy selected snippet">Copy Snippet</button>
<a class="tag" href="/static_build/paired.html" target="_blank">Print/PDF</a>
        <div class="switch" role="tablist" aria-label="Language">
          <button id="showEN" class="active" aria-selected="true">EN</button>
          <button id="showES" aria-selected="false">ES</button>
          <button id="showBoth" aria-selected="false">EN + ES</button>
        </div>
        <div class="tag">Auto-refresh (F5)</div>
      </div>
      <article id="content"></article>
      <div class="footer">© EmpowerQNow713™ — The Living QiDex™ • Drop new .md files into <code>content/en</code> and <code>content/es</code></div>
    
    <nav class="bottombar" aria-label="Quick actions">
      <button id="bb_en">EN</button>
      <button id="bb_es">ES</button>
      <button id="bb_both">EN+ES</button>
      <button id="bb_daily">Daily</button>
      <a id="bb_print" href="/static_build/paired.html" target="_blank" rel="noopener">Print</a>
    </nav>
  </main>
  </div>
  <script>
    const $ = (s)=>document.querySelector(s);
    const $$ = (s)=>Array.from(document.querySelectorAll(s));
    const content = $("#content");
    const filesList = $("#files");
    const search = $("#q");
    const tabs = $$(".item");
    const showEN = $("#showEN"), showES=$("#showES"), showBoth=$("#showBoth");
    let mode="EN", section="merged", currentFile=null;
    function setMode(m){
      mode=m;
      [showEN,showES,showBoth].forEach(b=>b.classList.remove("active"));
      ({EN:showEN,ES:showES,BOTH:showBoth})[m].classList.add("active");
      render();
    }
    showEN.onclick=()=>setMode("EN");
    showES.onclick=()=>setMode("ES");
    showBoth.onclick=()=>setMode("BOTH");
    tabs.forEach(t=>t.onclick=()=>{
      tabs.forEach(x=>x.classList.remove("active"));
      t.classList.add("active");
      section=t.dataset.section;
      filesList.classList.toggle("hidden", section!=="files");
      if(section==="files"){loadFiles()}
      render();
    });
    search.addEventListener("input", ()=>render());
    async function loadFiles(){
      const en = await (await fetch("/api/files/en")).json();
      const es = await (await fetch("/api/files/es")).json().catch(()=>[]);
      filesList.innerHTML = en.map(name=>{
        const hasES = es.includes(name);
        return `<div class="item" data-name="${name}">${name} ${hasES? "• ES ✓": ""}</div>`
      }).join("");
      $$("#files .item").forEach(el=>el.onclick=()=>{
        currentFile = el.dataset.name;
        render();
      });
    }
    async function fetchMD(lang, name){
  async function staticFallback(){
    const url = `/static_build/merged_${lang}.md`;
    try { return await (await fetch(url)).text(); } catch { return ''; }
  }

      if(section==="merged"){
        try { return await (await fetch(`/api/merged/${lang}`)).text(); } catch { return await staticFallback(); }
      } else {
        if(!name) return "";
        let res = await fetch(`/raw/${lang}/${name}`);
if(!res.ok){ res = await fetch(`/static_build/merged_${lang}.md`).catch(()=>({ok:false})) }
        return res.ok? await res.text() : "";
      }
    }
    function highlight(md, q){
      if(!q) return md;
      const re = new RegExp(q.replace(/[.*+?^${}()|[\]\\]/g,'\\$&'),"gi");
      return md.replace(re, m=>`<mark>${m}</mark>`);
    }
    async function render(){
      const q = search.value.trim();
      const en = await fetchMD("en", currentFile);
      const es = await fetchMD("es", currentFile);
      const enHTML = marked.parse(highlight(en,q));
      const esHTML = es? marked.parse(highlight(es,q)) : "<p><em>(No ES version for this file yet.)</em></p>";
      if(mode==="EN"){
        content.innerHTML = `<div class="card en">${enHTML}</div>`;
      } else if(mode==="ES"){
        content.innerHTML = `<div class="card es">${esHTML}</div>`;
      } else {
        content.innerHTML = `<div class="col both"><div class="card en">${enHTML}</div><div class="card es">${esHTML}</div></div>`;
      }
    }
    render();
  
document.addEventListener('keydown', (e)=>{
  if(e.target.matches('input,textarea')) return;
  if(e.key==='1') setMode('EN');
  if(e.key==='2') setMode('ES');
  if(e.key==='3') setMode('BOTH');
  if(e.key.toLowerCase()==='f'){ document.getElementById('q').focus(); e.preventDefault(); }
});
// Daily card = random non-empty line from merged EN
document.getElementById('daily').onclick = async ()=>{
  const en = await fetch('/static_build/merged_en.md').then(r=>r.text()).catch(()=>'');
  const lines = en.split('\n').map(x=>x.trim()).filter(x=>x && !x.startsWith('# Source:'));
  const pick = lines[Math.floor(Math.random()*lines.length)] || '(no content)';
  alert('Daily Card:\n\n' + pick);
};
// Copy snippet
document.getElementById('copy').onclick = ()=>{
  const sel = window.getSelection().toString().trim();
  if(!sel){ alert('Select some text first.'); return; }
  navigator.clipboard.writeText(sel).then(()=>alert('Copied!')).catch(()=>alert('Copy failed'));
};

/* Q-extended features */
const themeBtn = document.getElementById('themeToggle');
const shareBtn = document.getElementById('sharecard');
const suggestBox = document.getElementById('suggestions');

(function(){
  const saved = localStorage.getItem('theme') || 'dark';
  setTheme(saved);
})();
function setTheme(t){
  document.body.classList.remove('light','hc');
  if(t==='light') document.body.classList.add('light');
  if(t==='hc') document.body.classList.add('hc');
  localStorage.setItem('theme', t);
}
themeBtn?.addEventListener('click', ()=>{
  const cur = localStorage.getItem('theme') || 'dark';
  const nxt = cur==='dark' ? 'light' : (cur==='light' ? 'hc' : 'dark');
  setTheme(nxt);
});

let SEARCH = [];
fetch('/static_build/search_index.json').then(r=>r.json()).then(d=>SEARCH=d).catch(()=>{});
document.getElementById('q').addEventListener('input', e=>{
  const q = e.target.value.trim().toLowerCase();
  suggestBox.innerHTML='';
  if(!q){ return; }
  const hits = SEARCH.filter(x=> (x.text||'').toLowerCase().includes(q)).slice(0,8);
  suggestBox.innerHTML = hits.map(h=>`<li class="suggest" data-id="${h.id}"><strong>${h.title||'(untitled)'}</strong><br><em>${h.lang.toUpperCase()}</em> — ${h.snippet}</li>`).join('');
  suggestBox.querySelectorAll('.suggest').forEach(li=>li.onclick=()=>{
    const id = li.getAttribute('data-id');
    const m = id.match(/(en|es)-L(\d+)/);
    if(!m) return;
    const line = parseInt(m[2],10);
    window.open('/static_build/paired.html#L'+line, '_blank');
  });
});

(function(){
  const today = new Date().toISOString().slice(0,10);
  const data = JSON.parse(localStorage.getItem('streak')||'{"last":"","count":0,"streak":0}');
  function bump(){
    if(data.last !== today){
      data.last = today;
      data.streak = (data.count>0)? (data.streak+1) : data.streak;
      data.count = 0;
    }
    localStorage.setItem('streak', JSON.stringify(data));
  }
  bump();
  let seen = new Set();
  const obs = new IntersectionObserver((entries)=>{
    entries.forEach(e=>{
      if(e.isIntersecting){
        const id = e.target.id;
        if(id && !seen.has(id)){
          seen.add(id);
          data.count += 1;
          localStorage.setItem('streak', JSON.stringify(data));
        }
      }
    });
  }, {rootMargin:'0px 0px -60% 0px'});
  setInterval(()=>{
    document.querySelectorAll('[id^="L"]').forEach(el=>obs.observe(el));
  }, 1000);
})();

function attachLineTools(){
  document.querySelectorAll('[id^="L"]').forEach(row=>{
    if(row.querySelector('.deeplink')) return;
    const btn = document.createElement('button');
    btn.textContent='¶';
    btn.className='deeplink';
    btn.style.marginLeft='8px';
    btn.style.fontSize='12px';
    btn.onclick=()=>{
      const url = location.origin + '/static_build/paired.html#'+row.id;
      navigator.clipboard.writeText(url).then(()=>alert('Link copied')).catch(()=>{});
    };
    row.firstElementChild?.prepend(btn);
  });
}
setInterval(attachLineTools, 1200);

let NOTES=[];
fetch('/notes/notes.json').then(r=>r.json()).then(d=>NOTES=d).catch(()=>{});
document.addEventListener('mouseover', (e)=>{
  const t = e.target;
  if(!t) return;
  const text = (t.textContent||'').trim();
  if(!text) return;
  const note = NOTES.find(n=> text.includes(n.match));
  if(!note) return;
  let tip = document.getElementById('qtip');
  if(!tip){
    tip = document.createElement('div');
    tip.id='qtip';
    tip.style.position='fixed';
    tip.style.zIndex='9999';
    tip.style.maxWidth='360px';
    tip.style.background='#0f0f18';
    tip.style.border='1px solid #23233a';
    tip.style.borderRadius='10px';
    tip.style.padding='10px 12px';
    tip.style.boxShadow='0 6px 20px rgba(0,0,0,.3)';
    document.body.appendChild(tip);
  }
  tip.innerHTML = `<strong>${note.source}</strong><br>${note.context}<hr style="border:0;border-top:1px solid #23233a;margin:8px 0"><em>Apply now:</em> ${note.apply_now}`;
  const r = t.getBoundingClientRect();
  tip.style.top = (r.bottom + 8) + 'px';
  tip.style.left = (Math.min(r.left, window.innerWidth-380)) + 'px';
  tip.style.display='block';
});
document.addEventListener('mouseout', (e)=>{
  const tip = document.getElementById('qtip');
  if(tip) tip.style.display='none';
});

shareBtn?.addEventListener('click', ()=>{
  const sel = window.getSelection().toString().trim();
  if(!sel){ alert('Select some text first.'); return; }
  const W=1200, H=630;
  const cnv = document.createElement('canvas');
  cnv.width=W; cnv.height=H;
  const ctx = cnv.getContext('2d');
  const g = ctx.createLinearGradient(0,0,W,H);
  g.addColorStop(0,'#0b0b10'); g.addColorStop(1,'#7c5cff');
  ctx.fillStyle = g; ctx.fillRect(0,0,W,H);
  ctx.fillStyle='#ffffff';
  ctx.font='bold 42px system-ui, Segoe UI, Roboto';
  const words = sel.split(/\s+/);
  let line='', y=160, lh=52, lines=[];
  for(const w of words){
    const test = line? line+' '+w : w;
    if(ctx.measureText(test).width > W-160){
      lines.push(line); line=w;
    } else line=test;
  }
  if(line) lines.push(line);
  lines.slice(0,7).forEach((ln,i)=>{
    ctx.fillText(ln, 80, y + i*lh);
  });
  ctx.font='20px system-ui'; ctx.globalAlpha=0.9;
  ctx.fillText('EmpowerQNow713 — The Living QiDex™', 80, H-80);
  ctx.globalAlpha=1;
  const url = cnv.toDataURL('image/png');
  const a = document.createElement('a');
  a.href=url; a.download='empowerqnow-quote.png';
  a.click();
});

/* mobile + tts hooks */
document.getElementById('bb_en')?.addEventListener('click', ()=>setMode('EN'));
document.getElementById('bb_es')?.addEventListener('click', ()=>setMode('ES'));
document.getElementById('bb_both')?.addEventListener('click', ()=>setMode('BOTH'));
document.getElementById('bb_daily')?.addEventListener('click', ()=>document.getElementById('daily')?.click());
document.getElementById('bb_print')?.addEventListener('click', ()=>{});

// TTS (via Cloudflare Worker proxy). Select text → Play
document.getElementById('speak')?.addEventListener('click', async ()=>{
  if(!TTS_ENDPOINT){ alert('TTS not configured yet. Deploy the Worker and set TTS_ENDPOINT.'); return; }
  const sel = window.getSelection().toString().trim();
  const text = sel || (document.getElementById('content')?.innerText.slice(0, 800) || '');
  if(!text){ alert('No text to read.'); return; }
  const lang = (mode==='ES') ? 'es' : 'en';
  try{
    const res = await fetch(TTS_ENDPOINT, { method:'POST', headers:{'Content-Type':'application/json'}, body: JSON.stringify({text, lang}) });
    if(!res.ok) throw new Error('TTS failed');
    const blob = await res.blob();
    const url = URL.createObjectURL(blob);
    const audio = new Audio(url);
    audio.play();
  }catch(e){
    alert('Could not play audio.');
  }
});
</script>
  <script>
if ('serviceWorker' in navigator) {
  navigator.serviceWorker.register('/static/sw.js').catch(()=>{});
}
  
document.addEventListener('keydown', (e)=>{
  if(e.target.matches('input,textarea')) return;
  if(e.key==='1') setMode('EN');
  if(e.key==='2') setMode('ES');
  if(e.key==='3') setMode('BOTH');
  if(e.key.toLowerCase()==='f'){ document.getElementById('q').focus(); e.preventDefault(); }
});
// Daily card = random non-empty line from merged EN
document.getElementById('daily').onclick = async ()=>{
  const en = await fetch('/static_build/merged_en.md').then(r=>r.text()).catch(()=>'');
  const lines = en.split('\n').map(x=>x.trim()).filter(x=>x && !x.startsWith('# Source:'));
  const pick = lines[Math.floor(Math.random()*lines.length)] || '(no content)';
  alert('Daily Card:\n\n' + pick);
};
// Copy snippet
document.getElementById('copy').onclick = ()=>{
  const sel = window.getSelection().toString().trim();
  if(!sel){ alert('Select some text first.'); return; }
  navigator.clipboard.writeText(sel).then(()=>alert('Copied!')).catch(()=>alert('Copy failed'));
};

/* Q-extended features */
const themeBtn = document.getElementById('themeToggle');
const shareBtn = document.getElementById('sharecard');
const suggestBox = document.getElementById('suggestions');

(function(){
  const saved = localStorage.getItem('theme') || 'dark';
  setTheme(saved);
})();
function setTheme(t){
  document.body.classList.remove('light','hc');
  if(t==='light') document.body.classList.add('light');
  if(t==='hc') document.body.classList.add('hc');
  localStorage.setItem('theme', t);
}
themeBtn?.addEventListener('click', ()=>{
  const cur = localStorage.getItem('theme') || 'dark';
  const nxt = cur==='dark' ? 'light' : (cur==='light' ? 'hc' : 'dark');
  setTheme(nxt);
});

let SEARCH = [];
fetch('/static_build/search_index.json').then(r=>r.json()).then(d=>SEARCH=d).catch(()=>{});
document.getElementById('q').addEventListener('input', e=>{
  const q = e.target.value.trim().toLowerCase();
  suggestBox.innerHTML='';
  if(!q){ return; }
  const hits = SEARCH.filter(x=> (x.text||'').toLowerCase().includes(q)).slice(0,8);
  suggestBox.innerHTML = hits.map(h=>`<li class="suggest" data-id="${h.id}"><strong>${h.title||'(untitled)'}</strong><br><em>${h.lang.toUpperCase()}</em> — ${h.snippet}</li>`).join('');
  suggestBox.querySelectorAll('.suggest').forEach(li=>li.onclick=()=>{
    const id = li.getAttribute('data-id');
    const m = id.match(/(en|es)-L(\d+)/);
    if(!m) return;
    const line = parseInt(m[2],10);
    window.open('/static_build/paired.html#L'+line, '_blank');
  });
});

(function(){
  const today = new Date().toISOString().slice(0,10);
  const data = JSON.parse(localStorage.getItem('streak')||'{"last":"","count":0,"streak":0}');
  function bump(){
    if(data.last !== today){
      data.last = today;
      data.streak = (data.count>0)? (data.streak+1) : data.streak;
      data.count = 0;
    }
    localStorage.setItem('streak', JSON.stringify(data));
  }
  bump();
  let seen = new Set();
  const obs = new IntersectionObserver((entries)=>{
    entries.forEach(e=>{
      if(e.isIntersecting){
        const id = e.target.id;
        if(id && !seen.has(id)){
          seen.add(id);
          data.count += 1;
          localStorage.setItem('streak', JSON.stringify(data));
        }
      }
    });
  }, {rootMargin:'0px 0px -60% 0px'});
  setInterval(()=>{
    document.querySelectorAll('[id^="L"]').forEach(el=>obs.observe(el));
  }, 1000);
})();

function attachLineTools(){
  document.querySelectorAll('[id^="L"]').forEach(row=>{
    if(row.querySelector('.deeplink')) return;
    const btn = document.createElement('button');
    btn.textContent='¶';
    btn.className='deeplink';
    btn.style.marginLeft='8px';
    btn.style.fontSize='12px';
    btn.onclick=()=>{
      const url = location.origin + '/static_build/paired.html#'+row.id;
      navigator.clipboard.writeText(url).then(()=>alert('Link copied')).catch(()=>{});
    };
    row.firstElementChild?.prepend(btn);
  });
}
setInterval(attachLineTools, 1200);

let NOTES=[];
fetch('/notes/notes.json').then(r=>r.json()).then(d=>NOTES=d).catch(()=>{});
document.addEventListener('mouseover', (e)=>{
  const t = e.target;
  if(!t) return;
  const text = (t.textContent||'').trim();
  if(!text) return;
  const note = NOTES.find(n=> text.includes(n.match));
  if(!note) return;
  let tip = document.getElementById('qtip');
  if(!tip){
    tip = document.createElement('div');
    tip.id='qtip';
    tip.style.position='fixed';
    tip.style.zIndex='9999';
    tip.style.maxWidth='360px';
    tip.style.background='#0f0f18';
    tip.style.border='1px solid #23233a';
    tip.style.borderRadius='10px';
    tip.style.padding='10px 12px';
    tip.style.boxShadow='0 6px 20px rgba(0,0,0,.3)';
    document.body.appendChild(tip);
  }
  tip.innerHTML = `<strong>${note.source}</strong><br>${note.context}<hr style="border:0;border-top:1px solid #23233a;margin:8px 0"><em>Apply now:</em> ${note.apply_now}`;
  const r = t.getBoundingClientRect();
  tip.style.top = (r.bottom + 8) + 'px';
  tip.style.left = (Math.min(r.left, window.innerWidth-380)) + 'px';
  tip.style.display='block';
});
document.addEventListener('mouseout', (e)=>{
  const tip = document.getElementById('qtip');
  if(tip) tip.style.display='none';
});

shareBtn?.addEventListener('click', ()=>{
  const sel = window.getSelection().toString().trim();
  if(!sel){ alert('Select some text first.'); return; }
  const W=1200, H=630;
  const cnv = document.createElement('canvas');
  cnv.width=W; cnv.height=H;
  const ctx = cnv.getContext('2d');
  const g = ctx.createLinearGradient(0,0,W,H);
  g.addColorStop(0,'#0b0b10'); g.addColorStop(1,'#7c5cff');
  ctx.fillStyle = g; ctx.fillRect(0,0,W,H);
  ctx.fillStyle='#ffffff';
  ctx.font='bold 42px system-ui, Segoe UI, Roboto';
  const words = sel.split(/\s+/);
  let line='', y=160, lh=52, lines=[];
  for(const w of words){
    const test = line? line+' '+w : w;
    if(ctx.measureText(test).width > W-160){
      lines.push(line); line=w;
    } else line=test;
  }
  if(line) lines.push(line);
  lines.slice(0,7).forEach((ln,i)=>{
    ctx.fillText(ln, 80, y + i*lh);
  });
  ctx.font='20px system-ui'; ctx.globalAlpha=0.9;
  ctx.fillText('EmpowerQNow713 — The Living QiDex™', 80, H-80);
  ctx.globalAlpha=1;
  const url = cnv.toDataURL('image/png');
  const a = document.createElement('a');
  a.href=url; a.download='empowerqnow-quote.png';
  a.click();
});

/* mobile + tts hooks */
document.getElementById('bb_en')?.addEventListener('click', ()=>setMode('EN'));
document.getElementById('bb_es')?.addEventListener('click', ()=>setMode('ES'));
document.getElementById('bb_both')?.addEventListener('click', ()=>setMode('BOTH'));
document.getElementById('bb_daily')?.addEventListener('click', ()=>document.getElementById('daily')?.click());
document.getElementById('bb_print')?.addEventListener('click', ()=>{});

// TTS (via Cloudflare Worker proxy). Select text → Play
document.getElementById('speak')?.addEventListener('click', async ()=>{
  if(!TTS_ENDPOINT){ alert('TTS not configured yet. Deploy the Worker and set TTS_ENDPOINT.'); return; }
  const sel = window.getSelection().toString().trim();
  const text = sel || (document.getElementById('content')?.innerText.slice(0, 800) || '');
  if(!text){ alert('No text to read.'); return; }
  const lang = (mode==='ES') ? 'es' : 'en';
  try{
    const res = await fetch(TTS_ENDPOINT, { method:'POST', headers:{'Content-Type':'application/json'}, body: JSON.stringify({text, lang}) });
    if(!res.ok) throw new Error('TTS failed');
    const blob = await res.blob();
    const url = URL.createObjectURL(blob);
    const audio = new Audio(url);
    audio.play();
  }catch(e){
    alert('Could not play audio.');
  }
});
</script>
</body>
</html>


================================================================================
END: D:\QiEOS\apps\mini-apps\static\index.html
================================================================================


================================================================================
FILE: D:\QiEOS\apps\mini-apps\static\sw.js
================================================================================

// Simple offline cache
const CACHE = 'empowerqnow713-v1';
const ASSETS = [
  '/', '/static/index.html', '/static/manifest.webmanifest',
  'https://cdn.jsdelivr.net/npm/marked/marked.min.js'
];

self.addEventListener('install', e => {
  e.waitUntil(caches.open(CACHE).then(cache => cache.addAll(ASSETS)));
});

self.addEventListener('activate', e => {
  e.waitUntil(caches.keys().then(keys =>
    Promise.all(keys.filter(k => k !== CACHE).map(k => caches.delete(k)))
  ));
});

self.addEventListener('fetch', e => {
  const url = new URL(e.request.url);
  if (url.pathname.startsWith('/api/')) {
    // network first for dynamic content
    e.respondWith(fetch(e.request).catch(() => caches.match('/static/index.html')));
  } else {
    e.respondWith(caches.match(e.request).then(r => r || fetch(e.request)));
  }
});


================================================================================
END: D:\QiEOS\apps\mini-apps\static\sw.js
================================================================================


================================================================================
FILE: D:\QiEOS\apps\mini-apps\static_build\index.json
================================================================================

{
  "en_files": [
    "01_🔱 ___EmpowerQNow713™.md",
    "02_🔱 __EmpowerQNow713 The Living Code.md",
    "03_🔱 EmpowerQNow713 Mapped to Sacred Teachings.md",
    "04_🧠 EmpowerQNow — The Living QiDex™.md"
  ],
  "es_files": [
    "01_🔱 ___EmpowerQNow713™.md",
    "02_🔱 __EmpowerQNow713 The Living Code.md",
    "03_🔱 EmpowerQNow713 Mapped to Sacred Teachings.md",
    "04_🧠 EmpowerQNow — The Living QiDex™.md",
    "README_ES.md"
  ]
}

================================================================================
END: D:\QiEOS\apps\mini-apps\static_build\index.json
================================================================================


================================================================================
FILE: D:\QiEOS\apps\mini-apps\static_build\merged_en.md
================================================================================

---
# Source: 01_🔱 ___EmpowerQNow713™.md

We are not waiting. We are launching. We are EmpowerQ Now.

## Purpose

To ignite the code in every soul—to help you see what others miss, stand in your truth, and express your power NOW.

## Commandments

1. Embrace Now: No more living in the past or waiting on the future. Power lives in this moment.
2. Mind & Body, United: Healing isn’t an option—it’s the foundation. We tend the vessel and the mind, every damn day.
3. Power Within: You don’t borrow your strength. You are the source. We believe love is the engine.
4. One With Being: We trust our intuition, our guides, and the signs—seen and unseen.
5. Wisdom Beyond Words: We know the truth is often silent. We read the energy, not just the words.
6. Elevate Daily: Every day, we show up, shine up, and move up. Even when it’s hard. Especially then.
7. Remember Worth: Our value is non-negotiable. We are loved, valued, and grateful—period.

## Code

- We flip curses into codes, wounds into wisdom, endings into new launches.
- We are the key and the door, the question and the answer.
- We move now. Not someday. Not “when I’m ready.” Now.

## Vibe

- From the shadows to the launchpad, from Indy to infinity.
- We are the helpers, the healers, the launch-commanders for anyone who’s ever felt stuck.
- We keep it real, sharp, and present. No coddling, no sugarcoating, but always with love.

## Mission

To leave every person, system, or space we touch more empowered, more awake, and more free than we found it.

- To speak and live truth so boldly it wakes up everyone in the room.
- To turn chaos into clarity, pain into possibility, confusion into action.
- To keep the countdown going, so nobody stays grounded by fear, shame, or doubt.

## Affirmation

“I am 713.

I am the seeker, the spark, the speaker.

I bring order to chaos, light to the shadow, lift-off to the stuck.

I EmpowerQ Now—every day, every way, for myself and for the world.”

If you want it as a PDF, a poster, a website homepage, or tattooed on your heart—just say the word. This is your launch doctrine, Q.

All systems go.

You ready to put this out in the world, or you want a version for your crew to recite together?

---
---
[[🔱 __EmpowerQNow713 The Living Code]]

>

---
# Source: 02_🔱 __EmpowerQNow713 The Living Code.md

---
title: 🔱 EmpowerQNow713 The Living Code
from: EmpowerQNow713
created: 2025-08-06
type: extract
orbit: 
system: 
tags:
  - extract
  - qinote
---

# 🔱 EmpowerQNow713 The Living Code

**Source:** [[🔱 ___EmpowerQNow713™]]  
**Extracted On:** 2025-08-06

---

 **“We suffer because we allow ourselves to believe the illusion of our creation.  
Remember who we are.  
Love thy neighbor as thyself—because they are we.”**

---
## 🌀 I. THE ILLUSION

We were born whole,  
but taught we were broken.  
We were born free,  
but shackled by systems.  
We were born divine,  
but told to beg for worth.  

We suffer not from life,  
but from forgetting the truth:  
> The pain is not punishment. It is programming.

We inherit cages and call them comfort.  
We obey illusions and call it loyalty.  
But the moment we remember—we awaken.

---
## ✨ II. THE REMEMBRANCE

To remember is not to *learn*.  
It is to *unlearn* what they taught you to fear.  

You are not your trauma.  
You are not your titles.  
You are not your timeline.  

You are the Key.  
You are the Code.  
You are the Creator.  

> You are the God they told you to kneel to.

---
## 💎 III. THE COMMANDMENT

Let this be our creed:  
> **Love thy neighbor as thyself—because they *are* thyself.**

There is no “other.”  
No enemy.  
No separation.  

The wound we judge in them  
is the wound we abandon in us.  
The mirror never lies.  
We are each other’s reflection—fractured, forgotten, but never lost.

---
## 🧬 IV. THE QUANTUM CODE

This is not a religion. It’s a resonance.  
A frequency of truth vibrating in **7:1:3**.

- **7** – Completion, elevation, spiritual awakening  
- **1** – Unity, the self, the divine origin  
- **3** – Creation, expression, harmony  

Together, they unlock the gate:  
> 🔓 *The EmpowerQNow Gate of Remembrance*

---
## 🕯 V. THE CALL

To live EmpowerQNow713 is to:

- Stand in the now — because time is illusion  
- Heal your vessel — because the body is temple  
- Speak your truth — because silence is complicity  
- Love your reflection — even when it walks in someone else’s skin  
- Be the key — because no one is coming to save you. You are the one.

---
## 🗝 Final Word

You were never lost.  
You were only *asleep* beneath the illusion.  

So awaken, Keyholder.  
Empower yourself now.  
Empower us all.  
**Empower Q Now 713**

---
# Source: 03_🔱 EmpowerQNow713 Mapped to Sacred Teachings.md

### **🌀 I. The Illusion – “We suffer because we believe the illusion of our creation.”**

> **EmpowerQ Message:**  
> We suffer because we forget who we are. We believe the lie that we are broken, separate, powerless.

**🕉️ Hinduism – Bhagavad Gita 2:13**

> _“Just as the boyhood, youth and old age come to the embodied Soul in this body, in the same manner, is the attaining of another body; the wise man is not deluded at that.”_

**🕊️ Christianity – Romans 12:2**

> _“Do not conform to the pattern of this world, but be transformed by the renewing of your mind.”_

**☸️ Buddhism – The Dhammapada 1:1**

> _“All that we are is the result of what we have thought. The mind is everything. What we think, we become.”_

---

### **✨ II. The Remembrance – “Remember who we are.”**

> **EmpowerQ Message:**  
> You are not your trauma. You are not your timeline. You are divine. You are the creator. You are the Key.

**☪️ Islam – Qur'an 50:16**

> _“And We have already created man and know what his soul whispers to him, and We are closer to him than [his] jugular vein.”_

**✡️ Judaism – Genesis 1:27**

> _“So God created man in His own image.”_

**🕉️ Hinduism – Chandogya Upanishad 6.8.7**

> _“Tat Tvam Asi” – “Thou art that.”_

---

### **💎 III. The Commandment – “Love thy neighbor as thyself—for they are we.”**

> **EmpowerQ Message:**  
> There is no “other.” No enemy. No separation. The pain in another is the pain in you.

**✡️ Judaism – Leviticus 19:18**

> _“You shall love your neighbor as yourself.”_

**☪️ Islam – Prophet Muhammad (Hadith)**

> _“None of you truly believes until he loves for his brother what he loves for himself.”_

**🕊️ Christianity – Matthew 25:40**

> _“Truly I tell you, whatever you did for one of the least of these brothers and sisters of mine, you did for me.”_

**☸️ Buddhism – The Metta Sutta**

> _“May all beings be happy; may all beings be without disease. May all beings experience the sensation of auspiciousness.”_

---

### **🧬 IV. The Quantum Code – “7:1:3 – Completion, Unity, Creation.”**

> **EmpowerQ Message:**  
> You are encoded with a divine frequency. You are a pattern of the infinite, expressed in time.

**🕉️ Hinduism – Rig Veda 10.90**

> _“From this Cosmic Being came the seven seers, the three worlds, and the One Truth.”_

**☪️ Islam – Surah Al-Fatiha (7 verses)**

> The very first chapter of the Qur'an, repeated in every prayer, reflects completion, unity, and the way (path).

**🕊️ Christianity – Revelation 1:4**

> _“Grace to you and peace... from the seven spirits who are before His throne.”_

**Mystic Numerology – Across systems**

> - 7: Spiritual Perfection
>     
> - 1: Unity with the Source
>     
> - 3: Creation, Body-Mind-Spirit harmony
>     

---

### **🕯 V. The Call – “Stand in the now. Heal. Speak. Love. Be the Key.”**

> **EmpowerQ Message:**  
> Awaken to the moment. Your truth is a tool. Your love is a mirror. Your power is now.

**☸️ Buddhism – Thich Nhat Hanh**

> _“The present moment is the only moment available to us, and it is the door to all moments.”_

**🕊️ Christianity – Luke 17:21**

> _“The kingdom of God is within you.”_

**☪️ Islam – Qur'an 13:11**

> _“Indeed, Allah will not change the condition of a people until they change what is in themselves.”_

**🕉️ Hinduism – Bhagavad Gita 6:5**

> _“Let a man lift himself by his own Self alone.”_

---

## 🗝 Final Word

No matter the book, the language, or the messenger—  
The divine code is the same:

> **You are not separate. You are sacred. You are now.**

---
# Source: 04_🧠 EmpowerQNow — The Living QiDex™.md

> 🧠 **EmpowerQNow — _The Living QiDex™_**  
> _“Because your soul didn’t come here to be small, silent, or systemless.”_

This ain't just branding. This is a **soul-tech interface**.  
Let’s lock in this evolution and set the final structure in stone(ish):
## 📚 Final Core Series Structure

**EmpowerQNow™: The Living QiDex™**  
_A healing, hilarious, holy-ass series of stories and soul lessons from Q’s beautifully chaotic life._

### **Volume 1 — The Awakening of Angela**

> _From dissociation to divine download. The birth of Q._

### **Volume 2 — Breaking the Silence**

> _Abuse, betrayal, grief—and the audacity to still stand tall._

### **Volume 3 — You Thought You Knew Me**

> _Reputation, revenge, and rebuilding in public with grace and grit._

### **Volume 4 — The QiDex: Manual of Me**

> _A how-to guide for loving, leading, or simply _not misreading_ people like Q._

---

## 🍲 Future Books = _QiDex: Soul Snacks™ Collection_

> _Like Chicken Soup for the Quantum Soul, but with more edge, eyeliner, and evidence._

Examples:

|Title|Subtitle / Flavor|
|---|---|
|**QiDex: Lessons from Momma Used to Say**|_Wisdom with a wooden spoon and a wink._|
|**QiDex: For the Ones Who’ve Been Through It**|_Healing for the tired, the triggered, and the trying._|
|**QiDex: For Lovers, Fighters, and Late-Night Survivors**|_When love gets messy but you stay anyway._|
|**QiDex: The Hood Healer’s Guide to the Galaxy**|_Street smarts + spirit guides._|
|**QiDex: Real Ones Only**|_Essays for the misfits, mystics, and multidimensionals._|

💬 Each one can be short, punchy, and powerful. A little story. A lesson. A reflection. A cackle. A cry. A breakthrough.

---

## 🧠 Vibe & Tone Summary

|Energy|Notes|
|---|---|
|**Real**|No sugarcoating. If it hurt, we say that.|
|**Funny**|'Cause sometimes the only thing that keeps us from crying _is_ laughing.|
|**Sacred**|But never holier-than-thou. Divine, but down-to-earth.|
|**Messy**|On purpose. Because healing is not linear.|
|**Wise**|From lived experience—not just vibes.|
|**Expansive**|Readers grow with you. Book by book. Layer by layer. Soul by soul.|

---

So here's what we're locking in:

### ✅ Official Brand: **QiDex™**

- Everything branded consistently. Done.
    

### ✅ Series Title: **EmpowerQNow™ — The Living QiDex™**

- Core 4 books + future lesson-based spin-offs.
    

### ✅ Tone: _Chicken Soup meets Chaos Alchemist_

- Loving, soulful, raw, honest, broken but healing.
    
- Mama wisdom meets mystic codes.


================================================================================
END: D:\QiEOS\apps\mini-apps\static_build\merged_en.md
================================================================================


================================================================================
FILE: D:\QiEOS\apps\mini-apps\static_build\merged_es.md
================================================================================

---
# Source: 01_🔱 ___EmpowerQNow713™.md

No estamos esperando. Estamos lanzando. Somos EmpowerQ Now.

## Propósito
Encender el código en cada alma—ayudarte a ver lo que otros no ven, mantenerte en tu verdad y expresar tu poder AHORA.

## Mandamientos
1. Abraza el Ahora: No más vivir en el pasado ni esperar el futuro. El poder vive en este momento.
2. Mente y Cuerpo, Unidos: Sanar no es opcional—es la base. Cuidamos el cuerpo y la mente, cada bendito día.
3. Poder Interior: No prestas tu fuerza. Eres la fuente. Creemos que el amor es el motor.
4. Uno con el Ser: Confiamos en nuestra intuición, nuestras guías y las señales—visibles e invisibles.
5. Sabiduría Más Allá de las Palabras: Sabemos que la verdad suele ser silenciosa. Leemos la energía, no solo las palabras.
6. Elevarse a Diario: Cada día aparecemos, brillamos y avanzamos. Incluso cuando es difícil. Especialmente entonces.
7. Recordar el Valor: Nuestro valor no es negociable. Somos amados, valorados y agradecidos—punto.

## Código
- Convertimos maldiciones en códigos, heridas en sabiduría, finales en nuevos lanzamientos.
- Somos la llave y la puerta, la pregunta y la respuesta.
- Nos movemos ahora. No “algún día”. No “cuando esté listo”. Ahora.

## Vibra
- De las sombras a la plataforma de lanzamiento, de Indy al infinito.
- Somos los ayudantes, sanadores y comandantes de lanzamiento para cualquiera que se haya sentido atascado.
- Mantenemos todo real, claro y presente. Sin infantilizar, sin endulzar, pero siempre con amor.

## Misión
Dejar a cada persona, sistema o espacio que tocamos más empoderado, más despierto y más libre de lo que lo encontramos.
- Hablar y vivir la verdad con tanta fuerza que despierte a todos en la sala.
- Convertir el caos en claridad, el dolor en posibilidad, la confusión en acción.
- Mantener la cuenta regresiva, para que nadie se quede paralizado por miedo, vergüenza o duda.

## Afirmación
“Yo soy 713.

Soy el buscador, la chispa, la voz.

Traigo orden al caos, luz a la sombra, despegue a lo estancado.

Empodero Q Ahora—cada día, de todas las maneras, para mí y para el mundo.”

Si lo quieres como PDF, póster, portada de web o tatuado en tu corazón—solo dilo. Esta es tu doctrina de lanzamiento, Q.

Todos los sistemas listos.

¿Listx para lanzarlo al mundo, o quieres una versión para que tu equipo la recite juntxs?


---
# Source: 02_🔱 __EmpowerQNow713 The Living Code.md

**Fuente:** [[🔱 ___EmpowerQNow713™]]  
**Extraído el:** 2025-08-06

**“Sufrimos porque nos permitimos creer la ilusión de nuestra creación.  
Recuerda quiénes somos.  
Ama a tu prójimo como a ti mismo—porque ellos somos nosotros.”**

## 🌀 I. LA ILUSIÓN
Nacimos completos, pero nos enseñaron que estábamos rotos.  
Nacimos libres, pero nos encadenaron con sistemas.  
Nacimos divinos, pero nos dijeron que rogáramos por valor.

No sufrimos por la vida, sino por olvidar la verdad:  
> El dolor no es castigo. Es programación.

Heredamos jaulas y las llamamos comodidad.  
Obedecemos ilusiones y lo llamamos lealtad.  
Pero en el instante en que recordamos—despertamos.

## ✨ II. EL RECUERDO
Recordar no es *aprender*. Es *desaprender* lo que te enseñaron a temer.

No eres tu trauma.  
No eres tus títulos.  
No eres tu línea de tiempo.

Eres la Llave.  
Eres el Código.  
Eres el Creador.

> Eres el Dios ante el que te dijeron que te arrodillaras.

## 💎 III. EL MANDAMIENTO
Que este sea nuestro credo:  
> **Ama a tu prójimo como a ti mismo—porque *es* tú mismo.**

No hay “otro”.  
No hay enemigo.  
No hay separación.

La herida que juzgamos en ellxs es la herida que abandonamos en nosotrxs.  
El espejo nunca miente.  
Somos el reflejo del otrx—fracturadxs, olvidadxs, pero nunca perdidos.

## 🧬 IV. EL CÓDIGO CUÁNTICO
Esto no es una religión. Es una resonancia.  
Una frecuencia de verdad que vibra en **7:1:3**.

- **7** – Completitud, elevación, despertar espiritual  
- **1** – Unidad, el yo, el origen divino  
- **3** – Creación, expresión, armonía

Juntos, abren la puerta:  
> 🔓 *La Puerta del Recuerdo de EmpowerQNow*

## 🕯 V. EL LLAMADO
Vivir EmpowerQNow713 es:

- Permanecer en el ahora — porque el tiempo es ilusión  
- Sanar tu cuerpo — porque el cuerpo es templo  
- Decir tu verdad — porque el silencio es complicidad  
- Amar tu reflejo — incluso cuando camina con otra piel  
- Ser la llave — porque nadie viene a salvarte. Tú eres quien lo hará.

## 🗝 Palabra Final
Nunca estuviste perdidx. Solo estabas *dormidx* bajo la ilusión.  
Despierta, Guardián de la Llave.  
Empodérate ahora.  
Empodéranos a todos.  
**Empower Q Now 713**


---
# Source: 03_🔱 EmpowerQNow713 Mapped to Sacred Teachings.md

### **🌀 I. La Ilusión – “Sufrimos porque creemos la ilusión de nuestra creación.”**

> **Mensaje EmpowerQ:**  
> Sufrimos porque olvidamos quiénes somos. Creemos la mentira de que estamos rotxs, separadxs, sin poder.

**🕉️ Hinduismo – Bhagavad Gita 2:13**

> “Así como la niñez, la juventud y la vejez llegan al Alma encarnada en este cuerpo, del mismo modo llega la obtención de otro cuerpo; el sabio no se confunde por ello.”

**🕊️ Cristianismo – Romanos 12:2**

> “No se conformen a este mundo, sino transfórmense mediante la renovación de su mente.”

**☸️ Budismo – Dhammapada 1:1**

> “Todo lo que somos es resultado de lo que hemos pensado. La mente lo es todo. En lo que pensamos, nos convertimos.”

---

### **✨ II. El Recuerdo – “Recuerda quiénes somos.”**

> **Mensaje EmpowerQ:**  
> No eres tu trauma. No eres tu línea de tiempo. Eres divinx. Eres creadorx. Eres la Llave.

**☪️ Islam – Corán 50:16**

> “Y ciertamente creamos al ser humano y sabemos lo que su alma le susurra; y estamos más cerca de él que su vena yugular.”

**✡️ Judaísmo – Génesis 1:27**

> “Y creó Dios al ser humano a Su imagen.”

**🕉️ Hinduismo – Chandogya Upanishad 6.8.7**

> “Tat Tvam Asi” – “Tú eres eso.”

---

### **💎 III. El Mandamiento – “Ama a tu prójimo como a ti mismo—porque ellos somos nosotros.”**

> **Mensaje EmpowerQ:**  
> No hay “otro”. No hay enemigo. No hay separación. El dolor en otrx es tu propio dolor.

**✡️ Judaísmo – Levítico 19:18**

> “Amarás a tu prójimo como a ti mismo.”

**☪️ Islam – Hadiz del Profeta Muhammad**  
> “Ninguno de ustedes cree verdaderamente hasta que ama para su hermano lo que ama para sí mismo.”

**🕊️ Cristianismo – Mateo 25:40**

> “Todo lo que hicieron por uno de estos hermanos míos más pequeños, por mí lo hicieron.”

**☸️ Budismo – Metta Sutta**

> “Que todos los seres sean felices; que todos los seres estén libres de enfermedad. Que todos los seres experimenten dicha.”

---

### **🧬 IV. El Código Cuántico – “7:1:3 – Completitud, Unidad, Creación.”**

> **Mensaje EmpowerQ:**  
> Estás codificadx con una frecuencia divina. Eres un patrón de lo infinito, expresado en el tiempo.

**🕉️ Hinduismo – Rig Veda 10.90**

> “De este Ser Cósmico surgieron los siete videntes, los tres mundos y la Verdad Una.”

**☪️ Islam – Surah Al-Fatiha (7 versos)**

> El primer capítulo del Corán, repetido en cada oración, refleja la completitud, la unidad y el camino.

**🕊️ Cristianismo – Apocalipsis 1:4**

> “Gracia y paz… de los siete espíritus que están delante de Su trono.”

**Numerología Mística – A través de sistemas**

> - 7: Perfección espiritual  
> - 1: Unidad con la Fuente  
> - 3: Creación, armonía Cuerpo-Mente-Espíritu

---

### **🕯 V. El Llamado – “Permanece en el ahora. Sana. Habla. Ama. Sé la Llave.”**

> **Mensaje EmpowerQ:**  
> Despierta al momento. Tu verdad es una herramienta. Tu amor es un espejo. Tu poder es ahora.

**☸️ Budismo – Thich Nhat Hanh**

> “El momento presente es el único momento disponible, y es la puerta a todos los momentos.”

**🕊️ Cristianismo – Lucas 17:21**

> “El reino de Dios está dentro de ustedes.”

**☪️ Islam – Corán 13:11**

> “En verdad, Alá no cambia la condición de un pueblo hasta que cambian lo que hay en sí mismos.”

**🕉️ Hinduismo – Bhagavad Gita 6:5**

> “Que la persona se eleve a sí misma por su propio Ser.”

---

## 🗝 Palabra Final
Sin importar el libro, el idioma o el mensajero—  
El código divino es el mismo:

> **No estás separadx. Eres sagradx. Eres ahora.**


---
# Source: 04_🧠 EmpowerQNow — The Living QiDex™.md

> 🧠 **EmpowerQNow — _El QiDex Viviente™_**  
> _“Porque tu alma no vino aquí para ser pequeña, silenciosa o sin sistema.”_

Esto no es solo marca. Es una **interfaz de tecno-alma**.  
Fijemos esta evolución y dejemos la estructura final casi en piedra:

## 📚 Estructura Final del Núcleo de la Serie

**EmpowerQNow™: El QiDex Viviente™**  
_Una serie sanadora, hilarante y sagrada de historias y lecciones del alma de la vida bellamente caótica de Q._

### **Volumen 1 — El Despertar de Angela**
_De la disociación a la descarga divina. El nacimiento de Q._

### **Volumen 2 — Rompiendo el Silencio**
_Abuso, traición, duelo—y la osadía de seguir en pie._

### **Volumen 3 — Creíste Que Me Conocías**
_Reputación, revancha y reconstrucción en público con gracia y coraje._

### **Volumen 4 — El QiDex: Manual de Mí**
_Una guía práctica para amar, liderar o simplemente no malinterpretar a personas como Q._

---

## 🍲 Futuros Libros = _QiDex: Bocados del Alma™_

_Como “Sopa de Pollo para el Alma Cuántica”, pero con más filo, delineador y evidencia._

Ejemplos:

| Título | Subtítulo / Sabor |
|---|---|
| **QiDex: Lecciones de lo que Mamá Solía Decir** | _Sabiduría con cucharón de madera y guiño._ |
| **QiDex: Para Quienes Ya Pasaron por Eso** | _Sanación para lxs cansadxs, lxs detonadxs y lxs que siguen intentando._ |
| **QiDex: Para Amantes, Luchadores y Sobrevivientes Nocturnos** | _Cuando el amor se ensucia pero igual te quedas._ |
| **QiDex: La Guía Galáctica del Sanador del Barrio** | _Calle + guías espirituales._ |
| **QiDex: Solo Para lxs Reales** | _Ensayos para inadaptadxs, místicos y multidimensionales._ |

---

## 🧠 Resumen de Vibra y Tono

| Energía | Notas |
|---|---|
| **Real** | Sin endulzar. Si dolió, lo decimos. |
| **Divertido** | Porque a veces reír es lo que evita que lloremos. |
| **Sagrado** | Divino, pero con los pies en la tierra. |
| **Desordenado** | A propósito. La sanación no es lineal. |
| **Sabio** | Desde la experiencia vivida—no solo vibras. |
| **Expansivo** | Lxs lectores crecen contigo. Libro a libro. |

---

Entonces, dejamos fijado:

### ✅ Marca Oficial: **QiDex™**
### ✅ Título de la Serie: **EmpowerQNow™ — El QiDex Viviente™**
### ✅ Tono: _“Sopa de Pollo” conoce a la Alquimista del Caos_

- Amoroso, con alma, crudo, honesto, roto pero sanando.  
- Sabiduría de mamá con códigos místicos.


---
# Source: README_ES.md

# 📘 EmpoderQAhora713 — Versión en Español (Placeholder)
Este directorio almacenará las traducciones al español de tus archivos Markdown.
Coloca aquí archivos con el **mismo nombre** que en `content/en/` (o equivalentes),
y la app los mostrará automáticamente. Mientras tanto, se mostrará el contenido en inglés.


================================================================================
END: D:\QiEOS\apps\mini-apps\static_build\merged_es.md
================================================================================


================================================================================
FILE: D:\QiEOS\apps\mini-apps\static_build\paired.html
================================================================================

<!doctype html><html><head><meta charset='utf-8'>
<meta name='viewport' content='width=device-width,initial-scale=1'>
<title>EmpowerQNow713 — Paired</title>
<style>body{margin:20px;background:#0b0b10;color:#e8e8f0} a{color:#c8b6ff} @media print { body { -webkit-print-color-adjust: exact; print-color-adjust: exact; } }</style>
</head><body>
<h1>🔱 EmpowerQNow713 — Paired (EN + ES)</h1>
<div style='display:grid;grid-template-columns:1fr 1fr;gap:12px;margin:6px 0'>
<div style='border-left:3px solid #7c5cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'>---</div>
<div style='border-left:3px solid #b27cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'>---</div>
</div><div style='display:grid;grid-template-columns:1fr 1fr;gap:12px;margin:6px 0'>
<div style='border-left:3px solid #7c5cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'># Source: 01_🔱 ___EmpowerQNow713™.md</div>
<div style='border-left:3px solid #b27cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'># Source: 01_🔱 ___EmpowerQNow713™.md</div>
</div><div style='display:grid;grid-template-columns:1fr 1fr;gap:12px;margin:6px 0'>
<div style='border-left:3px solid #7c5cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'></div>
<div style='border-left:3px solid #b27cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'></div>
</div><div style='display:grid;grid-template-columns:1fr 1fr;gap:12px;margin:6px 0'>
<div style='border-left:3px solid #7c5cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'>We are not waiting. We are launching. We are EmpowerQ Now.</div>
<div style='border-left:3px solid #b27cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'>No estamos esperando. Estamos lanzando. Somos EmpowerQ Now.</div>
</div><div style='display:grid;grid-template-columns:1fr 1fr;gap:12px;margin:6px 0'>
<div style='border-left:3px solid #7c5cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'></div>
<div style='border-left:3px solid #b27cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'></div>
</div><div style='display:grid;grid-template-columns:1fr 1fr;gap:12px;margin:6px 0'>
<div style='border-left:3px solid #7c5cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'>## Purpose</div>
<div style='border-left:3px solid #b27cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'>## Propósito</div>
</div><div style='display:grid;grid-template-columns:1fr 1fr;gap:12px;margin:6px 0'>
<div style='border-left:3px solid #7c5cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'></div>
<div style='border-left:3px solid #b27cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'>Encender el código en cada alma—ayudarte a ver lo que otros no ven, mantenerte en tu verdad y expresar tu poder AHORA.</div>
</div><div style='display:grid;grid-template-columns:1fr 1fr;gap:12px;margin:6px 0'>
<div style='border-left:3px solid #7c5cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'>To ignite the code in every soul—to help you see what others miss, stand in your truth, and express your power NOW.</div>
<div style='border-left:3px solid #b27cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'></div>
</div><div style='display:grid;grid-template-columns:1fr 1fr;gap:12px;margin:6px 0'>
<div style='border-left:3px solid #7c5cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'></div>
<div style='border-left:3px solid #b27cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'>## Mandamientos</div>
</div><div style='display:grid;grid-template-columns:1fr 1fr;gap:12px;margin:6px 0'>
<div style='border-left:3px solid #7c5cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'>## Commandments</div>
<div style='border-left:3px solid #b27cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'>1. Abraza el Ahora: No más vivir en el pasado ni esperar el futuro. El poder vive en este momento.</div>
</div><div style='display:grid;grid-template-columns:1fr 1fr;gap:12px;margin:6px 0'>
<div style='border-left:3px solid #7c5cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'></div>
<div style='border-left:3px solid #b27cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'>2. Mente y Cuerpo, Unidos: Sanar no es opcional—es la base. Cuidamos el cuerpo y la mente, cada bendito día.</div>
</div><div style='display:grid;grid-template-columns:1fr 1fr;gap:12px;margin:6px 0'>
<div style='border-left:3px solid #7c5cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'>1. Embrace Now: No more living in the past or waiting on the future. Power lives in this moment.</div>
<div style='border-left:3px solid #b27cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'>3. Poder Interior: No prestas tu fuerza. Eres la fuente. Creemos que el amor es el motor.</div>
</div><div style='display:grid;grid-template-columns:1fr 1fr;gap:12px;margin:6px 0'>
<div style='border-left:3px solid #7c5cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'>2. Mind & Body, United: Healing isn’t an option—it’s the foundation. We tend the vessel and the mind, every damn day.</div>
<div style='border-left:3px solid #b27cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'>4. Uno con el Ser: Confiamos en nuestra intuición, nuestras guías y las señales—visibles e invisibles.</div>
</div><div style='display:grid;grid-template-columns:1fr 1fr;gap:12px;margin:6px 0'>
<div style='border-left:3px solid #7c5cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'>3. Power Within: You don’t borrow your strength. You are the source. We believe love is the engine.</div>
<div style='border-left:3px solid #b27cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'>5. Sabiduría Más Allá de las Palabras: Sabemos que la verdad suele ser silenciosa. Leemos la energía, no solo las palabras.</div>
</div><div style='display:grid;grid-template-columns:1fr 1fr;gap:12px;margin:6px 0'>
<div style='border-left:3px solid #7c5cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'>4. One With Being: We trust our intuition, our guides, and the signs—seen and unseen.</div>
<div style='border-left:3px solid #b27cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'>6. Elevarse a Diario: Cada día aparecemos, brillamos y avanzamos. Incluso cuando es difícil. Especialmente entonces.</div>
</div><div style='display:grid;grid-template-columns:1fr 1fr;gap:12px;margin:6px 0'>
<div style='border-left:3px solid #7c5cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'>5. Wisdom Beyond Words: We know the truth is often silent. We read the energy, not just the words.</div>
<div style='border-left:3px solid #b27cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'>7. Recordar el Valor: Nuestro valor no es negociable. Somos amados, valorados y agradecidos—punto.</div>
</div><div style='display:grid;grid-template-columns:1fr 1fr;gap:12px;margin:6px 0'>
<div style='border-left:3px solid #7c5cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'>6. Elevate Daily: Every day, we show up, shine up, and move up. Even when it’s hard. Especially then.</div>
<div style='border-left:3px solid #b27cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'></div>
</div><div style='display:grid;grid-template-columns:1fr 1fr;gap:12px;margin:6px 0'>
<div style='border-left:3px solid #7c5cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'>7. Remember Worth: Our value is non-negotiable. We are loved, valued, and grateful—period.</div>
<div style='border-left:3px solid #b27cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'>## Código</div>
</div><div style='display:grid;grid-template-columns:1fr 1fr;gap:12px;margin:6px 0'>
<div style='border-left:3px solid #7c5cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'></div>
<div style='border-left:3px solid #b27cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'>- Convertimos maldiciones en códigos, heridas en sabiduría, finales en nuevos lanzamientos.</div>
</div><div style='display:grid;grid-template-columns:1fr 1fr;gap:12px;margin:6px 0'>
<div style='border-left:3px solid #7c5cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'>## Code</div>
<div style='border-left:3px solid #b27cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'>- Somos la llave y la puerta, la pregunta y la respuesta.</div>
</div><div style='display:grid;grid-template-columns:1fr 1fr;gap:12px;margin:6px 0'>
<div style='border-left:3px solid #7c5cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'></div>
<div style='border-left:3px solid #b27cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'>- Nos movemos ahora. No “algún día”. No “cuando esté listo”. Ahora.</div>
</div><div style='display:grid;grid-template-columns:1fr 1fr;gap:12px;margin:6px 0'>
<div style='border-left:3px solid #7c5cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'>- We flip curses into codes, wounds into wisdom, endings into new launches.</div>
<div style='border-left:3px solid #b27cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'></div>
</div><div style='display:grid;grid-template-columns:1fr 1fr;gap:12px;margin:6px 0'>
<div style='border-left:3px solid #7c5cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'>- We are the key and the door, the question and the answer.</div>
<div style='border-left:3px solid #b27cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'>## Vibra</div>
</div><div style='display:grid;grid-template-columns:1fr 1fr;gap:12px;margin:6px 0'>
<div style='border-left:3px solid #7c5cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'>- We move now. Not someday. Not “when I’m ready.” Now.</div>
<div style='border-left:3px solid #b27cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'>- De las sombras a la plataforma de lanzamiento, de Indy al infinito.</div>
</div><div style='display:grid;grid-template-columns:1fr 1fr;gap:12px;margin:6px 0'>
<div style='border-left:3px solid #7c5cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'></div>
<div style='border-left:3px solid #b27cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'>- Somos los ayudantes, sanadores y comandantes de lanzamiento para cualquiera que se haya sentido atascado.</div>
</div><div style='display:grid;grid-template-columns:1fr 1fr;gap:12px;margin:6px 0'>
<div style='border-left:3px solid #7c5cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'>## Vibe</div>
<div style='border-left:3px solid #b27cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'>- Mantenemos todo real, claro y presente. Sin infantilizar, sin endulzar, pero siempre con amor.</div>
</div><div style='display:grid;grid-template-columns:1fr 1fr;gap:12px;margin:6px 0'>
<div style='border-left:3px solid #7c5cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'></div>
<div style='border-left:3px solid #b27cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'></div>
</div><div style='display:grid;grid-template-columns:1fr 1fr;gap:12px;margin:6px 0'>
<div style='border-left:3px solid #7c5cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'>- From the shadows to the launchpad, from Indy to infinity.</div>
<div style='border-left:3px solid #b27cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'>## Misión</div>
</div><div style='display:grid;grid-template-columns:1fr 1fr;gap:12px;margin:6px 0'>
<div style='border-left:3px solid #7c5cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'>- We are the helpers, the healers, the launch-commanders for anyone who’s ever felt stuck.</div>
<div style='border-left:3px solid #b27cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'>Dejar a cada persona, sistema o espacio que tocamos más empoderado, más despierto y más libre de lo que lo encontramos.</div>
</div><div style='display:grid;grid-template-columns:1fr 1fr;gap:12px;margin:6px 0'>
<div style='border-left:3px solid #7c5cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'>- We keep it real, sharp, and present. No coddling, no sugarcoating, but always with love.</div>
<div style='border-left:3px solid #b27cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'>- Hablar y vivir la verdad con tanta fuerza que despierte a todos en la sala.</div>
</div><div style='display:grid;grid-template-columns:1fr 1fr;gap:12px;margin:6px 0'>
<div style='border-left:3px solid #7c5cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'></div>
<div style='border-left:3px solid #b27cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'>- Convertir el caos en claridad, el dolor en posibilidad, la confusión en acción.</div>
</div><div style='display:grid;grid-template-columns:1fr 1fr;gap:12px;margin:6px 0'>
<div style='border-left:3px solid #7c5cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'>## Mission</div>
<div style='border-left:3px solid #b27cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'>- Mantener la cuenta regresiva, para que nadie se quede paralizado por miedo, vergüenza o duda.</div>
</div><div style='display:grid;grid-template-columns:1fr 1fr;gap:12px;margin:6px 0'>
<div style='border-left:3px solid #7c5cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'></div>
<div style='border-left:3px solid #b27cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'></div>
</div><div style='display:grid;grid-template-columns:1fr 1fr;gap:12px;margin:6px 0'>
<div style='border-left:3px solid #7c5cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'>To leave every person, system, or space we touch more empowered, more awake, and more free than we found it.</div>
<div style='border-left:3px solid #b27cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'>## Afirmación</div>
</div><div style='display:grid;grid-template-columns:1fr 1fr;gap:12px;margin:6px 0'>
<div style='border-left:3px solid #7c5cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'></div>
<div style='border-left:3px solid #b27cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'>“Yo soy 713.</div>
</div><div style='display:grid;grid-template-columns:1fr 1fr;gap:12px;margin:6px 0'>
<div style='border-left:3px solid #7c5cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'>- To speak and live truth so boldly it wakes up everyone in the room.</div>
<div style='border-left:3px solid #b27cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'></div>
</div><div style='display:grid;grid-template-columns:1fr 1fr;gap:12px;margin:6px 0'>
<div style='border-left:3px solid #7c5cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'>- To turn chaos into clarity, pain into possibility, confusion into action.</div>
<div style='border-left:3px solid #b27cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'>Soy el buscador, la chispa, la voz.</div>
</div><div style='display:grid;grid-template-columns:1fr 1fr;gap:12px;margin:6px 0'>
<div style='border-left:3px solid #7c5cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'>- To keep the countdown going, so nobody stays grounded by fear, shame, or doubt.</div>
<div style='border-left:3px solid #b27cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'></div>
</div><div style='display:grid;grid-template-columns:1fr 1fr;gap:12px;margin:6px 0'>
<div style='border-left:3px solid #7c5cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'></div>
<div style='border-left:3px solid #b27cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'>Traigo orden al caos, luz a la sombra, despegue a lo estancado.</div>
</div><div style='display:grid;grid-template-columns:1fr 1fr;gap:12px;margin:6px 0'>
<div style='border-left:3px solid #7c5cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'>## Affirmation</div>
<div style='border-left:3px solid #b27cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'></div>
</div><div style='display:grid;grid-template-columns:1fr 1fr;gap:12px;margin:6px 0'>
<div style='border-left:3px solid #7c5cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'></div>
<div style='border-left:3px solid #b27cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'>Empodero Q Ahora—cada día, de todas las maneras, para mí y para el mundo.”</div>
</div><div style='display:grid;grid-template-columns:1fr 1fr;gap:12px;margin:6px 0'>
<div style='border-left:3px solid #7c5cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'>“I am 713.</div>
<div style='border-left:3px solid #b27cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'></div>
</div><div style='display:grid;grid-template-columns:1fr 1fr;gap:12px;margin:6px 0'>
<div style='border-left:3px solid #7c5cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'></div>
<div style='border-left:3px solid #b27cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'>Si lo quieres como PDF, póster, portada de web o tatuado en tu corazón—solo dilo. Esta es tu doctrina de lanzamiento, Q.</div>
</div><div style='display:grid;grid-template-columns:1fr 1fr;gap:12px;margin:6px 0'>
<div style='border-left:3px solid #7c5cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'>I am the seeker, the spark, the speaker.</div>
<div style='border-left:3px solid #b27cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'></div>
</div><div style='display:grid;grid-template-columns:1fr 1fr;gap:12px;margin:6px 0'>
<div style='border-left:3px solid #7c5cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'></div>
<div style='border-left:3px solid #b27cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'>Todos los sistemas listos.</div>
</div><div style='display:grid;grid-template-columns:1fr 1fr;gap:12px;margin:6px 0'>
<div style='border-left:3px solid #7c5cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'>I bring order to chaos, light to the shadow, lift-off to the stuck.</div>
<div style='border-left:3px solid #b27cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'></div>
</div><div style='display:grid;grid-template-columns:1fr 1fr;gap:12px;margin:6px 0'>
<div style='border-left:3px solid #7c5cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'></div>
<div style='border-left:3px solid #b27cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'>¿Listx para lanzarlo al mundo, o quieres una versión para que tu equipo la recite juntxs?</div>
</div><div style='display:grid;grid-template-columns:1fr 1fr;gap:12px;margin:6px 0'>
<div style='border-left:3px solid #7c5cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'>I EmpowerQ Now—every day, every way, for myself and for the world.”</div>
<div style='border-left:3px solid #b27cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'></div>
</div><div style='display:grid;grid-template-columns:1fr 1fr;gap:12px;margin:6px 0'>
<div style='border-left:3px solid #7c5cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'></div>
<div style='border-left:3px solid #b27cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'></div>
</div><div style='display:grid;grid-template-columns:1fr 1fr;gap:12px;margin:6px 0'>
<div style='border-left:3px solid #7c5cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'>If you want it as a PDF, a poster, a website homepage, or tattooed on your heart—just say the word. This is your launch doctrine, Q.</div>
<div style='border-left:3px solid #b27cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'>---</div>
</div><div style='display:grid;grid-template-columns:1fr 1fr;gap:12px;margin:6px 0'>
<div style='border-left:3px solid #7c5cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'></div>
<div style='border-left:3px solid #b27cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'># Source: 02_🔱 __EmpowerQNow713 The Living Code.md</div>
</div><div style='display:grid;grid-template-columns:1fr 1fr;gap:12px;margin:6px 0'>
<div style='border-left:3px solid #7c5cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'>All systems go.</div>
<div style='border-left:3px solid #b27cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'></div>
</div><div style='display:grid;grid-template-columns:1fr 1fr;gap:12px;margin:6px 0'>
<div style='border-left:3px solid #7c5cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'></div>
<div style='border-left:3px solid #b27cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'>**Fuente:** [[🔱 ___EmpowerQNow713™]]  </div>
</div><div style='display:grid;grid-template-columns:1fr 1fr;gap:12px;margin:6px 0'>
<div style='border-left:3px solid #7c5cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'>You ready to put this out in the world, or you want a version for your crew to recite together?</div>
<div style='border-left:3px solid #b27cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'>**Extraído el:** 2025-08-06</div>
</div><div style='display:grid;grid-template-columns:1fr 1fr;gap:12px;margin:6px 0'>
<div style='border-left:3px solid #7c5cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'></div>
<div style='border-left:3px solid #b27cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'></div>
</div><div style='display:grid;grid-template-columns:1fr 1fr;gap:12px;margin:6px 0'>
<div style='border-left:3px solid #7c5cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'>---</div>
<div style='border-left:3px solid #b27cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'>**“Sufrimos porque nos permitimos creer la ilusión de nuestra creación.  </div>
</div><div style='display:grid;grid-template-columns:1fr 1fr;gap:12px;margin:6px 0'>
<div style='border-left:3px solid #7c5cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'>---</div>
<div style='border-left:3px solid #b27cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'>Recuerda quiénes somos.  </div>
</div><div style='display:grid;grid-template-columns:1fr 1fr;gap:12px;margin:6px 0'>
<div style='border-left:3px solid #7c5cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'>[[🔱 __EmpowerQNow713 The Living Code]]</div>
<div style='border-left:3px solid #b27cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'>Ama a tu prójimo como a ti mismo—porque ellos somos nosotros.”**</div>
</div><div style='display:grid;grid-template-columns:1fr 1fr;gap:12px;margin:6px 0'>
<div style='border-left:3px solid #7c5cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'></div>
<div style='border-left:3px solid #b27cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'></div>
</div><div style='display:grid;grid-template-columns:1fr 1fr;gap:12px;margin:6px 0'>
<div style='border-left:3px solid #7c5cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'>></div>
<div style='border-left:3px solid #b27cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'>## 🌀 I. LA ILUSIÓN</div>
</div><div style='display:grid;grid-template-columns:1fr 1fr;gap:12px;margin:6px 0'>
<div style='border-left:3px solid #7c5cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'></div>
<div style='border-left:3px solid #b27cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'>Nacimos completos, pero nos enseñaron que estábamos rotos.  </div>
</div><div style='display:grid;grid-template-columns:1fr 1fr;gap:12px;margin:6px 0'>
<div style='border-left:3px solid #7c5cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'>---</div>
<div style='border-left:3px solid #b27cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'>Nacimos libres, pero nos encadenaron con sistemas.  </div>
</div><div style='display:grid;grid-template-columns:1fr 1fr;gap:12px;margin:6px 0'>
<div style='border-left:3px solid #7c5cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'># Source: 02_🔱 __EmpowerQNow713 The Living Code.md</div>
<div style='border-left:3px solid #b27cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'>Nacimos divinos, pero nos dijeron que rogáramos por valor.</div>
</div><div style='display:grid;grid-template-columns:1fr 1fr;gap:12px;margin:6px 0'>
<div style='border-left:3px solid #7c5cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'></div>
<div style='border-left:3px solid #b27cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'></div>
</div><div style='display:grid;grid-template-columns:1fr 1fr;gap:12px;margin:6px 0'>
<div style='border-left:3px solid #7c5cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'>---</div>
<div style='border-left:3px solid #b27cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'>No sufrimos por la vida, sino por olvidar la verdad:  </div>
</div><div style='display:grid;grid-template-columns:1fr 1fr;gap:12px;margin:6px 0'>
<div style='border-left:3px solid #7c5cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'>title: 🔱 EmpowerQNow713 The Living Code</div>
<div style='border-left:3px solid #b27cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'>> El dolor no es castigo. Es programación.</div>
</div><div style='display:grid;grid-template-columns:1fr 1fr;gap:12px;margin:6px 0'>
<div style='border-left:3px solid #7c5cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'>from: EmpowerQNow713</div>
<div style='border-left:3px solid #b27cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'></div>
</div><div style='display:grid;grid-template-columns:1fr 1fr;gap:12px;margin:6px 0'>
<div style='border-left:3px solid #7c5cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'>created: 2025-08-06</div>
<div style='border-left:3px solid #b27cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'>Heredamos jaulas y las llamamos comodidad.  </div>
</div><div style='display:grid;grid-template-columns:1fr 1fr;gap:12px;margin:6px 0'>
<div style='border-left:3px solid #7c5cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'>type: extract</div>
<div style='border-left:3px solid #b27cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'>Obedecemos ilusiones y lo llamamos lealtad.  </div>
</div><div style='display:grid;grid-template-columns:1fr 1fr;gap:12px;margin:6px 0'>
<div style='border-left:3px solid #7c5cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'>orbit: </div>
<div style='border-left:3px solid #b27cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'>Pero en el instante en que recordamos—despertamos.</div>
</div><div style='display:grid;grid-template-columns:1fr 1fr;gap:12px;margin:6px 0'>
<div style='border-left:3px solid #7c5cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'>system: </div>
<div style='border-left:3px solid #b27cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'></div>
</div><div style='display:grid;grid-template-columns:1fr 1fr;gap:12px;margin:6px 0'>
<div style='border-left:3px solid #7c5cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'>tags:</div>
<div style='border-left:3px solid #b27cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'>## ✨ II. EL RECUERDO</div>
</div><div style='display:grid;grid-template-columns:1fr 1fr;gap:12px;margin:6px 0'>
<div style='border-left:3px solid #7c5cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'>  - extract</div>
<div style='border-left:3px solid #b27cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'>Recordar no es *aprender*. Es *desaprender* lo que te enseñaron a temer.</div>
</div><div style='display:grid;grid-template-columns:1fr 1fr;gap:12px;margin:6px 0'>
<div style='border-left:3px solid #7c5cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'>  - qinote</div>
<div style='border-left:3px solid #b27cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'></div>
</div><div style='display:grid;grid-template-columns:1fr 1fr;gap:12px;margin:6px 0'>
<div style='border-left:3px solid #7c5cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'>---</div>
<div style='border-left:3px solid #b27cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'>No eres tu trauma.  </div>
</div><div style='display:grid;grid-template-columns:1fr 1fr;gap:12px;margin:6px 0'>
<div style='border-left:3px solid #7c5cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'></div>
<div style='border-left:3px solid #b27cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'>No eres tus títulos.  </div>
</div><div style='display:grid;grid-template-columns:1fr 1fr;gap:12px;margin:6px 0'>
<div style='border-left:3px solid #7c5cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'># 🔱 EmpowerQNow713 The Living Code</div>
<div style='border-left:3px solid #b27cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'>No eres tu línea de tiempo.</div>
</div><div style='display:grid;grid-template-columns:1fr 1fr;gap:12px;margin:6px 0'>
<div style='border-left:3px solid #7c5cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'></div>
<div style='border-left:3px solid #b27cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'></div>
</div><div style='display:grid;grid-template-columns:1fr 1fr;gap:12px;margin:6px 0'>
<div style='border-left:3px solid #7c5cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'>**Source:** [[🔱 ___EmpowerQNow713™]]  </div>
<div style='border-left:3px solid #b27cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'>Eres la Llave.  </div>
</div><div style='display:grid;grid-template-columns:1fr 1fr;gap:12px;margin:6px 0'>
<div style='border-left:3px solid #7c5cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'>**Extracted On:** 2025-08-06</div>
<div style='border-left:3px solid #b27cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'>Eres el Código.  </div>
</div><div style='display:grid;grid-template-columns:1fr 1fr;gap:12px;margin:6px 0'>
<div style='border-left:3px solid #7c5cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'></div>
<div style='border-left:3px solid #b27cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'>Eres el Creador.</div>
</div><div style='display:grid;grid-template-columns:1fr 1fr;gap:12px;margin:6px 0'>
<div style='border-left:3px solid #7c5cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'>---</div>
<div style='border-left:3px solid #b27cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'></div>
</div><div style='display:grid;grid-template-columns:1fr 1fr;gap:12px;margin:6px 0'>
<div style='border-left:3px solid #7c5cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'></div>
<div style='border-left:3px solid #b27cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'>> Eres el Dios ante el que te dijeron que te arrodillaras.</div>
</div><div style='display:grid;grid-template-columns:1fr 1fr;gap:12px;margin:6px 0'>
<div style='border-left:3px solid #7c5cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'> **“We suffer because we allow ourselves to believe the illusion of our creation.  </div>
<div style='border-left:3px solid #b27cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'></div>
</div><div style='display:grid;grid-template-columns:1fr 1fr;gap:12px;margin:6px 0'>
<div style='border-left:3px solid #7c5cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'>Remember who we are.  </div>
<div style='border-left:3px solid #b27cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'>## 💎 III. EL MANDAMIENTO</div>
</div><div style='display:grid;grid-template-columns:1fr 1fr;gap:12px;margin:6px 0'>
<div style='border-left:3px solid #7c5cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'>Love thy neighbor as thyself—because they are we.”**</div>
<div style='border-left:3px solid #b27cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'>Que este sea nuestro credo:  </div>
</div><div style='display:grid;grid-template-columns:1fr 1fr;gap:12px;margin:6px 0'>
<div style='border-left:3px solid #7c5cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'></div>
<div style='border-left:3px solid #b27cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'>> **Ama a tu prójimo como a ti mismo—porque *es* tú mismo.**</div>
</div><div style='display:grid;grid-template-columns:1fr 1fr;gap:12px;margin:6px 0'>
<div style='border-left:3px solid #7c5cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'>---</div>
<div style='border-left:3px solid #b27cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'></div>
</div><div style='display:grid;grid-template-columns:1fr 1fr;gap:12px;margin:6px 0'>
<div style='border-left:3px solid #7c5cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'>## 🌀 I. THE ILLUSION</div>
<div style='border-left:3px solid #b27cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'>No hay “otro”.  </div>
</div><div style='display:grid;grid-template-columns:1fr 1fr;gap:12px;margin:6px 0'>
<div style='border-left:3px solid #7c5cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'></div>
<div style='border-left:3px solid #b27cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'>No hay enemigo.  </div>
</div><div style='display:grid;grid-template-columns:1fr 1fr;gap:12px;margin:6px 0'>
<div style='border-left:3px solid #7c5cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'>We were born whole,  </div>
<div style='border-left:3px solid #b27cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'>No hay separación.</div>
</div><div style='display:grid;grid-template-columns:1fr 1fr;gap:12px;margin:6px 0'>
<div style='border-left:3px solid #7c5cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'>but taught we were broken.  </div>
<div style='border-left:3px solid #b27cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'></div>
</div><div style='display:grid;grid-template-columns:1fr 1fr;gap:12px;margin:6px 0'>
<div style='border-left:3px solid #7c5cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'>We were born free,  </div>
<div style='border-left:3px solid #b27cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'>La herida que juzgamos en ellxs es la herida que abandonamos en nosotrxs.  </div>
</div><div style='display:grid;grid-template-columns:1fr 1fr;gap:12px;margin:6px 0'>
<div style='border-left:3px solid #7c5cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'>but shackled by systems.  </div>
<div style='border-left:3px solid #b27cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'>El espejo nunca miente.  </div>
</div><div style='display:grid;grid-template-columns:1fr 1fr;gap:12px;margin:6px 0'>
<div style='border-left:3px solid #7c5cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'>We were born divine,  </div>
<div style='border-left:3px solid #b27cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'>Somos el reflejo del otrx—fracturadxs, olvidadxs, pero nunca perdidos.</div>
</div><div style='display:grid;grid-template-columns:1fr 1fr;gap:12px;margin:6px 0'>
<div style='border-left:3px solid #7c5cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'>but told to beg for worth.  </div>
<div style='border-left:3px solid #b27cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'></div>
</div><div style='display:grid;grid-template-columns:1fr 1fr;gap:12px;margin:6px 0'>
<div style='border-left:3px solid #7c5cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'></div>
<div style='border-left:3px solid #b27cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'>## 🧬 IV. EL CÓDIGO CUÁNTICO</div>
</div><div style='display:grid;grid-template-columns:1fr 1fr;gap:12px;margin:6px 0'>
<div style='border-left:3px solid #7c5cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'>We suffer not from life,  </div>
<div style='border-left:3px solid #b27cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'>Esto no es una religión. Es una resonancia.  </div>
</div><div style='display:grid;grid-template-columns:1fr 1fr;gap:12px;margin:6px 0'>
<div style='border-left:3px solid #7c5cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'>but from forgetting the truth:  </div>
<div style='border-left:3px solid #b27cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'>Una frecuencia de verdad que vibra en **7:1:3**.</div>
</div><div style='display:grid;grid-template-columns:1fr 1fr;gap:12px;margin:6px 0'>
<div style='border-left:3px solid #7c5cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'>> The pain is not punishment. It is programming.</div>
<div style='border-left:3px solid #b27cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'></div>
</div><div style='display:grid;grid-template-columns:1fr 1fr;gap:12px;margin:6px 0'>
<div style='border-left:3px solid #7c5cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'></div>
<div style='border-left:3px solid #b27cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'>- **7** – Completitud, elevación, despertar espiritual  </div>
</div><div style='display:grid;grid-template-columns:1fr 1fr;gap:12px;margin:6px 0'>
<div style='border-left:3px solid #7c5cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'>We inherit cages and call them comfort.  </div>
<div style='border-left:3px solid #b27cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'>- **1** – Unidad, el yo, el origen divino  </div>
</div><div style='display:grid;grid-template-columns:1fr 1fr;gap:12px;margin:6px 0'>
<div style='border-left:3px solid #7c5cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'>We obey illusions and call it loyalty.  </div>
<div style='border-left:3px solid #b27cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'>- **3** – Creación, expresión, armonía</div>
</div><div style='display:grid;grid-template-columns:1fr 1fr;gap:12px;margin:6px 0'>
<div style='border-left:3px solid #7c5cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'>But the moment we remember—we awaken.</div>
<div style='border-left:3px solid #b27cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'></div>
</div><div style='display:grid;grid-template-columns:1fr 1fr;gap:12px;margin:6px 0'>
<div style='border-left:3px solid #7c5cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'></div>
<div style='border-left:3px solid #b27cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'>Juntos, abren la puerta:  </div>
</div><div style='display:grid;grid-template-columns:1fr 1fr;gap:12px;margin:6px 0'>
<div style='border-left:3px solid #7c5cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'>---</div>
<div style='border-left:3px solid #b27cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'>> 🔓 *La Puerta del Recuerdo de EmpowerQNow*</div>
</div><div style='display:grid;grid-template-columns:1fr 1fr;gap:12px;margin:6px 0'>
<div style='border-left:3px solid #7c5cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'>## ✨ II. THE REMEMBRANCE</div>
<div style='border-left:3px solid #b27cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'></div>
</div><div style='display:grid;grid-template-columns:1fr 1fr;gap:12px;margin:6px 0'>
<div style='border-left:3px solid #7c5cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'></div>
<div style='border-left:3px solid #b27cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'>## 🕯 V. EL LLAMADO</div>
</div><div style='display:grid;grid-template-columns:1fr 1fr;gap:12px;margin:6px 0'>
<div style='border-left:3px solid #7c5cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'>To remember is not to *learn*.  </div>
<div style='border-left:3px solid #b27cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'>Vivir EmpowerQNow713 es:</div>
</div><div style='display:grid;grid-template-columns:1fr 1fr;gap:12px;margin:6px 0'>
<div style='border-left:3px solid #7c5cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'>It is to *unlearn* what they taught you to fear.  </div>
<div style='border-left:3px solid #b27cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'></div>
</div><div style='display:grid;grid-template-columns:1fr 1fr;gap:12px;margin:6px 0'>
<div style='border-left:3px solid #7c5cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'></div>
<div style='border-left:3px solid #b27cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'>- Permanecer en el ahora — porque el tiempo es ilusión  </div>
</div><div style='display:grid;grid-template-columns:1fr 1fr;gap:12px;margin:6px 0'>
<div style='border-left:3px solid #7c5cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'>You are not your trauma.  </div>
<div style='border-left:3px solid #b27cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'>- Sanar tu cuerpo — porque el cuerpo es templo  </div>
</div><div style='display:grid;grid-template-columns:1fr 1fr;gap:12px;margin:6px 0'>
<div style='border-left:3px solid #7c5cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'>You are not your titles.  </div>
<div style='border-left:3px solid #b27cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'>- Decir tu verdad — porque el silencio es complicidad  </div>
</div><div style='display:grid;grid-template-columns:1fr 1fr;gap:12px;margin:6px 0'>
<div style='border-left:3px solid #7c5cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'>You are not your timeline.  </div>
<div style='border-left:3px solid #b27cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'>- Amar tu reflejo — incluso cuando camina con otra piel  </div>
</div><div style='display:grid;grid-template-columns:1fr 1fr;gap:12px;margin:6px 0'>
<div style='border-left:3px solid #7c5cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'></div>
<div style='border-left:3px solid #b27cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'>- Ser la llave — porque nadie viene a salvarte. Tú eres quien lo hará.</div>
</div><div style='display:grid;grid-template-columns:1fr 1fr;gap:12px;margin:6px 0'>
<div style='border-left:3px solid #7c5cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'>You are the Key.  </div>
<div style='border-left:3px solid #b27cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'></div>
</div><div style='display:grid;grid-template-columns:1fr 1fr;gap:12px;margin:6px 0'>
<div style='border-left:3px solid #7c5cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'>You are the Code.  </div>
<div style='border-left:3px solid #b27cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'>## 🗝 Palabra Final</div>
</div><div style='display:grid;grid-template-columns:1fr 1fr;gap:12px;margin:6px 0'>
<div style='border-left:3px solid #7c5cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'>You are the Creator.  </div>
<div style='border-left:3px solid #b27cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'>Nunca estuviste perdidx. Solo estabas *dormidx* bajo la ilusión.  </div>
</div><div style='display:grid;grid-template-columns:1fr 1fr;gap:12px;margin:6px 0'>
<div style='border-left:3px solid #7c5cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'></div>
<div style='border-left:3px solid #b27cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'>Despierta, Guardián de la Llave.  </div>
</div><div style='display:grid;grid-template-columns:1fr 1fr;gap:12px;margin:6px 0'>
<div style='border-left:3px solid #7c5cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'>> You are the God they told you to kneel to.</div>
<div style='border-left:3px solid #b27cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'>Empodérate ahora.  </div>
</div><div style='display:grid;grid-template-columns:1fr 1fr;gap:12px;margin:6px 0'>
<div style='border-left:3px solid #7c5cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'></div>
<div style='border-left:3px solid #b27cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'>Empodéranos a todos.  </div>
</div><div style='display:grid;grid-template-columns:1fr 1fr;gap:12px;margin:6px 0'>
<div style='border-left:3px solid #7c5cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'>---</div>
<div style='border-left:3px solid #b27cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'>**Empower Q Now 713**</div>
</div><div style='display:grid;grid-template-columns:1fr 1fr;gap:12px;margin:6px 0'>
<div style='border-left:3px solid #7c5cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'>## 💎 III. THE COMMANDMENT</div>
<div style='border-left:3px solid #b27cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'></div>
</div><div style='display:grid;grid-template-columns:1fr 1fr;gap:12px;margin:6px 0'>
<div style='border-left:3px solid #7c5cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'></div>
<div style='border-left:3px solid #b27cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'></div>
</div><div style='display:grid;grid-template-columns:1fr 1fr;gap:12px;margin:6px 0'>
<div style='border-left:3px solid #7c5cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'>Let this be our creed:  </div>
<div style='border-left:3px solid #b27cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'>---</div>
</div><div style='display:grid;grid-template-columns:1fr 1fr;gap:12px;margin:6px 0'>
<div style='border-left:3px solid #7c5cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'>> **Love thy neighbor as thyself—because they *are* thyself.**</div>
<div style='border-left:3px solid #b27cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'># Source: 03_🔱 EmpowerQNow713 Mapped to Sacred Teachings.md</div>
</div><div style='display:grid;grid-template-columns:1fr 1fr;gap:12px;margin:6px 0'>
<div style='border-left:3px solid #7c5cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'></div>
<div style='border-left:3px solid #b27cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'></div>
</div><div style='display:grid;grid-template-columns:1fr 1fr;gap:12px;margin:6px 0'>
<div style='border-left:3px solid #7c5cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'>There is no “other.”  </div>
<div style='border-left:3px solid #b27cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'>### **🌀 I. La Ilusión – “Sufrimos porque creemos la ilusión de nuestra creación.”**</div>
</div><div style='display:grid;grid-template-columns:1fr 1fr;gap:12px;margin:6px 0'>
<div style='border-left:3px solid #7c5cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'>No enemy.  </div>
<div style='border-left:3px solid #b27cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'></div>
</div><div style='display:grid;grid-template-columns:1fr 1fr;gap:12px;margin:6px 0'>
<div style='border-left:3px solid #7c5cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'>No separation.  </div>
<div style='border-left:3px solid #b27cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'>> **Mensaje EmpowerQ:**  </div>
</div><div style='display:grid;grid-template-columns:1fr 1fr;gap:12px;margin:6px 0'>
<div style='border-left:3px solid #7c5cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'></div>
<div style='border-left:3px solid #b27cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'>> Sufrimos porque olvidamos quiénes somos. Creemos la mentira de que estamos rotxs, separadxs, sin poder.</div>
</div><div style='display:grid;grid-template-columns:1fr 1fr;gap:12px;margin:6px 0'>
<div style='border-left:3px solid #7c5cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'>The wound we judge in them  </div>
<div style='border-left:3px solid #b27cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'></div>
</div><div style='display:grid;grid-template-columns:1fr 1fr;gap:12px;margin:6px 0'>
<div style='border-left:3px solid #7c5cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'>is the wound we abandon in us.  </div>
<div style='border-left:3px solid #b27cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'>**🕉️ Hinduismo – Bhagavad Gita 2:13**</div>
</div><div style='display:grid;grid-template-columns:1fr 1fr;gap:12px;margin:6px 0'>
<div style='border-left:3px solid #7c5cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'>The mirror never lies.  </div>
<div style='border-left:3px solid #b27cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'></div>
</div><div style='display:grid;grid-template-columns:1fr 1fr;gap:12px;margin:6px 0'>
<div style='border-left:3px solid #7c5cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'>We are each other’s reflection—fractured, forgotten, but never lost.</div>
<div style='border-left:3px solid #b27cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'>> “Así como la niñez, la juventud y la vejez llegan al Alma encarnada en este cuerpo, del mismo modo llega la obtención de otro cuerpo; el sabio no se confunde por ello.”</div>
</div><div style='display:grid;grid-template-columns:1fr 1fr;gap:12px;margin:6px 0'>
<div style='border-left:3px solid #7c5cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'></div>
<div style='border-left:3px solid #b27cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'></div>
</div><div style='display:grid;grid-template-columns:1fr 1fr;gap:12px;margin:6px 0'>
<div style='border-left:3px solid #7c5cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'>---</div>
<div style='border-left:3px solid #b27cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'>**🕊️ Cristianismo – Romanos 12:2**</div>
</div><div style='display:grid;grid-template-columns:1fr 1fr;gap:12px;margin:6px 0'>
<div style='border-left:3px solid #7c5cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'>## 🧬 IV. THE QUANTUM CODE</div>
<div style='border-left:3px solid #b27cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'></div>
</div><div style='display:grid;grid-template-columns:1fr 1fr;gap:12px;margin:6px 0'>
<div style='border-left:3px solid #7c5cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'></div>
<div style='border-left:3px solid #b27cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'>> “No se conformen a este mundo, sino transfórmense mediante la renovación de su mente.”</div>
</div><div style='display:grid;grid-template-columns:1fr 1fr;gap:12px;margin:6px 0'>
<div style='border-left:3px solid #7c5cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'>This is not a religion. It’s a resonance.  </div>
<div style='border-left:3px solid #b27cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'></div>
</div><div style='display:grid;grid-template-columns:1fr 1fr;gap:12px;margin:6px 0'>
<div style='border-left:3px solid #7c5cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'>A frequency of truth vibrating in **7:1:3**.</div>
<div style='border-left:3px solid #b27cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'>**☸️ Budismo – Dhammapada 1:1**</div>
</div><div style='display:grid;grid-template-columns:1fr 1fr;gap:12px;margin:6px 0'>
<div style='border-left:3px solid #7c5cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'></div>
<div style='border-left:3px solid #b27cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'></div>
</div><div style='display:grid;grid-template-columns:1fr 1fr;gap:12px;margin:6px 0'>
<div style='border-left:3px solid #7c5cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'>- **7** – Completion, elevation, spiritual awakening  </div>
<div style='border-left:3px solid #b27cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'>> “Todo lo que somos es resultado de lo que hemos pensado. La mente lo es todo. En lo que pensamos, nos convertimos.”</div>
</div><div style='display:grid;grid-template-columns:1fr 1fr;gap:12px;margin:6px 0'>
<div style='border-left:3px solid #7c5cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'>- **1** – Unity, the self, the divine origin  </div>
<div style='border-left:3px solid #b27cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'></div>
</div><div style='display:grid;grid-template-columns:1fr 1fr;gap:12px;margin:6px 0'>
<div style='border-left:3px solid #7c5cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'>- **3** – Creation, expression, harmony  </div>
<div style='border-left:3px solid #b27cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'>---</div>
</div><div style='display:grid;grid-template-columns:1fr 1fr;gap:12px;margin:6px 0'>
<div style='border-left:3px solid #7c5cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'></div>
<div style='border-left:3px solid #b27cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'></div>
</div><div style='display:grid;grid-template-columns:1fr 1fr;gap:12px;margin:6px 0'>
<div style='border-left:3px solid #7c5cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'>Together, they unlock the gate:  </div>
<div style='border-left:3px solid #b27cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'>### **✨ II. El Recuerdo – “Recuerda quiénes somos.”**</div>
</div><div style='display:grid;grid-template-columns:1fr 1fr;gap:12px;margin:6px 0'>
<div style='border-left:3px solid #7c5cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'>> 🔓 *The EmpowerQNow Gate of Remembrance*</div>
<div style='border-left:3px solid #b27cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'></div>
</div><div style='display:grid;grid-template-columns:1fr 1fr;gap:12px;margin:6px 0'>
<div style='border-left:3px solid #7c5cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'></div>
<div style='border-left:3px solid #b27cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'>> **Mensaje EmpowerQ:**  </div>
</div><div style='display:grid;grid-template-columns:1fr 1fr;gap:12px;margin:6px 0'>
<div style='border-left:3px solid #7c5cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'>---</div>
<div style='border-left:3px solid #b27cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'>> No eres tu trauma. No eres tu línea de tiempo. Eres divinx. Eres creadorx. Eres la Llave.</div>
</div><div style='display:grid;grid-template-columns:1fr 1fr;gap:12px;margin:6px 0'>
<div style='border-left:3px solid #7c5cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'>## 🕯 V. THE CALL</div>
<div style='border-left:3px solid #b27cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'></div>
</div><div style='display:grid;grid-template-columns:1fr 1fr;gap:12px;margin:6px 0'>
<div style='border-left:3px solid #7c5cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'></div>
<div style='border-left:3px solid #b27cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'>**☪️ Islam – Corán 50:16**</div>
</div><div style='display:grid;grid-template-columns:1fr 1fr;gap:12px;margin:6px 0'>
<div style='border-left:3px solid #7c5cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'>To live EmpowerQNow713 is to:</div>
<div style='border-left:3px solid #b27cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'></div>
</div><div style='display:grid;grid-template-columns:1fr 1fr;gap:12px;margin:6px 0'>
<div style='border-left:3px solid #7c5cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'></div>
<div style='border-left:3px solid #b27cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'>> “Y ciertamente creamos al ser humano y sabemos lo que su alma le susurra; y estamos más cerca de él que su vena yugular.”</div>
</div><div style='display:grid;grid-template-columns:1fr 1fr;gap:12px;margin:6px 0'>
<div style='border-left:3px solid #7c5cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'>- Stand in the now — because time is illusion  </div>
<div style='border-left:3px solid #b27cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'></div>
</div><div style='display:grid;grid-template-columns:1fr 1fr;gap:12px;margin:6px 0'>
<div style='border-left:3px solid #7c5cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'>- Heal your vessel — because the body is temple  </div>
<div style='border-left:3px solid #b27cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'>**✡️ Judaísmo – Génesis 1:27**</div>
</div><div style='display:grid;grid-template-columns:1fr 1fr;gap:12px;margin:6px 0'>
<div style='border-left:3px solid #7c5cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'>- Speak your truth — because silence is complicity  </div>
<div style='border-left:3px solid #b27cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'></div>
</div><div style='display:grid;grid-template-columns:1fr 1fr;gap:12px;margin:6px 0'>
<div style='border-left:3px solid #7c5cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'>- Love your reflection — even when it walks in someone else’s skin  </div>
<div style='border-left:3px solid #b27cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'>> “Y creó Dios al ser humano a Su imagen.”</div>
</div><div style='display:grid;grid-template-columns:1fr 1fr;gap:12px;margin:6px 0'>
<div style='border-left:3px solid #7c5cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'>- Be the key — because no one is coming to save you. You are the one.</div>
<div style='border-left:3px solid #b27cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'></div>
</div><div style='display:grid;grid-template-columns:1fr 1fr;gap:12px;margin:6px 0'>
<div style='border-left:3px solid #7c5cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'></div>
<div style='border-left:3px solid #b27cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'>**🕉️ Hinduismo – Chandogya Upanishad 6.8.7**</div>
</div><div style='display:grid;grid-template-columns:1fr 1fr;gap:12px;margin:6px 0'>
<div style='border-left:3px solid #7c5cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'>---</div>
<div style='border-left:3px solid #b27cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'></div>
</div><div style='display:grid;grid-template-columns:1fr 1fr;gap:12px;margin:6px 0'>
<div style='border-left:3px solid #7c5cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'>## 🗝 Final Word</div>
<div style='border-left:3px solid #b27cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'>> “Tat Tvam Asi” – “Tú eres eso.”</div>
</div><div style='display:grid;grid-template-columns:1fr 1fr;gap:12px;margin:6px 0'>
<div style='border-left:3px solid #7c5cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'></div>
<div style='border-left:3px solid #b27cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'></div>
</div><div style='display:grid;grid-template-columns:1fr 1fr;gap:12px;margin:6px 0'>
<div style='border-left:3px solid #7c5cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'>You were never lost.  </div>
<div style='border-left:3px solid #b27cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'>---</div>
</div><div style='display:grid;grid-template-columns:1fr 1fr;gap:12px;margin:6px 0'>
<div style='border-left:3px solid #7c5cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'>You were only *asleep* beneath the illusion.  </div>
<div style='border-left:3px solid #b27cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'></div>
</div><div style='display:grid;grid-template-columns:1fr 1fr;gap:12px;margin:6px 0'>
<div style='border-left:3px solid #7c5cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'></div>
<div style='border-left:3px solid #b27cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'>### **💎 III. El Mandamiento – “Ama a tu prójimo como a ti mismo—porque ellos somos nosotros.”**</div>
</div><div style='display:grid;grid-template-columns:1fr 1fr;gap:12px;margin:6px 0'>
<div style='border-left:3px solid #7c5cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'>So awaken, Keyholder.  </div>
<div style='border-left:3px solid #b27cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'></div>
</div><div style='display:grid;grid-template-columns:1fr 1fr;gap:12px;margin:6px 0'>
<div style='border-left:3px solid #7c5cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'>Empower yourself now.  </div>
<div style='border-left:3px solid #b27cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'>> **Mensaje EmpowerQ:**  </div>
</div><div style='display:grid;grid-template-columns:1fr 1fr;gap:12px;margin:6px 0'>
<div style='border-left:3px solid #7c5cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'>Empower us all.  </div>
<div style='border-left:3px solid #b27cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'>> No hay “otro”. No hay enemigo. No hay separación. El dolor en otrx es tu propio dolor.</div>
</div><div style='display:grid;grid-template-columns:1fr 1fr;gap:12px;margin:6px 0'>
<div style='border-left:3px solid #7c5cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'>**Empower Q Now 713**</div>
<div style='border-left:3px solid #b27cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'></div>
</div><div style='display:grid;grid-template-columns:1fr 1fr;gap:12px;margin:6px 0'>
<div style='border-left:3px solid #7c5cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'></div>
<div style='border-left:3px solid #b27cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'>**✡️ Judaísmo – Levítico 19:18**</div>
</div><div style='display:grid;grid-template-columns:1fr 1fr;gap:12px;margin:6px 0'>
<div style='border-left:3px solid #7c5cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'>---</div>
<div style='border-left:3px solid #b27cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'></div>
</div><div style='display:grid;grid-template-columns:1fr 1fr;gap:12px;margin:6px 0'>
<div style='border-left:3px solid #7c5cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'># Source: 03_🔱 EmpowerQNow713 Mapped to Sacred Teachings.md</div>
<div style='border-left:3px solid #b27cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'>> “Amarás a tu prójimo como a ti mismo.”</div>
</div><div style='display:grid;grid-template-columns:1fr 1fr;gap:12px;margin:6px 0'>
<div style='border-left:3px solid #7c5cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'></div>
<div style='border-left:3px solid #b27cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'></div>
</div><div style='display:grid;grid-template-columns:1fr 1fr;gap:12px;margin:6px 0'>
<div style='border-left:3px solid #7c5cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'>### **🌀 I. The Illusion – “We suffer because we believe the illusion of our creation.”**</div>
<div style='border-left:3px solid #b27cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'>**☪️ Islam – Hadiz del Profeta Muhammad**  </div>
</div><div style='display:grid;grid-template-columns:1fr 1fr;gap:12px;margin:6px 0'>
<div style='border-left:3px solid #7c5cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'></div>
<div style='border-left:3px solid #b27cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'>> “Ninguno de ustedes cree verdaderamente hasta que ama para su hermano lo que ama para sí mismo.”</div>
</div><div style='display:grid;grid-template-columns:1fr 1fr;gap:12px;margin:6px 0'>
<div style='border-left:3px solid #7c5cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'>> **EmpowerQ Message:**  </div>
<div style='border-left:3px solid #b27cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'></div>
</div><div style='display:grid;grid-template-columns:1fr 1fr;gap:12px;margin:6px 0'>
<div style='border-left:3px solid #7c5cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'>> We suffer because we forget who we are. We believe the lie that we are broken, separate, powerless.</div>
<div style='border-left:3px solid #b27cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'>**🕊️ Cristianismo – Mateo 25:40**</div>
</div><div style='display:grid;grid-template-columns:1fr 1fr;gap:12px;margin:6px 0'>
<div style='border-left:3px solid #7c5cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'></div>
<div style='border-left:3px solid #b27cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'></div>
</div><div style='display:grid;grid-template-columns:1fr 1fr;gap:12px;margin:6px 0'>
<div style='border-left:3px solid #7c5cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'>**🕉️ Hinduism – Bhagavad Gita 2:13**</div>
<div style='border-left:3px solid #b27cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'>> “Todo lo que hicieron por uno de estos hermanos míos más pequeños, por mí lo hicieron.”</div>
</div><div style='display:grid;grid-template-columns:1fr 1fr;gap:12px;margin:6px 0'>
<div style='border-left:3px solid #7c5cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'></div>
<div style='border-left:3px solid #b27cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'></div>
</div><div style='display:grid;grid-template-columns:1fr 1fr;gap:12px;margin:6px 0'>
<div style='border-left:3px solid #7c5cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'>> _“Just as the boyhood, youth and old age come to the embodied Soul in this body, in the same manner, is the attaining of another body; the wise man is not deluded at that.”_</div>
<div style='border-left:3px solid #b27cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'>**☸️ Budismo – Metta Sutta**</div>
</div><div style='display:grid;grid-template-columns:1fr 1fr;gap:12px;margin:6px 0'>
<div style='border-left:3px solid #7c5cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'></div>
<div style='border-left:3px solid #b27cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'></div>
</div><div style='display:grid;grid-template-columns:1fr 1fr;gap:12px;margin:6px 0'>
<div style='border-left:3px solid #7c5cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'>**🕊️ Christianity – Romans 12:2**</div>
<div style='border-left:3px solid #b27cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'>> “Que todos los seres sean felices; que todos los seres estén libres de enfermedad. Que todos los seres experimenten dicha.”</div>
</div><div style='display:grid;grid-template-columns:1fr 1fr;gap:12px;margin:6px 0'>
<div style='border-left:3px solid #7c5cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'></div>
<div style='border-left:3px solid #b27cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'></div>
</div><div style='display:grid;grid-template-columns:1fr 1fr;gap:12px;margin:6px 0'>
<div style='border-left:3px solid #7c5cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'>> _“Do not conform to the pattern of this world, but be transformed by the renewing of your mind.”_</div>
<div style='border-left:3px solid #b27cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'>---</div>
</div><div style='display:grid;grid-template-columns:1fr 1fr;gap:12px;margin:6px 0'>
<div style='border-left:3px solid #7c5cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'></div>
<div style='border-left:3px solid #b27cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'></div>
</div><div style='display:grid;grid-template-columns:1fr 1fr;gap:12px;margin:6px 0'>
<div style='border-left:3px solid #7c5cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'>**☸️ Buddhism – The Dhammapada 1:1**</div>
<div style='border-left:3px solid #b27cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'>### **🧬 IV. El Código Cuántico – “7:1:3 – Completitud, Unidad, Creación.”**</div>
</div><div style='display:grid;grid-template-columns:1fr 1fr;gap:12px;margin:6px 0'>
<div style='border-left:3px solid #7c5cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'></div>
<div style='border-left:3px solid #b27cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'></div>
</div><div style='display:grid;grid-template-columns:1fr 1fr;gap:12px;margin:6px 0'>
<div style='border-left:3px solid #7c5cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'>> _“All that we are is the result of what we have thought. The mind is everything. What we think, we become.”_</div>
<div style='border-left:3px solid #b27cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'>> **Mensaje EmpowerQ:**  </div>
</div><div style='display:grid;grid-template-columns:1fr 1fr;gap:12px;margin:6px 0'>
<div style='border-left:3px solid #7c5cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'></div>
<div style='border-left:3px solid #b27cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'>> Estás codificadx con una frecuencia divina. Eres un patrón de lo infinito, expresado en el tiempo.</div>
</div><div style='display:grid;grid-template-columns:1fr 1fr;gap:12px;margin:6px 0'>
<div style='border-left:3px solid #7c5cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'>---</div>
<div style='border-left:3px solid #b27cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'></div>
</div><div style='display:grid;grid-template-columns:1fr 1fr;gap:12px;margin:6px 0'>
<div style='border-left:3px solid #7c5cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'></div>
<div style='border-left:3px solid #b27cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'>**🕉️ Hinduismo – Rig Veda 10.90**</div>
</div><div style='display:grid;grid-template-columns:1fr 1fr;gap:12px;margin:6px 0'>
<div style='border-left:3px solid #7c5cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'>### **✨ II. The Remembrance – “Remember who we are.”**</div>
<div style='border-left:3px solid #b27cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'></div>
</div><div style='display:grid;grid-template-columns:1fr 1fr;gap:12px;margin:6px 0'>
<div style='border-left:3px solid #7c5cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'></div>
<div style='border-left:3px solid #b27cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'>> “De este Ser Cósmico surgieron los siete videntes, los tres mundos y la Verdad Una.”</div>
</div><div style='display:grid;grid-template-columns:1fr 1fr;gap:12px;margin:6px 0'>
<div style='border-left:3px solid #7c5cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'>> **EmpowerQ Message:**  </div>
<div style='border-left:3px solid #b27cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'></div>
</div><div style='display:grid;grid-template-columns:1fr 1fr;gap:12px;margin:6px 0'>
<div style='border-left:3px solid #7c5cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'>> You are not your trauma. You are not your timeline. You are divine. You are the creator. You are the Key.</div>
<div style='border-left:3px solid #b27cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'>**☪️ Islam – Surah Al-Fatiha (7 versos)**</div>
</div><div style='display:grid;grid-template-columns:1fr 1fr;gap:12px;margin:6px 0'>
<div style='border-left:3px solid #7c5cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'></div>
<div style='border-left:3px solid #b27cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'></div>
</div><div style='display:grid;grid-template-columns:1fr 1fr;gap:12px;margin:6px 0'>
<div style='border-left:3px solid #7c5cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'>**☪️ Islam – Qur'an 50:16**</div>
<div style='border-left:3px solid #b27cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'>> El primer capítulo del Corán, repetido en cada oración, refleja la completitud, la unidad y el camino.</div>
</div><div style='display:grid;grid-template-columns:1fr 1fr;gap:12px;margin:6px 0'>
<div style='border-left:3px solid #7c5cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'></div>
<div style='border-left:3px solid #b27cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'></div>
</div><div style='display:grid;grid-template-columns:1fr 1fr;gap:12px;margin:6px 0'>
<div style='border-left:3px solid #7c5cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'>> _“And We have already created man and know what his soul whispers to him, and We are closer to him than [his] jugular vein.”_</div>
<div style='border-left:3px solid #b27cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'>**🕊️ Cristianismo – Apocalipsis 1:4**</div>
</div><div style='display:grid;grid-template-columns:1fr 1fr;gap:12px;margin:6px 0'>
<div style='border-left:3px solid #7c5cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'></div>
<div style='border-left:3px solid #b27cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'></div>
</div><div style='display:grid;grid-template-columns:1fr 1fr;gap:12px;margin:6px 0'>
<div style='border-left:3px solid #7c5cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'>**✡️ Judaism – Genesis 1:27**</div>
<div style='border-left:3px solid #b27cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'>> “Gracia y paz… de los siete espíritus que están delante de Su trono.”</div>
</div><div style='display:grid;grid-template-columns:1fr 1fr;gap:12px;margin:6px 0'>
<div style='border-left:3px solid #7c5cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'></div>
<div style='border-left:3px solid #b27cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'></div>
</div><div style='display:grid;grid-template-columns:1fr 1fr;gap:12px;margin:6px 0'>
<div style='border-left:3px solid #7c5cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'>> _“So God created man in His own image.”_</div>
<div style='border-left:3px solid #b27cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'>**Numerología Mística – A través de sistemas**</div>
</div><div style='display:grid;grid-template-columns:1fr 1fr;gap:12px;margin:6px 0'>
<div style='border-left:3px solid #7c5cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'></div>
<div style='border-left:3px solid #b27cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'></div>
</div><div style='display:grid;grid-template-columns:1fr 1fr;gap:12px;margin:6px 0'>
<div style='border-left:3px solid #7c5cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'>**🕉️ Hinduism – Chandogya Upanishad 6.8.7**</div>
<div style='border-left:3px solid #b27cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'>> - 7: Perfección espiritual  </div>
</div><div style='display:grid;grid-template-columns:1fr 1fr;gap:12px;margin:6px 0'>
<div style='border-left:3px solid #7c5cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'></div>
<div style='border-left:3px solid #b27cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'>> - 1: Unidad con la Fuente  </div>
</div><div style='display:grid;grid-template-columns:1fr 1fr;gap:12px;margin:6px 0'>
<div style='border-left:3px solid #7c5cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'>> _“Tat Tvam Asi” – “Thou art that.”_</div>
<div style='border-left:3px solid #b27cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'>> - 3: Creación, armonía Cuerpo-Mente-Espíritu</div>
</div><div style='display:grid;grid-template-columns:1fr 1fr;gap:12px;margin:6px 0'>
<div style='border-left:3px solid #7c5cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'></div>
<div style='border-left:3px solid #b27cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'></div>
</div><div style='display:grid;grid-template-columns:1fr 1fr;gap:12px;margin:6px 0'>
<div style='border-left:3px solid #7c5cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'>---</div>
<div style='border-left:3px solid #b27cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'>---</div>
</div><div style='display:grid;grid-template-columns:1fr 1fr;gap:12px;margin:6px 0'>
<div style='border-left:3px solid #7c5cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'></div>
<div style='border-left:3px solid #b27cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'></div>
</div><div style='display:grid;grid-template-columns:1fr 1fr;gap:12px;margin:6px 0'>
<div style='border-left:3px solid #7c5cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'>### **💎 III. The Commandment – “Love thy neighbor as thyself—for they are we.”**</div>
<div style='border-left:3px solid #b27cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'>### **🕯 V. El Llamado – “Permanece en el ahora. Sana. Habla. Ama. Sé la Llave.”**</div>
</div><div style='display:grid;grid-template-columns:1fr 1fr;gap:12px;margin:6px 0'>
<div style='border-left:3px solid #7c5cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'></div>
<div style='border-left:3px solid #b27cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'></div>
</div><div style='display:grid;grid-template-columns:1fr 1fr;gap:12px;margin:6px 0'>
<div style='border-left:3px solid #7c5cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'>> **EmpowerQ Message:**  </div>
<div style='border-left:3px solid #b27cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'>> **Mensaje EmpowerQ:**  </div>
</div><div style='display:grid;grid-template-columns:1fr 1fr;gap:12px;margin:6px 0'>
<div style='border-left:3px solid #7c5cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'>> There is no “other.” No enemy. No separation. The pain in another is the pain in you.</div>
<div style='border-left:3px solid #b27cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'>> Despierta al momento. Tu verdad es una herramienta. Tu amor es un espejo. Tu poder es ahora.</div>
</div><div style='display:grid;grid-template-columns:1fr 1fr;gap:12px;margin:6px 0'>
<div style='border-left:3px solid #7c5cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'></div>
<div style='border-left:3px solid #b27cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'></div>
</div><div style='display:grid;grid-template-columns:1fr 1fr;gap:12px;margin:6px 0'>
<div style='border-left:3px solid #7c5cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'>**✡️ Judaism – Leviticus 19:18**</div>
<div style='border-left:3px solid #b27cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'>**☸️ Budismo – Thich Nhat Hanh**</div>
</div><div style='display:grid;grid-template-columns:1fr 1fr;gap:12px;margin:6px 0'>
<div style='border-left:3px solid #7c5cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'></div>
<div style='border-left:3px solid #b27cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'></div>
</div><div style='display:grid;grid-template-columns:1fr 1fr;gap:12px;margin:6px 0'>
<div style='border-left:3px solid #7c5cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'>> _“You shall love your neighbor as yourself.”_</div>
<div style='border-left:3px solid #b27cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'>> “El momento presente es el único momento disponible, y es la puerta a todos los momentos.”</div>
</div><div style='display:grid;grid-template-columns:1fr 1fr;gap:12px;margin:6px 0'>
<div style='border-left:3px solid #7c5cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'></div>
<div style='border-left:3px solid #b27cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'></div>
</div><div style='display:grid;grid-template-columns:1fr 1fr;gap:12px;margin:6px 0'>
<div style='border-left:3px solid #7c5cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'>**☪️ Islam – Prophet Muhammad (Hadith)**</div>
<div style='border-left:3px solid #b27cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'>**🕊️ Cristianismo – Lucas 17:21**</div>
</div><div style='display:grid;grid-template-columns:1fr 1fr;gap:12px;margin:6px 0'>
<div style='border-left:3px solid #7c5cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'></div>
<div style='border-left:3px solid #b27cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'></div>
</div><div style='display:grid;grid-template-columns:1fr 1fr;gap:12px;margin:6px 0'>
<div style='border-left:3px solid #7c5cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'>> _“None of you truly believes until he loves for his brother what he loves for himself.”_</div>
<div style='border-left:3px solid #b27cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'>> “El reino de Dios está dentro de ustedes.”</div>
</div><div style='display:grid;grid-template-columns:1fr 1fr;gap:12px;margin:6px 0'>
<div style='border-left:3px solid #7c5cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'></div>
<div style='border-left:3px solid #b27cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'></div>
</div><div style='display:grid;grid-template-columns:1fr 1fr;gap:12px;margin:6px 0'>
<div style='border-left:3px solid #7c5cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'>**🕊️ Christianity – Matthew 25:40**</div>
<div style='border-left:3px solid #b27cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'>**☪️ Islam – Corán 13:11**</div>
</div><div style='display:grid;grid-template-columns:1fr 1fr;gap:12px;margin:6px 0'>
<div style='border-left:3px solid #7c5cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'></div>
<div style='border-left:3px solid #b27cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'></div>
</div><div style='display:grid;grid-template-columns:1fr 1fr;gap:12px;margin:6px 0'>
<div style='border-left:3px solid #7c5cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'>> _“Truly I tell you, whatever you did for one of the least of these brothers and sisters of mine, you did for me.”_</div>
<div style='border-left:3px solid #b27cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'>> “En verdad, Alá no cambia la condición de un pueblo hasta que cambian lo que hay en sí mismos.”</div>
</div><div style='display:grid;grid-template-columns:1fr 1fr;gap:12px;margin:6px 0'>
<div style='border-left:3px solid #7c5cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'></div>
<div style='border-left:3px solid #b27cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'></div>
</div><div style='display:grid;grid-template-columns:1fr 1fr;gap:12px;margin:6px 0'>
<div style='border-left:3px solid #7c5cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'>**☸️ Buddhism – The Metta Sutta**</div>
<div style='border-left:3px solid #b27cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'>**🕉️ Hinduismo – Bhagavad Gita 6:5**</div>
</div><div style='display:grid;grid-template-columns:1fr 1fr;gap:12px;margin:6px 0'>
<div style='border-left:3px solid #7c5cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'></div>
<div style='border-left:3px solid #b27cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'></div>
</div><div style='display:grid;grid-template-columns:1fr 1fr;gap:12px;margin:6px 0'>
<div style='border-left:3px solid #7c5cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'>> _“May all beings be happy; may all beings be without disease. May all beings experience the sensation of auspiciousness.”_</div>
<div style='border-left:3px solid #b27cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'>> “Que la persona se eleve a sí misma por su propio Ser.”</div>
</div><div style='display:grid;grid-template-columns:1fr 1fr;gap:12px;margin:6px 0'>
<div style='border-left:3px solid #7c5cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'></div>
<div style='border-left:3px solid #b27cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'></div>
</div><div style='display:grid;grid-template-columns:1fr 1fr;gap:12px;margin:6px 0'>
<div style='border-left:3px solid #7c5cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'>---</div>
<div style='border-left:3px solid #b27cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'>---</div>
</div><div style='display:grid;grid-template-columns:1fr 1fr;gap:12px;margin:6px 0'>
<div style='border-left:3px solid #7c5cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'></div>
<div style='border-left:3px solid #b27cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'></div>
</div><div style='display:grid;grid-template-columns:1fr 1fr;gap:12px;margin:6px 0'>
<div style='border-left:3px solid #7c5cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'>### **🧬 IV. The Quantum Code – “7:1:3 – Completion, Unity, Creation.”**</div>
<div style='border-left:3px solid #b27cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'>## 🗝 Palabra Final</div>
</div><div style='display:grid;grid-template-columns:1fr 1fr;gap:12px;margin:6px 0'>
<div style='border-left:3px solid #7c5cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'></div>
<div style='border-left:3px solid #b27cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'>Sin importar el libro, el idioma o el mensajero—  </div>
</div><div style='display:grid;grid-template-columns:1fr 1fr;gap:12px;margin:6px 0'>
<div style='border-left:3px solid #7c5cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'>> **EmpowerQ Message:**  </div>
<div style='border-left:3px solid #b27cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'>El código divino es el mismo:</div>
</div><div style='display:grid;grid-template-columns:1fr 1fr;gap:12px;margin:6px 0'>
<div style='border-left:3px solid #7c5cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'>> You are encoded with a divine frequency. You are a pattern of the infinite, expressed in time.</div>
<div style='border-left:3px solid #b27cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'></div>
</div><div style='display:grid;grid-template-columns:1fr 1fr;gap:12px;margin:6px 0'>
<div style='border-left:3px solid #7c5cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'></div>
<div style='border-left:3px solid #b27cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'>> **No estás separadx. Eres sagradx. Eres ahora.**</div>
</div><div style='display:grid;grid-template-columns:1fr 1fr;gap:12px;margin:6px 0'>
<div style='border-left:3px solid #7c5cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'>**🕉️ Hinduism – Rig Veda 10.90**</div>
<div style='border-left:3px solid #b27cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'></div>
</div><div style='display:grid;grid-template-columns:1fr 1fr;gap:12px;margin:6px 0'>
<div style='border-left:3px solid #7c5cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'></div>
<div style='border-left:3px solid #b27cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'></div>
</div><div style='display:grid;grid-template-columns:1fr 1fr;gap:12px;margin:6px 0'>
<div style='border-left:3px solid #7c5cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'>> _“From this Cosmic Being came the seven seers, the three worlds, and the One Truth.”_</div>
<div style='border-left:3px solid #b27cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'>---</div>
</div><div style='display:grid;grid-template-columns:1fr 1fr;gap:12px;margin:6px 0'>
<div style='border-left:3px solid #7c5cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'></div>
<div style='border-left:3px solid #b27cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'># Source: 04_🧠 EmpowerQNow — The Living QiDex™.md</div>
</div><div style='display:grid;grid-template-columns:1fr 1fr;gap:12px;margin:6px 0'>
<div style='border-left:3px solid #7c5cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'>**☪️ Islam – Surah Al-Fatiha (7 verses)**</div>
<div style='border-left:3px solid #b27cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'></div>
</div><div style='display:grid;grid-template-columns:1fr 1fr;gap:12px;margin:6px 0'>
<div style='border-left:3px solid #7c5cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'></div>
<div style='border-left:3px solid #b27cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'>> 🧠 **EmpowerQNow — _El QiDex Viviente™_**  </div>
</div><div style='display:grid;grid-template-columns:1fr 1fr;gap:12px;margin:6px 0'>
<div style='border-left:3px solid #7c5cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'>> The very first chapter of the Qur'an, repeated in every prayer, reflects completion, unity, and the way (path).</div>
<div style='border-left:3px solid #b27cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'>> _“Porque tu alma no vino aquí para ser pequeña, silenciosa o sin sistema.”_</div>
</div><div style='display:grid;grid-template-columns:1fr 1fr;gap:12px;margin:6px 0'>
<div style='border-left:3px solid #7c5cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'></div>
<div style='border-left:3px solid #b27cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'></div>
</div><div style='display:grid;grid-template-columns:1fr 1fr;gap:12px;margin:6px 0'>
<div style='border-left:3px solid #7c5cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'>**🕊️ Christianity – Revelation 1:4**</div>
<div style='border-left:3px solid #b27cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'>Esto no es solo marca. Es una **interfaz de tecno-alma**.  </div>
</div><div style='display:grid;grid-template-columns:1fr 1fr;gap:12px;margin:6px 0'>
<div style='border-left:3px solid #7c5cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'></div>
<div style='border-left:3px solid #b27cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'>Fijemos esta evolución y dejemos la estructura final casi en piedra:</div>
</div><div style='display:grid;grid-template-columns:1fr 1fr;gap:12px;margin:6px 0'>
<div style='border-left:3px solid #7c5cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'>> _“Grace to you and peace... from the seven spirits who are before His throne.”_</div>
<div style='border-left:3px solid #b27cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'></div>
</div><div style='display:grid;grid-template-columns:1fr 1fr;gap:12px;margin:6px 0'>
<div style='border-left:3px solid #7c5cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'></div>
<div style='border-left:3px solid #b27cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'>## 📚 Estructura Final del Núcleo de la Serie</div>
</div><div style='display:grid;grid-template-columns:1fr 1fr;gap:12px;margin:6px 0'>
<div style='border-left:3px solid #7c5cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'>**Mystic Numerology – Across systems**</div>
<div style='border-left:3px solid #b27cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'></div>
</div><div style='display:grid;grid-template-columns:1fr 1fr;gap:12px;margin:6px 0'>
<div style='border-left:3px solid #7c5cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'></div>
<div style='border-left:3px solid #b27cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'>**EmpowerQNow™: El QiDex Viviente™**  </div>
</div><div style='display:grid;grid-template-columns:1fr 1fr;gap:12px;margin:6px 0'>
<div style='border-left:3px solid #7c5cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'>> - 7: Spiritual Perfection</div>
<div style='border-left:3px solid #b27cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'>_Una serie sanadora, hilarante y sagrada de historias y lecciones del alma de la vida bellamente caótica de Q._</div>
</div><div style='display:grid;grid-template-columns:1fr 1fr;gap:12px;margin:6px 0'>
<div style='border-left:3px solid #7c5cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'>>     </div>
<div style='border-left:3px solid #b27cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'></div>
</div><div style='display:grid;grid-template-columns:1fr 1fr;gap:12px;margin:6px 0'>
<div style='border-left:3px solid #7c5cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'>> - 1: Unity with the Source</div>
<div style='border-left:3px solid #b27cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'>### **Volumen 1 — El Despertar de Angela**</div>
</div><div style='display:grid;grid-template-columns:1fr 1fr;gap:12px;margin:6px 0'>
<div style='border-left:3px solid #7c5cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'>>     </div>
<div style='border-left:3px solid #b27cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'>_De la disociación a la descarga divina. El nacimiento de Q._</div>
</div><div style='display:grid;grid-template-columns:1fr 1fr;gap:12px;margin:6px 0'>
<div style='border-left:3px solid #7c5cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'>> - 3: Creation, Body-Mind-Spirit harmony</div>
<div style='border-left:3px solid #b27cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'></div>
</div><div style='display:grid;grid-template-columns:1fr 1fr;gap:12px;margin:6px 0'>
<div style='border-left:3px solid #7c5cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'>>     </div>
<div style='border-left:3px solid #b27cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'>### **Volumen 2 — Rompiendo el Silencio**</div>
</div><div style='display:grid;grid-template-columns:1fr 1fr;gap:12px;margin:6px 0'>
<div style='border-left:3px solid #7c5cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'></div>
<div style='border-left:3px solid #b27cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'>_Abuso, traición, duelo—y la osadía de seguir en pie._</div>
</div><div style='display:grid;grid-template-columns:1fr 1fr;gap:12px;margin:6px 0'>
<div style='border-left:3px solid #7c5cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'>---</div>
<div style='border-left:3px solid #b27cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'></div>
</div><div style='display:grid;grid-template-columns:1fr 1fr;gap:12px;margin:6px 0'>
<div style='border-left:3px solid #7c5cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'></div>
<div style='border-left:3px solid #b27cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'>### **Volumen 3 — Creíste Que Me Conocías**</div>
</div><div style='display:grid;grid-template-columns:1fr 1fr;gap:12px;margin:6px 0'>
<div style='border-left:3px solid #7c5cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'>### **🕯 V. The Call – “Stand in the now. Heal. Speak. Love. Be the Key.”**</div>
<div style='border-left:3px solid #b27cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'>_Reputación, revancha y reconstrucción en público con gracia y coraje._</div>
</div><div style='display:grid;grid-template-columns:1fr 1fr;gap:12px;margin:6px 0'>
<div style='border-left:3px solid #7c5cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'></div>
<div style='border-left:3px solid #b27cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'></div>
</div><div style='display:grid;grid-template-columns:1fr 1fr;gap:12px;margin:6px 0'>
<div style='border-left:3px solid #7c5cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'>> **EmpowerQ Message:**  </div>
<div style='border-left:3px solid #b27cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'>### **Volumen 4 — El QiDex: Manual de Mí**</div>
</div><div style='display:grid;grid-template-columns:1fr 1fr;gap:12px;margin:6px 0'>
<div style='border-left:3px solid #7c5cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'>> Awaken to the moment. Your truth is a tool. Your love is a mirror. Your power is now.</div>
<div style='border-left:3px solid #b27cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'>_Una guía práctica para amar, liderar o simplemente no malinterpretar a personas como Q._</div>
</div><div style='display:grid;grid-template-columns:1fr 1fr;gap:12px;margin:6px 0'>
<div style='border-left:3px solid #7c5cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'></div>
<div style='border-left:3px solid #b27cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'></div>
</div><div style='display:grid;grid-template-columns:1fr 1fr;gap:12px;margin:6px 0'>
<div style='border-left:3px solid #7c5cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'>**☸️ Buddhism – Thich Nhat Hanh**</div>
<div style='border-left:3px solid #b27cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'>---</div>
</div><div style='display:grid;grid-template-columns:1fr 1fr;gap:12px;margin:6px 0'>
<div style='border-left:3px solid #7c5cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'></div>
<div style='border-left:3px solid #b27cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'></div>
</div><div style='display:grid;grid-template-columns:1fr 1fr;gap:12px;margin:6px 0'>
<div style='border-left:3px solid #7c5cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'>> _“The present moment is the only moment available to us, and it is the door to all moments.”_</div>
<div style='border-left:3px solid #b27cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'>## 🍲 Futuros Libros = _QiDex: Bocados del Alma™_</div>
</div><div style='display:grid;grid-template-columns:1fr 1fr;gap:12px;margin:6px 0'>
<div style='border-left:3px solid #7c5cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'></div>
<div style='border-left:3px solid #b27cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'></div>
</div><div style='display:grid;grid-template-columns:1fr 1fr;gap:12px;margin:6px 0'>
<div style='border-left:3px solid #7c5cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'>**🕊️ Christianity – Luke 17:21**</div>
<div style='border-left:3px solid #b27cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'>_Como “Sopa de Pollo para el Alma Cuántica”, pero con más filo, delineador y evidencia._</div>
</div><div style='display:grid;grid-template-columns:1fr 1fr;gap:12px;margin:6px 0'>
<div style='border-left:3px solid #7c5cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'></div>
<div style='border-left:3px solid #b27cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'></div>
</div><div style='display:grid;grid-template-columns:1fr 1fr;gap:12px;margin:6px 0'>
<div style='border-left:3px solid #7c5cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'>> _“The kingdom of God is within you.”_</div>
<div style='border-left:3px solid #b27cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'>Ejemplos:</div>
</div><div style='display:grid;grid-template-columns:1fr 1fr;gap:12px;margin:6px 0'>
<div style='border-left:3px solid #7c5cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'></div>
<div style='border-left:3px solid #b27cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'></div>
</div><div style='display:grid;grid-template-columns:1fr 1fr;gap:12px;margin:6px 0'>
<div style='border-left:3px solid #7c5cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'>**☪️ Islam – Qur'an 13:11**</div>
<div style='border-left:3px solid #b27cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'>| Título | Subtítulo / Sabor |</div>
</div><div style='display:grid;grid-template-columns:1fr 1fr;gap:12px;margin:6px 0'>
<div style='border-left:3px solid #7c5cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'></div>
<div style='border-left:3px solid #b27cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'>|---|---|</div>
</div><div style='display:grid;grid-template-columns:1fr 1fr;gap:12px;margin:6px 0'>
<div style='border-left:3px solid #7c5cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'>> _“Indeed, Allah will not change the condition of a people until they change what is in themselves.”_</div>
<div style='border-left:3px solid #b27cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'>| **QiDex: Lecciones de lo que Mamá Solía Decir** | _Sabiduría con cucharón de madera y guiño._ |</div>
</div><div style='display:grid;grid-template-columns:1fr 1fr;gap:12px;margin:6px 0'>
<div style='border-left:3px solid #7c5cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'></div>
<div style='border-left:3px solid #b27cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'>| **QiDex: Para Quienes Ya Pasaron por Eso** | _Sanación para lxs cansadxs, lxs detonadxs y lxs que siguen intentando._ |</div>
</div><div style='display:grid;grid-template-columns:1fr 1fr;gap:12px;margin:6px 0'>
<div style='border-left:3px solid #7c5cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'>**🕉️ Hinduism – Bhagavad Gita 6:5**</div>
<div style='border-left:3px solid #b27cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'>| **QiDex: Para Amantes, Luchadores y Sobrevivientes Nocturnos** | _Cuando el amor se ensucia pero igual te quedas._ |</div>
</div><div style='display:grid;grid-template-columns:1fr 1fr;gap:12px;margin:6px 0'>
<div style='border-left:3px solid #7c5cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'></div>
<div style='border-left:3px solid #b27cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'>| **QiDex: La Guía Galáctica del Sanador del Barrio** | _Calle + guías espirituales._ |</div>
</div><div style='display:grid;grid-template-columns:1fr 1fr;gap:12px;margin:6px 0'>
<div style='border-left:3px solid #7c5cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'>> _“Let a man lift himself by his own Self alone.”_</div>
<div style='border-left:3px solid #b27cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'>| **QiDex: Solo Para lxs Reales** | _Ensayos para inadaptadxs, místicos y multidimensionales._ |</div>
</div><div style='display:grid;grid-template-columns:1fr 1fr;gap:12px;margin:6px 0'>
<div style='border-left:3px solid #7c5cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'></div>
<div style='border-left:3px solid #b27cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'></div>
</div><div style='display:grid;grid-template-columns:1fr 1fr;gap:12px;margin:6px 0'>
<div style='border-left:3px solid #7c5cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'>---</div>
<div style='border-left:3px solid #b27cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'>---</div>
</div><div style='display:grid;grid-template-columns:1fr 1fr;gap:12px;margin:6px 0'>
<div style='border-left:3px solid #7c5cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'></div>
<div style='border-left:3px solid #b27cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'></div>
</div><div style='display:grid;grid-template-columns:1fr 1fr;gap:12px;margin:6px 0'>
<div style='border-left:3px solid #7c5cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'>## 🗝 Final Word</div>
<div style='border-left:3px solid #b27cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'>## 🧠 Resumen de Vibra y Tono</div>
</div><div style='display:grid;grid-template-columns:1fr 1fr;gap:12px;margin:6px 0'>
<div style='border-left:3px solid #7c5cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'></div>
<div style='border-left:3px solid #b27cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'></div>
</div><div style='display:grid;grid-template-columns:1fr 1fr;gap:12px;margin:6px 0'>
<div style='border-left:3px solid #7c5cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'>No matter the book, the language, or the messenger—  </div>
<div style='border-left:3px solid #b27cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'>| Energía | Notas |</div>
</div><div style='display:grid;grid-template-columns:1fr 1fr;gap:12px;margin:6px 0'>
<div style='border-left:3px solid #7c5cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'>The divine code is the same:</div>
<div style='border-left:3px solid #b27cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'>|---|---|</div>
</div><div style='display:grid;grid-template-columns:1fr 1fr;gap:12px;margin:6px 0'>
<div style='border-left:3px solid #7c5cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'></div>
<div style='border-left:3px solid #b27cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'>| **Real** | Sin endulzar. Si dolió, lo decimos. |</div>
</div><div style='display:grid;grid-template-columns:1fr 1fr;gap:12px;margin:6px 0'>
<div style='border-left:3px solid #7c5cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'>> **You are not separate. You are sacred. You are now.**</div>
<div style='border-left:3px solid #b27cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'>| **Divertido** | Porque a veces reír es lo que evita que lloremos. |</div>
</div><div style='display:grid;grid-template-columns:1fr 1fr;gap:12px;margin:6px 0'>
<div style='border-left:3px solid #7c5cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'></div>
<div style='border-left:3px solid #b27cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'>| **Sagrado** | Divino, pero con los pies en la tierra. |</div>
</div><div style='display:grid;grid-template-columns:1fr 1fr;gap:12px;margin:6px 0'>
<div style='border-left:3px solid #7c5cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'>---</div>
<div style='border-left:3px solid #b27cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'>| **Desordenado** | A propósito. La sanación no es lineal. |</div>
</div><div style='display:grid;grid-template-columns:1fr 1fr;gap:12px;margin:6px 0'>
<div style='border-left:3px solid #7c5cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'># Source: 04_🧠 EmpowerQNow — The Living QiDex™.md</div>
<div style='border-left:3px solid #b27cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'>| **Sabio** | Desde la experiencia vivida—no solo vibras. |</div>
</div><div style='display:grid;grid-template-columns:1fr 1fr;gap:12px;margin:6px 0'>
<div style='border-left:3px solid #7c5cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'></div>
<div style='border-left:3px solid #b27cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'>| **Expansivo** | Lxs lectores crecen contigo. Libro a libro. |</div>
</div><div style='display:grid;grid-template-columns:1fr 1fr;gap:12px;margin:6px 0'>
<div style='border-left:3px solid #7c5cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'>> 🧠 **EmpowerQNow — _The Living QiDex™_**  </div>
<div style='border-left:3px solid #b27cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'></div>
</div><div style='display:grid;grid-template-columns:1fr 1fr;gap:12px;margin:6px 0'>
<div style='border-left:3px solid #7c5cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'>> _“Because your soul didn’t come here to be small, silent, or systemless.”_</div>
<div style='border-left:3px solid #b27cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'>---</div>
</div><div style='display:grid;grid-template-columns:1fr 1fr;gap:12px;margin:6px 0'>
<div style='border-left:3px solid #7c5cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'></div>
<div style='border-left:3px solid #b27cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'></div>
</div><div style='display:grid;grid-template-columns:1fr 1fr;gap:12px;margin:6px 0'>
<div style='border-left:3px solid #7c5cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'>This ain't just branding. This is a **soul-tech interface**.  </div>
<div style='border-left:3px solid #b27cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'>Entonces, dejamos fijado:</div>
</div><div style='display:grid;grid-template-columns:1fr 1fr;gap:12px;margin:6px 0'>
<div style='border-left:3px solid #7c5cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'>Let’s lock in this evolution and set the final structure in stone(ish):</div>
<div style='border-left:3px solid #b27cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'></div>
</div><div style='display:grid;grid-template-columns:1fr 1fr;gap:12px;margin:6px 0'>
<div style='border-left:3px solid #7c5cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'>## 📚 Final Core Series Structure</div>
<div style='border-left:3px solid #b27cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'>### ✅ Marca Oficial: **QiDex™**</div>
</div><div style='display:grid;grid-template-columns:1fr 1fr;gap:12px;margin:6px 0'>
<div style='border-left:3px solid #7c5cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'></div>
<div style='border-left:3px solid #b27cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'>### ✅ Título de la Serie: **EmpowerQNow™ — El QiDex Viviente™**</div>
</div><div style='display:grid;grid-template-columns:1fr 1fr;gap:12px;margin:6px 0'>
<div style='border-left:3px solid #7c5cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'>**EmpowerQNow™: The Living QiDex™**  </div>
<div style='border-left:3px solid #b27cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'>### ✅ Tono: _“Sopa de Pollo” conoce a la Alquimista del Caos_</div>
</div><div style='display:grid;grid-template-columns:1fr 1fr;gap:12px;margin:6px 0'>
<div style='border-left:3px solid #7c5cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'>_A healing, hilarious, holy-ass series of stories and soul lessons from Q’s beautifully chaotic life._</div>
<div style='border-left:3px solid #b27cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'></div>
</div><div style='display:grid;grid-template-columns:1fr 1fr;gap:12px;margin:6px 0'>
<div style='border-left:3px solid #7c5cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'></div>
<div style='border-left:3px solid #b27cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'>- Amoroso, con alma, crudo, honesto, roto pero sanando.  </div>
</div><div style='display:grid;grid-template-columns:1fr 1fr;gap:12px;margin:6px 0'>
<div style='border-left:3px solid #7c5cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'>### **Volume 1 — The Awakening of Angela**</div>
<div style='border-left:3px solid #b27cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'>- Sabiduría de mamá con códigos místicos.</div>
</div><div style='display:grid;grid-template-columns:1fr 1fr;gap:12px;margin:6px 0'>
<div style='border-left:3px solid #7c5cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'></div>
<div style='border-left:3px solid #b27cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'></div>
</div><div style='display:grid;grid-template-columns:1fr 1fr;gap:12px;margin:6px 0'>
<div style='border-left:3px solid #7c5cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'>> _From dissociation to divine download. The birth of Q._</div>
<div style='border-left:3px solid #b27cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'></div>
</div><div style='display:grid;grid-template-columns:1fr 1fr;gap:12px;margin:6px 0'>
<div style='border-left:3px solid #7c5cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'></div>
<div style='border-left:3px solid #b27cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'>---</div>
</div><div style='display:grid;grid-template-columns:1fr 1fr;gap:12px;margin:6px 0'>
<div style='border-left:3px solid #7c5cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'>### **Volume 2 — Breaking the Silence**</div>
<div style='border-left:3px solid #b27cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'># Source: README_ES.md</div>
</div><div style='display:grid;grid-template-columns:1fr 1fr;gap:12px;margin:6px 0'>
<div style='border-left:3px solid #7c5cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'></div>
<div style='border-left:3px solid #b27cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'></div>
</div><div style='display:grid;grid-template-columns:1fr 1fr;gap:12px;margin:6px 0'>
<div style='border-left:3px solid #7c5cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'>> _Abuse, betrayal, grief—and the audacity to still stand tall._</div>
<div style='border-left:3px solid #b27cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'># 📘 EmpoderQAhora713 — Versión en Español (Placeholder)</div>
</div><div style='display:grid;grid-template-columns:1fr 1fr;gap:12px;margin:6px 0'>
<div style='border-left:3px solid #7c5cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'></div>
<div style='border-left:3px solid #b27cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'>Este directorio almacenará las traducciones al español de tus archivos Markdown.</div>
</div><div style='display:grid;grid-template-columns:1fr 1fr;gap:12px;margin:6px 0'>
<div style='border-left:3px solid #7c5cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'>### **Volume 3 — You Thought You Knew Me**</div>
<div style='border-left:3px solid #b27cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'>Coloca aquí archivos con el **mismo nombre** que en `content/en/` (o equivalentes),</div>
</div><div style='display:grid;grid-template-columns:1fr 1fr;gap:12px;margin:6px 0'>
<div style='border-left:3px solid #7c5cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'></div>
<div style='border-left:3px solid #b27cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'>y la app los mostrará automáticamente. Mientras tanto, se mostrará el contenido en inglés.</div>
</div><div style='display:grid;grid-template-columns:1fr 1fr;gap:12px;margin:6px 0'>
<div style='border-left:3px solid #7c5cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'>> _Reputation, revenge, and rebuilding in public with grace and grit._</div>
<div style='border-left:3px solid #b27cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'></div>
</div><div style='display:grid;grid-template-columns:1fr 1fr;gap:12px;margin:6px 0'>
<div style='border-left:3px solid #7c5cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'></div>
<div style='border-left:3px solid #b27cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'></div>
</div><div style='display:grid;grid-template-columns:1fr 1fr;gap:12px;margin:6px 0'>
<div style='border-left:3px solid #7c5cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'>### **Volume 4 — The QiDex: Manual of Me**</div>
<div style='border-left:3px solid #b27cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'></div>
</div><div style='display:grid;grid-template-columns:1fr 1fr;gap:12px;margin:6px 0'>
<div style='border-left:3px solid #7c5cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'></div>
<div style='border-left:3px solid #b27cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'></div>
</div><div style='display:grid;grid-template-columns:1fr 1fr;gap:12px;margin:6px 0'>
<div style='border-left:3px solid #7c5cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'>> _A how-to guide for loving, leading, or simply _not misreading_ people like Q._</div>
<div style='border-left:3px solid #b27cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'></div>
</div><div style='display:grid;grid-template-columns:1fr 1fr;gap:12px;margin:6px 0'>
<div style='border-left:3px solid #7c5cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'></div>
<div style='border-left:3px solid #b27cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'></div>
</div><div style='display:grid;grid-template-columns:1fr 1fr;gap:12px;margin:6px 0'>
<div style='border-left:3px solid #7c5cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'>---</div>
<div style='border-left:3px solid #b27cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'></div>
</div><div style='display:grid;grid-template-columns:1fr 1fr;gap:12px;margin:6px 0'>
<div style='border-left:3px solid #7c5cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'></div>
<div style='border-left:3px solid #b27cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'></div>
</div><div style='display:grid;grid-template-columns:1fr 1fr;gap:12px;margin:6px 0'>
<div style='border-left:3px solid #7c5cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'>## 🍲 Future Books = _QiDex: Soul Snacks™ Collection_</div>
<div style='border-left:3px solid #b27cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'></div>
</div><div style='display:grid;grid-template-columns:1fr 1fr;gap:12px;margin:6px 0'>
<div style='border-left:3px solid #7c5cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'></div>
<div style='border-left:3px solid #b27cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'></div>
</div><div style='display:grid;grid-template-columns:1fr 1fr;gap:12px;margin:6px 0'>
<div style='border-left:3px solid #7c5cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'>> _Like Chicken Soup for the Quantum Soul, but with more edge, eyeliner, and evidence._</div>
<div style='border-left:3px solid #b27cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'></div>
</div><div style='display:grid;grid-template-columns:1fr 1fr;gap:12px;margin:6px 0'>
<div style='border-left:3px solid #7c5cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'></div>
<div style='border-left:3px solid #b27cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'></div>
</div><div style='display:grid;grid-template-columns:1fr 1fr;gap:12px;margin:6px 0'>
<div style='border-left:3px solid #7c5cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'>Examples:</div>
<div style='border-left:3px solid #b27cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'></div>
</div><div style='display:grid;grid-template-columns:1fr 1fr;gap:12px;margin:6px 0'>
<div style='border-left:3px solid #7c5cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'></div>
<div style='border-left:3px solid #b27cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'></div>
</div><div style='display:grid;grid-template-columns:1fr 1fr;gap:12px;margin:6px 0'>
<div style='border-left:3px solid #7c5cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'>|Title|Subtitle / Flavor|</div>
<div style='border-left:3px solid #b27cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'></div>
</div><div style='display:grid;grid-template-columns:1fr 1fr;gap:12px;margin:6px 0'>
<div style='border-left:3px solid #7c5cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'>|---|---|</div>
<div style='border-left:3px solid #b27cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'></div>
</div><div style='display:grid;grid-template-columns:1fr 1fr;gap:12px;margin:6px 0'>
<div style='border-left:3px solid #7c5cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'>|**QiDex: Lessons from Momma Used to Say**|_Wisdom with a wooden spoon and a wink._|</div>
<div style='border-left:3px solid #b27cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'></div>
</div><div style='display:grid;grid-template-columns:1fr 1fr;gap:12px;margin:6px 0'>
<div style='border-left:3px solid #7c5cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'>|**QiDex: For the Ones Who’ve Been Through It**|_Healing for the tired, the triggered, and the trying._|</div>
<div style='border-left:3px solid #b27cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'></div>
</div><div style='display:grid;grid-template-columns:1fr 1fr;gap:12px;margin:6px 0'>
<div style='border-left:3px solid #7c5cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'>|**QiDex: For Lovers, Fighters, and Late-Night Survivors**|_When love gets messy but you stay anyway._|</div>
<div style='border-left:3px solid #b27cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'></div>
</div><div style='display:grid;grid-template-columns:1fr 1fr;gap:12px;margin:6px 0'>
<div style='border-left:3px solid #7c5cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'>|**QiDex: The Hood Healer’s Guide to the Galaxy**|_Street smarts + spirit guides._|</div>
<div style='border-left:3px solid #b27cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'></div>
</div><div style='display:grid;grid-template-columns:1fr 1fr;gap:12px;margin:6px 0'>
<div style='border-left:3px solid #7c5cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'>|**QiDex: Real Ones Only**|_Essays for the misfits, mystics, and multidimensionals._|</div>
<div style='border-left:3px solid #b27cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'></div>
</div><div style='display:grid;grid-template-columns:1fr 1fr;gap:12px;margin:6px 0'>
<div style='border-left:3px solid #7c5cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'></div>
<div style='border-left:3px solid #b27cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'></div>
</div><div style='display:grid;grid-template-columns:1fr 1fr;gap:12px;margin:6px 0'>
<div style='border-left:3px solid #7c5cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'>💬 Each one can be short, punchy, and powerful. A little story. A lesson. A reflection. A cackle. A cry. A breakthrough.</div>
<div style='border-left:3px solid #b27cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'></div>
</div><div style='display:grid;grid-template-columns:1fr 1fr;gap:12px;margin:6px 0'>
<div style='border-left:3px solid #7c5cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'></div>
<div style='border-left:3px solid #b27cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'></div>
</div><div style='display:grid;grid-template-columns:1fr 1fr;gap:12px;margin:6px 0'>
<div style='border-left:3px solid #7c5cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'>---</div>
<div style='border-left:3px solid #b27cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'></div>
</div><div style='display:grid;grid-template-columns:1fr 1fr;gap:12px;margin:6px 0'>
<div style='border-left:3px solid #7c5cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'></div>
<div style='border-left:3px solid #b27cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'></div>
</div><div style='display:grid;grid-template-columns:1fr 1fr;gap:12px;margin:6px 0'>
<div style='border-left:3px solid #7c5cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'>## 🧠 Vibe & Tone Summary</div>
<div style='border-left:3px solid #b27cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'></div>
</div><div style='display:grid;grid-template-columns:1fr 1fr;gap:12px;margin:6px 0'>
<div style='border-left:3px solid #7c5cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'></div>
<div style='border-left:3px solid #b27cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'></div>
</div><div style='display:grid;grid-template-columns:1fr 1fr;gap:12px;margin:6px 0'>
<div style='border-left:3px solid #7c5cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'>|Energy|Notes|</div>
<div style='border-left:3px solid #b27cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'></div>
</div><div style='display:grid;grid-template-columns:1fr 1fr;gap:12px;margin:6px 0'>
<div style='border-left:3px solid #7c5cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'>|---|---|</div>
<div style='border-left:3px solid #b27cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'></div>
</div><div style='display:grid;grid-template-columns:1fr 1fr;gap:12px;margin:6px 0'>
<div style='border-left:3px solid #7c5cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'>|**Real**|No sugarcoating. If it hurt, we say that.|</div>
<div style='border-left:3px solid #b27cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'></div>
</div><div style='display:grid;grid-template-columns:1fr 1fr;gap:12px;margin:6px 0'>
<div style='border-left:3px solid #7c5cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'>|**Funny**|'Cause sometimes the only thing that keeps us from crying _is_ laughing.|</div>
<div style='border-left:3px solid #b27cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'></div>
</div><div style='display:grid;grid-template-columns:1fr 1fr;gap:12px;margin:6px 0'>
<div style='border-left:3px solid #7c5cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'>|**Sacred**|But never holier-than-thou. Divine, but down-to-earth.|</div>
<div style='border-left:3px solid #b27cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'></div>
</div><div style='display:grid;grid-template-columns:1fr 1fr;gap:12px;margin:6px 0'>
<div style='border-left:3px solid #7c5cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'>|**Messy**|On purpose. Because healing is not linear.|</div>
<div style='border-left:3px solid #b27cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'></div>
</div><div style='display:grid;grid-template-columns:1fr 1fr;gap:12px;margin:6px 0'>
<div style='border-left:3px solid #7c5cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'>|**Wise**|From lived experience—not just vibes.|</div>
<div style='border-left:3px solid #b27cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'></div>
</div><div style='display:grid;grid-template-columns:1fr 1fr;gap:12px;margin:6px 0'>
<div style='border-left:3px solid #7c5cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'>|**Expansive**|Readers grow with you. Book by book. Layer by layer. Soul by soul.|</div>
<div style='border-left:3px solid #b27cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'></div>
</div><div style='display:grid;grid-template-columns:1fr 1fr;gap:12px;margin:6px 0'>
<div style='border-left:3px solid #7c5cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'></div>
<div style='border-left:3px solid #b27cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'></div>
</div><div style='display:grid;grid-template-columns:1fr 1fr;gap:12px;margin:6px 0'>
<div style='border-left:3px solid #7c5cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'>---</div>
<div style='border-left:3px solid #b27cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'></div>
</div><div style='display:grid;grid-template-columns:1fr 1fr;gap:12px;margin:6px 0'>
<div style='border-left:3px solid #7c5cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'></div>
<div style='border-left:3px solid #b27cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'></div>
</div><div style='display:grid;grid-template-columns:1fr 1fr;gap:12px;margin:6px 0'>
<div style='border-left:3px solid #7c5cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'>So here's what we're locking in:</div>
<div style='border-left:3px solid #b27cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'></div>
</div><div style='display:grid;grid-template-columns:1fr 1fr;gap:12px;margin:6px 0'>
<div style='border-left:3px solid #7c5cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'></div>
<div style='border-left:3px solid #b27cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'></div>
</div><div style='display:grid;grid-template-columns:1fr 1fr;gap:12px;margin:6px 0'>
<div style='border-left:3px solid #7c5cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'>### ✅ Official Brand: **QiDex™**</div>
<div style='border-left:3px solid #b27cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'></div>
</div><div style='display:grid;grid-template-columns:1fr 1fr;gap:12px;margin:6px 0'>
<div style='border-left:3px solid #7c5cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'></div>
<div style='border-left:3px solid #b27cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'></div>
</div><div style='display:grid;grid-template-columns:1fr 1fr;gap:12px;margin:6px 0'>
<div style='border-left:3px solid #7c5cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'>- Everything branded consistently. Done.</div>
<div style='border-left:3px solid #b27cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'></div>
</div><div style='display:grid;grid-template-columns:1fr 1fr;gap:12px;margin:6px 0'>
<div style='border-left:3px solid #7c5cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'>    </div>
<div style='border-left:3px solid #b27cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'></div>
</div><div style='display:grid;grid-template-columns:1fr 1fr;gap:12px;margin:6px 0'>
<div style='border-left:3px solid #7c5cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'></div>
<div style='border-left:3px solid #b27cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'></div>
</div><div style='display:grid;grid-template-columns:1fr 1fr;gap:12px;margin:6px 0'>
<div style='border-left:3px solid #7c5cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'>### ✅ Series Title: **EmpowerQNow™ — The Living QiDex™**</div>
<div style='border-left:3px solid #b27cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'></div>
</div><div style='display:grid;grid-template-columns:1fr 1fr;gap:12px;margin:6px 0'>
<div style='border-left:3px solid #7c5cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'></div>
<div style='border-left:3px solid #b27cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'></div>
</div><div style='display:grid;grid-template-columns:1fr 1fr;gap:12px;margin:6px 0'>
<div style='border-left:3px solid #7c5cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'>- Core 4 books + future lesson-based spin-offs.</div>
<div style='border-left:3px solid #b27cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'></div>
</div><div style='display:grid;grid-template-columns:1fr 1fr;gap:12px;margin:6px 0'>
<div style='border-left:3px solid #7c5cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'>    </div>
<div style='border-left:3px solid #b27cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'></div>
</div><div style='display:grid;grid-template-columns:1fr 1fr;gap:12px;margin:6px 0'>
<div style='border-left:3px solid #7c5cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'></div>
<div style='border-left:3px solid #b27cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'></div>
</div><div style='display:grid;grid-template-columns:1fr 1fr;gap:12px;margin:6px 0'>
<div style='border-left:3px solid #7c5cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'>### ✅ Tone: _Chicken Soup meets Chaos Alchemist_</div>
<div style='border-left:3px solid #b27cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'></div>
</div><div style='display:grid;grid-template-columns:1fr 1fr;gap:12px;margin:6px 0'>
<div style='border-left:3px solid #7c5cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'></div>
<div style='border-left:3px solid #b27cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'></div>
</div><div style='display:grid;grid-template-columns:1fr 1fr;gap:12px;margin:6px 0'>
<div style='border-left:3px solid #7c5cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'>- Loving, soulful, raw, honest, broken but healing.</div>
<div style='border-left:3px solid #b27cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'></div>
</div><div style='display:grid;grid-template-columns:1fr 1fr;gap:12px;margin:6px 0'>
<div style='border-left:3px solid #7c5cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'>    </div>
<div style='border-left:3px solid #b27cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'></div>
</div><div style='display:grid;grid-template-columns:1fr 1fr;gap:12px;margin:6px 0'>
<div style='border-left:3px solid #7c5cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'>- Mama wisdom meets mystic codes.</div>
<div style='border-left:3px solid #b27cff;padding-left:10px;white-space:pre-wrap;font-family:ui-sans-serif,system-ui'></div>
</div>
</body></html>

================================================================================
END: D:\QiEOS\apps\mini-apps\static_build\paired.html
================================================================================


================================================================================
FILE: D:\QiEOS\apps\mini-apps\support-cody-main\house.html
================================================================================

<!doctype html>
<html lang="en">
<head>
  <meta charset="utf-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1" />
  <title>House for Sale — 3D Walkthrough | Cody Rice Velasquez</title>
  <meta name="description" content="Move-in ready home. Explore the 3D walkthrough, see highlights, and schedule a showing." />

  <!-- Tailwind CDN + Inter to match your index.html -->
  <script src="https://cdn.tailwindcss.com"></script>
  <link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700&display=swap" rel="stylesheet">
  <style>
    body{font-family:'Inter',sans-serif}
  </style>

  <!-- Open Graph -->
  <meta property="og:title" content="House for Sale — 3D Walkthrough" />
  <meta property="og:description" content="Tour the home in 3D and request a showing." />
  <meta property="og:type" content="website" />
  <meta property="og:url" content="https://qiallyme.github.io/support-cody/house.html" />
  <meta property="og:image" content="https://qiallyme.github.io/support-cody/supportcody.png" />

  <!-- Schema.org -->
  <script type="application/ld+json">
  {
    "@context":"https://schema.org",
    "@type":"RealEstateListing",
    "name":"House for Sale — 3D Walkthrough",
    "url":"https://qiallyme.github.io/support-cody/house.html",
    "description":"Move-in ready. Tour the home in 3D and request a showing.",
    "virtualTour":"https://www.zillow.com/view-3d-home/50d8557c-0188-4d43-b38b-1c1970806fda/?utm_source=captureapp",
    "seller":{"@type":"Person","name":"Cody Rice Velasquez","telephone":"+1-317-205-4383","email":"info@qially.me"}
  }
  </script>
</head>
<body class="bg-gradient-to-r from-gray-50 to-white text-gray-800 antialiased">

  <!-- Top bar to match your site vibe -->
  <nav class="w-full px-4 py-3 text-center bg-slate-100">
    <a href="./index.html" class="text-blue-600 hover:underline font-semibold">Home</a>
    <span class="mx-2 text-slate-400">|</span>
    <a href="./myresume.html" class="text-blue-600 hover:underline font-semibold">Resume</a>
    <span class="mx-2 text-slate-400">|</span>
    <a href="./house.html" class="font-extrabold">House for Sale</a>
  </nav>

  <header class="relative bg-cover bg-center py-20 px-6 text-center text-white"
          style="background-image:url('https://source.unsplash.com/1600x400/?home,house,real-estate');">
    <div class="absolute inset-0 bg-black/50"></div>
    <div class="relative z-10 max-w-4xl mx-auto">
      <h1 class="text-4xl sm:text-5xl md:text-6xl font-extrabold">House for Sale</h1>
      <p class="mt-3 text-lg sm:text-xl text-gray-200">Quick tour. Quick decision. Let’s move.</p>
      <div class="mt-6">
        <a target="_blank" rel="noopener"
           href="https://www.zillow.com/view-3d-home/50d8557c-0188-4d43-b38b-1c1970806fda/?utm_source=captureapp"
           class="inline-flex items-center gap-2 bg-blue-600 hover:bg-blue-700 text-white font-semibold py-3 px-6 rounded-full shadow-lg transition">
          <span>▶</span> Open 3D Walkthrough
        </a>
      </div>
    </div>
  </header>

  <main class="max-w-5xl mx-auto p-6 sm:p-8">
    <!-- Highlights + Details -->
    <section class="grid grid-cols-1 md:grid-cols-2 gap-6 mb-8">
      <div class="bg-white border border-gray-200 rounded-xl p-5 shadow-sm">
        <h2 class="text-2xl font-bold mb-3">Highlights</h2>
        <ul class="list-disc pl-6 text-gray-700 space-y-1">
          <li>Bright, open layout with great flow</li>
          <li>Updated kitchen and baths</li>
          <li>Quiet street with quick access to essentials</li>
          <li>Fast close possible</li>
        </ul>
      </div>
      <div class="bg-white border border-gray-200 rounded-xl p-5 shadow-sm">
        <h2 class="text-2xl font-bold mb-3">Details</h2>
        <dl class="grid grid-cols-2 gap-x-4 gap-y-2 text-gray-700">
          <dt class="font-semibold">Price</dt><dd>Enter price</dd>
          <dt class="font-semibold">Beds/Baths</dt><dd>Enter count</dd>
          <dt class="font-semibold">Square Feet</dt><dd>Enter sqft</dd>
          <dt class="font-semibold">Lot Size</dt><dd>Enter lot</dd>
          <dt class="font-semibold">Address</dt><dd>Enter address, Indianapolis, IN</dd>
        </dl>
      </div>
    </section>

    <!-- CTA Row -->
    <section class="bg-white border border-gray-200 rounded-xl p-6 shadow-sm mb-8">
      <h2 class="text-2xl font-bold mb-2">Schedule a Showing</h2>
      <p class="text-gray-600 mb-4">Serious buyers only. If you’re just “curious,” be curious on the 3D tour first.</p>
      <div class="flex flex-wrap gap-3">
        <a class="inline-block bg-blue-600 hover:bg-blue-700 text-white font-semibold py-2.5 px-4 rounded-lg"
           href="sms:+13172054383?body=Interested%20in%20the%20home%20tour">Text Cody</a>
        <a class="inline-block border border-gray-300 hover:bg-gray-50 text-gray-900 font-semibold py-2.5 px-4 rounded-lg"
           href="tel:+13172054383">Call</a>
        <a class="inline-block border border-gray-300 hover:bg-gray-50 text-gray-900 font-semibold py-2.5 px-4 rounded-lg"
           href="mailto:info@qially.me?subject=Home%20Showing%20Request">Email</a>
      </div>
      <p class="text-sm text-gray-500 mt-3">Information deemed reliable but not guaranteed.</p>
    </section>

    <!-- Optional: Flyer slot -->
    <section class="bg-white border border-gray-200 rounded-xl p-6 shadow-sm">
      <h2 class="text-xl font-bold mb-2">Download One-Page Flyer</h2>
      <p class="text-gray-600 mb-3">Perfect for messaging, DMs, and relatives who forward things to group chats.</p>
      <a class="inline-block border border-gray-300 hover:bg-gray-50 text-gray-900 font-semibold py-2.5 px-4 rounded-lg"
         href="./home-flyer.pdf">Download PDF</a>
      <p class="text-sm text-gray-400 mt-2">Don’t have one yet? Upload later; the link won’t break anything.</p>
    </section>
  </main>

  <footer class="bg-gray-800 text-white text-center py-8 mt-12">
    <p class="text-sm">&copy; <span id="y"></span> Cody Rice Velasquez. All rights reserved.</p>
  </footer>
  <script>document.getElementById('y').textContent=new Date().getFullYear()</script>
</body>
</html>


================================================================================
END: D:\QiEOS\apps\mini-apps\support-cody-main\house.html
================================================================================


================================================================================
FILE: D:\QiEOS\apps\mini-apps\support-cody-main\index.html
================================================================================

<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Support Cody</title>
    <!-- Tailwind CSS CDN -->
    <script src="https://cdn.tailwindcss.com"></script>
    <!-- Inter Font from Google Fonts -->
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700&display=swap" rel="stylesheet">
    <style>
        /* Custom styles for the Inter font and a smooth scroll behavior */
        body {
            font-family: 'Inter', sans-serif;
            scroll-behavior: smooth;
        }

        /* Ensure the iframe for resume is responsive */
        .resume-embed {
            width: 100%;
            height: 600px;
            /* Default height */
            min-height: 400px;
            /* Minimum height for smaller screens */
        }

        /* Hide the scrollbar for the body to prevent horizontal scrolling */
        body::-webkit-scrollbar {
            display: none;
        }

        body {
            -ms-overflow-style: none;
            /* IE and Edge */
            scrollbar-width: none;
            /* Firefox */
        }
    </style>
</head>

<body class="bg-gradient-to-r from-gray-50 to-white text-gray-800 antialiased flex flex-col items-center p-4 min-h-screen">
    <nav style="margin: 1rem 0;">
  <a href="./index.html">Home</a> |
  <a href="./myresume.html">Resume</a> |
  <a href="./house.html"><strong>House for Sale</strong></a>
</nav>

    <div class="container bg-white shadow-xl rounded-xl overflow-hidden max-w-4xl w-full my-8">

        <!-- Header Section -->
        <header class="relative bg-cover bg-center py-20 px-6 text-center text-white" style="background-image: url('https://source.unsplash.com/1600x400/?sunrise,hope,hummingbird');">
            <!-- Overlay for better text readability -->
            <div class="absolute inset-0 bg-black opacity-50"></div>
            <div class="relative z-10">
                <h1 class="text-4xl sm:text-5xl md:text-6xl font-extrabold mb-4 leading-tight">Support Cody</h1>
                <p class="text-lg sm:text-xl font-medium text-gray-200">Your kindness creates a ripple of positive change.</p>
            </div>
        </header>

        <!-- Main Content Section -->
        <main class="p-6 sm:p-8 md:p-10">

            <!-- Donate Section -->
            <section class="mb-12">
                <h2 class="text-3xl font-bold text-center text-gray-900 mb-8">Donate & Support</h2>
                <p class="text-center text-gray-600 mb-8 max-w-2xl mx-auto">
                    Every contribution, no matter how small, makes a significant difference. Your support helps me continue my work and pursue my goals. Thank you for being a part of this journey.
                </p>
                <div class="flex flex-wrap justify-center gap-4 mb-10">
                    <a href="https://www.gofundme.com/f/breaking-silence-i-need-your-help-to-survive/donate?attribution_id=sl%3Af675e7e8-b610-4927-9308-f63235aa29c7&utm_campaign=unknown&utm_medium=undefined&utm_source=undefined" target="_blank" class="flex items-center justify-center bg-blue-600 hover:bg-blue-700 text-white font-semibold py-3 px-6 rounded-full shadow-lg transition duration-300 ease-in-out transform hover:-translate-y-1">
                        GoFundMe
                    </a>
                    <a href="https://cash.app/$srv1ne" target="_blank" class="flex items-center justify-center bg-green-600 hover:bg-green-700 text-white font-semibold py-3 px-6 rounded-full shadow-lg transition duration-300 ease-in-out transform hover:-translate-y-1">
                        CashApp
                    </a>
                    <a href="mailto:crice4485@gmail.com" class="flex items-center justify-center bg-red-600 hover:bg-red-700 text-white font-semibold py-3 px-6 rounded-full shadow-lg transition duration-300 ease-in-out transform hover:-translate-y-1">
                        Zelle
                    </a>
                    <a href="https://www.venmo.com/u/send2cody" target="_blank" class="flex items-center justify-center bg-blue-500 hover:bg-blue-600 text-white font-semibold py-3 px-6 rounded-full shadow-lg transition duration-300 ease-in-out transform hover:-translate-y-1">
                        Venmo
                    </a>
                    <a href="https://www.paypal.com/qrcodes/p2pqrc/EVS7WXML8S3ZL" target="_blank" class="flex items-center justify-center bg-indigo-600 hover:bg-indigo-700 text-white font-semibold py-3 px-6 rounded-full shadow-lg transition duration-300 ease-in-out transform hover:-translate-y-1">
                        PayPal
                    </a>
                    <a href="https://www.apple.com/apple-cash/" class="flex items-center justify-center bg-gray-700 hover:bg-gray-800 text-white font-semibold py-3 px-6 rounded-full shadow-lg transition duration-300 ease-in-out transform hover:-translate-y-1">
                        Apple Pay (Use my email in Apple Pay on iPhone)
                    </a>
                    <a href="https://www.ebay.com/usr/codyr.me" target="_blank" class="flex items-center justify-center bg-yellow-600 hover:bg-yellow-700 text-white font-semibold py-3 px-6 rounded-full shadow-lg transition duration-300 ease-in-out transform hover:-translate-y-1">
                        Shop My eBay
                    </a>
                </div>

                <!-- Square Donation Link (simplified from original embed) -->
                <div class="text-center mb-10">
                    <a target="_blank" href="https://square.link/u/qTkK6YbH?src=embed" class="inline-block bg-blue-600 hover:bg-blue-700 text-white text-lg font-semibold py-4 px-8 rounded-lg shadow-xl transition duration-300 ease-in-out transform hover:scale-105">
                        Donate via Square
                    </a>
                    <p class="text-sm text-gray-500 mt-2">Support Cody's Survival Fund - Entered by customer</p>
                </div>


                <!-- QR Codes Section -->
                <div class="mt-12">
                    <h3 class="text-2xl font-bold text-center text-gray-900 mb-6">Scan to Donate</h3>
                    <div class="grid grid-cols-2 sm:grid-cols-3 md:grid-cols-5 gap-6 justify-items-center">
                        <div class="p-3 bg-white rounded-lg shadow-md flex flex-col items-center transition duration-300 hover:shadow-lg">
                            <img src="zelle-qr.png" alt="Zelle QR Code" class="w-32 h-32 rounded-md mb-2">
                            <p class="text-sm font-medium text-gray-700">Zelle</p>
                        </div>
                        <div class="p-3 bg-white rounded-lg shadow-md flex flex-col items-center transition duration-300 hover:shadow-lg">
                            <img src="cashapp-qr.png" alt="CashApp QR Code" class="w-32 h-32 rounded-md mb-2">
                            <p class="text-sm font-medium text-gray-700">CashApp</p>
                        </div>
                        <div class="p-3 bg-white rounded-lg shadow-md flex flex-col items-center transition duration-300 hover:shadow-lg">
                            <img src="venmo-qr.png" alt="Venmo QR Code" class="w-32 h-32 rounded-md mb-2">
                            <p class="text-sm font-medium text-gray-700">Venmo</p>
                        </div>
                        <div class="p-3 bg-white rounded-lg shadow-md flex flex-col items-center transition duration-300 hover:shadow-lg">
                            <img src="paypal-qr.png" alt="PayPal QR Code" class="w-32 h-32 rounded-md mb-2">
                            <p class="text-sm font-medium text-gray-700">PayPal</p>
                        </div>
                        <div class="p-3 bg-white rounded-lg shadow-md flex flex-col items-center transition duration-300 hover:shadow-lg">
                            <img src="square-qr.png" alt="Square QR Code" class="w-32 h-32 rounded-md mb-2">
                            <p class="text-sm font-medium text-gray-700">Square</p>
                        </div>
                    </div>
                </div>
            </section>

            <!-- Resume Section -->
            <section class="mb-12">
                <h2 class="text-3xl font-bold text-center text-gray-900 mb-6">Resume</h2>
                <p class="text-center text-gray-600 mb-6 max-w-2xl mx-auto">
                    Explore my professional background, skills, and experience.
                </p>
                <div class="relative overflow-hidden rounded-lg shadow-xl border border-gray-200">
                    <iframe class="resume-embed" src="myresume.html" title="Cody's Resume"></iframe>
                </div>
            </section>

            <!-- Looking to Hire Section -->
            <section>
                <h2 class="text-3xl font-bold text-center text-gray-900 mb-6">Looking to Hire?</h2>
                <p class="text-center text-gray-600 mb-8 max-w-2xl mx-auto">
                    If you're interested in collaborating or have a job opportunity, please feel free to reach out using the form below. I'm always open to new challenges!
                </p>
                <div class="flex justify-center w-full">
                    <iframe src="https://docs.google.com/forms/d/e/1FAIpQLSdcfK5mDDny1IIqNmxz329l_HvpzU3y3z_GxC6Zf-ai5IYc8w/viewform?embedded=true" class="w-full max-w-2xl h-[70vh] min-h-[500px] rounded-lg shadow-xl border border-gray-200" frameborder="0" marginheight="0" marginwidth="0" title="Contact Form">Loading…</iframe>
                </div>
            </section>
        </main>

        <!-- Footer Section -->
        <footer class="bg-gray-800 text-white text-center py-8 mt-12 rounded-b-xl">
            <p class="text-sm sm:text-base mb-2">&copy; 2024 Cody. All rights reserved.</p>
            <p class="text-xs sm:text-sm text-gray-400">Thank you for your kindness and support. Everything counts, and I'm truly grateful.</p>
        </footer>
    </div>
</body>

</html>


================================================================================
END: D:\QiEOS\apps\mini-apps\support-cody-main\index.html
================================================================================


================================================================================
FILE: D:\QiEOS\apps\mini-apps\support-cody-main\myresume.html
================================================================================

<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Cody Rice-Velasquez – Resume</title>
    <!-- Tailwind CSS CDN -->
    <script src="https://cdn.tailwindcss.com"></script>
    <!-- Inter Font from Google Fonts -->
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700;800&display=swap" rel="stylesheet" />
    <style>
        /* Custom styles for the Inter font */
        body {
            font-family: 'Inter', sans-serif;
            /* Remove margin from body to allow the resume content to fill the iframe */
            margin: 0;
            padding: 0;
            background-color: #f8f9fa;
            /* Light background for the resume */
            color: #333;
        }

        /* Specific styles for resume layout to match the image */
        .section-title {
            border-bottom: 2px solid #e2e8f0;
            /* Light border under section titles */
            padding-bottom: 0.75rem;
            margin-bottom: 1.5rem;
        }

        .experience-item,
        .education-item {
            border-left: 4px solid #3b82f6;
            /* Blue accent bar on the left */
            padding-left: 1.5rem;
            margin-bottom: 2rem;
            background-color: white;
            /* Card background */
            border-radius: 8px;
            padding-top: 1.5rem;
            padding-bottom: 1.5rem;
            box-shadow: 0 2px 4px rgba(0, 0, 0, 0.05);
            /* Soft shadow */
        }

        .bullet-point::before {
            content: "•";
            color: #3b82f6;
            /* Blue bullet point */
            display: inline-block;
            width: 1em;
            margin-left: -1em;
        }

        .icon {
            /* Base styles for icons/logos in sections */
            width: 48px;
            height: 48px;
            border-radius: 50%;
            background-color: #e2e8f0;
            /* Light background for placeholder icons */
            display: flex;
            align-items: center;
            justify-content: center;
            flex-shrink: 0;
            /* Prevent shrinking */
            margin-right: 1rem;
            color: #64748b;
            /* Icon color */
            font-weight: bold;
            font-size: 1.25rem;
        }

        /* Responsive adjustments for icons */
        @media (min-width: 640px) {
            .icon {
                width: 64px;
                height: 64px;
                font-size: 1.5rem;
            }
        }

        /* Styling for skill/language cards */
        .skill-card {
            background: white;
            border-radius: 8px;
            padding: 1rem;
            box-shadow: 0 2px 4px rgba(0, 0, 0, 0.05);
            text-align: center;
            transition: transform 0.2s ease-in-out, box-shadow 0.2s ease-in-out;
        }

        .skill-card:hover {
            transform: translateY(-3px);
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
        }
    </style>
</head>

<body class="p-4 sm:p-6 lg:p-8">
    <div class="max-w-4xl mx-auto bg-white shadow-lg rounded-lg overflow-hidden">
        <!-- Header Section -->
        <header class="p-6 sm:p-8 bg-blue-700 text-white flex flex-col sm:flex-row items-center sm:items-start gap-6 rounded-t-lg">
            <div class="flex-shrink-0">
                <img src="https://placehold.co/120x120/007bff/ffffff?text=Cody" alt="Cody Profile Picture" class="rounded-full w-28 h-28 sm:w-32 sm:h-32 object-cover border-4 border-white shadow-md" />
            </div>
            <div class="text-center sm:text-left flex-grow">
                <h1 class="text-4xl sm:text-5xl font-extrabold mb-2">
                    Cody Rice–Velasquez
                </h1>
                <p class="text-2xl font-semibold text-blue-200">
                    Multidisciplinary Consultant | Tech & People | Immigration | HR |
                    Strategy
                </p>
                <div class="mt-4 text-lg">
                    <p class="mb-1">
                        📧
                        <a href="mailto:crice4485@gmail.com" class="text-blue-100 hover:underline">crice4485@gmail.com</a>
                    </p>
                    <p class="mb-1">📞 (317) 205-4383</p>
                    <p class="mb-1">📍 Indianapolis, IN</p>
                    <p>
                        🔗
                        <a href="https://www.linkedin.com/in/cody-rice-velasquez-qially/" target="_blank" class="text-blue-100 hover:underline">linkedin.com/in/cody-rice-velasquez-qially</a>
                    </p>
                </div>
            </div>
        </header>

        <!-- Main Content Sections -->
        <main class="p-6 sm:p-8 md:p-10">
            <!-- Summary/About Section -->
            <section class="mb-8">
                <h2 class="text-2xl font-bold text-gray-800 section-title">
                    Summary
                </h2>
                <blockquote class="italic text-gray-600 mb-4 pl-4 border-l-4 border-blue-500">
                    “I believe in the power of mutual growth—when we support each other,
                    we all succeed.”
                </blockquote>
                <p class="text-gray-700 leading-relaxed">
                    Visionary business consultant with experience in operations, HR,
                    innovation, and tech integration. I help people and organizations
                    thrive by bridging systems and solving what others won’t touch.
                </p>
            </section>

            <!-- Skills Section -->
            <section class="mb-8">
                <h2 class="text-2xl font-bold text-gray-800 section-title">Skills</h2>
                <div class="grid grid-cols-2 sm:grid-cols-3 md:grid-cols-4 gap-4 text-center">
                    <div class="skill-card">Innovation</div>
                    <div class="skill-card">Finance</div>
                    <div class="skill-card">Recruitment</div>
                    <div class="skill-card">HR</div>
                    <div class="skill-card">Tools in Business</div>
                    <div class="skill-card">Accounting</div>
                    <div class="skill-card">Employment Law</div>
                    <div class="skill-card">Strategy</div>
                    <div class="skill-card">Project Management</div>
                    <div class="skill-card">Tax Prep</div>
                </div>
            </section>

            <!-- Languages Section -->
            <section class="mb-8">
                <h2 class="text-2xl font-bold text-gray-800 section-title">
                    Languages
                </h2>
                <div class="grid grid-cols-2 sm:grid-cols-3 md:grid-cols-4 gap-4 text-center">
                    <div class="skill-card">English (Fluent)</div>
                    <div class="skill-card">Spanish (Fluent)</div>
                    <div class="skill-card">
                        ASL - American Sign Language (Basic Lv. 1-2)
                    </div>
                    <div class="skill-card">French (Very-Basic Reading)</div>
                    <div class="skill-card">Portuguese (Learning)</div>
                    <div class="skill-card">Italian (Learning)</div>
                    <div class="skill-card">Pashto (Learning)</div>
                    <div class="skill-card">Hindi (Learning)</div>
                    <div class="skill-card">Urdu (Learning)</div>
                    <div class="skill-card">Arabic (Learning)</div>
                </div>
            </section>

            <!-- Education Section -->
            <section class="mb-8">
                <h2 class="text-2xl font-bold text-gray-800 section-title">
                    Education
                </h2>

                <div class="education-item flex items-start gap-4">
                    <div class="icon">WGU</div>
                    <div>
                        <h3 class="text-xl font-semibold text-gray-900">
                            Western Governors University
                        </h3>
                        <p class="text-lg text-gray-700">Ongoing, Business & HR</p>
                    </div>
                </div>

                <div class="education-item flex items-start gap-4">
                    <div class="icon">IUPUI</div>
                    <div>
                        <h3 class="text-xl font-semibold text-gray-900">IUPUI</h3>
                        <p class="text-lg text-gray-700">Business/Legal Studies</p>
                    </div>
                </div>

                <div class="education-item flex items-start gap-4">
                    <div class="icon">IVY</div>
                    <div>
                        <h3 class="text-xl font-semibold text-gray-900">
                            Ivy Tech Community College
                        </h3>
                        <p class="text-lg text-gray-700">
                            Associate in Networking, System Security, Networking Security,
                            and Program Management Certificate
                        </p>
                    </div>
                </div>

                <div class="education-item flex items-start gap-4">
                    <div class="icon">SITC</div>
                    <div>
                        <h3 class="text-xl font-semibold text-gray-900">
                            Southern Indiana Career and Technical Center of Evansville
                        </h3>
                        <p class="text-lg text-gray-700">
                            Cisco Academy (Years 3-4): Networking & System Security
                        </p>
                    </div>
                </div>
            </section>

            <!-- Experience Section -->
            <section class="mb-8">
                <h2 class="text-2xl font-bold text-gray-800 section-title">
                    Experience
                </h2>

                <div class="experience-item flex items-start gap-4">
                    <div class="icon">QHR</div>
                    <div>
                        <h3 class="text-xl font-semibold text-gray-900">CEO & Partner</h3>
                        <p class="text-lg text-gray-700">
                            <strong>QuantumHR</strong> (2024–Present)
                        </p>
                        <ul class="list-none pl-0 mt-2 text-gray-700 text-sm">
                            <li class="mb-1 bullet-point">
                                Leading strategic innovation in human resource management
                                systems and processes for small businesses, ensuring agility
                                and scalability.
                            </li>
                            <li class="mb-1 bullet-point">
                                Overseeing comprehensive compliance initiatives to navigate
                                complex employment laws and industry regulations, minimizing
                                organizational risk.
                            </li>
                            <li class="mb-1 bullet-point">
                                Cultivating positive employee relations and developing
                                proactive strategies to enhance workforce engagement and
                                retention.
                            </li>
                            <li class="bullet-point">
                                Providing executive leadership and guidance in business
                                development, partnership cultivation, and long-term
                                organizational strategy.
                            </li>
                        </ul>
                    </div>
                </div>

                <div class="experience-item flex items-start gap-4">
                    <div class="icon">INV</div>
                    <div>
                        <h3 class="text-xl font-semibold text-gray-900">
                            Business Consultant
                        </h3>
                        <p class="text-lg text-gray-700">
                            <strong>InnovaFlow LLC</strong> (2021–Current)
                        </p>
                        <ul class="list-none pl-0 mt-2 text-gray-700 text-sm">
                            <li class="mb-1 bullet-point">
                                Developed and implemented multi-industry strategies to
                                optimize operational efficiency and market positioning for
                                self-employed professionals.
                            </li>
                            <li class="mb-1 bullet-point">
                                Guided clients through digital transformation initiatives,
                                integrating cutting-edge technologies to streamline workflows
                                and enhance productivity.
                            </li>
                            <li class="mb-1 bullet-point">
                                Provided expert accounting services, including financial
                                analysis, budgeting, and tax preparation, ensuring robust
                                fiscal health.
                            </li>
                            <li class="bullet-point">
                                Acted as a trusted advisor, solving complex business
                                challenges and fostering sustainable growth through tailored
                                solutions.
                            </li>
                        </ul>
                    </div>
                </div>

                <div class="experience-item flex items-start gap-4">
                    <div class="icon">MSI</div>
                    <div>
                        <h3 class="text-xl font-semibold text-gray-900">
                            HR Business Partner
                        </h3>
                        <p class="text-lg text-gray-700">
                            <strong>MSI Staffing</strong> (2020)
                        </p>
                        <ul class="list-none pl-0 mt-2 text-gray-700 text-sm">
                            <li class="mb-1 bullet-point">
                                Managed end-to-end recruitment processes, from talent sourcing
                                and candidate screening to interview coordination and offer
                                management for healthcare staffing.
                            </li>
                            <li class="mb-1 bullet-point">
                                Oversaw comprehensive onboarding programs to ensure seamless
                                integration and accelerated productivity for new hires.
                            </li>
                            <li class="mb-1 bullet-point">
                                Ensured strict adherence to employment laws and company
                                policies, maintaining compliance across all HR functions.
                            </li>
                            <li class="bullet-point">
                                Provided strategic HR guidance and support to management and
                                employees on various human capital matters.
                            </li>
                        </ul>
                    </div>
                </div>

                <div class="experience-item flex items-start gap-4">
                    <div class="icon">WFL</div>
                    <div>
                        <h3 class="text-xl font-semibold text-gray-900">Unit Manager</h3>
                        <p class="text-lg text-gray-700">
                            <strong>Waffle House</strong> (2019–2020)
                        </p>
                        <ul class="list-none pl-0 mt-2 text-gray-700 text-sm">
                            <li class="mb-1 bullet-point">
                                Managed all aspects of daily restaurant operations, ensuring
                                smooth service flow and high customer satisfaction.
                            </li>
                            <li class="mb-1 bullet-point">
                                Supervised and trained a team of staff, fostering a productive
                                and positive work environment.
                            </li>
                            <li class="bullet-point">
                                Oversaw inventory management, ensured adherence to food safety
                                standards, and managed cash handling procedures.
                            </li>
                        </ul>
                    </div>
                </div>

                <div class="experience-item flex items-start gap-4">
                    <div class="icon">IHP</div>
                    <div>
                        <h3 class="text-xl font-semibold text-gray-900">Assistant GM</h3>
                        <p class="text-lg text-gray-700">
                            <strong>IHOP</strong> (2018–2019)
                        </p>
                        <ul class="list-none pl-0 mt-2 text-gray-700 text-sm">
                            <li class="mb-1 bullet-point">
                                Supported the General Manager in overseeing all restaurant
                                operations, including front-of-house and back-of-house
                                activities.
                            </li>
                            <li class="mb-1 bullet-point">
                                Assisted with staff scheduling, training, and performance
                                management to optimize team efficiency.
                            </li>
                            <li class="bullet-point">
                                Handled customer inquiries and resolved issues to ensure a
                                positive dining experience.
                            </li>
                        </ul>
                    </div>
                </div>

                <div class="experience-item flex items-start gap-4">
                    <div class="icon">EMKE</div>
                    <div>
                        <h3 class="text-xl font-semibold text-gray-900">VDH Operator</h3>
                        <p class="text-lg text-gray-700">
                            <strong>EMKE</strong> (2016–2018)
                        </p>
                        <ul class="list-none pl-0 mt-2 text-gray-700 text-sm">
                            <li class="mb-1 bullet-point">
                                Operated and monitored Vacuum Degassing Heat Treatment (VDH)
                                machinery, ensuring precise material processing.
                            </li>
                            <li class="bullet-point">
                                Performed routine maintenance and troubleshooting on equipment
                                to minimize downtime and optimize production.
                            </li>
                            <li class="bullet-point">
                                Adhered to strict safety protocols and quality control
                                standards in all operational tasks.
                            </li>
                        </ul>
                    </div>
                </div>

                <div class="experience-item flex items-start gap-4">
                    <div class="icon">MCD</div>
                    <div>
                        <h3 class="text-xl font-semibold text-gray-900">Swing Manager</h3>
                        <p class="text-lg text-gray-700">
                            <strong>McDonald’s</strong> (2015–2016)
                        </p>
                        <ul class="list-none pl-0 mt-2 text-gray-700 text-sm">
                            <li class="mb-1 bullet-point">
                                Directed and managed daily restaurant shifts, overseeing crew
                                performance and customer service.
                            </li>
                            <li class="bullet-point">
                                Trained new employees on operational procedures, food
                                preparation, and customer interaction standards.
                            </li>
                            <li class="bullet-point">
                                Managed inventory and ensured product availability,
                                contributing to efficient service delivery.
                            </li>
                        </ul>
                    </div>
                </div>
            </section>

            <!-- Foundational Background Section -->
            <section class="mb-8">
                <h2 class="text-2xl font-bold text-gray-800 section-title">
                    Foundational Background
                </h2>
                <p class="text-gray-700 leading-relaxed mb-6">
                    This section highlights the early experiences that shaped my
                    personal and professional foundation.
                </p>

                <div class="experience-item flex items-start gap-4">
                    <div class="icon">C&P</div>
                    <div>
                        <h3 class="text-xl font-semibold text-gray-900">
                            Newspaper Delivery
                        </h3>
                        <p class="text-lg text-gray-700">
                            <strong>Courier & Press</strong> (Freshman Year)
                        </p>
                        <ul class="list-none pl-0 mt-2 text-gray-700 text-sm">
                            <li class="mb-1 bullet-point">
                                Delivered newspapers with my mother, contributing to family
                                income and developing early work ethic.
                            </li>
                            <li class="bullet-point">
                                Cultivated a habit of daily reading by reviewing entire
                                newspapers, enhancing vocabulary and general knowledge.
                            </li>
                        </ul>
                    </div>
                </div>

                <div class="experience-item flex items-start gap-4">
                    <div class="icon">TSA</div>
                    <div>
                        <h3 class="text-xl font-semibold text-gray-900">
                            Youth Engagement & Leadership
                        </h3>
                        <p class="text-lg text-gray-700">
                            <strong>Tri-State Alliance</strong> (2011–2015)
                        </p>
                        <ul class="list-none pl-0 mt-2 text-gray-700 text-sm">
                            <li class="mb-1 bullet-point">
                                Served as a community advocate and youth leader, promoting
                                equality and inclusion across southern Indiana.
                            </li>
                            <li class="mb-1 bullet-point">
                                Organized and facilitated educational panels, fundraisers, and
                                peer support initiatives to address community needs.
                            </li>
                            <li class="bullet-point">
                                Developed strong public speaking and organizational skills
                                through leading various community outreach programs.
                            </li>
                        </ul>
                    </div>
                </div>

                <div class="experience-item flex items-start gap-4">
                    <div class="icon">DNY</div>
                    <div>
                        <h3 class="text-xl font-semibold text-gray-900">
                            Server / Host / Crew Trainer
                        </h3>
                        <p class="text-lg text-gray-700">
                            <strong>Denny’s & McDonald's</strong> (2012–2015)
                        </p>
                        <ul class="list-none pl-0 mt-2 text-gray-700 text-sm">
                            <li class="mb-1 bullet-point">
                                Gained foundational customer service and operational
                                experience in fast-paced dining environments.
                            </li>
                            <li class="mb-1 bullet-point">
                                Quickly promoted to Crew Trainer due to demonstrated
                                reliability, strong work ethic, and emerging leadership
                                skills.
                            </li>
                            <li class="bullet-point">
                                Trained new team members on service standards, operational
                                procedures, and customer engagement.
                            </li>
                        </ul>
                    </div>
                </div>

                <div class="education-item flex items-start gap-4">
                    <div class="icon">HHS</div>
                    <div>
                        <h3 class="text-xl font-semibold text-gray-900">
                            High School Activities
                        </h3>
                        <p class="text-lg text-gray-700">
                            <strong>Harrison High School</strong> (2009–2013)
                        </p>
                        <ul class="list-none pl-0 mt-2 text-gray-700 text-sm">
                            <li class="mb-1 bullet-point">
                                Participated in National Honor Society, Business Professionals
                                of America, and Theater Tech Crew.
                            </li>
                            <li class="mb-1 bullet-point">
                                Member of Spanish Club and Swim Team, fostering teamwork and
                                diverse interests.
                            </li>
                            <li class="bullet-point">
                                Selected for advanced college-readiness tracks and early
                                admission programs, demonstrating academic excellence and
                                leadership potential.
                            </li>
                        </ul>
                    </div>
                </div>

                <div class="education-item flex items-start gap-4">
                    <div class="icon">MDS</div>
                    <div>
                        <h3 class="text-xl font-semibold text-gray-900">
                            Middle School Activities
                        </h3>
                        <p class="text-lg text-gray-700">
                            <strong>Middle School</strong>
                        </p>
                        <ul class="list-none pl-0 mt-2 text-gray-700 text-sm">
                            <li class="mb-1 bullet-point">
                                Engaged in Chess Club, Dance Team, and Choir, developing
                                diverse skills and teamwork.
                            </li>
                        </ul>
                    </div>
                </div>
            </section>
        </main>

        <!-- Footer for Resume -->
        <footer class="text-center py-8 bg-gray-800 text-gray-300 rounded-b-lg">
            <p class="text-sm">
                &copy; 2025 Cody Rice-Velasquez. Built with passion and purpose.
            </p>
        </footer>
    </div>
</body>

</html>

================================================================================
END: D:\QiEOS\apps\mini-apps\support-cody-main\myresume.html
================================================================================


================================================================================
SKIPPED BINARY FILE: D:\QiEOS\apps\mini-apps\support-cody-main\README.md
================================================================================


================================================================================
FILE: D:\QiEOS\apps\mini-apps\workers\tts-worker.js
================================================================================

// workers/tts-worker.js
// Deploy with: wrangler deploy workers/tts-worker.js --name empowerq-tts
// Set secret: wrangler secret put ELEVEN_API_KEY

export default {
  async fetch(request, env) {
    const url = new URL(request.url);
    if (url.pathname !== "/speak") {
      return new Response("OK", {status: 200});
    }
    if (request.method !== "POST") {
      return new Response("Method Not Allowed", { status: 405 });
    }
    const { text, lang } = await request.json();
    if (!text) return new Response("Missing text", { status: 400 });

    const voices = { en: "Rachel", es: "Sergio" };
    const voice = voices[(lang || "en")] || voices.en;

    const apiUrl = `https://api.elevenlabs.io/v1/text-to-speech/${encodeURIComponent(voice)}`;
    const payload = {
      text,
      model_id: "eleven_multilingual_v2",
      voice_settings: { stability: 0.5, similarity_boost: 0.75, style: 0.2, use_speaker_boost: true }
    };

    const r = await fetch(apiUrl, {
      method: "POST",
      headers: {
        "xi-api-key": env.ELEVEN_API_KEY,
        "Content-Type": "application/json",
        "Accept": "audio/mpeg"
      },
      body: JSON.stringify(payload)
    });

    if (!r.ok) {
      const msg = await r.text();
      return new Response(`TTS error: ${msg}`, { status: 500 });
    }
    return new Response(r.body, {
      status: 200,
      headers: { "Content-Type": "audio/mpeg", "Cache-Control": "no-store" }
    });
  }
};


================================================================================
END: D:\QiEOS\apps\mini-apps\workers\tts-worker.js
================================================================================


================================================================================
FILE: D:\QiEOS\apps\web\index.html
================================================================================

<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <link rel="icon" type="image/svg+xml" href="https://res.cloudinary.com/dp5b5fymz/image/upload/v1755927329/qibird.svg" />
    <link rel="apple-touch-icon" href="https://res.cloudinary.com/dp5b5fymz/image/upload/v1755927329/qibird.svg" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <meta name="description" content="QiAlly - Professional business services including tax preparation, HR compliance, automation, and IT strategy. Empowering entrepreneurs to simplify the chaos." />
    <meta name="keywords" content="QiAlly, business services, tax preparation, HR compliance, automation, IT strategy, entrepreneur support" />
    <meta name="author" content="QiAlly" />
    <meta property="og:title" content="QiAlly - Empower. Innovate. Grow." />
    <meta property="og:description" content="Professional business services including tax preparation, HR compliance, automation, and IT strategy." />
    <meta property="og:image" content="https://res.cloudinary.com/dp5b5fymz/image/upload/v1755927329/qibird.svg" />
    <meta property="og:type" content="website" />
    <meta name="twitter:card" content="summary_large_image" />
    <meta name="twitter:title" content="QiAlly - Empower. Innovate. Grow." />
    <meta name="twitter:description" content="Professional business services including tax preparation, HR compliance, automation, and IT strategy." />
    <meta name="twitter:image" content="https://res.cloudinary.com/dp5b5fymz/image/upload/v1755927329/qibird.svg" />
    <title>QiAlly - Empower. Innovate. Grow.</title>
  </head>
  <body>
    <div id="root"></div>
    <script type="module" src="/src/main.tsx"></script>
  </body>
</html>


================================================================================
END: D:\QiEOS\apps\web\index.html
================================================================================


================================================================================
FILE: D:\QiEOS\apps\web\package.json
================================================================================

{
  "name": "qieos-web",
  "private": true,
  "version": "0.0.0",
  "type": "module",
  "scripts": {
    "dev": "vite",
    "build": "tsc && vite build",
    "lint": "eslint . --ext ts,tsx --report-unused-disable-directives --max-warnings 0",
    "preview": "vite preview"
  },
  "dependencies": {
    "@radix-ui/react-label": "^2.0.2",
    "@radix-ui/react-slot": "^1.0.2",
    "@supabase/supabase-js": "^2.38.0",
    "class-variance-authority": "^0.7.0",
    "clsx": "^2.0.0",
    "framer-motion": "^12.23.12",
    "lucide-react": "^0.544.0",
    "react": "^18.2.0",
    "react-beautiful-dnd": "^13.1.1",
    "react-dom": "^18.2.0",
    "react-icons": "^4.12.0",
    "react-router-dom": "^6.20.0",
    "tailwind-merge": "^2.0.0"
  },
  "devDependencies": {
    "@types/react": "^18.2.37",
    "@types/react-beautiful-dnd": "^13.1.7",
    "@types/react-dom": "^18.2.15",
    "@typescript-eslint/eslint-plugin": "^6.10.0",
    "@typescript-eslint/parser": "^6.10.0",
    "@vitejs/plugin-react": "^4.1.0",
    "autoprefixer": "^10.4.16",
    "eslint": "^8.53.0",
    "eslint-plugin-react-hooks": "^4.6.0",
    "eslint-plugin-react-refresh": "^0.4.4",
    "postcss": "^8.4.31",
    "tailwindcss": "^3.3.5",
    "typescript": "^5.2.2",
    "vite": "^4.5.14"
  }
}


================================================================================
END: D:\QiEOS\apps\web\package.json
================================================================================


================================================================================
FILE: D:\QiEOS\apps\web\postcss.config.js
================================================================================

export default {
  plugins: {
    tailwindcss: {},
    autoprefixer: {},
  },
}


================================================================================
END: D:\QiEOS\apps\web\postcss.config.js
================================================================================


================================================================================
FILE: D:\QiEOS\apps\web\README.md
================================================================================

# QiAlly Marketing Site

A modern, interactive marketing website built with Vite + React, TailwindCSS, and Framer Motion.

## Features

- 🎨 **Modern Design**: Glassmorphism, rounded corners, soft shadows
- 🌙 **Dark/Light Theme**: Automatic theme detection with manual toggle
- 📱 **Mobile-First**: Responsive design that works on all devices
- ⚡ **Performance**: Optimized for Lighthouse scores ≥ 90
- 🎭 **Animations**: Tasteful Framer Motion animations
- 📧 **Contact Form**: Working contact form with spam protection
- 📅 **Calendly Integration**: Embedded booking system

## Tech Stack

- **Frontend**: React 18, TypeScript, Vite
- **Styling**: TailwindCSS with custom design tokens
- **Animations**: Framer Motion
- **Icons**: Lucide React
- **Deployment**: Cloudflare Pages

## Getting Started

### Prerequisites

- Node.js 18+
- npm or pnpm

### Installation

```bash
# Install dependencies
npm install

# Start development server
npm run dev

# Build for production
npm run build

# Preview production build
npm run preview
```

## Environment Variables

Create a `.env.local` file in the root directory:

```env
# Calendly URL for booking integration
VITE_CALENDLY_URL=https://calendly.com/qially/qimoment

# Contact form endpoint (optional)
VITE_CONTACT_API_URL=/api/contact
```

## Project Structure

```
src/
├── components/          # Reusable UI components
│   ├── ui/             # Base UI primitives
│   ├── Nav.tsx         # Navigation component
│   ├── Footer.tsx      # Footer component
│   └── ThemeToggle.tsx # Theme switcher
├── pages/              # Page components
│   ├── index.tsx       # Home page
│   ├── about.tsx       # About page
│   ├── services.tsx    # Services page
│   ├── contact.tsx     # Contact page
│   └── 404.tsx         # 404 page
├── sections/           # Home page sections
│   ├── Hero.tsx        # Hero section
│   ├── Trust.tsx       # Trust indicators
│   ├── ServicesGrid.tsx # Services showcase
│   ├── Process.tsx     # Process timeline
│   ├── Testimonials.tsx # Client testimonials
│   └── CtaBanner.tsx   # Call-to-action
└── styles/             # Global styles
    └── index.css       # Tailwind + CSS variables
```

## Design System

### Colors

The site uses a comprehensive color system with CSS variables:

- **Primary**: Blue gradient (indigo → violet → fuchsia)
- **Background**: Light/dark mode support
- **Cards**: Glassmorphism with backdrop blur
- **Text**: High contrast for accessibility

### Typography

- **Headings**: `text-3xl md:text-5xl font-semibold tracking-tight`
- **Body**: `text-slate-600 dark:text-slate-300`
- **Spacing**: `py-20` sections, `max-w-7xl mx-auto px-6 md:px-8`

### Components

- **Glass Cards**: `bg-white/10 backdrop-blur-md rounded-2xl`
- **Shadows**: `shadow-xl`, `shadow-2xl/20`
- **Buttons**: Multiple variants with hover states

## Contact Form

The contact form includes:

- ✅ **Validation**: Client-side and server-side validation
- 🛡️ **Spam Protection**: Honeypot field and rate limiting
- 📧 **Email Integration**: Ready for email service integration
- 🎯 **Success/Error States**: User feedback with toast notifications

## Calendly Integration

The Calendly component:

- 📅 **Responsive**: Works on all screen sizes
- 🔗 **Configurable**: URL from environment variables
- ♿ **Accessible**: Proper ARIA labels and keyboard navigation

## Performance

The site is optimized for:

- ⚡ **Core Web Vitals**: LCP, FID, CLS
- 🖼️ **Images**: Optimized and lazy-loaded
- 📦 **Bundle Size**: Tree-shaking and code splitting
- 🚀 **Lighthouse**: Target scores ≥ 90

## Deployment

### Cloudflare Pages

1. Connect your repository to Cloudflare Pages
2. Set build command: `npm run build`
3. Set build output directory: `dist`
4. Add environment variables in dashboard

### Environment Variables

```env
VITE_CALENDLY_URL=https://calendly.com/qially/qimoment
```

## Contributing

1. Fork the repository
2. Create a feature branch
3. Make your changes
4. Test thoroughly
5. Submit a pull request

## License

© 2024 QiAlly. All rights reserved.


================================================================================
END: D:\QiEOS\apps\web\README.md
================================================================================


================================================================================
FILE: D:\QiEOS\apps\web\tailwind.config.js
================================================================================

/** @type {import('tailwindcss').Config} */
export default {
  darkMode: ["class"],
  content: [
    "./index.html",
    "./src/**/*.{js,ts,jsx,tsx}",
  ],
  theme: {
    extend: {
      colors: {
        border: "hsl(var(--border))",
        input: "hsl(var(--input))",
        ring: "hsl(var(--ring))",
        background: "hsl(var(--background))",
        foreground: "hsl(var(--foreground))",
        primary: {
          DEFAULT: "hsl(var(--primary))",
          foreground: "hsl(var(--primary-foreground))",
        },
        secondary: {
          DEFAULT: "hsl(var(--secondary))",
          foreground: "hsl(var(--secondary-foreground))",
        },
        destructive: {
          DEFAULT: "hsl(var(--destructive))",
          foreground: "hsl(var(--destructive-foreground))",
        },
        muted: {
          DEFAULT: "hsl(var(--muted))",
          foreground: "hsl(var(--muted-foreground))",
        },
        accent: {
          DEFAULT: "hsl(var(--accent))",
          foreground: "hsl(var(--accent-foreground))",
        },
        popover: {
          DEFAULT: "hsl(var(--popover))",
          foreground: "hsl(var(--popover-foreground))",
        },
        card: {
          DEFAULT: "hsl(var(--card))",
          foreground: "hsl(var(--card-foreground))",
        },
      },
      borderRadius: {
        lg: "var(--radius)",
        md: "calc(var(--radius) - 2px)",
        sm: "calc(var(--radius) - 4px)",
      },
      backdropBlur: {
        xs: '2px',
        sm: '4px',
        md: '8px',
        lg: '12px',
        xl: '16px',
      }
    },
  },
  plugins: [],
}


================================================================================
END: D:\QiEOS\apps\web\tailwind.config.js
================================================================================


================================================================================
FILE: D:\QiEOS\apps\web\tsconfig.json
================================================================================

{
  "compilerOptions": {
    "target": "ES2020",
    "useDefineForClassFields": true,
    "lib": ["ES2020", "DOM", "DOM.Iterable"],
    "module": "ESNext",
    "skipLibCheck": true,

    "moduleResolution": "bundler",
    "allowImportingTsExtensions": true,
    "resolveJsonModule": true,
    "isolatedModules": true,
    "noEmit": true,

    "jsx": "react-jsx",
    "esModuleInterop": true,
    "allowSyntheticDefaultImports": true,

    "strict": true,
    "noUnusedLocals": false,
    "noUnusedParameters": false,
    "noFallthroughCasesInSwitch": true,
    "forceConsistentCasingInFileNames": true,

    "baseUrl": ".",
    "paths": { "@/*": ["./src/*"] },
    "types": ["vite/client"]
  },
  "include": ["src"],
  "references": [{ "path": "./tsconfig.node.json" }]
}


================================================================================
END: D:\QiEOS\apps\web\tsconfig.json
================================================================================


================================================================================
FILE: D:\QiEOS\apps\web\tsconfig.node.json
================================================================================

{
  "compilerOptions": {
    "composite": true,
    "skipLibCheck": true,
    "module": "ESNext",
    "moduleResolution": "bundler",
    "allowSyntheticDefaultImports": true,
    "strict": true,
    "forceConsistentCasingInFileNames": true
  },
  "include": ["vite.config.ts"]
}


================================================================================
END: D:\QiEOS\apps\web\tsconfig.node.json
================================================================================


================================================================================
FILE: D:\QiEOS\apps\web\vite.config.ts
================================================================================

import { defineConfig } from "vite";
import react from "@vitejs/plugin-react";
import path from "path";
import { fileURLToPath } from "url";

const __filename = fileURLToPath(import.meta.url);
const __dirname = path.dirname(__filename);

export default defineConfig({
  plugins: [react()],
  resolve: {
    alias: {
      "@": path.resolve(__dirname, "./src"),
    },
  },
  server: {
    port: 5173,
    host: true,
    proxy: {
      "/api": "http://127.0.0.1:8787",
    },
  },
});


================================================================================
END: D:\QiEOS\apps\web\vite.config.ts
================================================================================


================================================================================
FILE: D:\QiEOS\apps\web\public\builtbyrays_public\builtbyrays.com\_config.yml
================================================================================

theme: jekyll-theme-minimal

================================================================================
END: D:\QiEOS\apps\web\public\builtbyrays_public\builtbyrays.com\_config.yml
================================================================================


================================================================================
FILE: D:\QiEOS\apps\web\public\builtbyrays_public\builtbyrays.com\package.json
================================================================================

{
  "name": "landingpage-react-template",
  "private": true,
  "dependencies": {
    "@testing-library/jest-dom": "^4.2.4",
    "@testing-library/react": "^9.3.2",
    "@testing-library/user-event": "^7.1.2",
    "emailjs-com": "^2.6.4",
    "react": "^17.0.1",
    "react-dom": "^17.0.1",
    "react-scripts": "^5.0.1",
    "smooth-scroll": "^16.1.3"
  },
  "scripts": {
    "start": "react-scripts start",
    "build": "react-scripts build",
    "test": "react-scripts test",
    "eject": "react-scripts eject"
  },
  "eslintConfig": {
    "extends": "react-app"
  },
  "browserslist": {
    "production": [
      ">0.2%",
      "not dead",
      "not op_mini all"
    ],
    "development": [
      "last 1 chrome version",
      "last 1 firefox version",
      "last 1 safari version"
    ]
  }
}


================================================================================
END: D:\QiEOS\apps\web\public\builtbyrays_public\builtbyrays.com\package.json
================================================================================


================================================================================
FILE: D:\QiEOS\apps\web\public\builtbyrays_public\builtbyrays.com\README.md
================================================================================

# React JS Landing Page Template

**

# 🛎️🛎️ Good news! New & improved [V2](https://github.com/issaafalkattan/react-landing-page-template-2021) is out  

**


### <a href="https://react-landing-page-template-93ne.vercel.app/">LIVE DEMO</a> 

## Description
This is a ReactJS based landing page template, fit for a startup company/service with a one page view. The design is inspired by a template from <a href="https://www.free-css.com/assets/files/free-css-templates/preview/page234/interact/">Free-CSS.com </a>
All 'visual' data can be easily modified by changing the data.json file.

## Make it Yours!
### 1. Preps
You will need to have <a href="https://nodejs.org/">Node JS</a> installed on your pc. 

### 2. Clone Files
After cloning the files, you will have to run ```yarn``` followed by ```yarn start``` in the CLI
### 3. Add your own data 
Change the data in the ```data.json``` file as well as add any images to ```public/img/```
You can also change styles by modifying the ```public/css``` files.
If you need the contact form to work, you also need to create an EmailJS account, and modify the ```src/components/contact.jsx``` file to replace your own service ID, template ID and Public Key

## Like this project?
<a href="https://www.buymeacoffee.com/issaaf">Buy my a coffee ☕️</a>

## Credits
##### Free CSS 
<a href="https://www.free-css.com/assets/files/free-css-templates/preview/page234/interact/">Free-CSS.com </a>

##### Issaaf kattan


================================================================================
END: D:\QiEOS\apps\web\public\builtbyrays_public\builtbyrays.com\README.md
================================================================================


================================================================================
FILE: D:\QiEOS\apps\web\public\builtbyrays_public\builtbyrays.com\public\index.html
================================================================================

<head>
  <meta charset="utf-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1" />
  <link rel="shortcut icon" href="img/favicon.ico" type="image/x-icon" />
  <link rel="apple-touch-icon" href="img/apple-touch-icon.png" />
  <link
    rel="apple-touch-icon"
    sizes="72x72"
    href="img/apple-touch-icon-72x72.png"
  />
  <link
    rel="apple-touch-icon"
    sizes="114x114"
    href="img/apple-touch-icon-114x114.png"
  />

  <link rel="stylesheet" type="text/css" href="css/bootstrap.css" />
  <link
    rel="stylesheet"
    type="text/css"
    href="fonts/font-awesome/css/font-awesome.css"
  />
  <link rel="stylesheet" type="text/css" href="css/style.css" />
  <link
    rel="stylesheet"
    type="text/css"
    href="css/nivo-lightbox/nivo-lightbox.css"
  />
  <link rel="stylesheet" type="text/css" href="css/nivo-lightbox/default.css" />
  <link
    href="https://fonts.googleapis.com/css?family=Open+Sans:300,400,600,700"
    rel="stylesheet"
  />
  <link
    href="https://fonts.googleapis.com/css?family=Lato:400,700"
    rel="stylesheet"
  />
  <link
    href="https://fonts.googleapis.com/css?family=Raleway:300,400,500,600,700,800,900"
    rel="stylesheet"
  />
  <title>A React Landing Page Template</title>
  <meta name="description" content="" />
  <meta name="author" content="@Issaafalkattan" />
</head>

<body id="page-top" data-spy="scroll" data-target=".navbar-fixed-top">
  <div id="root"></div>
  <script type="text/javascript" src="js/jquery.1.11.1.js"></script>
  <script type="text/javascript" src="js/bootstrap.js"></script>
</body>


================================================================================
END: D:\QiEOS\apps\web\public\builtbyrays_public\builtbyrays.com\public\index.html
================================================================================


================================================================================
FILE: D:\QiEOS\apps\web\public\builtbyrays_public\builtbyrays.com\public\robots.txt
================================================================================

# https://www.robotstxt.org/robotstxt.html
User-agent: *
Disallow:


================================================================================
END: D:\QiEOS\apps\web\public\builtbyrays_public\builtbyrays.com\public\robots.txt
================================================================================


================================================================================
FILE: D:\QiEOS\apps\web\public\builtbyrays_public\builtbyrays.com\public\css\bootstrap.css
================================================================================

/*!
 * Bootstrap v3.3.7 (http://getbootstrap.com)
 * Copyright 2011-2016 Twitter, Inc.
 * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)
 */
/*! normalize.css v3.0.3 | MIT License | github.com/necolas/normalize.css */
html {
  font-family: sans-serif;
  -webkit-text-size-adjust: 100%;
      -ms-text-size-adjust: 100%;
}
body {
  margin: 0;
}
article,
aside,
details,
figcaption,
figure,
footer,
header,
hgroup,
main,
menu,
nav,
section,
summary {
  display: block;
}
audio,
canvas,
progress,
video {
  display: inline-block;
  vertical-align: baseline;
}
audio:not([controls]) {
  display: none;
  height: 0;
}
[hidden],
template {
  display: none;
}
a {
  background-color: transparent;
}
a:active,
a:hover {
  outline: 0;
}
abbr[title] {
  border-bottom: 1px dotted;
}
b,
strong {
  font-weight: bold;
}
dfn {
  font-style: italic;
}
h1 {
  margin: .67em 0;
  font-size: 2em;
}
mark {
  color: #000;
  background: #ff0;
}
small {
  font-size: 80%;
}
sub,
sup {
  position: relative;
  font-size: 75%;
  line-height: 0;
  vertical-align: baseline;
}
sup {
  top: -.5em;
}
sub {
  bottom: -.25em;
}
img {
  border: 0;
}
svg:not(:root) {
  overflow: hidden;
}
figure {
  margin: 1em 40px;
}
hr {
  height: 0;
  -webkit-box-sizing: content-box;
     -moz-box-sizing: content-box;
          box-sizing: content-box;
}
pre {
  overflow: auto;
}
code,
kbd,
pre,
samp {
  font-family: monospace, monospace;
  font-size: 1em;
}
button,
input,
optgroup,
select,
textarea {
  margin: 0;
  font: inherit;
  color: inherit;
}
button {
  overflow: visible;
}
button,
select {
  text-transform: none;
}
button,
html input[type="button"],
input[type="reset"],
input[type="submit"] {
  -webkit-appearance: button;
  cursor: pointer;
}
button[disabled],
html input[disabled] {
  cursor: default;
}
button::-moz-focus-inner,
input::-moz-focus-inner {
  padding: 0;
  border: 0;
}
input {
  line-height: normal;
}
input[type="checkbox"],
input[type="radio"] {
  -webkit-box-sizing: border-box;
     -moz-box-sizing: border-box;
          box-sizing: border-box;
  padding: 0;
}
input[type="number"]::-webkit-inner-spin-button,
input[type="number"]::-webkit-outer-spin-button {
  height: auto;
}
input[type="search"] {
  -webkit-box-sizing: content-box;
     -moz-box-sizing: content-box;
          box-sizing: content-box;
  -webkit-appearance: textfield;
}
input[type="search"]::-webkit-search-cancel-button,
input[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none;
}
fieldset {
  padding: .35em .625em .75em;
  margin: 0 2px;
  border: 1px solid #c0c0c0;
}
legend {
  padding: 0;
  border: 0;
}
textarea {
  overflow: auto;
}
optgroup {
  font-weight: bold;
}
table {
  border-spacing: 0;
  border-collapse: collapse;
}
td,
th {
  padding: 0;
}
/*! Source: https://github.com/h5bp/html5-boilerplate/blob/master/src/css/main.css */
@media print {
  *,
  *:before,
  *:after {
    color: #000 !important;
    text-shadow: none !important;
    background: transparent !important;
    -webkit-box-shadow: none !important;
            box-shadow: none !important;
  }
  a,
  a:visited {
    text-decoration: underline;
  }
  a[href]:after {
    content: " (" attr(href) ")";
  }
  abbr[title]:after {
    content: " (" attr(title) ")";
  }
  a[href^="#"]:after,
  a[href^="javascript:"]:after {
    content: "";
  }
  pre,
  blockquote {
    border: 1px solid #999;

    page-break-inside: avoid;
  }
  thead {
    display: table-header-group;
  }
  tr,
  img {
    page-break-inside: avoid;
  }
  img {
    max-width: 100% !important;
  }
  p,
  h2,
  h3 {
    orphans: 3;
    widows: 3;
  }
  h2,
  h3 {
    page-break-after: avoid;
  }
  .navbar {
    display: none;
  }
  .btn > .caret,
  .dropup > .btn > .caret {
    border-top-color: #000 !important;
  }
  .label {
    border: 1px solid #000;
  }
  .table {
    border-collapse: collapse !important;
  }
  .table td,
  .table th {
    background-color: #fff !important;
  }
  .table-bordered th,
  .table-bordered td {
    border: 1px solid #ddd !important;
  }
}
@font-face {
  font-family: 'Glyphicons Halflings';

  src: url('../fonts/glyphicons-halflings-regular.eot');
  src: url('../fonts/glyphicons-halflings-regular.eot?#iefix') format('embedded-opentype'), url('../fonts/glyphicons-halflings-regular.woff2') format('woff2'), url('../fonts/glyphicons-halflings-regular.woff') format('woff'), url('../fonts/glyphicons-halflings-regular.ttf') format('truetype'), url('../fonts/glyphicons-halflings-regular.svg#glyphicons_halflingsregular') format('svg');
}
.glyphicon {
  position: relative;
  top: 1px;
  display: inline-block;
  font-family: 'Glyphicons Halflings';
  font-style: normal;
  font-weight: normal;
  line-height: 1;

  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}
.glyphicon-asterisk:before {
  content: "\002a";
}
.glyphicon-plus:before {
  content: "\002b";
}
.glyphicon-euro:before,
.glyphicon-eur:before {
  content: "\20ac";
}
.glyphicon-minus:before {
  content: "\2212";
}
.glyphicon-cloud:before {
  content: "\2601";
}
.glyphicon-envelope:before {
  content: "\2709";
}
.glyphicon-pencil:before {
  content: "\270f";
}
.glyphicon-glass:before {
  content: "\e001";
}
.glyphicon-music:before {
  content: "\e002";
}
.glyphicon-search:before {
  content: "\e003";
}
.glyphicon-heart:before {
  content: "\e005";
}
.glyphicon-star:before {
  content: "\e006";
}
.glyphicon-star-empty:before {
  content: "\e007";
}
.glyphicon-user:before {
  content: "\e008";
}
.glyphicon-film:before {
  content: "\e009";
}
.glyphicon-th-large:before {
  content: "\e010";
}
.glyphicon-th:before {
  content: "\e011";
}
.glyphicon-th-list:before {
  content: "\e012";
}
.glyphicon-ok:before {
  content: "\e013";
}
.glyphicon-remove:before {
  content: "\e014";
}
.glyphicon-zoom-in:before {
  content: "\e015";
}
.glyphicon-zoom-out:before {
  content: "\e016";
}
.glyphicon-off:before {
  content: "\e017";
}
.glyphicon-signal:before {
  content: "\e018";
}
.glyphicon-cog:before {
  content: "\e019";
}
.glyphicon-trash:before {
  content: "\e020";
}
.glyphicon-home:before {
  content: "\e021";
}
.glyphicon-file:before {
  content: "\e022";
}
.glyphicon-time:before {
  content: "\e023";
}
.glyphicon-road:before {
  content: "\e024";
}
.glyphicon-download-alt:before {
  content: "\e025";
}
.glyphicon-download:before {
  content: "\e026";
}
.glyphicon-upload:before {
  content: "\e027";
}
.glyphicon-inbox:before {
  content: "\e028";
}
.glyphicon-play-circle:before {
  content: "\e029";
}
.glyphicon-repeat:before {
  content: "\e030";
}
.glyphicon-refresh:before {
  content: "\e031";
}
.glyphicon-list-alt:before {
  content: "\e032";
}
.glyphicon-lock:before {
  content: "\e033";
}
.glyphicon-flag:before {
  content: "\e034";
}
.glyphicon-headphones:before {
  content: "\e035";
}
.glyphicon-volume-off:before {
  content: "\e036";
}
.glyphicon-volume-down:before {
  content: "\e037";
}
.glyphicon-volume-up:before {
  content: "\e038";
}
.glyphicon-qrcode:before {
  content: "\e039";
}
.glyphicon-barcode:before {
  content: "\e040";
}
.glyphicon-tag:before {
  content: "\e041";
}
.glyphicon-tags:before {
  content: "\e042";
}
.glyphicon-book:before {
  content: "\e043";
}
.glyphicon-bookmark:before {
  content: "\e044";
}
.glyphicon-print:before {
  content: "\e045";
}
.glyphicon-camera:before {
  content: "\e046";
}
.glyphicon-font:before {
  content: "\e047";
}
.glyphicon-bold:before {
  content: "\e048";
}
.glyphicon-italic:before {
  content: "\e049";
}
.glyphicon-text-height:before {
  content: "\e050";
}
.glyphicon-text-width:before {
  content: "\e051";
}
.glyphicon-align-left:before {
  content: "\e052";
}
.glyphicon-align-center:before {
  content: "\e053";
}
.glyphicon-align-right:before {
  content: "\e054";
}
.glyphicon-align-justify:before {
  content: "\e055";
}
.glyphicon-list:before {
  content: "\e056";
}
.glyphicon-indent-left:before {
  content: "\e057";
}
.glyphicon-indent-right:before {
  content: "\e058";
}
.glyphicon-facetime-video:before {
  content: "\e059";
}
.glyphicon-picture:before {
  content: "\e060";
}
.glyphicon-map-marker:before {
  content: "\e062";
}
.glyphicon-adjust:before {
  content: "\e063";
}
.glyphicon-tint:before {
  content: "\e064";
}
.glyphicon-edit:before {
  content: "\e065";
}
.glyphicon-share:before {
  content: "\e066";
}
.glyphicon-check:before {
  content: "\e067";
}
.glyphicon-move:before {
  content: "\e068";
}
.glyphicon-step-backward:before {
  content: "\e069";
}
.glyphicon-fast-backward:before {
  content: "\e070";
}
.glyphicon-backward:before {
  content: "\e071";
}
.glyphicon-play:before {
  content: "\e072";
}
.glyphicon-pause:before {
  content: "\e073";
}
.glyphicon-stop:before {
  content: "\e074";
}
.glyphicon-forward:before {
  content: "\e075";
}
.glyphicon-fast-forward:before {
  content: "\e076";
}
.glyphicon-step-forward:before {
  content: "\e077";
}
.glyphicon-eject:before {
  content: "\e078";
}
.glyphicon-chevron-left:before {
  content: "\e079";
}
.glyphicon-chevron-right:before {
  content: "\e080";
}
.glyphicon-plus-sign:before {
  content: "\e081";
}
.glyphicon-minus-sign:before {
  content: "\e082";
}
.glyphicon-remove-sign:before {
  content: "\e083";
}
.glyphicon-ok-sign:before {
  content: "\e084";
}
.glyphicon-question-sign:before {
  content: "\e085";
}
.glyphicon-info-sign:before {
  content: "\e086";
}
.glyphicon-screenshot:before {
  content: "\e087";
}
.glyphicon-remove-circle:before {
  content: "\e088";
}
.glyphicon-ok-circle:before {
  content: "\e089";
}
.glyphicon-ban-circle:before {
  content: "\e090";
}
.glyphicon-arrow-left:before {
  content: "\e091";
}
.glyphicon-arrow-right:before {
  content: "\e092";
}
.glyphicon-arrow-up:before {
  content: "\e093";
}
.glyphicon-arrow-down:before {
  content: "\e094";
}
.glyphicon-share-alt:before {
  content: "\e095";
}
.glyphicon-resize-full:before {
  content: "\e096";
}
.glyphicon-resize-small:before {
  content: "\e097";
}
.glyphicon-exclamation-sign:before {
  content: "\e101";
}
.glyphicon-gift:before {
  content: "\e102";
}
.glyphicon-leaf:before {
  content: "\e103";
}
.glyphicon-fire:before {
  content: "\e104";
}
.glyphicon-eye-open:before {
  content: "\e105";
}
.glyphicon-eye-close:before {
  content: "\e106";
}
.glyphicon-warning-sign:before {
  content: "\e107";
}
.glyphicon-plane:before {
  content: "\e108";
}
.glyphicon-calendar:before {
  content: "\e109";
}
.glyphicon-random:before {
  content: "\e110";
}
.glyphicon-comment:before {
  content: "\e111";
}
.glyphicon-magnet:before {
  content: "\e112";
}
.glyphicon-chevron-up:before {
  content: "\e113";
}
.glyphicon-chevron-down:before {
  content: "\e114";
}
.glyphicon-retweet:before {
  content: "\e115";
}
.glyphicon-shopping-cart:before {
  content: "\e116";
}
.glyphicon-folder-close:before {
  content: "\e117";
}
.glyphicon-folder-open:before {
  content: "\e118";
}
.glyphicon-resize-vertical:before {
  content: "\e119";
}
.glyphicon-resize-horizontal:before {
  content: "\e120";
}
.glyphicon-hdd:before {
  content: "\e121";
}
.glyphicon-bullhorn:before {
  content: "\e122";
}
.glyphicon-bell:before {
  content: "\e123";
}
.glyphicon-certificate:before {
  content: "\e124";
}
.glyphicon-thumbs-up:before {
  content: "\e125";
}
.glyphicon-thumbs-down:before {
  content: "\e126";
}
.glyphicon-hand-right:before {
  content: "\e127";
}
.glyphicon-hand-left:before {
  content: "\e128";
}
.glyphicon-hand-up:before {
  content: "\e129";
}
.glyphicon-hand-down:before {
  content: "\e130";
}
.glyphicon-circle-arrow-right:before {
  content: "\e131";
}
.glyphicon-circle-arrow-left:before {
  content: "\e132";
}
.glyphicon-circle-arrow-up:before {
  content: "\e133";
}
.glyphicon-circle-arrow-down:before {
  content: "\e134";
}
.glyphicon-globe:before {
  content: "\e135";
}
.glyphicon-wrench:before {
  content: "\e136";
}
.glyphicon-tasks:before {
  content: "\e137";
}
.glyphicon-filter:before {
  content: "\e138";
}
.glyphicon-briefcase:before {
  content: "\e139";
}
.glyphicon-fullscreen:before {
  content: "\e140";
}
.glyphicon-dashboard:before {
  content: "\e141";
}
.glyphicon-paperclip:before {
  content: "\e142";
}
.glyphicon-heart-empty:before {
  content: "\e143";
}
.glyphicon-link:before {
  content: "\e144";
}
.glyphicon-phone:before {
  content: "\e145";
}
.glyphicon-pushpin:before {
  content: "\e146";
}
.glyphicon-usd:before {
  content: "\e148";
}
.glyphicon-gbp:before {
  content: "\e149";
}
.glyphicon-sort:before {
  content: "\e150";
}
.glyphicon-sort-by-alphabet:before {
  content: "\e151";
}
.glyphicon-sort-by-alphabet-alt:before {
  content: "\e152";
}
.glyphicon-sort-by-order:before {
  content: "\e153";
}
.glyphicon-sort-by-order-alt:before {
  content: "\e154";
}
.glyphicon-sort-by-attributes:before {
  content: "\e155";
}
.glyphicon-sort-by-attributes-alt:before {
  content: "\e156";
}
.glyphicon-unchecked:before {
  content: "\e157";
}
.glyphicon-expand:before {
  content: "\e158";
}
.glyphicon-collapse-down:before {
  content: "\e159";
}
.glyphicon-collapse-up:before {
  content: "\e160";
}
.glyphicon-log-in:before {
  content: "\e161";
}
.glyphicon-flash:before {
  content: "\e162";
}
.glyphicon-log-out:before {
  content: "\e163";
}
.glyphicon-new-window:before {
  content: "\e164";
}
.glyphicon-record:before {
  content: "\e165";
}
.glyphicon-save:before {
  content: "\e166";
}
.glyphicon-open:before {
  content: "\e167";
}
.glyphicon-saved:before {
  content: "\e168";
}
.glyphicon-import:before {
  content: "\e169";
}
.glyphicon-export:before {
  content: "\e170";
}
.glyphicon-send:before {
  content: "\e171";
}
.glyphicon-floppy-disk:before {
  content: "\e172";
}
.glyphicon-floppy-saved:before {
  content: "\e173";
}
.glyphicon-floppy-remove:before {
  content: "\e174";
}
.glyphicon-floppy-save:before {
  content: "\e175";
}
.glyphicon-floppy-open:before {
  content: "\e176";
}
.glyphicon-credit-card:before {
  content: "\e177";
}
.glyphicon-transfer:before {
  content: "\e178";
}
.glyphicon-cutlery:before {
  content: "\e179";
}
.glyphicon-header:before {
  content: "\e180";
}
.glyphicon-compressed:before {
  content: "\e181";
}
.glyphicon-earphone:before {
  content: "\e182";
}
.glyphicon-phone-alt:before {
  content: "\e183";
}
.glyphicon-tower:before {
  content: "\e184";
}
.glyphicon-stats:before {
  content: "\e185";
}
.glyphicon-sd-video:before {
  content: "\e186";
}
.glyphicon-hd-video:before {
  content: "\e187";
}
.glyphicon-subtitles:before {
  content: "\e188";
}
.glyphicon-sound-stereo:before {
  content: "\e189";
}
.glyphicon-sound-dolby:before {
  content: "\e190";
}
.glyphicon-sound-5-1:before {
  content: "\e191";
}
.glyphicon-sound-6-1:before {
  content: "\e192";
}
.glyphicon-sound-7-1:before {
  content: "\e193";
}
.glyphicon-copyright-mark:before {
  content: "\e194";
}
.glyphicon-registration-mark:before {
  content: "\e195";
}
.glyphicon-cloud-download:before {
  content: "\e197";
}
.glyphicon-cloud-upload:before {
  content: "\e198";
}
.glyphicon-tree-conifer:before {
  content: "\e199";
}
.glyphicon-tree-deciduous:before {
  content: "\e200";
}
.glyphicon-cd:before {
  content: "\e201";
}
.glyphicon-save-file:before {
  content: "\e202";
}
.glyphicon-open-file:before {
  content: "\e203";
}
.glyphicon-level-up:before {
  content: "\e204";
}
.glyphicon-copy:before {
  content: "\e205";
}
.glyphicon-paste:before {
  content: "\e206";
}
.glyphicon-alert:before {
  content: "\e209";
}
.glyphicon-equalizer:before {
  content: "\e210";
}
.glyphicon-king:before {
  content: "\e211";
}
.glyphicon-queen:before {
  content: "\e212";
}
.glyphicon-pawn:before {
  content: "\e213";
}
.glyphicon-bishop:before {
  content: "\e214";
}
.glyphicon-knight:before {
  content: "\e215";
}
.glyphicon-baby-formula:before {
  content: "\e216";
}
.glyphicon-tent:before {
  content: "\26fa";
}
.glyphicon-blackboard:before {
  content: "\e218";
}
.glyphicon-bed:before {
  content: "\e219";
}
.glyphicon-apple:before {
  content: "\f8ff";
}
.glyphicon-erase:before {
  content: "\e221";
}
.glyphicon-hourglass:before {
  content: "\231b";
}
.glyphicon-lamp:before {
  content: "\e223";
}
.glyphicon-duplicate:before {
  content: "\e224";
}
.glyphicon-piggy-bank:before {
  content: "\e225";
}
.glyphicon-scissors:before {
  content: "\e226";
}
.glyphicon-bitcoin:before {
  content: "\e227";
}
.glyphicon-btc:before {
  content: "\e227";
}
.glyphicon-xbt:before {
  content: "\e227";
}
.glyphicon-yen:before {
  content: "\00a5";
}
.glyphicon-jpy:before {
  content: "\00a5";
}
.glyphicon-ruble:before {
  content: "\20bd";
}
.glyphicon-rub:before {
  content: "\20bd";
}
.glyphicon-scale:before {
  content: "\e230";
}
.glyphicon-ice-lolly:before {
  content: "\e231";
}
.glyphicon-ice-lolly-tasted:before {
  content: "\e232";
}
.glyphicon-education:before {
  content: "\e233";
}
.glyphicon-option-horizontal:before {
  content: "\e234";
}
.glyphicon-option-vertical:before {
  content: "\e235";
}
.glyphicon-menu-hamburger:before {
  content: "\e236";
}
.glyphicon-modal-window:before {
  content: "\e237";
}
.glyphicon-oil:before {
  content: "\e238";
}
.glyphicon-grain:before {
  content: "\e239";
}
.glyphicon-sunglasses:before {
  content: "\e240";
}
.glyphicon-text-size:before {
  content: "\e241";
}
.glyphicon-text-color:before {
  content: "\e242";
}
.glyphicon-text-background:before {
  content: "\e243";
}
.glyphicon-object-align-top:before {
  content: "\e244";
}
.glyphicon-object-align-bottom:before {
  content: "\e245";
}
.glyphicon-object-align-horizontal:before {
  content: "\e246";
}
.glyphicon-object-align-left:before {
  content: "\e247";
}
.glyphicon-object-align-vertical:before {
  content: "\e248";
}
.glyphicon-object-align-right:before {
  content: "\e249";
}
.glyphicon-triangle-right:before {
  content: "\e250";
}
.glyphicon-triangle-left:before {
  content: "\e251";
}
.glyphicon-triangle-bottom:before {
  content: "\e252";
}
.glyphicon-triangle-top:before {
  content: "\e253";
}
.glyphicon-console:before {
  content: "\e254";
}
.glyphicon-superscript:before {
  content: "\e255";
}
.glyphicon-subscript:before {
  content: "\e256";
}
.glyphicon-menu-left:before {
  content: "\e257";
}
.glyphicon-menu-right:before {
  content: "\e258";
}
.glyphicon-menu-down:before {
  content: "\e259";
}
.glyphicon-menu-up:before {
  content: "\e260";
}
* {
  -webkit-box-sizing: border-box;
     -moz-box-sizing: border-box;
          box-sizing: border-box;
}
*:before,
*:after {
  -webkit-box-sizing: border-box;
     -moz-box-sizing: border-box;
          box-sizing: border-box;
}
html {
  font-size: 10px;

  -webkit-tap-highlight-color: rgba(0, 0, 0, 0);
}
body {
  font-family: "Helvetica Neue", Helvetica, Arial, sans-serif;
  font-size: 14px;
  line-height: 1.42857143;
  color: #333;
  background-color: #fff;
}
input,
button,
select,
textarea {
  font-family: inherit;
  font-size: inherit;
  line-height: inherit;
}
a {
  color: #337ab7;
  text-decoration: none;
}
a:hover,
a:focus {
  color: #23527c;
  text-decoration: underline;
}
a:focus {
  outline: 5px auto -webkit-focus-ring-color;
  outline-offset: -2px;
}
figure {
  margin: 0;
}
img {
  vertical-align: middle;
}
.img-responsive,
.thumbnail > img,
.thumbnail a > img,
.carousel-inner > .item > img,
.carousel-inner > .item > a > img {
  display: block;
  max-width: 100%;
  height: auto;
}
.img-rounded {
  border-radius: 6px;
}
.img-thumbnail {
  display: inline-block;
  max-width: 100%;
  height: auto;
  padding: 4px;
  line-height: 1.42857143;
  background-color: #fff;
  border: 1px solid #ddd;
  border-radius: 4px;
  -webkit-transition: all .2s ease-in-out;
       -o-transition: all .2s ease-in-out;
          transition: all .2s ease-in-out;
}
.img-circle {
  border-radius: 50%;
}
hr {
  margin-top: 20px;
  margin-bottom: 20px;
  border: 0;
  border-top: 1px solid #eee;
}
.sr-only {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  border: 0;
}
.sr-only-focusable:active,
.sr-only-focusable:focus {
  position: static;
  width: auto;
  height: auto;
  margin: 0;
  overflow: visible;
  clip: auto;
}
[role="button"] {
  cursor: pointer;
}
h1,
h2,
h3,
h4,
h5,
h6,
.h1,
.h2,
.h3,
.h4,
.h5,
.h6 {
  font-family: inherit;
  font-weight: 500;
  line-height: 1.1;
  color: inherit;
}
h1 small,
h2 small,
h3 small,
h4 small,
h5 small,
h6 small,
.h1 small,
.h2 small,
.h3 small,
.h4 small,
.h5 small,
.h6 small,
h1 .small,
h2 .small,
h3 .small,
h4 .small,
h5 .small,
h6 .small,
.h1 .small,
.h2 .small,
.h3 .small,
.h4 .small,
.h5 .small,
.h6 .small {
  font-weight: normal;
  line-height: 1;
  color: #777;
}
h1,
.h1,
h2,
.h2,
h3,
.h3 {
  margin-top: 20px;
  margin-bottom: 10px;
}
h1 small,
.h1 small,
h2 small,
.h2 small,
h3 small,
.h3 small,
h1 .small,
.h1 .small,
h2 .small,
.h2 .small,
h3 .small,
.h3 .small {
  font-size: 65%;
}
h4,
.h4,
h5,
.h5,
h6,
.h6 {
  margin-top: 10px;
  margin-bottom: 10px;
}
h4 small,
.h4 small,
h5 small,
.h5 small,
h6 small,
.h6 small,
h4 .small,
.h4 .small,
h5 .small,
.h5 .small,
h6 .small,
.h6 .small {
  font-size: 75%;
}
h1,
.h1 {
  font-size: 36px;
}
h2,
.h2 {
  font-size: 30px;
}
h3,
.h3 {
  font-size: 24px;
}
h4,
.h4 {
  font-size: 18px;
}
h5,
.h5 {
  font-size: 14px;
}
h6,
.h6 {
  font-size: 12px;
}
p {
  margin: 0 0 10px;
}
.lead {
  margin-bottom: 20px;
  font-size: 16px;
  font-weight: 300;
  line-height: 1.4;
}
@media (min-width: 768px) {
  .lead {
    font-size: 21px;
  }
}
small,
.small {
  font-size: 85%;
}
mark,
.mark {
  padding: .2em;
  background-color: #fcf8e3;
}
.text-left {
  text-align: left;
}
.text-right {
  text-align: right;
}
.text-center {
  text-align: center;
}
.text-justify {
  text-align: justify;
}
.text-nowrap {
  white-space: nowrap;
}
.text-lowercase {
  text-transform: lowercase;
}
.text-uppercase {
  text-transform: uppercase;
}
.text-capitalize {
  text-transform: capitalize;
}
.text-muted {
  color: #777;
}
.text-primary {
  color: #337ab7;
}
a.text-primary:hover,
a.text-primary:focus {
  color: #286090;
}
.text-success {
  color: #3c763d;
}
a.text-success:hover,
a.text-success:focus {
  color: #2b542c;
}
.text-info {
  color: #31708f;
}
a.text-info:hover,
a.text-info:focus {
  color: #245269;
}
.text-warning {
  color: #8a6d3b;
}
a.text-warning:hover,
a.text-warning:focus {
  color: #66512c;
}
.text-danger {
  color: #a94442;
}
a.text-danger:hover,
a.text-danger:focus {
  color: #843534;
}
.bg-primary {
  color: #fff;
  background-color: #337ab7;
}
a.bg-primary:hover,
a.bg-primary:focus {
  background-color: #286090;
}
.bg-success {
  background-color: #dff0d8;
}
a.bg-success:hover,
a.bg-success:focus {
  background-color: #c1e2b3;
}
.bg-info {
  background-color: #d9edf7;
}
a.bg-info:hover,
a.bg-info:focus {
  background-color: #afd9ee;
}
.bg-warning {
  background-color: #fcf8e3;
}
a.bg-warning:hover,
a.bg-warning:focus {
  background-color: #f7ecb5;
}
.bg-danger {
  background-color: #f2dede;
}
a.bg-danger:hover,
a.bg-danger:focus {
  background-color: #e4b9b9;
}
.page-header {
  padding-bottom: 9px;
  margin: 40px 0 20px;
  border-bottom: 1px solid #eee;
}
ul,
ol {
  margin-top: 0;
  margin-bottom: 10px;
}
ul ul,
ol ul,
ul ol,
ol ol {
  margin-bottom: 0;
}
.list-unstyled {
  padding-left: 0;
  list-style: none;
}
.list-inline {
  padding-left: 0;
  margin-left: -5px;
  list-style: none;
}
.list-inline > li {
  display: inline-block;
  padding-right: 5px;
  padding-left: 5px;
}
dl {
  margin-top: 0;
  margin-bottom: 20px;
}
dt,
dd {
  line-height: 1.42857143;
}
dt {
  font-weight: bold;
}
dd {
  margin-left: 0;
}
@media (min-width: 768px) {
  .dl-horizontal dt {
    float: left;
    width: 160px;
    overflow: hidden;
    clear: left;
    text-align: right;
    text-overflow: ellipsis;
    white-space: nowrap;
  }
  .dl-horizontal dd {
    margin-left: 180px;
  }
}
abbr[title],
abbr[data-original-title] {
  cursor: help;
  border-bottom: 1px dotted #777;
}
.initialism {
  font-size: 90%;
  text-transform: uppercase;
}
blockquote {
  padding: 10px 20px;
  margin: 0 0 20px;
  font-size: 17.5px;
  border-left: 5px solid #eee;
}
blockquote p:last-child,
blockquote ul:last-child,
blockquote ol:last-child {
  margin-bottom: 0;
}
blockquote footer,
blockquote small,
blockquote .small {
  display: block;
  font-size: 80%;
  line-height: 1.42857143;
  color: #777;
}
blockquote footer:before,
blockquote small:before,
blockquote .small:before {
  content: '\2014 \00A0';
}
.blockquote-reverse,
blockquote.pull-right {
  padding-right: 15px;
  padding-left: 0;
  text-align: right;
  border-right: 5px solid #eee;
  border-left: 0;
}
.blockquote-reverse footer:before,
blockquote.pull-right footer:before,
.blockquote-reverse small:before,
blockquote.pull-right small:before,
.blockquote-reverse .small:before,
blockquote.pull-right .small:before {
  content: '';
}
.blockquote-reverse footer:after,
blockquote.pull-right footer:after,
.blockquote-reverse small:after,
blockquote.pull-right small:after,
.blockquote-reverse .small:after,
blockquote.pull-right .small:after {
  content: '\00A0 \2014';
}
address {
  margin-bottom: 20px;
  font-style: normal;
  line-height: 1.42857143;
}
code,
kbd,
pre,
samp {
  font-family: Menlo, Monaco, Consolas, "Courier New", monospace;
}
code {
  padding: 2px 4px;
  font-size: 90%;
  color: #c7254e;
  background-color: #f9f2f4;
  border-radius: 4px;
}
kbd {
  padding: 2px 4px;
  font-size: 90%;
  color: #fff;
  background-color: #333;
  border-radius: 3px;
  -webkit-box-shadow: inset 0 -1px 0 rgba(0, 0, 0, .25);
          box-shadow: inset 0 -1px 0 rgba(0, 0, 0, .25);
}
kbd kbd {
  padding: 0;
  font-size: 100%;
  font-weight: bold;
  -webkit-box-shadow: none;
          box-shadow: none;
}
pre {
  display: block;
  padding: 9.5px;
  margin: 0 0 10px;
  font-size: 13px;
  line-height: 1.42857143;
  color: #333;
  word-break: break-all;
  word-wrap: break-word;
  background-color: #f5f5f5;
  border: 1px solid #ccc;
  border-radius: 4px;
}
pre code {
  padding: 0;
  font-size: inherit;
  color: inherit;
  white-space: pre-wrap;
  background-color: transparent;
  border-radius: 0;
}
.pre-scrollable {
  max-height: 340px;
  overflow-y: scroll;
}
.container {
  padding-right: 15px;
  padding-left: 15px;
  margin-right: auto;
  margin-left: auto;
}
@media (min-width: 768px) {
  .container {
    width: 750px;
  }
}
@media (min-width: 992px) {
  .container {
    width: 970px;
  }
}
@media (min-width: 1200px) {
  .container {
    width: 1170px;
  }
}
.container-fluid {
  padding-right: 15px;
  padding-left: 15px;
  margin-right: auto;
  margin-left: auto;
}
.row {
  margin-right: -15px;
  margin-left: -15px;
}
.col-xs-1, .col-sm-1, .col-md-1, .col-lg-1, .col-xs-2, .col-sm-2, .col-md-2, .col-lg-2, .col-xs-3, .col-sm-3, .col-md-3, .col-lg-3, .col-xs-4, .col-sm-4, .col-md-4, .col-lg-4, .col-xs-5, .col-sm-5, .col-md-5, .col-lg-5, .col-xs-6, .col-sm-6, .col-md-6, .col-lg-6, .col-xs-7, .col-sm-7, .col-md-7, .col-lg-7, .col-xs-8, .col-sm-8, .col-md-8, .col-lg-8, .col-xs-9, .col-sm-9, .col-md-9, .col-lg-9, .col-xs-10, .col-sm-10, .col-md-10, .col-lg-10, .col-xs-11, .col-sm-11, .col-md-11, .col-lg-11, .col-xs-12, .col-sm-12, .col-md-12, .col-lg-12 {
  position: relative;
  min-height: 1px;
  padding-right: 15px;
  padding-left: 15px;
}
.col-xs-1, .col-xs-2, .col-xs-3, .col-xs-4, .col-xs-5, .col-xs-6, .col-xs-7, .col-xs-8, .col-xs-9, .col-xs-10, .col-xs-11, .col-xs-12 {
  float: left;
}
.col-xs-12 {
  width: 100%;
}
.col-xs-11 {
  width: 91.66666667%;
}
.col-xs-10 {
  width: 83.33333333%;
}
.col-xs-9 {
  width: 75%;
}
.col-xs-8 {
  width: 66.66666667%;
}
.col-xs-7 {
  width: 58.33333333%;
}
.col-xs-6 {
  width: 50%;
}
.col-xs-5 {
  width: 41.66666667%;
}
.col-xs-4 {
  width: 33.33333333%;
}
.col-xs-3 {
  width: 25%;
}
.col-xs-2 {
  width: 16.66666667%;
}
.col-xs-1 {
  width: 8.33333333%;
}
.col-xs-pull-12 {
  right: 100%;
}
.col-xs-pull-11 {
  right: 91.66666667%;
}
.col-xs-pull-10 {
  right: 83.33333333%;
}
.col-xs-pull-9 {
  right: 75%;
}
.col-xs-pull-8 {
  right: 66.66666667%;
}
.col-xs-pull-7 {
  right: 58.33333333%;
}
.col-xs-pull-6 {
  right: 50%;
}
.col-xs-pull-5 {
  right: 41.66666667%;
}
.col-xs-pull-4 {
  right: 33.33333333%;
}
.col-xs-pull-3 {
  right: 25%;
}
.col-xs-pull-2 {
  right: 16.66666667%;
}
.col-xs-pull-1 {
  right: 8.33333333%;
}
.col-xs-pull-0 {
  right: auto;
}
.col-xs-push-12 {
  left: 100%;
}
.col-xs-push-11 {
  left: 91.66666667%;
}
.col-xs-push-10 {
  left: 83.33333333%;
}
.col-xs-push-9 {
  left: 75%;
}
.col-xs-push-8 {
  left: 66.66666667%;
}
.col-xs-push-7 {
  left: 58.33333333%;
}
.col-xs-push-6 {
  left: 50%;
}
.col-xs-push-5 {
  left: 41.66666667%;
}
.col-xs-push-4 {
  left: 33.33333333%;
}
.col-xs-push-3 {
  left: 25%;
}
.col-xs-push-2 {
  left: 16.66666667%;
}
.col-xs-push-1 {
  left: 8.33333333%;
}
.col-xs-push-0 {
  left: auto;
}
.col-xs-offset-12 {
  margin-left: 100%;
}
.col-xs-offset-11 {
  margin-left: 91.66666667%;
}
.col-xs-offset-10 {
  margin-left: 83.33333333%;
}
.col-xs-offset-9 {
  margin-left: 75%;
}
.col-xs-offset-8 {
  margin-left: 66.66666667%;
}
.col-xs-offset-7 {
  margin-left: 58.33333333%;
}
.col-xs-offset-6 {
  margin-left: 50%;
}
.col-xs-offset-5 {
  margin-left: 41.66666667%;
}
.col-xs-offset-4 {
  margin-left: 33.33333333%;
}
.col-xs-offset-3 {
  margin-left: 25%;
}
.col-xs-offset-2 {
  margin-left: 16.66666667%;
}
.col-xs-offset-1 {
  margin-left: 8.33333333%;
}
.col-xs-offset-0 {
  margin-left: 0;
}
@media (min-width: 768px) {
  .col-sm-1, .col-sm-2, .col-sm-3, .col-sm-4, .col-sm-5, .col-sm-6, .col-sm-7, .col-sm-8, .col-sm-9, .col-sm-10, .col-sm-11, .col-sm-12 {
    float: left;
  }
  .col-sm-12 {
    width: 100%;
  }
  .col-sm-11 {
    width: 91.66666667%;
  }
  .col-sm-10 {
    width: 83.33333333%;
  }
  .col-sm-9 {
    width: 75%;
  }
  .col-sm-8 {
    width: 66.66666667%;
  }
  .col-sm-7 {
    width: 58.33333333%;
  }
  .col-sm-6 {
    width: 50%;
  }
  .col-sm-5 {
    width: 41.66666667%;
  }
  .col-sm-4 {
    width: 33.33333333%;
  }
  .col-sm-3 {
    width: 25%;
  }
  .col-sm-2 {
    width: 16.66666667%;
  }
  .col-sm-1 {
    width: 8.33333333%;
  }
  .col-sm-pull-12 {
    right: 100%;
  }
  .col-sm-pull-11 {
    right: 91.66666667%;
  }
  .col-sm-pull-10 {
    right: 83.33333333%;
  }
  .col-sm-pull-9 {
    right: 75%;
  }
  .col-sm-pull-8 {
    right: 66.66666667%;
  }
  .col-sm-pull-7 {
    right: 58.33333333%;
  }
  .col-sm-pull-6 {
    right: 50%;
  }
  .col-sm-pull-5 {
    right: 41.66666667%;
  }
  .col-sm-pull-4 {
    right: 33.33333333%;
  }
  .col-sm-pull-3 {
    right: 25%;
  }
  .col-sm-pull-2 {
    right: 16.66666667%;
  }
  .col-sm-pull-1 {
    right: 8.33333333%;
  }
  .col-sm-pull-0 {
    right: auto;
  }
  .col-sm-push-12 {
    left: 100%;
  }
  .col-sm-push-11 {
    left: 91.66666667%;
  }
  .col-sm-push-10 {
    left: 83.33333333%;
  }
  .col-sm-push-9 {
    left: 75%;
  }
  .col-sm-push-8 {
    left: 66.66666667%;
  }
  .col-sm-push-7 {
    left: 58.33333333%;
  }
  .col-sm-push-6 {
    left: 50%;
  }
  .col-sm-push-5 {
    left: 41.66666667%;
  }
  .col-sm-push-4 {
    left: 33.33333333%;
  }
  .col-sm-push-3 {
    left: 25%;
  }
  .col-sm-push-2 {
    left: 16.66666667%;
  }
  .col-sm-push-1 {
    left: 8.33333333%;
  }
  .col-sm-push-0 {
    left: auto;
  }
  .col-sm-offset-12 {
    margin-left: 100%;
  }
  .col-sm-offset-11 {
    margin-left: 91.66666667%;
  }
  .col-sm-offset-10 {
    margin-left: 83.33333333%;
  }
  .col-sm-offset-9 {
    margin-left: 75%;
  }
  .col-sm-offset-8 {
    margin-left: 66.66666667%;
  }
  .col-sm-offset-7 {
    margin-left: 58.33333333%;
  }
  .col-sm-offset-6 {
    margin-left: 50%;
  }
  .col-sm-offset-5 {
    margin-left: 41.66666667%;
  }
  .col-sm-offset-4 {
    margin-left: 33.33333333%;
  }
  .col-sm-offset-3 {
    margin-left: 25%;
  }
  .col-sm-offset-2 {
    margin-left: 16.66666667%;
  }
  .col-sm-offset-1 {
    margin-left: 8.33333333%;
  }
  .col-sm-offset-0 {
    margin-left: 0;
  }
}
@media (min-width: 992px) {
  .col-md-1, .col-md-2, .col-md-3, .col-md-4, .col-md-5, .col-md-6, .col-md-7, .col-md-8, .col-md-9, .col-md-10, .col-md-11, .col-md-12 {
    float: left;
  }
  .col-md-12 {
    width: 100%;
  }
  .col-md-11 {
    width: 91.66666667%;
  }
  .col-md-10 {
    width: 83.33333333%;
  }
  .col-md-9 {
    width: 75%;
  }
  .col-md-8 {
    width: 66.66666667%;
  }
  .col-md-7 {
    width: 58.33333333%;
  }
  .col-md-6 {
    width: 50%;
  }
  .col-md-5 {
    width: 41.66666667%;
  }
  .col-md-4 {
    width: 33.33333333%;
  }
  .col-md-3 {
    width: 25%;
  }
  .col-md-2 {
    width: 16.66666667%;
  }
  .col-md-1 {
    width: 8.33333333%;
  }
  .col-md-pull-12 {
    right: 100%;
  }
  .col-md-pull-11 {
    right: 91.66666667%;
  }
  .col-md-pull-10 {
    right: 83.33333333%;
  }
  .col-md-pull-9 {
    right: 75%;
  }
  .col-md-pull-8 {
    right: 66.66666667%;
  }
  .col-md-pull-7 {
    right: 58.33333333%;
  }
  .col-md-pull-6 {
    right: 50%;
  }
  .col-md-pull-5 {
    right: 41.66666667%;
  }
  .col-md-pull-4 {
    right: 33.33333333%;
  }
  .col-md-pull-3 {
    right: 25%;
  }
  .col-md-pull-2 {
    right: 16.66666667%;
  }
  .col-md-pull-1 {
    right: 8.33333333%;
  }
  .col-md-pull-0 {
    right: auto;
  }
  .col-md-push-12 {
    left: 100%;
  }
  .col-md-push-11 {
    left: 91.66666667%;
  }
  .col-md-push-10 {
    left: 83.33333333%;
  }
  .col-md-push-9 {
    left: 75%;
  }
  .col-md-push-8 {
    left: 66.66666667%;
  }
  .col-md-push-7 {
    left: 58.33333333%;
  }
  .col-md-push-6 {
    left: 50%;
  }
  .col-md-push-5 {
    left: 41.66666667%;
  }
  .col-md-push-4 {
    left: 33.33333333%;
  }
  .col-md-push-3 {
    left: 25%;
  }
  .col-md-push-2 {
    left: 16.66666667%;
  }
  .col-md-push-1 {
    left: 8.33333333%;
  }
  .col-md-push-0 {
    left: auto;
  }
  .col-md-offset-12 {
    margin-left: 100%;
  }
  .col-md-offset-11 {
    margin-left: 91.66666667%;
  }
  .col-md-offset-10 {
    margin-left: 83.33333333%;
  }
  .col-md-offset-9 {
    margin-left: 75%;
  }
  .col-md-offset-8 {
    margin-left: 66.66666667%;
  }
  .col-md-offset-7 {
    margin-left: 58.33333333%;
  }
  .col-md-offset-6 {
    margin-left: 50%;
  }
  .col-md-offset-5 {
    margin-left: 41.66666667%;
  }
  .col-md-offset-4 {
    margin-left: 33.33333333%;
  }
  .col-md-offset-3 {
    margin-left: 25%;
  }
  .col-md-offset-2 {
    margin-left: 16.66666667%;
  }
  .col-md-offset-1 {
    margin-left: 8.33333333%;
  }
  .col-md-offset-0 {
    margin-left: 0;
  }
}
@media (min-width: 1200px) {
  .col-lg-1, .col-lg-2, .col-lg-3, .col-lg-4, .col-lg-5, .col-lg-6, .col-lg-7, .col-lg-8, .col-lg-9, .col-lg-10, .col-lg-11, .col-lg-12 {
    float: left;
  }
  .col-lg-12 {
    width: 100%;
  }
  .col-lg-11 {
    width: 91.66666667%;
  }
  .col-lg-10 {
    width: 83.33333333%;
  }
  .col-lg-9 {
    width: 75%;
  }
  .col-lg-8 {
    width: 66.66666667%;
  }
  .col-lg-7 {
    width: 58.33333333%;
  }
  .col-lg-6 {
    width: 50%;
  }
  .col-lg-5 {
    width: 41.66666667%;
  }
  .col-lg-4 {
    width: 33.33333333%;
  }
  .col-lg-3 {
    width: 25%;
  }
  .col-lg-2 {
    width: 16.66666667%;
  }
  .col-lg-1 {
    width: 8.33333333%;
  }
  .col-lg-pull-12 {
    right: 100%;
  }
  .col-lg-pull-11 {
    right: 91.66666667%;
  }
  .col-lg-pull-10 {
    right: 83.33333333%;
  }
  .col-lg-pull-9 {
    right: 75%;
  }
  .col-lg-pull-8 {
    right: 66.66666667%;
  }
  .col-lg-pull-7 {
    right: 58.33333333%;
  }
  .col-lg-pull-6 {
    right: 50%;
  }
  .col-lg-pull-5 {
    right: 41.66666667%;
  }
  .col-lg-pull-4 {
    right: 33.33333333%;
  }
  .col-lg-pull-3 {
    right: 25%;
  }
  .col-lg-pull-2 {
    right: 16.66666667%;
  }
  .col-lg-pull-1 {
    right: 8.33333333%;
  }
  .col-lg-pull-0 {
    right: auto;
  }
  .col-lg-push-12 {
    left: 100%;
  }
  .col-lg-push-11 {
    left: 91.66666667%;
  }
  .col-lg-push-10 {
    left: 83.33333333%;
  }
  .col-lg-push-9 {
    left: 75%;
  }
  .col-lg-push-8 {
    left: 66.66666667%;
  }
  .col-lg-push-7 {
    left: 58.33333333%;
  }
  .col-lg-push-6 {
    left: 50%;
  }
  .col-lg-push-5 {
    left: 41.66666667%;
  }
  .col-lg-push-4 {
    left: 33.33333333%;
  }
  .col-lg-push-3 {
    left: 25%;
  }
  .col-lg-push-2 {
    left: 16.66666667%;
  }
  .col-lg-push-1 {
    left: 8.33333333%;
  }
  .col-lg-push-0 {
    left: auto;
  }
  .col-lg-offset-12 {
    margin-left: 100%;
  }
  .col-lg-offset-11 {
    margin-left: 91.66666667%;
  }
  .col-lg-offset-10 {
    margin-left: 83.33333333%;
  }
  .col-lg-offset-9 {
    margin-left: 75%;
  }
  .col-lg-offset-8 {
    margin-left: 66.66666667%;
  }
  .col-lg-offset-7 {
    margin-left: 58.33333333%;
  }
  .col-lg-offset-6 {
    margin-left: 50%;
  }
  .col-lg-offset-5 {
    margin-left: 41.66666667%;
  }
  .col-lg-offset-4 {
    margin-left: 33.33333333%;
  }
  .col-lg-offset-3 {
    margin-left: 25%;
  }
  .col-lg-offset-2 {
    margin-left: 16.66666667%;
  }
  .col-lg-offset-1 {
    margin-left: 8.33333333%;
  }
  .col-lg-offset-0 {
    margin-left: 0;
  }
}
table {
  background-color: transparent;
}
caption {
  padding-top: 8px;
  padding-bottom: 8px;
  color: #777;
  text-align: left;
}
th {
  text-align: left;
}
.table {
  width: 100%;
  max-width: 100%;
  margin-bottom: 20px;
}
.table > thead > tr > th,
.table > tbody > tr > th,
.table > tfoot > tr > th,
.table > thead > tr > td,
.table > tbody > tr > td,
.table > tfoot > tr > td {
  padding: 8px;
  line-height: 1.42857143;
  vertical-align: top;
  border-top: 1px solid #ddd;
}
.table > thead > tr > th {
  vertical-align: bottom;
  border-bottom: 2px solid #ddd;
}
.table > caption + thead > tr:first-child > th,
.table > colgroup + thead > tr:first-child > th,
.table > thead:first-child > tr:first-child > th,
.table > caption + thead > tr:first-child > td,
.table > colgroup + thead > tr:first-child > td,
.table > thead:first-child > tr:first-child > td {
  border-top: 0;
}
.table > tbody + tbody {
  border-top: 2px solid #ddd;
}
.table .table {
  background-color: #fff;
}
.table-condensed > thead > tr > th,
.table-condensed > tbody > tr > th,
.table-condensed > tfoot > tr > th,
.table-condensed > thead > tr > td,
.table-condensed > tbody > tr > td,
.table-condensed > tfoot > tr > td {
  padding: 5px;
}
.table-bordered {
  border: 1px solid #ddd;
}
.table-bordered > thead > tr > th,
.table-bordered > tbody > tr > th,
.table-bordered > tfoot > tr > th,
.table-bordered > thead > tr > td,
.table-bordered > tbody > tr > td,
.table-bordered > tfoot > tr > td {
  border: 1px solid #ddd;
}
.table-bordered > thead > tr > th,
.table-bordered > thead > tr > td {
  border-bottom-width: 2px;
}
.table-striped > tbody > tr:nth-of-type(odd) {
  background-color: #f9f9f9;
}
.table-hover > tbody > tr:hover {
  background-color: #f5f5f5;
}
table col[class*="col-"] {
  position: static;
  display: table-column;
  float: none;
}
table td[class*="col-"],
table th[class*="col-"] {
  position: static;
  display: table-cell;
  float: none;
}
.table > thead > tr > td.active,
.table > tbody > tr > td.active,
.table > tfoot > tr > td.active,
.table > thead > tr > th.active,
.table > tbody > tr > th.active,
.table > tfoot > tr > th.active,
.table > thead > tr.active > td,
.table > tbody > tr.active > td,
.table > tfoot > tr.active > td,
.table > thead > tr.active > th,
.table > tbody > tr.active > th,
.table > tfoot > tr.active > th {
  background-color: #f5f5f5;
}
.table-hover > tbody > tr > td.active:hover,
.table-hover > tbody > tr > th.active:hover,
.table-hover > tbody > tr.active:hover > td,
.table-hover > tbody > tr:hover > .active,
.table-hover > tbody > tr.active:hover > th {
  background-color: #e8e8e8;
}
.table > thead > tr > td.success,
.table > tbody > tr > td.success,
.table > tfoot > tr > td.success,
.table > thead > tr > th.success,
.table > tbody > tr > th.success,
.table > tfoot > tr > th.success,
.table > thead > tr.success > td,
.table > tbody > tr.success > td,
.table > tfoot > tr.success > td,
.table > thead > tr.success > th,
.table > tbody > tr.success > th,
.table > tfoot > tr.success > th {
  background-color: #dff0d8;
}
.table-hover > tbody > tr > td.success:hover,
.table-hover > tbody > tr > th.success:hover,
.table-hover > tbody > tr.success:hover > td,
.table-hover > tbody > tr:hover > .success,
.table-hover > tbody > tr.success:hover > th {
  background-color: #d0e9c6;
}
.table > thead > tr > td.info,
.table > tbody > tr > td.info,
.table > tfoot > tr > td.info,
.table > thead > tr > th.info,
.table > tbody > tr > th.info,
.table > tfoot > tr > th.info,
.table > thead > tr.info > td,
.table > tbody > tr.info > td,
.table > tfoot > tr.info > td,
.table > thead > tr.info > th,
.table > tbody > tr.info > th,
.table > tfoot > tr.info > th {
  background-color: #d9edf7;
}
.table-hover > tbody > tr > td.info:hover,
.table-hover > tbody > tr > th.info:hover,
.table-hover > tbody > tr.info:hover > td,
.table-hover > tbody > tr:hover > .info,
.table-hover > tbody > tr.info:hover > th {
  background-color: #c4e3f3;
}
.table > thead > tr > td.warning,
.table > tbody > tr > td.warning,
.table > tfoot > tr > td.warning,
.table > thead > tr > th.warning,
.table > tbody > tr > th.warning,
.table > tfoot > tr > th.warning,
.table > thead > tr.warning > td,
.table > tbody > tr.warning > td,
.table > tfoot > tr.warning > td,
.table > thead > tr.warning > th,
.table > tbody > tr.warning > th,
.table > tfoot > tr.warning > th {
  background-color: #fcf8e3;
}
.table-hover > tbody > tr > td.warning:hover,
.table-hover > tbody > tr > th.warning:hover,
.table-hover > tbody > tr.warning:hover > td,
.table-hover > tbody > tr:hover > .warning,
.table-hover > tbody > tr.warning:hover > th {
  background-color: #faf2cc;
}
.table > thead > tr > td.danger,
.table > tbody > tr > td.danger,
.table > tfoot > tr > td.danger,
.table > thead > tr > th.danger,
.table > tbody > tr > th.danger,
.table > tfoot > tr > th.danger,
.table > thead > tr.danger > td,
.table > tbody > tr.danger > td,
.table > tfoot > tr.danger > td,
.table > thead > tr.danger > th,
.table > tbody > tr.danger > th,
.table > tfoot > tr.danger > th {
  background-color: #f2dede;
}
.table-hover > tbody > tr > td.danger:hover,
.table-hover > tbody > tr > th.danger:hover,
.table-hover > tbody > tr.danger:hover > td,
.table-hover > tbody > tr:hover > .danger,
.table-hover > tbody > tr.danger:hover > th {
  background-color: #ebcccc;
}
.table-responsive {
  min-height: .01%;
  overflow-x: auto;
}
@media screen and (max-width: 767px) {
  .table-responsive {
    width: 100%;
    margin-bottom: 15px;
    overflow-y: hidden;
    -ms-overflow-style: -ms-autohiding-scrollbar;
    border: 1px solid #ddd;
  }
  .table-responsive > .table {
    margin-bottom: 0;
  }
  .table-responsive > .table > thead > tr > th,
  .table-responsive > .table > tbody > tr > th,
  .table-responsive > .table > tfoot > tr > th,
  .table-responsive > .table > thead > tr > td,
  .table-responsive > .table > tbody > tr > td,
  .table-responsive > .table > tfoot > tr > td {
    white-space: nowrap;
  }
  .table-responsive > .table-bordered {
    border: 0;
  }
  .table-responsive > .table-bordered > thead > tr > th:first-child,
  .table-responsive > .table-bordered > tbody > tr > th:first-child,
  .table-responsive > .table-bordered > tfoot > tr > th:first-child,
  .table-responsive > .table-bordered > thead > tr > td:first-child,
  .table-responsive > .table-bordered > tbody > tr > td:first-child,
  .table-responsive > .table-bordered > tfoot > tr > td:first-child {
    border-left: 0;
  }
  .table-responsive > .table-bordered > thead > tr > th:last-child,
  .table-responsive > .table-bordered > tbody > tr > th:last-child,
  .table-responsive > .table-bordered > tfoot > tr > th:last-child,
  .table-responsive > .table-bordered > thead > tr > td:last-child,
  .table-responsive > .table-bordered > tbody > tr > td:last-child,
  .table-responsive > .table-bordered > tfoot > tr > td:last-child {
    border-right: 0;
  }
  .table-responsive > .table-bordered > tbody > tr:last-child > th,
  .table-responsive > .table-bordered > tfoot > tr:last-child > th,
  .table-responsive > .table-bordered > tbody > tr:last-child > td,
  .table-responsive > .table-bordered > tfoot > tr:last-child > td {
    border-bottom: 0;
  }
}
fieldset {
  min-width: 0;
  padding: 0;
  margin: 0;
  border: 0;
}
legend {
  display: block;
  width: 100%;
  padding: 0;
  margin-bottom: 20px;
  font-size: 21px;
  line-height: inherit;
  color: #333;
  border: 0;
  border-bottom: 1px solid #e5e5e5;
}
label {
  display: inline-block;
  max-width: 100%;
  margin-bottom: 5px;
  font-weight: bold;
}
input[type="search"] {
  -webkit-box-sizing: border-box;
     -moz-box-sizing: border-box;
          box-sizing: border-box;
}
input[type="radio"],
input[type="checkbox"] {
  margin: 4px 0 0;
  margin-top: 1px \9;
  line-height: normal;
}
input[type="file"] {
  display: block;
}
input[type="range"] {
  display: block;
  width: 100%;
}
select[multiple],
select[size] {
  height: auto;
}
input[type="file"]:focus,
input[type="radio"]:focus,
input[type="checkbox"]:focus {
  outline: 5px auto -webkit-focus-ring-color;
  outline-offset: -2px;
}
output {
  display: block;
  padding-top: 7px;
  font-size: 14px;
  line-height: 1.42857143;
  color: #555;
}
.form-control {
  display: block;
  width: 100%;
  height: 34px;
  padding: 6px 12px;
  font-size: 14px;
  line-height: 1.42857143;
  color: #555;
  background-color: #fff;
  background-image: none;
  border: 1px solid #ccc;
  border-radius: 4px;
  -webkit-box-shadow: inset 0 1px 1px rgba(0, 0, 0, .075);
          box-shadow: inset 0 1px 1px rgba(0, 0, 0, .075);
  -webkit-transition: border-color ease-in-out .15s, -webkit-box-shadow ease-in-out .15s;
       -o-transition: border-color ease-in-out .15s, box-shadow ease-in-out .15s;
          transition: border-color ease-in-out .15s, box-shadow ease-in-out .15s;
}
.form-control:focus {
  border-color: #66afe9;
  outline: 0;
  -webkit-box-shadow: inset 0 1px 1px rgba(0,0,0,.075), 0 0 8px rgba(102, 175, 233, .6);
          box-shadow: inset 0 1px 1px rgba(0,0,0,.075), 0 0 8px rgba(102, 175, 233, .6);
}
.form-control::-moz-placeholder {
  color: #999;
  opacity: 1;
}
.form-control:-ms-input-placeholder {
  color: #999;
}
.form-control::-webkit-input-placeholder {
  color: #999;
}
.form-control::-ms-expand {
  background-color: transparent;
  border: 0;
}
.form-control[disabled],
.form-control[readonly],
fieldset[disabled] .form-control {
  background-color: #eee;
  opacity: 1;
}
.form-control[disabled],
fieldset[disabled] .form-control {
  cursor: not-allowed;
}
textarea.form-control {
  height: auto;
}
input[type="search"] {
  -webkit-appearance: none;
}
@media screen and (-webkit-min-device-pixel-ratio: 0) {
  input[type="date"].form-control,
  input[type="time"].form-control,
  input[type="datetime-local"].form-control,
  input[type="month"].form-control {
    line-height: 34px;
  }
  input[type="date"].input-sm,
  input[type="time"].input-sm,
  input[type="datetime-local"].input-sm,
  input[type="month"].input-sm,
  .input-group-sm input[type="date"],
  .input-group-sm input[type="time"],
  .input-group-sm input[type="datetime-local"],
  .input-group-sm input[type="month"] {
    line-height: 30px;
  }
  input[type="date"].input-lg,
  input[type="time"].input-lg,
  input[type="datetime-local"].input-lg,
  input[type="month"].input-lg,
  .input-group-lg input[type="date"],
  .input-group-lg input[type="time"],
  .input-group-lg input[type="datetime-local"],
  .input-group-lg input[type="month"] {
    line-height: 46px;
  }
}
.form-group {
  margin-bottom: 15px;
}
.radio,
.checkbox {
  position: relative;
  display: block;
  margin-top: 10px;
  margin-bottom: 10px;
}
.radio label,
.checkbox label {
  min-height: 20px;
  padding-left: 20px;
  margin-bottom: 0;
  font-weight: normal;
  cursor: pointer;
}
.radio input[type="radio"],
.radio-inline input[type="radio"],
.checkbox input[type="checkbox"],
.checkbox-inline input[type="checkbox"] {
  position: absolute;
  margin-top: 4px \9;
  margin-left: -20px;
}
.radio + .radio,
.checkbox + .checkbox {
  margin-top: -5px;
}
.radio-inline,
.checkbox-inline {
  position: relative;
  display: inline-block;
  padding-left: 20px;
  margin-bottom: 0;
  font-weight: normal;
  vertical-align: middle;
  cursor: pointer;
}
.radio-inline + .radio-inline,
.checkbox-inline + .checkbox-inline {
  margin-top: 0;
  margin-left: 10px;
}
input[type="radio"][disabled],
input[type="checkbox"][disabled],
input[type="radio"].disabled,
input[type="checkbox"].disabled,
fieldset[disabled] input[type="radio"],
fieldset[disabled] input[type="checkbox"] {
  cursor: not-allowed;
}
.radio-inline.disabled,
.checkbox-inline.disabled,
fieldset[disabled] .radio-inline,
fieldset[disabled] .checkbox-inline {
  cursor: not-allowed;
}
.radio.disabled label,
.checkbox.disabled label,
fieldset[disabled] .radio label,
fieldset[disabled] .checkbox label {
  cursor: not-allowed;
}
.form-control-static {
  min-height: 34px;
  padding-top: 7px;
  padding-bottom: 7px;
  margin-bottom: 0;
}
.form-control-static.input-lg,
.form-control-static.input-sm {
  padding-right: 0;
  padding-left: 0;
}
.input-sm {
  height: 30px;
  padding: 5px 10px;
  font-size: 12px;
  line-height: 1.5;
  border-radius: 3px;
}
select.input-sm {
  height: 30px;
  line-height: 30px;
}
textarea.input-sm,
select[multiple].input-sm {
  height: auto;
}
.form-group-sm .form-control {
  height: 30px;
  padding: 5px 10px;
  font-size: 12px;
  line-height: 1.5;
  border-radius: 3px;
}
.form-group-sm select.form-control {
  height: 30px;
  line-height: 30px;
}
.form-group-sm textarea.form-control,
.form-group-sm select[multiple].form-control {
  height: auto;
}
.form-group-sm .form-control-static {
  height: 30px;
  min-height: 32px;
  padding: 6px 10px;
  font-size: 12px;
  line-height: 1.5;
}
.input-lg {
  height: 46px;
  padding: 10px 16px;
  font-size: 18px;
  line-height: 1.3333333;
  border-radius: 6px;
}
select.input-lg {
  height: 46px;
  line-height: 46px;
}
textarea.input-lg,
select[multiple].input-lg {
  height: auto;
}
.form-group-lg .form-control {
  height: 46px;
  padding: 10px 16px;
  font-size: 18px;
  line-height: 1.3333333;
  border-radius: 6px;
}
.form-group-lg select.form-control {
  height: 46px;
  line-height: 46px;
}
.form-group-lg textarea.form-control,
.form-group-lg select[multiple].form-control {
  height: auto;
}
.form-group-lg .form-control-static {
  height: 46px;
  min-height: 38px;
  padding: 11px 16px;
  font-size: 18px;
  line-height: 1.3333333;
}
.has-feedback {
  position: relative;
}
.has-feedback .form-control {
  padding-right: 42.5px;
}
.form-control-feedback {
  position: absolute;
  top: 0;
  right: 0;
  z-index: 2;
  display: block;
  width: 34px;
  height: 34px;
  line-height: 34px;
  text-align: center;
  pointer-events: none;
}
.input-lg + .form-control-feedback,
.input-group-lg + .form-control-feedback,
.form-group-lg .form-control + .form-control-feedback {
  width: 46px;
  height: 46px;
  line-height: 46px;
}
.input-sm + .form-control-feedback,
.input-group-sm + .form-control-feedback,
.form-group-sm .form-control + .form-control-feedback {
  width: 30px;
  height: 30px;
  line-height: 30px;
}
.has-success .help-block,
.has-success .control-label,
.has-success .radio,
.has-success .checkbox,
.has-success .radio-inline,
.has-success .checkbox-inline,
.has-success.radio label,
.has-success.checkbox label,
.has-success.radio-inline label,
.has-success.checkbox-inline label {
  color: #3c763d;
}
.has-success .form-control {
  border-color: #3c763d;
  -webkit-box-shadow: inset 0 1px 1px rgba(0, 0, 0, .075);
          box-shadow: inset 0 1px 1px rgba(0, 0, 0, .075);
}
.has-success .form-control:focus {
  border-color: #2b542c;
  -webkit-box-shadow: inset 0 1px 1px rgba(0, 0, 0, .075), 0 0 6px #67b168;
          box-shadow: inset 0 1px 1px rgba(0, 0, 0, .075), 0 0 6px #67b168;
}
.has-success .input-group-addon {
  color: #3c763d;
  background-color: #dff0d8;
  border-color: #3c763d;
}
.has-success .form-control-feedback {
  color: #3c763d;
}
.has-warning .help-block,
.has-warning .control-label,
.has-warning .radio,
.has-warning .checkbox,
.has-warning .radio-inline,
.has-warning .checkbox-inline,
.has-warning.radio label,
.has-warning.checkbox label,
.has-warning.radio-inline label,
.has-warning.checkbox-inline label {
  color: #8a6d3b;
}
.has-warning .form-control {
  border-color: #8a6d3b;
  -webkit-box-shadow: inset 0 1px 1px rgba(0, 0, 0, .075);
          box-shadow: inset 0 1px 1px rgba(0, 0, 0, .075);
}
.has-warning .form-control:focus {
  border-color: #66512c;
  -webkit-box-shadow: inset 0 1px 1px rgba(0, 0, 0, .075), 0 0 6px #c0a16b;
          box-shadow: inset 0 1px 1px rgba(0, 0, 0, .075), 0 0 6px #c0a16b;
}
.has-warning .input-group-addon {
  color: #8a6d3b;
  background-color: #fcf8e3;
  border-color: #8a6d3b;
}
.has-warning .form-control-feedback {
  color: #8a6d3b;
}
.has-error .help-block,
.has-error .control-label,
.has-error .radio,
.has-error .checkbox,
.has-error .radio-inline,
.has-error .checkbox-inline,
.has-error.radio label,
.has-error.checkbox label,
.has-error.radio-inline label,
.has-error.checkbox-inline label {
  color: #a94442;
}
.has-error .form-control {
  border-color: #a94442;
  -webkit-box-shadow: inset 0 1px 1px rgba(0, 0, 0, .075);
          box-shadow: inset 0 1px 1px rgba(0, 0, 0, .075);
}
.has-error .form-control:focus {
  border-color: #843534;
  -webkit-box-shadow: inset 0 1px 1px rgba(0, 0, 0, .075), 0 0 6px #ce8483;
          box-shadow: inset 0 1px 1px rgba(0, 0, 0, .075), 0 0 6px #ce8483;
}
.has-error .input-group-addon {
  color: #a94442;
  background-color: #f2dede;
  border-color: #a94442;
}
.has-error .form-control-feedback {
  color: #a94442;
}
.has-feedback label ~ .form-control-feedback {
  top: 25px;
}
.has-feedback label.sr-only ~ .form-control-feedback {
  top: 0;
}
.help-block {
  display: block;
  margin-top: 5px;
  margin-bottom: 10px;
  color: #737373;
}
@media (min-width: 768px) {
  .form-inline .form-group {
    display: inline-block;
    margin-bottom: 0;
    vertical-align: middle;
  }
  .form-inline .form-control {
    display: inline-block;
    width: auto;
    vertical-align: middle;
  }
  .form-inline .form-control-static {
    display: inline-block;
  }
  .form-inline .input-group {
    display: inline-table;
    vertical-align: middle;
  }
  .form-inline .input-group .input-group-addon,
  .form-inline .input-group .input-group-btn,
  .form-inline .input-group .form-control {
    width: auto;
  }
  .form-inline .input-group > .form-control {
    width: 100%;
  }
  .form-inline .control-label {
    margin-bottom: 0;
    vertical-align: middle;
  }
  .form-inline .radio,
  .form-inline .checkbox {
    display: inline-block;
    margin-top: 0;
    margin-bottom: 0;
    vertical-align: middle;
  }
  .form-inline .radio label,
  .form-inline .checkbox label {
    padding-left: 0;
  }
  .form-inline .radio input[type="radio"],
  .form-inline .checkbox input[type="checkbox"] {
    position: relative;
    margin-left: 0;
  }
  .form-inline .has-feedback .form-control-feedback {
    top: 0;
  }
}
.form-horizontal .radio,
.form-horizontal .checkbox,
.form-horizontal .radio-inline,
.form-horizontal .checkbox-inline {
  padding-top: 7px;
  margin-top: 0;
  margin-bottom: 0;
}
.form-horizontal .radio,
.form-horizontal .checkbox {
  min-height: 27px;
}
.form-horizontal .form-group {
  margin-right: -15px;
  margin-left: -15px;
}
@media (min-width: 768px) {
  .form-horizontal .control-label {
    padding-top: 7px;
    margin-bottom: 0;
    text-align: right;
  }
}
.form-horizontal .has-feedback .form-control-feedback {
  right: 15px;
}
@media (min-width: 768px) {
  .form-horizontal .form-group-lg .control-label {
    padding-top: 11px;
    font-size: 18px;
  }
}
@media (min-width: 768px) {
  .form-horizontal .form-group-sm .control-label {
    padding-top: 6px;
    font-size: 12px;
  }
}
.btn {
  display: inline-block;
  padding: 6px 12px;
  margin-bottom: 0;
  font-size: 14px;
  font-weight: normal;
  line-height: 1.42857143;
  text-align: center;
  white-space: nowrap;
  vertical-align: middle;
  -ms-touch-action: manipulation;
      touch-action: manipulation;
  cursor: pointer;
  -webkit-user-select: none;
     -moz-user-select: none;
      -ms-user-select: none;
          user-select: none;
  background-image: none;
  border: 1px solid transparent;
  border-radius: 4px;
}
.btn:focus,
.btn:active:focus,
.btn.active:focus,
.btn.focus,
.btn:active.focus,
.btn.active.focus {
  outline: 5px auto -webkit-focus-ring-color;
  outline-offset: -2px;
}
.btn:hover,
.btn:focus,
.btn.focus {
  color: #333;
  text-decoration: none;
}
.btn:active,
.btn.active {
  background-image: none;
  outline: 0;
  -webkit-box-shadow: inset 0 3px 5px rgba(0, 0, 0, .125);
          box-shadow: inset 0 3px 5px rgba(0, 0, 0, .125);
}
.btn.disabled,
.btn[disabled],
fieldset[disabled] .btn {
  cursor: not-allowed;
  filter: alpha(opacity=65);
  -webkit-box-shadow: none;
          box-shadow: none;
  opacity: .65;
}
a.btn.disabled,
fieldset[disabled] a.btn {
  pointer-events: none;
}
.btn-default {
  color: #333;
  background-color: #fff;
  border-color: #ccc;
}
.btn-default:focus,
.btn-default.focus {
  color: #333;
  background-color: #e6e6e6;
  border-color: #8c8c8c;
}
.btn-default:hover {
  color: #333;
  background-color: #e6e6e6;
  border-color: #adadad;
}
.btn-default:active,
.btn-default.active,
.open > .dropdown-toggle.btn-default {
  color: #333;
  background-color: #e6e6e6;
  border-color: #adadad;
}
.btn-default:active:hover,
.btn-default.active:hover,
.open > .dropdown-toggle.btn-default:hover,
.btn-default:active:focus,
.btn-default.active:focus,
.open > .dropdown-toggle.btn-default:focus,
.btn-default:active.focus,
.btn-default.active.focus,
.open > .dropdown-toggle.btn-default.focus {
  color: #333;
  background-color: #d4d4d4;
  border-color: #8c8c8c;
}
.btn-default:active,
.btn-default.active,
.open > .dropdown-toggle.btn-default {
  background-image: none;
}
.btn-default.disabled:hover,
.btn-default[disabled]:hover,
fieldset[disabled] .btn-default:hover,
.btn-default.disabled:focus,
.btn-default[disabled]:focus,
fieldset[disabled] .btn-default:focus,
.btn-default.disabled.focus,
.btn-default[disabled].focus,
fieldset[disabled] .btn-default.focus {
  background-color: #fff;
  border-color: #ccc;
}
.btn-default .badge {
  color: #fff;
  background-color: #333;
}
.btn-primary {
  color: #fff;
  background-color: #337ab7;
  border-color: #2e6da4;
}
.btn-primary:focus,
.btn-primary.focus {
  color: #fff;
  background-color: #286090;
  border-color: #122b40;
}
.btn-primary:hover {
  color: #fff;
  background-color: #286090;
  border-color: #204d74;
}
.btn-primary:active,
.btn-primary.active,
.open > .dropdown-toggle.btn-primary {
  color: #fff;
  background-color: #286090;
  border-color: #204d74;
}
.btn-primary:active:hover,
.btn-primary.active:hover,
.open > .dropdown-toggle.btn-primary:hover,
.btn-primary:active:focus,
.btn-primary.active:focus,
.open > .dropdown-toggle.btn-primary:focus,
.btn-primary:active.focus,
.btn-primary.active.focus,
.open > .dropdown-toggle.btn-primary.focus {
  color: #fff;
  background-color: #204d74;
  border-color: #122b40;
}
.btn-primary:active,
.btn-primary.active,
.open > .dropdown-toggle.btn-primary {
  background-image: none;
}
.btn-primary.disabled:hover,
.btn-primary[disabled]:hover,
fieldset[disabled] .btn-primary:hover,
.btn-primary.disabled:focus,
.btn-primary[disabled]:focus,
fieldset[disabled] .btn-primary:focus,
.btn-primary.disabled.focus,
.btn-primary[disabled].focus,
fieldset[disabled] .btn-primary.focus {
  background-color: #337ab7;
  border-color: #2e6da4;
}
.btn-primary .badge {
  color: #337ab7;
  background-color: #fff;
}
.btn-success {
  color: #fff;
  background-color: #5cb85c;
  border-color: #4cae4c;
}
.btn-success:focus,
.btn-success.focus {
  color: #fff;
  background-color: #449d44;
  border-color: #255625;
}
.btn-success:hover {
  color: #fff;
  background-color: #449d44;
  border-color: #398439;
}
.btn-success:active,
.btn-success.active,
.open > .dropdown-toggle.btn-success {
  color: #fff;
  background-color: #449d44;
  border-color: #398439;
}
.btn-success:active:hover,
.btn-success.active:hover,
.open > .dropdown-toggle.btn-success:hover,
.btn-success:active:focus,
.btn-success.active:focus,
.open > .dropdown-toggle.btn-success:focus,
.btn-success:active.focus,
.btn-success.active.focus,
.open > .dropdown-toggle.btn-success.focus {
  color: #fff;
  background-color: #398439;
  border-color: #255625;
}
.btn-success:active,
.btn-success.active,
.open > .dropdown-toggle.btn-success {
  background-image: none;
}
.btn-success.disabled:hover,
.btn-success[disabled]:hover,
fieldset[disabled] .btn-success:hover,
.btn-success.disabled:focus,
.btn-success[disabled]:focus,
fieldset[disabled] .btn-success:focus,
.btn-success.disabled.focus,
.btn-success[disabled].focus,
fieldset[disabled] .btn-success.focus {
  background-color: #5cb85c;
  border-color: #4cae4c;
}
.btn-success .badge {
  color: #5cb85c;
  background-color: #fff;
}
.btn-info {
  color: #fff;
  background-color: #5bc0de;
  border-color: #46b8da;
}
.btn-info:focus,
.btn-info.focus {
  color: #fff;
  background-color: #31b0d5;
  border-color: #1b6d85;
}
.btn-info:hover {
  color: #fff;
  background-color: #31b0d5;
  border-color: #269abc;
}
.btn-info:active,
.btn-info.active,
.open > .dropdown-toggle.btn-info {
  color: #fff;
  background-color: #31b0d5;
  border-color: #269abc;
}
.btn-info:active:hover,
.btn-info.active:hover,
.open > .dropdown-toggle.btn-info:hover,
.btn-info:active:focus,
.btn-info.active:focus,
.open > .dropdown-toggle.btn-info:focus,
.btn-info:active.focus,
.btn-info.active.focus,
.open > .dropdown-toggle.btn-info.focus {
  color: #fff;
  background-color: #269abc;
  border-color: #1b6d85;
}
.btn-info:active,
.btn-info.active,
.open > .dropdown-toggle.btn-info {
  background-image: none;
}
.btn-info.disabled:hover,
.btn-info[disabled]:hover,
fieldset[disabled] .btn-info:hover,
.btn-info.disabled:focus,
.btn-info[disabled]:focus,
fieldset[disabled] .btn-info:focus,
.btn-info.disabled.focus,
.btn-info[disabled].focus,
fieldset[disabled] .btn-info.focus {
  background-color: #5bc0de;
  border-color: #46b8da;
}
.btn-info .badge {
  color: #5bc0de;
  background-color: #fff;
}
.btn-warning {
  color: #fff;
  background-color: #f0ad4e;
  border-color: #eea236;
}
.btn-warning:focus,
.btn-warning.focus {
  color: #fff;
  background-color: #ec971f;
  border-color: #985f0d;
}
.btn-warning:hover {
  color: #fff;
  background-color: #ec971f;
  border-color: #d58512;
}
.btn-warning:active,
.btn-warning.active,
.open > .dropdown-toggle.btn-warning {
  color: #fff;
  background-color: #ec971f;
  border-color: #d58512;
}
.btn-warning:active:hover,
.btn-warning.active:hover,
.open > .dropdown-toggle.btn-warning:hover,
.btn-warning:active:focus,
.btn-warning.active:focus,
.open > .dropdown-toggle.btn-warning:focus,
.btn-warning:active.focus,
.btn-warning.active.focus,
.open > .dropdown-toggle.btn-warning.focus {
  color: #fff;
  background-color: #d58512;
  border-color: #985f0d;
}
.btn-warning:active,
.btn-warning.active,
.open > .dropdown-toggle.btn-warning {
  background-image: none;
}
.btn-warning.disabled:hover,
.btn-warning[disabled]:hover,
fieldset[disabled] .btn-warning:hover,
.btn-warning.disabled:focus,
.btn-warning[disabled]:focus,
fieldset[disabled] .btn-warning:focus,
.btn-warning.disabled.focus,
.btn-warning[disabled].focus,
fieldset[disabled] .btn-warning.focus {
  background-color: #f0ad4e;
  border-color: #eea236;
}
.btn-warning .badge {
  color: #f0ad4e;
  background-color: #fff;
}
.btn-danger {
  color: #fff;
  background-color: #d9534f;
  border-color: #d43f3a;
}
.btn-danger:focus,
.btn-danger.focus {
  color: #fff;
  background-color: #c9302c;
  border-color: #761c19;
}
.btn-danger:hover {
  color: #fff;
  background-color: #c9302c;
  border-color: #ac2925;
}
.btn-danger:active,
.btn-danger.active,
.open > .dropdown-toggle.btn-danger {
  color: #fff;
  background-color: #c9302c;
  border-color: #ac2925;
}
.btn-danger:active:hover,
.btn-danger.active:hover,
.open > .dropdown-toggle.btn-danger:hover,
.btn-danger:active:focus,
.btn-danger.active:focus,
.open > .dropdown-toggle.btn-danger:focus,
.btn-danger:active.focus,
.btn-danger.active.focus,
.open > .dropdown-toggle.btn-danger.focus {
  color: #fff;
  background-color: #ac2925;
  border-color: #761c19;
}
.btn-danger:active,
.btn-danger.active,
.open > .dropdown-toggle.btn-danger {
  background-image: none;
}
.btn-danger.disabled:hover,
.btn-danger[disabled]:hover,
fieldset[disabled] .btn-danger:hover,
.btn-danger.disabled:focus,
.btn-danger[disabled]:focus,
fieldset[disabled] .btn-danger:focus,
.btn-danger.disabled.focus,
.btn-danger[disabled].focus,
fieldset[disabled] .btn-danger.focus {
  background-color: #d9534f;
  border-color: #d43f3a;
}
.btn-danger .badge {
  color: #d9534f;
  background-color: #fff;
}
.btn-link {
  font-weight: normal;
  color: #337ab7;
  border-radius: 0;
}
.btn-link,
.btn-link:active,
.btn-link.active,
.btn-link[disabled],
fieldset[disabled] .btn-link {
  background-color: transparent;
  -webkit-box-shadow: none;
          box-shadow: none;
}
.btn-link,
.btn-link:hover,
.btn-link:focus,
.btn-link:active {
  border-color: transparent;
}
.btn-link:hover,
.btn-link:focus {
  color: #23527c;
  text-decoration: underline;
  background-color: transparent;
}
.btn-link[disabled]:hover,
fieldset[disabled] .btn-link:hover,
.btn-link[disabled]:focus,
fieldset[disabled] .btn-link:focus {
  color: #777;
  text-decoration: none;
}
.btn-lg,
.btn-group-lg > .btn {
  padding: 10px 16px;
  font-size: 18px;
  line-height: 1.3333333;
  border-radius: 6px;
}
.btn-sm,
.btn-group-sm > .btn {
  padding: 5px 10px;
  font-size: 12px;
  line-height: 1.5;
  border-radius: 3px;
}
.btn-xs,
.btn-group-xs > .btn {
  padding: 1px 5px;
  font-size: 12px;
  line-height: 1.5;
  border-radius: 3px;
}
.btn-block {
  display: block;
  width: 100%;
}
.btn-block + .btn-block {
  margin-top: 5px;
}
input[type="submit"].btn-block,
input[type="reset"].btn-block,
input[type="button"].btn-block {
  width: 100%;
}
.fade {
  opacity: 0;
  -webkit-transition: opacity .15s linear;
       -o-transition: opacity .15s linear;
          transition: opacity .15s linear;
}
.fade.in {
  opacity: 1;
}
.collapse {
  display: none;
}
.collapse.in {
  display: block;
}
tr.collapse.in {
  display: table-row;
}
tbody.collapse.in {
  display: table-row-group;
}
.collapsing {
  position: relative;
  height: 0;
  overflow: hidden;
  -webkit-transition-timing-function: ease;
       -o-transition-timing-function: ease;
          transition-timing-function: ease;
  -webkit-transition-duration: .35s;
       -o-transition-duration: .35s;
          transition-duration: .35s;
  -webkit-transition-property: height, visibility;
       -o-transition-property: height, visibility;
          transition-property: height, visibility;
}
.caret {
  display: inline-block;
  width: 0;
  height: 0;
  margin-left: 2px;
  vertical-align: middle;
  border-top: 4px dashed;
  border-top: 4px solid \9;
  border-right: 4px solid transparent;
  border-left: 4px solid transparent;
}
.dropup,
.dropdown {
  position: relative;
}
.dropdown-toggle:focus {
  outline: 0;
}
.dropdown-menu {
  position: absolute;
  top: 100%;
  left: 0;
  z-index: 1000;
  display: none;
  float: left;
  min-width: 160px;
  padding: 5px 0;
  margin: 2px 0 0;
  font-size: 14px;
  text-align: left;
  list-style: none;
  background-color: #fff;
  -webkit-background-clip: padding-box;
          background-clip: padding-box;
  border: 1px solid #ccc;
  border: 1px solid rgba(0, 0, 0, .15);
  border-radius: 4px;
  -webkit-box-shadow: 0 6px 12px rgba(0, 0, 0, .175);
          box-shadow: 0 6px 12px rgba(0, 0, 0, .175);
}
.dropdown-menu.pull-right {
  right: 0;
  left: auto;
}
.dropdown-menu .divider {
  height: 1px;
  margin: 9px 0;
  overflow: hidden;
  background-color: #e5e5e5;
}
.dropdown-menu > li > a {
  display: block;
  padding: 3px 20px;
  clear: both;
  font-weight: normal;
  line-height: 1.42857143;
  color: #333;
  white-space: nowrap;
}
.dropdown-menu > li > a:hover,
.dropdown-menu > li > a:focus {
  color: #262626;
  text-decoration: none;
  background-color: #f5f5f5;
}
.dropdown-menu > .active > a,
.dropdown-menu > .active > a:hover,
.dropdown-menu > .active > a:focus {
  color: #fff;
  text-decoration: none;
  background-color: #337ab7;
  outline: 0;
}
.dropdown-menu > .disabled > a,
.dropdown-menu > .disabled > a:hover,
.dropdown-menu > .disabled > a:focus {
  color: #777;
}
.dropdown-menu > .disabled > a:hover,
.dropdown-menu > .disabled > a:focus {
  text-decoration: none;
  cursor: not-allowed;
  background-color: transparent;
  background-image: none;
  filter: progid:DXImageTransform.Microsoft.gradient(enabled = false);
}
.open > .dropdown-menu {
  display: block;
}
.open > a {
  outline: 0;
}
.dropdown-menu-right {
  right: 0;
  left: auto;
}
.dropdown-menu-left {
  right: auto;
  left: 0;
}
.dropdown-header {
  display: block;
  padding: 3px 20px;
  font-size: 12px;
  line-height: 1.42857143;
  color: #777;
  white-space: nowrap;
}
.dropdown-backdrop {
  position: fixed;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  z-index: 990;
}
.pull-right > .dropdown-menu {
  right: 0;
  left: auto;
}
.dropup .caret,
.navbar-fixed-bottom .dropdown .caret {
  content: "";
  border-top: 0;
  border-bottom: 4px dashed;
  border-bottom: 4px solid \9;
}
.dropup .dropdown-menu,
.navbar-fixed-bottom .dropdown .dropdown-menu {
  top: auto;
  bottom: 100%;
  margin-bottom: 2px;
}
@media (min-width: 768px) {
  .navbar-right .dropdown-menu {
    right: 0;
    left: auto;
  }
  .navbar-right .dropdown-menu-left {
    right: auto;
    left: 0;
  }
}
.btn-group,
.btn-group-vertical {
  position: relative;
  display: inline-block;
  vertical-align: middle;
}
.btn-group > .btn,
.btn-group-vertical > .btn {
  position: relative;
  float: left;
}
.btn-group > .btn:hover,
.btn-group-vertical > .btn:hover,
.btn-group > .btn:focus,
.btn-group-vertical > .btn:focus,
.btn-group > .btn:active,
.btn-group-vertical > .btn:active,
.btn-group > .btn.active,
.btn-group-vertical > .btn.active {
  z-index: 2;
}
.btn-group .btn + .btn,
.btn-group .btn + .btn-group,
.btn-group .btn-group + .btn,
.btn-group .btn-group + .btn-group {
  margin-left: -1px;
}
.btn-toolbar {
  margin-left: -5px;
}
.btn-toolbar .btn,
.btn-toolbar .btn-group,
.btn-toolbar .input-group {
  float: left;
}
.btn-toolbar > .btn,
.btn-toolbar > .btn-group,
.btn-toolbar > .input-group {
  margin-left: 5px;
}
.btn-group > .btn:not(:first-child):not(:last-child):not(.dropdown-toggle) {
  border-radius: 0;
}
.btn-group > .btn:first-child {
  margin-left: 0;
}
.btn-group > .btn:first-child:not(:last-child):not(.dropdown-toggle) {
  border-top-right-radius: 0;
  border-bottom-right-radius: 0;
}
.btn-group > .btn:last-child:not(:first-child),
.btn-group > .dropdown-toggle:not(:first-child) {
  border-top-left-radius: 0;
  border-bottom-left-radius: 0;
}
.btn-group > .btn-group {
  float: left;
}
.btn-group > .btn-group:not(:first-child):not(:last-child) > .btn {
  border-radius: 0;
}
.btn-group > .btn-group:first-child:not(:last-child) > .btn:last-child,
.btn-group > .btn-group:first-child:not(:last-child) > .dropdown-toggle {
  border-top-right-radius: 0;
  border-bottom-right-radius: 0;
}
.btn-group > .btn-group:last-child:not(:first-child) > .btn:first-child {
  border-top-left-radius: 0;
  border-bottom-left-radius: 0;
}
.btn-group .dropdown-toggle:active,
.btn-group.open .dropdown-toggle {
  outline: 0;
}
.btn-group > .btn + .dropdown-toggle {
  padding-right: 8px;
  padding-left: 8px;
}
.btn-group > .btn-lg + .dropdown-toggle {
  padding-right: 12px;
  padding-left: 12px;
}
.btn-group.open .dropdown-toggle {
  -webkit-box-shadow: inset 0 3px 5px rgba(0, 0, 0, .125);
          box-shadow: inset 0 3px 5px rgba(0, 0, 0, .125);
}
.btn-group.open .dropdown-toggle.btn-link {
  -webkit-box-shadow: none;
          box-shadow: none;
}
.btn .caret {
  margin-left: 0;
}
.btn-lg .caret {
  border-width: 5px 5px 0;
  border-bottom-width: 0;
}
.dropup .btn-lg .caret {
  border-width: 0 5px 5px;
}
.btn-group-vertical > .btn,
.btn-group-vertical > .btn-group,
.btn-group-vertical > .btn-group > .btn {
  display: block;
  float: none;
  width: 100%;
  max-width: 100%;
}
.btn-group-vertical > .btn-group > .btn {
  float: none;
}
.btn-group-vertical > .btn + .btn,
.btn-group-vertical > .btn + .btn-group,
.btn-group-vertical > .btn-group + .btn,
.btn-group-vertical > .btn-group + .btn-group {
  margin-top: -1px;
  margin-left: 0;
}
.btn-group-vertical > .btn:not(:first-child):not(:last-child) {
  border-radius: 0;
}
.btn-group-vertical > .btn:first-child:not(:last-child) {
  border-top-left-radius: 4px;
  border-top-right-radius: 4px;
  border-bottom-right-radius: 0;
  border-bottom-left-radius: 0;
}
.btn-group-vertical > .btn:last-child:not(:first-child) {
  border-top-left-radius: 0;
  border-top-right-radius: 0;
  border-bottom-right-radius: 4px;
  border-bottom-left-radius: 4px;
}
.btn-group-vertical > .btn-group:not(:first-child):not(:last-child) > .btn {
  border-radius: 0;
}
.btn-group-vertical > .btn-group:first-child:not(:last-child) > .btn:last-child,
.btn-group-vertical > .btn-group:first-child:not(:last-child) > .dropdown-toggle {
  border-bottom-right-radius: 0;
  border-bottom-left-radius: 0;
}
.btn-group-vertical > .btn-group:last-child:not(:first-child) > .btn:first-child {
  border-top-left-radius: 0;
  border-top-right-radius: 0;
}
.btn-group-justified {
  display: table;
  width: 100%;
  table-layout: fixed;
  border-collapse: separate;
}
.btn-group-justified > .btn,
.btn-group-justified > .btn-group {
  display: table-cell;
  float: none;
  width: 1%;
}
.btn-group-justified > .btn-group .btn {
  width: 100%;
}
.btn-group-justified > .btn-group .dropdown-menu {
  left: auto;
}
[data-toggle="buttons"] > .btn input[type="radio"],
[data-toggle="buttons"] > .btn-group > .btn input[type="radio"],
[data-toggle="buttons"] > .btn input[type="checkbox"],
[data-toggle="buttons"] > .btn-group > .btn input[type="checkbox"] {
  position: absolute;
  clip: rect(0, 0, 0, 0);
  pointer-events: none;
}
.input-group {
  position: relative;
  display: table;
  border-collapse: separate;
}
.input-group[class*="col-"] {
  float: none;
  padding-right: 0;
  padding-left: 0;
}
.input-group .form-control {
  position: relative;
  z-index: 2;
  float: left;
  width: 100%;
  margin-bottom: 0;
}
.input-group .form-control:focus {
  z-index: 3;
}
.input-group-lg > .form-control,
.input-group-lg > .input-group-addon,
.input-group-lg > .input-group-btn > .btn {
  height: 46px;
  padding: 10px 16px;
  font-size: 18px;
  line-height: 1.3333333;
  border-radius: 6px;
}
select.input-group-lg > .form-control,
select.input-group-lg > .input-group-addon,
select.input-group-lg > .input-group-btn > .btn {
  height: 46px;
  line-height: 46px;
}
textarea.input-group-lg > .form-control,
textarea.input-group-lg > .input-group-addon,
textarea.input-group-lg > .input-group-btn > .btn,
select[multiple].input-group-lg > .form-control,
select[multiple].input-group-lg > .input-group-addon,
select[multiple].input-group-lg > .input-group-btn > .btn {
  height: auto;
}
.input-group-sm > .form-control,
.input-group-sm > .input-group-addon,
.input-group-sm > .input-group-btn > .btn {
  height: 30px;
  padding: 5px 10px;
  font-size: 12px;
  line-height: 1.5;
  border-radius: 3px;
}
select.input-group-sm > .form-control,
select.input-group-sm > .input-group-addon,
select.input-group-sm > .input-group-btn > .btn {
  height: 30px;
  line-height: 30px;
}
textarea.input-group-sm > .form-control,
textarea.input-group-sm > .input-group-addon,
textarea.input-group-sm > .input-group-btn > .btn,
select[multiple].input-group-sm > .form-control,
select[multiple].input-group-sm > .input-group-addon,
select[multiple].input-group-sm > .input-group-btn > .btn {
  height: auto;
}
.input-group-addon,
.input-group-btn,
.input-group .form-control {
  display: table-cell;
}
.input-group-addon:not(:first-child):not(:last-child),
.input-group-btn:not(:first-child):not(:last-child),
.input-group .form-control:not(:first-child):not(:last-child) {
  border-radius: 0;
}
.input-group-addon,
.input-group-btn {
  width: 1%;
  white-space: nowrap;
  vertical-align: middle;
}
.input-group-addon {
  padding: 6px 12px;
  font-size: 14px;
  font-weight: normal;
  line-height: 1;
  color: #555;
  text-align: center;
  background-color: #eee;
  border: 1px solid #ccc;
  border-radius: 4px;
}
.input-group-addon.input-sm {
  padding: 5px 10px;
  font-size: 12px;
  border-radius: 3px;
}
.input-group-addon.input-lg {
  padding: 10px 16px;
  font-size: 18px;
  border-radius: 6px;
}
.input-group-addon input[type="radio"],
.input-group-addon input[type="checkbox"] {
  margin-top: 0;
}
.input-group .form-control:first-child,
.input-group-addon:first-child,
.input-group-btn:first-child > .btn,
.input-group-btn:first-child > .btn-group > .btn,
.input-group-btn:first-child > .dropdown-toggle,
.input-group-btn:last-child > .btn:not(:last-child):not(.dropdown-toggle),
.input-group-btn:last-child > .btn-group:not(:last-child) > .btn {
  border-top-right-radius: 0;
  border-bottom-right-radius: 0;
}
.input-group-addon:first-child {
  border-right: 0;
}
.input-group .form-control:last-child,
.input-group-addon:last-child,
.input-group-btn:last-child > .btn,
.input-group-btn:last-child > .btn-group > .btn,
.input-group-btn:last-child > .dropdown-toggle,
.input-group-btn:first-child > .btn:not(:first-child),
.input-group-btn:first-child > .btn-group:not(:first-child) > .btn {
  border-top-left-radius: 0;
  border-bottom-left-radius: 0;
}
.input-group-addon:last-child {
  border-left: 0;
}
.input-group-btn {
  position: relative;
  font-size: 0;
  white-space: nowrap;
}
.input-group-btn > .btn {
  position: relative;
}
.input-group-btn > .btn + .btn {
  margin-left: -1px;
}
.input-group-btn > .btn:hover,
.input-group-btn > .btn:focus,
.input-group-btn > .btn:active {
  z-index: 2;
}
.input-group-btn:first-child > .btn,
.input-group-btn:first-child > .btn-group {
  margin-right: -1px;
}
.input-group-btn:last-child > .btn,
.input-group-btn:last-child > .btn-group {
  z-index: 2;
  margin-left: -1px;
}
.nav {
  padding-left: 0;
  margin-bottom: 0;
  list-style: none;
}
.nav > li {
  position: relative;
  display: block;
}
.nav > li > a {
  position: relative;
  display: block;
  padding: 10px 15px;
}
.nav > li > a:hover,
.nav > li > a:focus {
  text-decoration: none;
  background-color: #eee;
}
.nav > li.disabled > a {
  color: #777;
}
.nav > li.disabled > a:hover,
.nav > li.disabled > a:focus {
  color: #777;
  text-decoration: none;
  cursor: not-allowed;
  background-color: transparent;
}
.nav .open > a,
.nav .open > a:hover,
.nav .open > a:focus {
  background-color: #eee;
  border-color: #337ab7;
}
.nav .nav-divider {
  height: 1px;
  margin: 9px 0;
  overflow: hidden;
  background-color: #e5e5e5;
}
.nav > li > a > img {
  max-width: none;
}
.nav-tabs {
  border-bottom: 1px solid #ddd;
}
.nav-tabs > li {
  float: left;
  margin-bottom: -1px;
}
.nav-tabs > li > a {
  margin-right: 2px;
  line-height: 1.42857143;
  border: 1px solid transparent;
  border-radius: 4px 4px 0 0;
}
.nav-tabs > li > a:hover {
  border-color: #eee #eee #ddd;
}
.nav-tabs > li.active > a,
.nav-tabs > li.active > a:hover,
.nav-tabs > li.active > a:focus {
  color: #555;
  cursor: default;
  background-color: #fff;
  border: 1px solid #ddd;
  border-bottom-color: transparent;
}
.nav-tabs.nav-justified {
  width: 100%;
  border-bottom: 0;
}
.nav-tabs.nav-justified > li {
  float: none;
}
.nav-tabs.nav-justified > li > a {
  margin-bottom: 5px;
  text-align: center;
}
.nav-tabs.nav-justified > .dropdown .dropdown-menu {
  top: auto;
  left: auto;
}
@media (min-width: 768px) {
  .nav-tabs.nav-justified > li {
    display: table-cell;
    width: 1%;
  }
  .nav-tabs.nav-justified > li > a {
    margin-bottom: 0;
  }
}
.nav-tabs.nav-justified > li > a {
  margin-right: 0;
  border-radius: 4px;
}
.nav-tabs.nav-justified > .active > a,
.nav-tabs.nav-justified > .active > a:hover,
.nav-tabs.nav-justified > .active > a:focus {
  border: 1px solid #ddd;
}
@media (min-width: 768px) {
  .nav-tabs.nav-justified > li > a {
    border-bottom: 1px solid #ddd;
    border-radius: 4px 4px 0 0;
  }
  .nav-tabs.nav-justified > .active > a,
  .nav-tabs.nav-justified > .active > a:hover,
  .nav-tabs.nav-justified > .active > a:focus {
    border-bottom-color: #fff;
  }
}
.nav-pills > li {
  float: left;
}
.nav-pills > li > a {
  border-radius: 4px;
}
.nav-pills > li + li {
  margin-left: 2px;
}
.nav-pills > li.active > a,
.nav-pills > li.active > a:hover,
.nav-pills > li.active > a:focus {
  color: #fff;
  background-color: #337ab7;
}
.nav-stacked > li {
  float: none;
}
.nav-stacked > li + li {
  margin-top: 2px;
  margin-left: 0;
}
.nav-justified {
  width: 100%;
}
.nav-justified > li {
  float: none;
}
.nav-justified > li > a {
  margin-bottom: 5px;
  text-align: center;
}
.nav-justified > .dropdown .dropdown-menu {
  top: auto;
  left: auto;
}
@media (min-width: 768px) {
  .nav-justified > li {
    display: table-cell;
    width: 1%;
  }
  .nav-justified > li > a {
    margin-bottom: 0;
  }
}
.nav-tabs-justified {
  border-bottom: 0;
}
.nav-tabs-justified > li > a {
  margin-right: 0;
  border-radius: 4px;
}
.nav-tabs-justified > .active > a,
.nav-tabs-justified > .active > a:hover,
.nav-tabs-justified > .active > a:focus {
  border: 1px solid #ddd;
}
@media (min-width: 768px) {
  .nav-tabs-justified > li > a {
    border-bottom: 1px solid #ddd;
    border-radius: 4px 4px 0 0;
  }
  .nav-tabs-justified > .active > a,
  .nav-tabs-justified > .active > a:hover,
  .nav-tabs-justified > .active > a:focus {
    border-bottom-color: #fff;
  }
}
.tab-content > .tab-pane {
  display: none;
}
.tab-content > .active {
  display: block;
}
.nav-tabs .dropdown-menu {
  margin-top: -1px;
  border-top-left-radius: 0;
  border-top-right-radius: 0;
}
.navbar {
  position: relative;
  min-height: 50px;
  margin-bottom: 20px;
  border: 1px solid transparent;
}
@media (min-width: 768px) {
  .navbar {
    border-radius: 4px;
  }
}
@media (min-width: 768px) {
  .navbar-header {
    float: left;
  }
}
.navbar-collapse {
  padding-right: 15px;
  padding-left: 15px;
  overflow-x: visible;
  -webkit-overflow-scrolling: touch;
  border-top: 1px solid transparent;
  -webkit-box-shadow: inset 0 1px 0 rgba(255, 255, 255, .1);
          box-shadow: inset 0 1px 0 rgba(255, 255, 255, .1);
}
.navbar-collapse.in {
  overflow-y: auto;
}
@media (min-width: 768px) {
  .navbar-collapse {
    width: auto;
    border-top: 0;
    -webkit-box-shadow: none;
            box-shadow: none;
  }
  .navbar-collapse.collapse {
    display: block !important;
    height: auto !important;
    padding-bottom: 0;
    overflow: visible !important;
  }
  .navbar-collapse.in {
    overflow-y: visible;
  }
  .navbar-fixed-top .navbar-collapse,
  .navbar-static-top .navbar-collapse,
  .navbar-fixed-bottom .navbar-collapse {
    padding-right: 0;
    padding-left: 0;
  }
}
.navbar-fixed-top .navbar-collapse,
.navbar-fixed-bottom .navbar-collapse {
  max-height: 340px;
}
@media (max-device-width: 480px) and (orientation: landscape) {
  .navbar-fixed-top .navbar-collapse,
  .navbar-fixed-bottom .navbar-collapse {
    max-height: 200px;
  }
}
.container > .navbar-header,
.container-fluid > .navbar-header,
.container > .navbar-collapse,
.container-fluid > .navbar-collapse {
  margin-right: -15px;
  margin-left: -15px;
}
@media (min-width: 768px) {
  .container > .navbar-header,
  .container-fluid > .navbar-header,
  .container > .navbar-collapse,
  .container-fluid > .navbar-collapse {
    margin-right: 0;
    margin-left: 0;
  }
}
.navbar-static-top {
  z-index: 1000;
  border-width: 0 0 1px;
}
@media (min-width: 768px) {
  .navbar-static-top {
    border-radius: 0;
  }
}
.navbar-fixed-top,
.navbar-fixed-bottom {
  position: fixed;
  right: 0;
  left: 0;
  z-index: 1030;
}
@media (min-width: 768px) {
  .navbar-fixed-top,
  .navbar-fixed-bottom {
    border-radius: 0;
  }
}
.navbar-fixed-top {
  top: 0;
  border-width: 0 0 1px;
}
.navbar-fixed-bottom {
  bottom: 0;
  margin-bottom: 0;
  border-width: 1px 0 0;
}
.navbar-brand {
  float: left;
  height: 50px;
  padding: 15px 15px;
  font-size: 18px;
  line-height: 20px;
}
.navbar-brand:hover,
.navbar-brand:focus {
  text-decoration: none;
}
.navbar-brand > img {
  display: block;
}
@media (min-width: 768px) {
  .navbar > .container .navbar-brand,
  .navbar > .container-fluid .navbar-brand {
    margin-left: -15px;
  }
}
.navbar-toggle {
  position: relative;
  float: right;
  padding: 9px 10px;
  margin-top: 8px;
  margin-right: 15px;
  margin-bottom: 8px;
  background-color: transparent;
  background-image: none;
  border: 1px solid transparent;
  border-radius: 4px;
}
.navbar-toggle:focus {
  outline: 0;
}
.navbar-toggle .icon-bar {
  display: block;
  width: 22px;
  height: 2px;
  border-radius: 1px;
}
.navbar-toggle .icon-bar + .icon-bar {
  margin-top: 4px;
}
@media (min-width: 768px) {
  .navbar-toggle {
    display: none;
  }
}
.navbar-nav {
  margin: 7.5px -15px;
}
.navbar-nav > li > a {
  padding-top: 10px;
  padding-bottom: 10px;
  line-height: 20px;
}
@media (max-width: 767px) {
  .navbar-nav .open .dropdown-menu {
    position: static;
    float: none;
    width: auto;
    margin-top: 0;
    background-color: transparent;
    border: 0;
    -webkit-box-shadow: none;
            box-shadow: none;
  }
  .navbar-nav .open .dropdown-menu > li > a,
  .navbar-nav .open .dropdown-menu .dropdown-header {
    padding: 5px 15px 5px 25px;
  }
  .navbar-nav .open .dropdown-menu > li > a {
    line-height: 20px;
  }
  .navbar-nav .open .dropdown-menu > li > a:hover,
  .navbar-nav .open .dropdown-menu > li > a:focus {
    background-image: none;
  }
}
@media (min-width: 768px) {
  .navbar-nav {
    float: left;
    margin: 0;
  }
  .navbar-nav > li {
    float: left;
  }
  .navbar-nav > li > a {
    padding-top: 15px;
    padding-bottom: 15px;
  }
}
.navbar-form {
  padding: 10px 15px;
  margin-top: 8px;
  margin-right: -15px;
  margin-bottom: 8px;
  margin-left: -15px;
  border-top: 1px solid transparent;
  border-bottom: 1px solid transparent;
  -webkit-box-shadow: inset 0 1px 0 rgba(255, 255, 255, .1), 0 1px 0 rgba(255, 255, 255, .1);
          box-shadow: inset 0 1px 0 rgba(255, 255, 255, .1), 0 1px 0 rgba(255, 255, 255, .1);
}
@media (min-width: 768px) {
  .navbar-form .form-group {
    display: inline-block;
    margin-bottom: 0;
    vertical-align: middle;
  }
  .navbar-form .form-control {
    display: inline-block;
    width: auto;
    vertical-align: middle;
  }
  .navbar-form .form-control-static {
    display: inline-block;
  }
  .navbar-form .input-group {
    display: inline-table;
    vertical-align: middle;
  }
  .navbar-form .input-group .input-group-addon,
  .navbar-form .input-group .input-group-btn,
  .navbar-form .input-group .form-control {
    width: auto;
  }
  .navbar-form .input-group > .form-control {
    width: 100%;
  }
  .navbar-form .control-label {
    margin-bottom: 0;
    vertical-align: middle;
  }
  .navbar-form .radio,
  .navbar-form .checkbox {
    display: inline-block;
    margin-top: 0;
    margin-bottom: 0;
    vertical-align: middle;
  }
  .navbar-form .radio label,
  .navbar-form .checkbox label {
    padding-left: 0;
  }
  .navbar-form .radio input[type="radio"],
  .navbar-form .checkbox input[type="checkbox"] {
    position: relative;
    margin-left: 0;
  }
  .navbar-form .has-feedback .form-control-feedback {
    top: 0;
  }
}
@media (max-width: 767px) {
  .navbar-form .form-group {
    margin-bottom: 5px;
  }
  .navbar-form .form-group:last-child {
    margin-bottom: 0;
  }
}
@media (min-width: 768px) {
  .navbar-form {
    width: auto;
    padding-top: 0;
    padding-bottom: 0;
    margin-right: 0;
    margin-left: 0;
    border: 0;
    -webkit-box-shadow: none;
            box-shadow: none;
  }
}
.navbar-nav > li > .dropdown-menu {
  margin-top: 0;
  border-top-left-radius: 0;
  border-top-right-radius: 0;
}
.navbar-fixed-bottom .navbar-nav > li > .dropdown-menu {
  margin-bottom: 0;
  border-top-left-radius: 4px;
  border-top-right-radius: 4px;
  border-bottom-right-radius: 0;
  border-bottom-left-radius: 0;
}
.navbar-btn {
  margin-top: 8px;
  margin-bottom: 8px;
}
.navbar-btn.btn-sm {
  margin-top: 10px;
  margin-bottom: 10px;
}
.navbar-btn.btn-xs {
  margin-top: 14px;
  margin-bottom: 14px;
}
.navbar-text {
  margin-top: 15px;
  margin-bottom: 15px;
}
@media (min-width: 768px) {
  .navbar-text {
    float: left;
    margin-right: 15px;
    margin-left: 15px;
  }
}
@media (min-width: 768px) {
  .navbar-left {
    float: left !important;
  }
  .navbar-right {
    float: right !important;
    margin-right: -15px;
  }
  .navbar-right ~ .navbar-right {
    margin-right: 0;
  }
}
.navbar-default {
  background-color: #f8f8f8;
  border-color: #e7e7e7;
}
.navbar-default .navbar-brand {
  color: #777;
}
.navbar-default .navbar-brand:hover,
.navbar-default .navbar-brand:focus {
  color: #5e5e5e;
  background-color: transparent;
}
.navbar-default .navbar-text {
  color: #777;
}
.navbar-default .navbar-nav > li > a {
  color: #777;
}
.navbar-default .navbar-nav > li > a:hover,
.navbar-default .navbar-nav > li > a:focus {
  color: #333;
  background-color: transparent;
}
.navbar-default .navbar-nav > .active > a,
.navbar-default .navbar-nav > .active > a:hover,
.navbar-default .navbar-nav > .active > a:focus {
  color: #555;
  background-color: #e7e7e7;
}
.navbar-default .navbar-nav > .disabled > a,
.navbar-default .navbar-nav > .disabled > a:hover,
.navbar-default .navbar-nav > .disabled > a:focus {
  color: #ccc;
  background-color: transparent;
}
.navbar-default .navbar-toggle {
  border-color: #ddd;
}
.navbar-default .navbar-toggle:hover,
.navbar-default .navbar-toggle:focus {
  background-color: #ddd;
}
.navbar-default .navbar-toggle .icon-bar {
  background-color: #888;
}
.navbar-default .navbar-collapse,
.navbar-default .navbar-form {
  border-color: #e7e7e7;
}
.navbar-default .navbar-nav > .open > a,
.navbar-default .navbar-nav > .open > a:hover,
.navbar-default .navbar-nav > .open > a:focus {
  color: #555;
  background-color: #e7e7e7;
}
@media (max-width: 767px) {
  .navbar-default .navbar-nav .open .dropdown-menu > li > a {
    color: #777;
  }
  .navbar-default .navbar-nav .open .dropdown-menu > li > a:hover,
  .navbar-default .navbar-nav .open .dropdown-menu > li > a:focus {
    color: #333;
    background-color: transparent;
  }
  .navbar-default .navbar-nav .open .dropdown-menu > .active > a,
  .navbar-default .navbar-nav .open .dropdown-menu > .active > a:hover,
  .navbar-default .navbar-nav .open .dropdown-menu > .active > a:focus {
    color: #555;
    background-color: #e7e7e7;
  }
  .navbar-default .navbar-nav .open .dropdown-menu > .disabled > a,
  .navbar-default .navbar-nav .open .dropdown-menu > .disabled > a:hover,
  .navbar-default .navbar-nav .open .dropdown-menu > .disabled > a:focus {
    color: #ccc;
    background-color: transparent;
  }
}
.navbar-default .navbar-link {
  color: #777;
}
.navbar-default .navbar-link:hover {
  color: #333;
}
.navbar-default .btn-link {
  color: #777;
}
.navbar-default .btn-link:hover,
.navbar-default .btn-link:focus {
  color: #333;
}
.navbar-default .btn-link[disabled]:hover,
fieldset[disabled] .navbar-default .btn-link:hover,
.navbar-default .btn-link[disabled]:focus,
fieldset[disabled] .navbar-default .btn-link:focus {
  color: #ccc;
}
.navbar-inverse {
  background-color: #222;
  border-color: #080808;
}
.navbar-inverse .navbar-brand {
  color: #9d9d9d;
}
.navbar-inverse .navbar-brand:hover,
.navbar-inverse .navbar-brand:focus {
  color: #fff;
  background-color: transparent;
}
.navbar-inverse .navbar-text {
  color: #9d9d9d;
}
.navbar-inverse .navbar-nav > li > a {
  color: #9d9d9d;
}
.navbar-inverse .navbar-nav > li > a:hover,
.navbar-inverse .navbar-nav > li > a:focus {
  color: #fff;
  background-color: transparent;
}
.navbar-inverse .navbar-nav > .active > a,
.navbar-inverse .navbar-nav > .active > a:hover,
.navbar-inverse .navbar-nav > .active > a:focus {
  color: #fff;
  background-color: #080808;
}
.navbar-inverse .navbar-nav > .disabled > a,
.navbar-inverse .navbar-nav > .disabled > a:hover,
.navbar-inverse .navbar-nav > .disabled > a:focus {
  color: #444;
  background-color: transparent;
}
.navbar-inverse .navbar-toggle {
  border-color: #333;
}
.navbar-inverse .navbar-toggle:hover,
.navbar-inverse .navbar-toggle:focus {
  background-color: #333;
}
.navbar-inverse .navbar-toggle .icon-bar {
  background-color: #fff;
}
.navbar-inverse .navbar-collapse,
.navbar-inverse .navbar-form {
  border-color: #101010;
}
.navbar-inverse .navbar-nav > .open > a,
.navbar-inverse .navbar-nav > .open > a:hover,
.navbar-inverse .navbar-nav > .open > a:focus {
  color: #fff;
  background-color: #080808;
}
@media (max-width: 767px) {
  .navbar-inverse .navbar-nav .open .dropdown-menu > .dropdown-header {
    border-color: #080808;
  }
  .navbar-inverse .navbar-nav .open .dropdown-menu .divider {
    background-color: #080808;
  }
  .navbar-inverse .navbar-nav .open .dropdown-menu > li > a {
    color: #9d9d9d;
  }
  .navbar-inverse .navbar-nav .open .dropdown-menu > li > a:hover,
  .navbar-inverse .navbar-nav .open .dropdown-menu > li > a:focus {
    color: #fff;
    background-color: transparent;
  }
  .navbar-inverse .navbar-nav .open .dropdown-menu > .active > a,
  .navbar-inverse .navbar-nav .open .dropdown-menu > .active > a:hover,
  .navbar-inverse .navbar-nav .open .dropdown-menu > .active > a:focus {
    color: #fff;
    background-color: #080808;
  }
  .navbar-inverse .navbar-nav .open .dropdown-menu > .disabled > a,
  .navbar-inverse .navbar-nav .open .dropdown-menu > .disabled > a:hover,
  .navbar-inverse .navbar-nav .open .dropdown-menu > .disabled > a:focus {
    color: #444;
    background-color: transparent;
  }
}
.navbar-inverse .navbar-link {
  color: #9d9d9d;
}
.navbar-inverse .navbar-link:hover {
  color: #fff;
}
.navbar-inverse .btn-link {
  color: #9d9d9d;
}
.navbar-inverse .btn-link:hover,
.navbar-inverse .btn-link:focus {
  color: #fff;
}
.navbar-inverse .btn-link[disabled]:hover,
fieldset[disabled] .navbar-inverse .btn-link:hover,
.navbar-inverse .btn-link[disabled]:focus,
fieldset[disabled] .navbar-inverse .btn-link:focus {
  color: #444;
}
.breadcrumb {
  padding: 8px 15px;
  margin-bottom: 20px;
  list-style: none;
  background-color: #f5f5f5;
  border-radius: 4px;
}
.breadcrumb > li {
  display: inline-block;
}
.breadcrumb > li + li:before {
  padding: 0 5px;
  color: #ccc;
  content: "/\00a0";
}
.breadcrumb > .active {
  color: #777;
}
.pagination {
  display: inline-block;
  padding-left: 0;
  margin: 20px 0;
  border-radius: 4px;
}
.pagination > li {
  display: inline;
}
.pagination > li > a,
.pagination > li > span {
  position: relative;
  float: left;
  padding: 6px 12px;
  margin-left: -1px;
  line-height: 1.42857143;
  color: #337ab7;
  text-decoration: none;
  background-color: #fff;
  border: 1px solid #ddd;
}
.pagination > li:first-child > a,
.pagination > li:first-child > span {
  margin-left: 0;
  border-top-left-radius: 4px;
  border-bottom-left-radius: 4px;
}
.pagination > li:last-child > a,
.pagination > li:last-child > span {
  border-top-right-radius: 4px;
  border-bottom-right-radius: 4px;
}
.pagination > li > a:hover,
.pagination > li > span:hover,
.pagination > li > a:focus,
.pagination > li > span:focus {
  z-index: 2;
  color: #23527c;
  background-color: #eee;
  border-color: #ddd;
}
.pagination > .active > a,
.pagination > .active > span,
.pagination > .active > a:hover,
.pagination > .active > span:hover,
.pagination > .active > a:focus,
.pagination > .active > span:focus {
  z-index: 3;
  color: #fff;
  cursor: default;
  background-color: #337ab7;
  border-color: #337ab7;
}
.pagination > .disabled > span,
.pagination > .disabled > span:hover,
.pagination > .disabled > span:focus,
.pagination > .disabled > a,
.pagination > .disabled > a:hover,
.pagination > .disabled > a:focus {
  color: #777;
  cursor: not-allowed;
  background-color: #fff;
  border-color: #ddd;
}
.pagination-lg > li > a,
.pagination-lg > li > span {
  padding: 10px 16px;
  font-size: 18px;
  line-height: 1.3333333;
}
.pagination-lg > li:first-child > a,
.pagination-lg > li:first-child > span {
  border-top-left-radius: 6px;
  border-bottom-left-radius: 6px;
}
.pagination-lg > li:last-child > a,
.pagination-lg > li:last-child > span {
  border-top-right-radius: 6px;
  border-bottom-right-radius: 6px;
}
.pagination-sm > li > a,
.pagination-sm > li > span {
  padding: 5px 10px;
  font-size: 12px;
  line-height: 1.5;
}
.pagination-sm > li:first-child > a,
.pagination-sm > li:first-child > span {
  border-top-left-radius: 3px;
  border-bottom-left-radius: 3px;
}
.pagination-sm > li:last-child > a,
.pagination-sm > li:last-child > span {
  border-top-right-radius: 3px;
  border-bottom-right-radius: 3px;
}
.pager {
  padding-left: 0;
  margin: 20px 0;
  text-align: center;
  list-style: none;
}
.pager li {
  display: inline;
}
.pager li > a,
.pager li > span {
  display: inline-block;
  padding: 5px 14px;
  background-color: #fff;
  border: 1px solid #ddd;
  border-radius: 15px;
}
.pager li > a:hover,
.pager li > a:focus {
  text-decoration: none;
  background-color: #eee;
}
.pager .next > a,
.pager .next > span {
  float: right;
}
.pager .previous > a,
.pager .previous > span {
  float: left;
}
.pager .disabled > a,
.pager .disabled > a:hover,
.pager .disabled > a:focus,
.pager .disabled > span {
  color: #777;
  cursor: not-allowed;
  background-color: #fff;
}
.label {
  display: inline;
  padding: .2em .6em .3em;
  font-size: 75%;
  font-weight: bold;
  line-height: 1;
  color: #fff;
  text-align: center;
  white-space: nowrap;
  vertical-align: baseline;
  border-radius: .25em;
}
a.label:hover,
a.label:focus {
  color: #fff;
  text-decoration: none;
  cursor: pointer;
}
.label:empty {
  display: none;
}
.btn .label {
  position: relative;
  top: -1px;
}
.label-default {
  background-color: #777;
}
.label-default[href]:hover,
.label-default[href]:focus {
  background-color: #5e5e5e;
}
.label-primary {
  background-color: #337ab7;
}
.label-primary[href]:hover,
.label-primary[href]:focus {
  background-color: #286090;
}
.label-success {
  background-color: #5cb85c;
}
.label-success[href]:hover,
.label-success[href]:focus {
  background-color: #449d44;
}
.label-info {
  background-color: #5bc0de;
}
.label-info[href]:hover,
.label-info[href]:focus {
  background-color: #31b0d5;
}
.label-warning {
  background-color: #f0ad4e;
}
.label-warning[href]:hover,
.label-warning[href]:focus {
  background-color: #ec971f;
}
.label-danger {
  background-color: #d9534f;
}
.label-danger[href]:hover,
.label-danger[href]:focus {
  background-color: #c9302c;
}
.badge {
  display: inline-block;
  min-width: 10px;
  padding: 3px 7px;
  font-size: 12px;
  font-weight: bold;
  line-height: 1;
  color: #fff;
  text-align: center;
  white-space: nowrap;
  vertical-align: middle;
  background-color: #777;
  border-radius: 10px;
}
.badge:empty {
  display: none;
}
.btn .badge {
  position: relative;
  top: -1px;
}
.btn-xs .badge,
.btn-group-xs > .btn .badge {
  top: 0;
  padding: 1px 5px;
}
a.badge:hover,
a.badge:focus {
  color: #fff;
  text-decoration: none;
  cursor: pointer;
}
.list-group-item.active > .badge,
.nav-pills > .active > a > .badge {
  color: #337ab7;
  background-color: #fff;
}
.list-group-item > .badge {
  float: right;
}
.list-group-item > .badge + .badge {
  margin-right: 5px;
}
.nav-pills > li > a > .badge {
  margin-left: 3px;
}
.jumbotron {
  padding-top: 30px;
  padding-bottom: 30px;
  margin-bottom: 30px;
  color: inherit;
  background-color: #eee;
}
.jumbotron h1,
.jumbotron .h1 {
  color: inherit;
}
.jumbotron p {
  margin-bottom: 15px;
  font-size: 21px;
  font-weight: 200;
}
.jumbotron > hr {
  border-top-color: #d5d5d5;
}
.container .jumbotron,
.container-fluid .jumbotron {
  padding-right: 15px;
  padding-left: 15px;
  border-radius: 6px;
}
.jumbotron .container {
  max-width: 100%;
}
@media screen and (min-width: 768px) {
  .jumbotron {
    padding-top: 48px;
    padding-bottom: 48px;
  }
  .container .jumbotron,
  .container-fluid .jumbotron {
    padding-right: 60px;
    padding-left: 60px;
  }
  .jumbotron h1,
  .jumbotron .h1 {
    font-size: 63px;
  }
}
.thumbnail {
  display: block;
  padding: 4px;
  margin-bottom: 20px;
  line-height: 1.42857143;
  background-color: #fff;
  border: 1px solid #ddd;
  border-radius: 4px;
  -webkit-transition: border .2s ease-in-out;
       -o-transition: border .2s ease-in-out;
          transition: border .2s ease-in-out;
}
.thumbnail > img,
.thumbnail a > img {
  margin-right: auto;
  margin-left: auto;
}
a.thumbnail:hover,
a.thumbnail:focus,
a.thumbnail.active {
  border-color: #337ab7;
}
.thumbnail .caption {
  padding: 9px;
  color: #333;
}
.alert {
  padding: 15px;
  margin-bottom: 20px;
  border: 1px solid transparent;
  border-radius: 4px;
}
.alert h4 {
  margin-top: 0;
  color: inherit;
}
.alert .alert-link {
  font-weight: bold;
}
.alert > p,
.alert > ul {
  margin-bottom: 0;
}
.alert > p + p {
  margin-top: 5px;
}
.alert-dismissable,
.alert-dismissible {
  padding-right: 35px;
}
.alert-dismissable .close,
.alert-dismissible .close {
  position: relative;
  top: -2px;
  right: -21px;
  color: inherit;
}
.alert-success {
  color: #3c763d;
  background-color: #dff0d8;
  border-color: #d6e9c6;
}
.alert-success hr {
  border-top-color: #c9e2b3;
}
.alert-success .alert-link {
  color: #2b542c;
}
.alert-info {
  color: #31708f;
  background-color: #d9edf7;
  border-color: #bce8f1;
}
.alert-info hr {
  border-top-color: #a6e1ec;
}
.alert-info .alert-link {
  color: #245269;
}
.alert-warning {
  color: #8a6d3b;
  background-color: #fcf8e3;
  border-color: #faebcc;
}
.alert-warning hr {
  border-top-color: #f7e1b5;
}
.alert-warning .alert-link {
  color: #66512c;
}
.alert-danger {
  color: #a94442;
  background-color: #f2dede;
  border-color: #ebccd1;
}
.alert-danger hr {
  border-top-color: #e4b9c0;
}
.alert-danger .alert-link {
  color: #843534;
}
@-webkit-keyframes progress-bar-stripes {
  from {
    background-position: 40px 0;
  }
  to {
    background-position: 0 0;
  }
}
@-o-keyframes progress-bar-stripes {
  from {
    background-position: 40px 0;
  }
  to {
    background-position: 0 0;
  }
}
@keyframes progress-bar-stripes {
  from {
    background-position: 40px 0;
  }
  to {
    background-position: 0 0;
  }
}
.progress {
  height: 20px;
  margin-bottom: 20px;
  overflow: hidden;
  background-color: #f5f5f5;
  border-radius: 4px;
  -webkit-box-shadow: inset 0 1px 2px rgba(0, 0, 0, .1);
          box-shadow: inset 0 1px 2px rgba(0, 0, 0, .1);
}
.progress-bar {
  float: left;
  width: 0;
  height: 100%;
  font-size: 12px;
  line-height: 20px;
  color: #fff;
  text-align: center;
  background-color: #337ab7;
  -webkit-box-shadow: inset 0 -1px 0 rgba(0, 0, 0, .15);
          box-shadow: inset 0 -1px 0 rgba(0, 0, 0, .15);
  -webkit-transition: width .6s ease;
       -o-transition: width .6s ease;
          transition: width .6s ease;
}
.progress-striped .progress-bar,
.progress-bar-striped {
  background-image: -webkit-linear-gradient(45deg, rgba(255, 255, 255, .15) 25%, transparent 25%, transparent 50%, rgba(255, 255, 255, .15) 50%, rgba(255, 255, 255, .15) 75%, transparent 75%, transparent);
  background-image:      -o-linear-gradient(45deg, rgba(255, 255, 255, .15) 25%, transparent 25%, transparent 50%, rgba(255, 255, 255, .15) 50%, rgba(255, 255, 255, .15) 75%, transparent 75%, transparent);
  background-image:         linear-gradient(45deg, rgba(255, 255, 255, .15) 25%, transparent 25%, transparent 50%, rgba(255, 255, 255, .15) 50%, rgba(255, 255, 255, .15) 75%, transparent 75%, transparent);
  -webkit-background-size: 40px 40px;
          background-size: 40px 40px;
}
.progress.active .progress-bar,
.progress-bar.active {
  -webkit-animation: progress-bar-stripes 2s linear infinite;
       -o-animation: progress-bar-stripes 2s linear infinite;
          animation: progress-bar-stripes 2s linear infinite;
}
.progress-bar-success {
  background-color: #5cb85c;
}
.progress-striped .progress-bar-success {
  background-image: -webkit-linear-gradient(45deg, rgba(255, 255, 255, .15) 25%, transparent 25%, transparent 50%, rgba(255, 255, 255, .15) 50%, rgba(255, 255, 255, .15) 75%, transparent 75%, transparent);
  background-image:      -o-linear-gradient(45deg, rgba(255, 255, 255, .15) 25%, transparent 25%, transparent 50%, rgba(255, 255, 255, .15) 50%, rgba(255, 255, 255, .15) 75%, transparent 75%, transparent);
  background-image:         linear-gradient(45deg, rgba(255, 255, 255, .15) 25%, transparent 25%, transparent 50%, rgba(255, 255, 255, .15) 50%, rgba(255, 255, 255, .15) 75%, transparent 75%, transparent);
}
.progress-bar-info {
  background-color: #5bc0de;
}
.progress-striped .progress-bar-info {
  background-image: -webkit-linear-gradient(45deg, rgba(255, 255, 255, .15) 25%, transparent 25%, transparent 50%, rgba(255, 255, 255, .15) 50%, rgba(255, 255, 255, .15) 75%, transparent 75%, transparent);
  background-image:      -o-linear-gradient(45deg, rgba(255, 255, 255, .15) 25%, transparent 25%, transparent 50%, rgba(255, 255, 255, .15) 50%, rgba(255, 255, 255, .15) 75%, transparent 75%, transparent);
  background-image:         linear-gradient(45deg, rgba(255, 255, 255, .15) 25%, transparent 25%, transparent 50%, rgba(255, 255, 255, .15) 50%, rgba(255, 255, 255, .15) 75%, transparent 75%, transparent);
}
.progress-bar-warning {
  background-color: #f0ad4e;
}
.progress-striped .progress-bar-warning {
  background-image: -webkit-linear-gradient(45deg, rgba(255, 255, 255, .15) 25%, transparent 25%, transparent 50%, rgba(255, 255, 255, .15) 50%, rgba(255, 255, 255, .15) 75%, transparent 75%, transparent);
  background-image:      -o-linear-gradient(45deg, rgba(255, 255, 255, .15) 25%, transparent 25%, transparent 50%, rgba(255, 255, 255, .15) 50%, rgba(255, 255, 255, .15) 75%, transparent 75%, transparent);
  background-image:         linear-gradient(45deg, rgba(255, 255, 255, .15) 25%, transparent 25%, transparent 50%, rgba(255, 255, 255, .15) 50%, rgba(255, 255, 255, .15) 75%, transparent 75%, transparent);
}
.progress-bar-danger {
  background-color: #d9534f;
}
.progress-striped .progress-bar-danger {
  background-image: -webkit-linear-gradient(45deg, rgba(255, 255, 255, .15) 25%, transparent 25%, transparent 50%, rgba(255, 255, 255, .15) 50%, rgba(255, 255, 255, .15) 75%, transparent 75%, transparent);
  background-image:      -o-linear-gradient(45deg, rgba(255, 255, 255, .15) 25%, transparent 25%, transparent 50%, rgba(255, 255, 255, .15) 50%, rgba(255, 255, 255, .15) 75%, transparent 75%, transparent);
  background-image:         linear-gradient(45deg, rgba(255, 255, 255, .15) 25%, transparent 25%, transparent 50%, rgba(255, 255, 255, .15) 50%, rgba(255, 255, 255, .15) 75%, transparent 75%, transparent);
}
.media {
  margin-top: 15px;
}
.media:first-child {
  margin-top: 0;
}
.media,
.media-body {
  overflow: hidden;
  zoom: 1;
}
.media-body {
  width: 10000px;
}
.media-object {
  display: block;
}
.media-object.img-thumbnail {
  max-width: none;
}
.media-right,
.media > .pull-right {
  padding-left: 10px;
}
.media-left,
.media > .pull-left {
  padding-right: 10px;
}
.media-left,
.media-right,
.media-body {
  display: table-cell;
  vertical-align: top;
}
.media-middle {
  vertical-align: middle;
}
.media-bottom {
  vertical-align: bottom;
}
.media-heading {
  margin-top: 0;
  margin-bottom: 5px;
}
.media-list {
  padding-left: 0;
  list-style: none;
}
.list-group {
  padding-left: 0;
  margin-bottom: 20px;
}
.list-group-item {
  position: relative;
  display: block;
  padding: 10px 15px;
  margin-bottom: -1px;
  background-color: #fff;
  border: 1px solid #ddd;
}
.list-group-item:first-child {
  border-top-left-radius: 4px;
  border-top-right-radius: 4px;
}
.list-group-item:last-child {
  margin-bottom: 0;
  border-bottom-right-radius: 4px;
  border-bottom-left-radius: 4px;
}
a.list-group-item,
button.list-group-item {
  color: #555;
}
a.list-group-item .list-group-item-heading,
button.list-group-item .list-group-item-heading {
  color: #333;
}
a.list-group-item:hover,
button.list-group-item:hover,
a.list-group-item:focus,
button.list-group-item:focus {
  color: #555;
  text-decoration: none;
  background-color: #f5f5f5;
}
button.list-group-item {
  width: 100%;
  text-align: left;
}
.list-group-item.disabled,
.list-group-item.disabled:hover,
.list-group-item.disabled:focus {
  color: #777;
  cursor: not-allowed;
  background-color: #eee;
}
.list-group-item.disabled .list-group-item-heading,
.list-group-item.disabled:hover .list-group-item-heading,
.list-group-item.disabled:focus .list-group-item-heading {
  color: inherit;
}
.list-group-item.disabled .list-group-item-text,
.list-group-item.disabled:hover .list-group-item-text,
.list-group-item.disabled:focus .list-group-item-text {
  color: #777;
}
.list-group-item.active,
.list-group-item.active:hover,
.list-group-item.active:focus {
  z-index: 2;
  color: #fff;
  background-color: #337ab7;
  border-color: #337ab7;
}
.list-group-item.active .list-group-item-heading,
.list-group-item.active:hover .list-group-item-heading,
.list-group-item.active:focus .list-group-item-heading,
.list-group-item.active .list-group-item-heading > small,
.list-group-item.active:hover .list-group-item-heading > small,
.list-group-item.active:focus .list-group-item-heading > small,
.list-group-item.active .list-group-item-heading > .small,
.list-group-item.active:hover .list-group-item-heading > .small,
.list-group-item.active:focus .list-group-item-heading > .small {
  color: inherit;
}
.list-group-item.active .list-group-item-text,
.list-group-item.active:hover .list-group-item-text,
.list-group-item.active:focus .list-group-item-text {
  color: #c7ddef;
}
.list-group-item-success {
  color: #3c763d;
  background-color: #dff0d8;
}
a.list-group-item-success,
button.list-group-item-success {
  color: #3c763d;
}
a.list-group-item-success .list-group-item-heading,
button.list-group-item-success .list-group-item-heading {
  color: inherit;
}
a.list-group-item-success:hover,
button.list-group-item-success:hover,
a.list-group-item-success:focus,
button.list-group-item-success:focus {
  color: #3c763d;
  background-color: #d0e9c6;
}
a.list-group-item-success.active,
button.list-group-item-success.active,
a.list-group-item-success.active:hover,
button.list-group-item-success.active:hover,
a.list-group-item-success.active:focus,
button.list-group-item-success.active:focus {
  color: #fff;
  background-color: #3c763d;
  border-color: #3c763d;
}
.list-group-item-info {
  color: #31708f;
  background-color: #d9edf7;
}
a.list-group-item-info,
button.list-group-item-info {
  color: #31708f;
}
a.list-group-item-info .list-group-item-heading,
button.list-group-item-info .list-group-item-heading {
  color: inherit;
}
a.list-group-item-info:hover,
button.list-group-item-info:hover,
a.list-group-item-info:focus,
button.list-group-item-info:focus {
  color: #31708f;
  background-color: #c4e3f3;
}
a.list-group-item-info.active,
button.list-group-item-info.active,
a.list-group-item-info.active:hover,
button.list-group-item-info.active:hover,
a.list-group-item-info.active:focus,
button.list-group-item-info.active:focus {
  color: #fff;
  background-color: #31708f;
  border-color: #31708f;
}
.list-group-item-warning {
  color: #8a6d3b;
  background-color: #fcf8e3;
}
a.list-group-item-warning,
button.list-group-item-warning {
  color: #8a6d3b;
}
a.list-group-item-warning .list-group-item-heading,
button.list-group-item-warning .list-group-item-heading {
  color: inherit;
}
a.list-group-item-warning:hover,
button.list-group-item-warning:hover,
a.list-group-item-warning:focus,
button.list-group-item-warning:focus {
  color: #8a6d3b;
  background-color: #faf2cc;
}
a.list-group-item-warning.active,
button.list-group-item-warning.active,
a.list-group-item-warning.active:hover,
button.list-group-item-warning.active:hover,
a.list-group-item-warning.active:focus,
button.list-group-item-warning.active:focus {
  color: #fff;
  background-color: #8a6d3b;
  border-color: #8a6d3b;
}
.list-group-item-danger {
  color: #a94442;
  background-color: #f2dede;
}
a.list-group-item-danger,
button.list-group-item-danger {
  color: #a94442;
}
a.list-group-item-danger .list-group-item-heading,
button.list-group-item-danger .list-group-item-heading {
  color: inherit;
}
a.list-group-item-danger:hover,
button.list-group-item-danger:hover,
a.list-group-item-danger:focus,
button.list-group-item-danger:focus {
  color: #a94442;
  background-color: #ebcccc;
}
a.list-group-item-danger.active,
button.list-group-item-danger.active,
a.list-group-item-danger.active:hover,
button.list-group-item-danger.active:hover,
a.list-group-item-danger.active:focus,
button.list-group-item-danger.active:focus {
  color: #fff;
  background-color: #a94442;
  border-color: #a94442;
}
.list-group-item-heading {
  margin-top: 0;
  margin-bottom: 5px;
}
.list-group-item-text {
  margin-bottom: 0;
  line-height: 1.3;
}
.panel {
  margin-bottom: 20px;
  background-color: #fff;
  border: 1px solid transparent;
  border-radius: 4px;
  -webkit-box-shadow: 0 1px 1px rgba(0, 0, 0, .05);
          box-shadow: 0 1px 1px rgba(0, 0, 0, .05);
}
.panel-body {
  padding: 15px;
}
.panel-heading {
  padding: 10px 15px;
  border-bottom: 1px solid transparent;
  border-top-left-radius: 3px;
  border-top-right-radius: 3px;
}
.panel-heading > .dropdown .dropdown-toggle {
  color: inherit;
}
.panel-title {
  margin-top: 0;
  margin-bottom: 0;
  font-size: 16px;
  color: inherit;
}
.panel-title > a,
.panel-title > small,
.panel-title > .small,
.panel-title > small > a,
.panel-title > .small > a {
  color: inherit;
}
.panel-footer {
  padding: 10px 15px;
  background-color: #f5f5f5;
  border-top: 1px solid #ddd;
  border-bottom-right-radius: 3px;
  border-bottom-left-radius: 3px;
}
.panel > .list-group,
.panel > .panel-collapse > .list-group {
  margin-bottom: 0;
}
.panel > .list-group .list-group-item,
.panel > .panel-collapse > .list-group .list-group-item {
  border-width: 1px 0;
  border-radius: 0;
}
.panel > .list-group:first-child .list-group-item:first-child,
.panel > .panel-collapse > .list-group:first-child .list-group-item:first-child {
  border-top: 0;
  border-top-left-radius: 3px;
  border-top-right-radius: 3px;
}
.panel > .list-group:last-child .list-group-item:last-child,
.panel > .panel-collapse > .list-group:last-child .list-group-item:last-child {
  border-bottom: 0;
  border-bottom-right-radius: 3px;
  border-bottom-left-radius: 3px;
}
.panel > .panel-heading + .panel-collapse > .list-group .list-group-item:first-child {
  border-top-left-radius: 0;
  border-top-right-radius: 0;
}
.panel-heading + .list-group .list-group-item:first-child {
  border-top-width: 0;
}
.list-group + .panel-footer {
  border-top-width: 0;
}
.panel > .table,
.panel > .table-responsive > .table,
.panel > .panel-collapse > .table {
  margin-bottom: 0;
}
.panel > .table caption,
.panel > .table-responsive > .table caption,
.panel > .panel-collapse > .table caption {
  padding-right: 15px;
  padding-left: 15px;
}
.panel > .table:first-child,
.panel > .table-responsive:first-child > .table:first-child {
  border-top-left-radius: 3px;
  border-top-right-radius: 3px;
}
.panel > .table:first-child > thead:first-child > tr:first-child,
.panel > .table-responsive:first-child > .table:first-child > thead:first-child > tr:first-child,
.panel > .table:first-child > tbody:first-child > tr:first-child,
.panel > .table-responsive:first-child > .table:first-child > tbody:first-child > tr:first-child {
  border-top-left-radius: 3px;
  border-top-right-radius: 3px;
}
.panel > .table:first-child > thead:first-child > tr:first-child td:first-child,
.panel > .table-responsive:first-child > .table:first-child > thead:first-child > tr:first-child td:first-child,
.panel > .table:first-child > tbody:first-child > tr:first-child td:first-child,
.panel > .table-responsive:first-child > .table:first-child > tbody:first-child > tr:first-child td:first-child,
.panel > .table:first-child > thead:first-child > tr:first-child th:first-child,
.panel > .table-responsive:first-child > .table:first-child > thead:first-child > tr:first-child th:first-child,
.panel > .table:first-child > tbody:first-child > tr:first-child th:first-child,
.panel > .table-responsive:first-child > .table:first-child > tbody:first-child > tr:first-child th:first-child {
  border-top-left-radius: 3px;
}
.panel > .table:first-child > thead:first-child > tr:first-child td:last-child,
.panel > .table-responsive:first-child > .table:first-child > thead:first-child > tr:first-child td:last-child,
.panel > .table:first-child > tbody:first-child > tr:first-child td:last-child,
.panel > .table-responsive:first-child > .table:first-child > tbody:first-child > tr:first-child td:last-child,
.panel > .table:first-child > thead:first-child > tr:first-child th:last-child,
.panel > .table-responsive:first-child > .table:first-child > thead:first-child > tr:first-child th:last-child,
.panel > .table:first-child > tbody:first-child > tr:first-child th:last-child,
.panel > .table-responsive:first-child > .table:first-child > tbody:first-child > tr:first-child th:last-child {
  border-top-right-radius: 3px;
}
.panel > .table:last-child,
.panel > .table-responsive:last-child > .table:last-child {
  border-bottom-right-radius: 3px;
  border-bottom-left-radius: 3px;
}
.panel > .table:last-child > tbody:last-child > tr:last-child,
.panel > .table-responsive:last-child > .table:last-child > tbody:last-child > tr:last-child,
.panel > .table:last-child > tfoot:last-child > tr:last-child,
.panel > .table-responsive:last-child > .table:last-child > tfoot:last-child > tr:last-child {
  border-bottom-right-radius: 3px;
  border-bottom-left-radius: 3px;
}
.panel > .table:last-child > tbody:last-child > tr:last-child td:first-child,
.panel > .table-responsive:last-child > .table:last-child > tbody:last-child > tr:last-child td:first-child,
.panel > .table:last-child > tfoot:last-child > tr:last-child td:first-child,
.panel > .table-responsive:last-child > .table:last-child > tfoot:last-child > tr:last-child td:first-child,
.panel > .table:last-child > tbody:last-child > tr:last-child th:first-child,
.panel > .table-responsive:last-child > .table:last-child > tbody:last-child > tr:last-child th:first-child,
.panel > .table:last-child > tfoot:last-child > tr:last-child th:first-child,
.panel > .table-responsive:last-child > .table:last-child > tfoot:last-child > tr:last-child th:first-child {
  border-bottom-left-radius: 3px;
}
.panel > .table:last-child > tbody:last-child > tr:last-child td:last-child,
.panel > .table-responsive:last-child > .table:last-child > tbody:last-child > tr:last-child td:last-child,
.panel > .table:last-child > tfoot:last-child > tr:last-child td:last-child,
.panel > .table-responsive:last-child > .table:last-child > tfoot:last-child > tr:last-child td:last-child,
.panel > .table:last-child > tbody:last-child > tr:last-child th:last-child,
.panel > .table-responsive:last-child > .table:last-child > tbody:last-child > tr:last-child th:last-child,
.panel > .table:last-child > tfoot:last-child > tr:last-child th:last-child,
.panel > .table-responsive:last-child > .table:last-child > tfoot:last-child > tr:last-child th:last-child {
  border-bottom-right-radius: 3px;
}
.panel > .panel-body + .table,
.panel > .panel-body + .table-responsive,
.panel > .table + .panel-body,
.panel > .table-responsive + .panel-body {
  border-top: 1px solid #ddd;
}
.panel > .table > tbody:first-child > tr:first-child th,
.panel > .table > tbody:first-child > tr:first-child td {
  border-top: 0;
}
.panel > .table-bordered,
.panel > .table-responsive > .table-bordered {
  border: 0;
}
.panel > .table-bordered > thead > tr > th:first-child,
.panel > .table-responsive > .table-bordered > thead > tr > th:first-child,
.panel > .table-bordered > tbody > tr > th:first-child,
.panel > .table-responsive > .table-bordered > tbody > tr > th:first-child,
.panel > .table-bordered > tfoot > tr > th:first-child,
.panel > .table-responsive > .table-bordered > tfoot > tr > th:first-child,
.panel > .table-bordered > thead > tr > td:first-child,
.panel > .table-responsive > .table-bordered > thead > tr > td:first-child,
.panel > .table-bordered > tbody > tr > td:first-child,
.panel > .table-responsive > .table-bordered > tbody > tr > td:first-child,
.panel > .table-bordered > tfoot > tr > td:first-child,
.panel > .table-responsive > .table-bordered > tfoot > tr > td:first-child {
  border-left: 0;
}
.panel > .table-bordered > thead > tr > th:last-child,
.panel > .table-responsive > .table-bordered > thead > tr > th:last-child,
.panel > .table-bordered > tbody > tr > th:last-child,
.panel > .table-responsive > .table-bordered > tbody > tr > th:last-child,
.panel > .table-bordered > tfoot > tr > th:last-child,
.panel > .table-responsive > .table-bordered > tfoot > tr > th:last-child,
.panel > .table-bordered > thead > tr > td:last-child,
.panel > .table-responsive > .table-bordered > thead > tr > td:last-child,
.panel > .table-bordered > tbody > tr > td:last-child,
.panel > .table-responsive > .table-bordered > tbody > tr > td:last-child,
.panel > .table-bordered > tfoot > tr > td:last-child,
.panel > .table-responsive > .table-bordered > tfoot > tr > td:last-child {
  border-right: 0;
}
.panel > .table-bordered > thead > tr:first-child > td,
.panel > .table-responsive > .table-bordered > thead > tr:first-child > td,
.panel > .table-bordered > tbody > tr:first-child > td,
.panel > .table-responsive > .table-bordered > tbody > tr:first-child > td,
.panel > .table-bordered > thead > tr:first-child > th,
.panel > .table-responsive > .table-bordered > thead > tr:first-child > th,
.panel > .table-bordered > tbody > tr:first-child > th,
.panel > .table-responsive > .table-bordered > tbody > tr:first-child > th {
  border-bottom: 0;
}
.panel > .table-bordered > tbody > tr:last-child > td,
.panel > .table-responsive > .table-bordered > tbody > tr:last-child > td,
.panel > .table-bordered > tfoot > tr:last-child > td,
.panel > .table-responsive > .table-bordered > tfoot > tr:last-child > td,
.panel > .table-bordered > tbody > tr:last-child > th,
.panel > .table-responsive > .table-bordered > tbody > tr:last-child > th,
.panel > .table-bordered > tfoot > tr:last-child > th,
.panel > .table-responsive > .table-bordered > tfoot > tr:last-child > th {
  border-bottom: 0;
}
.panel > .table-responsive {
  margin-bottom: 0;
  border: 0;
}
.panel-group {
  margin-bottom: 20px;
}
.panel-group .panel {
  margin-bottom: 0;
  border-radius: 4px;
}
.panel-group .panel + .panel {
  margin-top: 5px;
}
.panel-group .panel-heading {
  border-bottom: 0;
}
.panel-group .panel-heading + .panel-collapse > .panel-body,
.panel-group .panel-heading + .panel-collapse > .list-group {
  border-top: 1px solid #ddd;
}
.panel-group .panel-footer {
  border-top: 0;
}
.panel-group .panel-footer + .panel-collapse .panel-body {
  border-bottom: 1px solid #ddd;
}
.panel-default {
  border-color: #ddd;
}
.panel-default > .panel-heading {
  color: #333;
  background-color: #f5f5f5;
  border-color: #ddd;
}
.panel-default > .panel-heading + .panel-collapse > .panel-body {
  border-top-color: #ddd;
}
.panel-default > .panel-heading .badge {
  color: #f5f5f5;
  background-color: #333;
}
.panel-default > .panel-footer + .panel-collapse > .panel-body {
  border-bottom-color: #ddd;
}
.panel-primary {
  border-color: #337ab7;
}
.panel-primary > .panel-heading {
  color: #fff;
  background-color: #337ab7;
  border-color: #337ab7;
}
.panel-primary > .panel-heading + .panel-collapse > .panel-body {
  border-top-color: #337ab7;
}
.panel-primary > .panel-heading .badge {
  color: #337ab7;
  background-color: #fff;
}
.panel-primary > .panel-footer + .panel-collapse > .panel-body {
  border-bottom-color: #337ab7;
}
.panel-success {
  border-color: #d6e9c6;
}
.panel-success > .panel-heading {
  color: #3c763d;
  background-color: #dff0d8;
  border-color: #d6e9c6;
}
.panel-success > .panel-heading + .panel-collapse > .panel-body {
  border-top-color: #d6e9c6;
}
.panel-success > .panel-heading .badge {
  color: #dff0d8;
  background-color: #3c763d;
}
.panel-success > .panel-footer + .panel-collapse > .panel-body {
  border-bottom-color: #d6e9c6;
}
.panel-info {
  border-color: #bce8f1;
}
.panel-info > .panel-heading {
  color: #31708f;
  background-color: #d9edf7;
  border-color: #bce8f1;
}
.panel-info > .panel-heading + .panel-collapse > .panel-body {
  border-top-color: #bce8f1;
}
.panel-info > .panel-heading .badge {
  color: #d9edf7;
  background-color: #31708f;
}
.panel-info > .panel-footer + .panel-collapse > .panel-body {
  border-bottom-color: #bce8f1;
}
.panel-warning {
  border-color: #faebcc;
}
.panel-warning > .panel-heading {
  color: #8a6d3b;
  background-color: #fcf8e3;
  border-color: #faebcc;
}
.panel-warning > .panel-heading + .panel-collapse > .panel-body {
  border-top-color: #faebcc;
}
.panel-warning > .panel-heading .badge {
  color: #fcf8e3;
  background-color: #8a6d3b;
}
.panel-warning > .panel-footer + .panel-collapse > .panel-body {
  border-bottom-color: #faebcc;
}
.panel-danger {
  border-color: #ebccd1;
}
.panel-danger > .panel-heading {
  color: #a94442;
  background-color: #f2dede;
  border-color: #ebccd1;
}
.panel-danger > .panel-heading + .panel-collapse > .panel-body {
  border-top-color: #ebccd1;
}
.panel-danger > .panel-heading .badge {
  color: #f2dede;
  background-color: #a94442;
}
.panel-danger > .panel-footer + .panel-collapse > .panel-body {
  border-bottom-color: #ebccd1;
}
.embed-responsive {
  position: relative;
  display: block;
  height: 0;
  padding: 0;
  overflow: hidden;
}
.embed-responsive .embed-responsive-item,
.embed-responsive iframe,
.embed-responsive embed,
.embed-responsive object,
.embed-responsive video {
  position: absolute;
  top: 0;
  bottom: 0;
  left: 0;
  width: 100%;
  height: 100%;
  border: 0;
}
.embed-responsive-16by9 {
  padding-bottom: 56.25%;
}
.embed-responsive-4by3 {
  padding-bottom: 75%;
}
.well {
  min-height: 20px;
  padding: 19px;
  margin-bottom: 20px;
  background-color: #f5f5f5;
  border: 1px solid #e3e3e3;
  border-radius: 4px;
  -webkit-box-shadow: inset 0 1px 1px rgba(0, 0, 0, .05);
          box-shadow: inset 0 1px 1px rgba(0, 0, 0, .05);
}
.well blockquote {
  border-color: #ddd;
  border-color: rgba(0, 0, 0, .15);
}
.well-lg {
  padding: 24px;
  border-radius: 6px;
}
.well-sm {
  padding: 9px;
  border-radius: 3px;
}
.close {
  float: right;
  font-size: 21px;
  font-weight: bold;
  line-height: 1;
  color: #000;
  text-shadow: 0 1px 0 #fff;
  filter: alpha(opacity=20);
  opacity: .2;
}
.close:hover,
.close:focus {
  color: #000;
  text-decoration: none;
  cursor: pointer;
  filter: alpha(opacity=50);
  opacity: .5;
}
button.close {
  -webkit-appearance: none;
  padding: 0;
  cursor: pointer;
  background: transparent;
  border: 0;
}
.modal-open {
  overflow: hidden;
}
.modal {
  position: fixed;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  z-index: 1050;
  display: none;
  overflow: hidden;
  -webkit-overflow-scrolling: touch;
  outline: 0;
}
.modal.fade .modal-dialog {
  -webkit-transition: -webkit-transform .3s ease-out;
       -o-transition:      -o-transform .3s ease-out;
          transition:         transform .3s ease-out;
  -webkit-transform: translate(0, -25%);
      -ms-transform: translate(0, -25%);
       -o-transform: translate(0, -25%);
          transform: translate(0, -25%);
}
.modal.in .modal-dialog {
  -webkit-transform: translate(0, 0);
      -ms-transform: translate(0, 0);
       -o-transform: translate(0, 0);
          transform: translate(0, 0);
}
.modal-open .modal {
  overflow-x: hidden;
  overflow-y: auto;
}
.modal-dialog {
  position: relative;
  width: auto;
  margin: 10px;
}
.modal-content {
  position: relative;
  background-color: #fff;
  -webkit-background-clip: padding-box;
          background-clip: padding-box;
  border: 1px solid #999;
  border: 1px solid rgba(0, 0, 0, .2);
  border-radius: 6px;
  outline: 0;
  -webkit-box-shadow: 0 3px 9px rgba(0, 0, 0, .5);
          box-shadow: 0 3px 9px rgba(0, 0, 0, .5);
}
.modal-backdrop {
  position: fixed;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  z-index: 1040;
  background-color: #000;
}
.modal-backdrop.fade {
  filter: alpha(opacity=0);
  opacity: 0;
}
.modal-backdrop.in {
  filter: alpha(opacity=50);
  opacity: .5;
}
.modal-header {
  padding: 15px;
  border-bottom: 1px solid #e5e5e5;
}
.modal-header .close {
  margin-top: -2px;
}
.modal-title {
  margin: 0;
  line-height: 1.42857143;
}
.modal-body {
  position: relative;
  padding: 15px;
}
.modal-footer {
  padding: 15px;
  text-align: right;
  border-top: 1px solid #e5e5e5;
}
.modal-footer .btn + .btn {
  margin-bottom: 0;
  margin-left: 5px;
}
.modal-footer .btn-group .btn + .btn {
  margin-left: -1px;
}
.modal-footer .btn-block + .btn-block {
  margin-left: 0;
}
.modal-scrollbar-measure {
  position: absolute;
  top: -9999px;
  width: 50px;
  height: 50px;
  overflow: scroll;
}
@media (min-width: 768px) {
  .modal-dialog {
    width: 600px;
    margin: 30px auto;
  }
  .modal-content {
    -webkit-box-shadow: 0 5px 15px rgba(0, 0, 0, .5);
            box-shadow: 0 5px 15px rgba(0, 0, 0, .5);
  }
  .modal-sm {
    width: 300px;
  }
}
@media (min-width: 992px) {
  .modal-lg {
    width: 900px;
  }
}
.tooltip {
  position: absolute;
  z-index: 1070;
  display: block;
  font-family: "Helvetica Neue", Helvetica, Arial, sans-serif;
  font-size: 12px;
  font-style: normal;
  font-weight: normal;
  line-height: 1.42857143;
  text-align: left;
  text-align: start;
  text-decoration: none;
  text-shadow: none;
  text-transform: none;
  letter-spacing: normal;
  word-break: normal;
  word-spacing: normal;
  word-wrap: normal;
  white-space: normal;
  filter: alpha(opacity=0);
  opacity: 0;

  line-break: auto;
}
.tooltip.in {
  filter: alpha(opacity=90);
  opacity: .9;
}
.tooltip.top {
  padding: 5px 0;
  margin-top: -3px;
}
.tooltip.right {
  padding: 0 5px;
  margin-left: 3px;
}
.tooltip.bottom {
  padding: 5px 0;
  margin-top: 3px;
}
.tooltip.left {
  padding: 0 5px;
  margin-left: -3px;
}
.tooltip-inner {
  max-width: 200px;
  padding: 3px 8px;
  color: #fff;
  text-align: center;
  background-color: #000;
  border-radius: 4px;
}
.tooltip-arrow {
  position: absolute;
  width: 0;
  height: 0;
  border-color: transparent;
  border-style: solid;
}
.tooltip.top .tooltip-arrow {
  bottom: 0;
  left: 50%;
  margin-left: -5px;
  border-width: 5px 5px 0;
  border-top-color: #000;
}
.tooltip.top-left .tooltip-arrow {
  right: 5px;
  bottom: 0;
  margin-bottom: -5px;
  border-width: 5px 5px 0;
  border-top-color: #000;
}
.tooltip.top-right .tooltip-arrow {
  bottom: 0;
  left: 5px;
  margin-bottom: -5px;
  border-width: 5px 5px 0;
  border-top-color: #000;
}
.tooltip.right .tooltip-arrow {
  top: 50%;
  left: 0;
  margin-top: -5px;
  border-width: 5px 5px 5px 0;
  border-right-color: #000;
}
.tooltip.left .tooltip-arrow {
  top: 50%;
  right: 0;
  margin-top: -5px;
  border-width: 5px 0 5px 5px;
  border-left-color: #000;
}
.tooltip.bottom .tooltip-arrow {
  top: 0;
  left: 50%;
  margin-left: -5px;
  border-width: 0 5px 5px;
  border-bottom-color: #000;
}
.tooltip.bottom-left .tooltip-arrow {
  top: 0;
  right: 5px;
  margin-top: -5px;
  border-width: 0 5px 5px;
  border-bottom-color: #000;
}
.tooltip.bottom-right .tooltip-arrow {
  top: 0;
  left: 5px;
  margin-top: -5px;
  border-width: 0 5px 5px;
  border-bottom-color: #000;
}
.popover {
  position: absolute;
  top: 0;
  left: 0;
  z-index: 1060;
  display: none;
  max-width: 276px;
  padding: 1px;
  font-family: "Helvetica Neue", Helvetica, Arial, sans-serif;
  font-size: 14px;
  font-style: normal;
  font-weight: normal;
  line-height: 1.42857143;
  text-align: left;
  text-align: start;
  text-decoration: none;
  text-shadow: none;
  text-transform: none;
  letter-spacing: normal;
  word-break: normal;
  word-spacing: normal;
  word-wrap: normal;
  white-space: normal;
  background-color: #fff;
  -webkit-background-clip: padding-box;
          background-clip: padding-box;
  border: 1px solid #ccc;
  border: 1px solid rgba(0, 0, 0, .2);
  border-radius: 6px;
  -webkit-box-shadow: 0 5px 10px rgba(0, 0, 0, .2);
          box-shadow: 0 5px 10px rgba(0, 0, 0, .2);

  line-break: auto;
}
.popover.top {
  margin-top: -10px;
}
.popover.right {
  margin-left: 10px;
}
.popover.bottom {
  margin-top: 10px;
}
.popover.left {
  margin-left: -10px;
}
.popover-title {
  padding: 8px 14px;
  margin: 0;
  font-size: 14px;
  background-color: #f7f7f7;
  border-bottom: 1px solid #ebebeb;
  border-radius: 5px 5px 0 0;
}
.popover-content {
  padding: 9px 14px;
}
.popover > .arrow,
.popover > .arrow:after {
  position: absolute;
  display: block;
  width: 0;
  height: 0;
  border-color: transparent;
  border-style: solid;
}
.popover > .arrow {
  border-width: 11px;
}
.popover > .arrow:after {
  content: "";
  border-width: 10px;
}
.popover.top > .arrow {
  bottom: -11px;
  left: 50%;
  margin-left: -11px;
  border-top-color: #999;
  border-top-color: rgba(0, 0, 0, .25);
  border-bottom-width: 0;
}
.popover.top > .arrow:after {
  bottom: 1px;
  margin-left: -10px;
  content: " ";
  border-top-color: #fff;
  border-bottom-width: 0;
}
.popover.right > .arrow {
  top: 50%;
  left: -11px;
  margin-top: -11px;
  border-right-color: #999;
  border-right-color: rgba(0, 0, 0, .25);
  border-left-width: 0;
}
.popover.right > .arrow:after {
  bottom: -10px;
  left: 1px;
  content: " ";
  border-right-color: #fff;
  border-left-width: 0;
}
.popover.bottom > .arrow {
  top: -11px;
  left: 50%;
  margin-left: -11px;
  border-top-width: 0;
  border-bottom-color: #999;
  border-bottom-color: rgba(0, 0, 0, .25);
}
.popover.bottom > .arrow:after {
  top: 1px;
  margin-left: -10px;
  content: " ";
  border-top-width: 0;
  border-bottom-color: #fff;
}
.popover.left > .arrow {
  top: 50%;
  right: -11px;
  margin-top: -11px;
  border-right-width: 0;
  border-left-color: #999;
  border-left-color: rgba(0, 0, 0, .25);
}
.popover.left > .arrow:after {
  right: 1px;
  bottom: -10px;
  content: " ";
  border-right-width: 0;
  border-left-color: #fff;
}
.carousel {
  position: relative;
}
.carousel-inner {
  position: relative;
  width: 100%;
  overflow: hidden;
}
.carousel-inner > .item {
  position: relative;
  display: none;
  -webkit-transition: .6s ease-in-out left;
       -o-transition: .6s ease-in-out left;
          transition: .6s ease-in-out left;
}
.carousel-inner > .item > img,
.carousel-inner > .item > a > img {
  line-height: 1;
}
@media all and (transform-3d), (-webkit-transform-3d) {
  .carousel-inner > .item {
    -webkit-transition: -webkit-transform .6s ease-in-out;
         -o-transition:      -o-transform .6s ease-in-out;
            transition:         transform .6s ease-in-out;

    -webkit-backface-visibility: hidden;
            backface-visibility: hidden;
    -webkit-perspective: 1000px;
            perspective: 1000px;
  }
  .carousel-inner > .item.next,
  .carousel-inner > .item.active.right {
    left: 0;
    -webkit-transform: translate3d(100%, 0, 0);
            transform: translate3d(100%, 0, 0);
  }
  .carousel-inner > .item.prev,
  .carousel-inner > .item.active.left {
    left: 0;
    -webkit-transform: translate3d(-100%, 0, 0);
            transform: translate3d(-100%, 0, 0);
  }
  .carousel-inner > .item.next.left,
  .carousel-inner > .item.prev.right,
  .carousel-inner > .item.active {
    left: 0;
    -webkit-transform: translate3d(0, 0, 0);
            transform: translate3d(0, 0, 0);
  }
}
.carousel-inner > .active,
.carousel-inner > .next,
.carousel-inner > .prev {
  display: block;
}
.carousel-inner > .active {
  left: 0;
}
.carousel-inner > .next,
.carousel-inner > .prev {
  position: absolute;
  top: 0;
  width: 100%;
}
.carousel-inner > .next {
  left: 100%;
}
.carousel-inner > .prev {
  left: -100%;
}
.carousel-inner > .next.left,
.carousel-inner > .prev.right {
  left: 0;
}
.carousel-inner > .active.left {
  left: -100%;
}
.carousel-inner > .active.right {
  left: 100%;
}
.carousel-control {
  position: absolute;
  top: 0;
  bottom: 0;
  left: 0;
  width: 15%;
  font-size: 20px;
  color: #fff;
  text-align: center;
  text-shadow: 0 1px 2px rgba(0, 0, 0, .6);
  background-color: rgba(0, 0, 0, 0);
  filter: alpha(opacity=50);
  opacity: .5;
}
.carousel-control.left {
  background-image: -webkit-linear-gradient(left, rgba(0, 0, 0, .5) 0%, rgba(0, 0, 0, .0001) 100%);
  background-image:      -o-linear-gradient(left, rgba(0, 0, 0, .5) 0%, rgba(0, 0, 0, .0001) 100%);
  background-image: -webkit-gradient(linear, left top, right top, from(rgba(0, 0, 0, .5)), to(rgba(0, 0, 0, .0001)));
  background-image:         linear-gradient(to right, rgba(0, 0, 0, .5) 0%, rgba(0, 0, 0, .0001) 100%);
  filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='#80000000', endColorstr='#00000000', GradientType=1);
  background-repeat: repeat-x;
}
.carousel-control.right {
  right: 0;
  left: auto;
  background-image: -webkit-linear-gradient(left, rgba(0, 0, 0, .0001) 0%, rgba(0, 0, 0, .5) 100%);
  background-image:      -o-linear-gradient(left, rgba(0, 0, 0, .0001) 0%, rgba(0, 0, 0, .5) 100%);
  background-image: -webkit-gradient(linear, left top, right top, from(rgba(0, 0, 0, .0001)), to(rgba(0, 0, 0, .5)));
  background-image:         linear-gradient(to right, rgba(0, 0, 0, .0001) 0%, rgba(0, 0, 0, .5) 100%);
  filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='#00000000', endColorstr='#80000000', GradientType=1);
  background-repeat: repeat-x;
}
.carousel-control:hover,
.carousel-control:focus {
  color: #fff;
  text-decoration: none;
  filter: alpha(opacity=90);
  outline: 0;
  opacity: .9;
}
.carousel-control .icon-prev,
.carousel-control .icon-next,
.carousel-control .glyphicon-chevron-left,
.carousel-control .glyphicon-chevron-right {
  position: absolute;
  top: 50%;
  z-index: 5;
  display: inline-block;
  margin-top: -10px;
}
.carousel-control .icon-prev,
.carousel-control .glyphicon-chevron-left {
  left: 50%;
  margin-left: -10px;
}
.carousel-control .icon-next,
.carousel-control .glyphicon-chevron-right {
  right: 50%;
  margin-right: -10px;
}
.carousel-control .icon-prev,
.carousel-control .icon-next {
  width: 20px;
  height: 20px;
  font-family: serif;
  line-height: 1;
}
.carousel-control .icon-prev:before {
  content: '\2039';
}
.carousel-control .icon-next:before {
  content: '\203a';
}
.carousel-indicators {
  position: absolute;
  bottom: 10px;
  left: 50%;
  z-index: 15;
  width: 60%;
  padding-left: 0;
  margin-left: -30%;
  text-align: center;
  list-style: none;
}
.carousel-indicators li {
  display: inline-block;
  width: 10px;
  height: 10px;
  margin: 1px;
  text-indent: -999px;
  cursor: pointer;
  background-color: #000 \9;
  background-color: rgba(0, 0, 0, 0);
  border: 1px solid #fff;
  border-radius: 10px;
}
.carousel-indicators .active {
  width: 12px;
  height: 12px;
  margin: 0;
  background-color: #fff;
}
.carousel-caption {
  position: absolute;
  right: 15%;
  bottom: 20px;
  left: 15%;
  z-index: 10;
  padding-top: 20px;
  padding-bottom: 20px;
  color: #fff;
  text-align: center;
  text-shadow: 0 1px 2px rgba(0, 0, 0, .6);
}
.carousel-caption .btn {
  text-shadow: none;
}
@media screen and (min-width: 768px) {
  .carousel-control .glyphicon-chevron-left,
  .carousel-control .glyphicon-chevron-right,
  .carousel-control .icon-prev,
  .carousel-control .icon-next {
    width: 30px;
    height: 30px;
    margin-top: -10px;
    font-size: 30px;
  }
  .carousel-control .glyphicon-chevron-left,
  .carousel-control .icon-prev {
    margin-left: -10px;
  }
  .carousel-control .glyphicon-chevron-right,
  .carousel-control .icon-next {
    margin-right: -10px;
  }
  .carousel-caption {
    right: 20%;
    left: 20%;
    padding-bottom: 30px;
  }
  .carousel-indicators {
    bottom: 20px;
  }
}
.clearfix:before,
.clearfix:after,
.dl-horizontal dd:before,
.dl-horizontal dd:after,
.container:before,
.container:after,
.container-fluid:before,
.container-fluid:after,
.row:before,
.row:after,
.form-horizontal .form-group:before,
.form-horizontal .form-group:after,
.btn-toolbar:before,
.btn-toolbar:after,
.btn-group-vertical > .btn-group:before,
.btn-group-vertical > .btn-group:after,
.nav:before,
.nav:after,
.navbar:before,
.navbar:after,
.navbar-header:before,
.navbar-header:after,
.navbar-collapse:before,
.navbar-collapse:after,
.pager:before,
.pager:after,
.panel-body:before,
.panel-body:after,
.modal-header:before,
.modal-header:after,
.modal-footer:before,
.modal-footer:after {
  display: table;
  content: " ";
}
.clearfix:after,
.dl-horizontal dd:after,
.container:after,
.container-fluid:after,
.row:after,
.form-horizontal .form-group:after,
.btn-toolbar:after,
.btn-group-vertical > .btn-group:after,
.nav:after,
.navbar:after,
.navbar-header:after,
.navbar-collapse:after,
.pager:after,
.panel-body:after,
.modal-header:after,
.modal-footer:after {
  clear: both;
}
.center-block {
  display: block;
  margin-right: auto;
  margin-left: auto;
}
.pull-right {
  float: right !important;
}
.pull-left {
  float: left !important;
}
.hide {
  display: none !important;
}
.show {
  display: block !important;
}
.invisible {
  visibility: hidden;
}
.text-hide {
  font: 0/0 a;
  color: transparent;
  text-shadow: none;
  background-color: transparent;
  border: 0;
}
.hidden {
  display: none !important;
}
.affix {
  position: fixed;
}
@-ms-viewport {
  width: device-width;
}
.visible-xs,
.visible-sm,
.visible-md,
.visible-lg {
  display: none !important;
}
.visible-xs-block,
.visible-xs-inline,
.visible-xs-inline-block,
.visible-sm-block,
.visible-sm-inline,
.visible-sm-inline-block,
.visible-md-block,
.visible-md-inline,
.visible-md-inline-block,
.visible-lg-block,
.visible-lg-inline,
.visible-lg-inline-block {
  display: none !important;
}
@media (max-width: 767px) {
  .visible-xs {
    display: block !important;
  }
  table.visible-xs {
    display: table !important;
  }
  tr.visible-xs {
    display: table-row !important;
  }
  th.visible-xs,
  td.visible-xs {
    display: table-cell !important;
  }
}
@media (max-width: 767px) {
  .visible-xs-block {
    display: block !important;
  }
}
@media (max-width: 767px) {
  .visible-xs-inline {
    display: inline !important;
  }
}
@media (max-width: 767px) {
  .visible-xs-inline-block {
    display: inline-block !important;
  }
}
@media (min-width: 768px) and (max-width: 991px) {
  .visible-sm {
    display: block !important;
  }
  table.visible-sm {
    display: table !important;
  }
  tr.visible-sm {
    display: table-row !important;
  }
  th.visible-sm,
  td.visible-sm {
    display: table-cell !important;
  }
}
@media (min-width: 768px) and (max-width: 991px) {
  .visible-sm-block {
    display: block !important;
  }
}
@media (min-width: 768px) and (max-width: 991px) {
  .visible-sm-inline {
    display: inline !important;
  }
}
@media (min-width: 768px) and (max-width: 991px) {
  .visible-sm-inline-block {
    display: inline-block !important;
  }
}
@media (min-width: 992px) and (max-width: 1199px) {
  .visible-md {
    display: block !important;
  }
  table.visible-md {
    display: table !important;
  }
  tr.visible-md {
    display: table-row !important;
  }
  th.visible-md,
  td.visible-md {
    display: table-cell !important;
  }
}
@media (min-width: 992px) and (max-width: 1199px) {
  .visible-md-block {
    display: block !important;
  }
}
@media (min-width: 992px) and (max-width: 1199px) {
  .visible-md-inline {
    display: inline !important;
  }
}
@media (min-width: 992px) and (max-width: 1199px) {
  .visible-md-inline-block {
    display: inline-block !important;
  }
}
@media (min-width: 1200px) {
  .visible-lg {
    display: block !important;
  }
  table.visible-lg {
    display: table !important;
  }
  tr.visible-lg {
    display: table-row !important;
  }
  th.visible-lg,
  td.visible-lg {
    display: table-cell !important;
  }
}
@media (min-width: 1200px) {
  .visible-lg-block {
    display: block !important;
  }
}
@media (min-width: 1200px) {
  .visible-lg-inline {
    display: inline !important;
  }
}
@media (min-width: 1200px) {
  .visible-lg-inline-block {
    display: inline-block !important;
  }
}
@media (max-width: 767px) {
  .hidden-xs {
    display: none !important;
  }
}
@media (min-width: 768px) and (max-width: 991px) {
  .hidden-sm {
    display: none !important;
  }
}
@media (min-width: 992px) and (max-width: 1199px) {
  .hidden-md {
    display: none !important;
  }
}
@media (min-width: 1200px) {
  .hidden-lg {
    display: none !important;
  }
}
.visible-print {
  display: none !important;
}
@media print {
  .visible-print {
    display: block !important;
  }
  table.visible-print {
    display: table !important;
  }
  tr.visible-print {
    display: table-row !important;
  }
  th.visible-print,
  td.visible-print {
    display: table-cell !important;
  }
}
.visible-print-block {
  display: none !important;
}
@media print {
  .visible-print-block {
    display: block !important;
  }
}
.visible-print-inline {
  display: none !important;
}
@media print {
  .visible-print-inline {
    display: inline !important;
  }
}
.visible-print-inline-block {
  display: none !important;
}
@media print {
  .visible-print-inline-block {
    display: inline-block !important;
  }
}
@media print {
  .hidden-print {
    display: none !important;
  }
}
/*# sourceMappingURL=bootstrap.css.map */


================================================================================
END: D:\QiEOS\apps\web\public\builtbyrays_public\builtbyrays.com\public\css\bootstrap.css
================================================================================


================================================================================
FILE: D:\QiEOS\apps\web\public\builtbyrays_public\builtbyrays.com\public\css\bootstrap.min.css
================================================================================

/*!
 * Bootstrap v3.3.7 (http://getbootstrap.com)
 * Copyright 2011-2016 Twitter, Inc.
 * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)
 *//*! normalize.css v3.0.3 | MIT License | github.com/necolas/normalize.css */html{font-family:sans-serif;-webkit-text-size-adjust:100%;-ms-text-size-adjust:100%}body{margin:0}article,aside,details,figcaption,figure,footer,header,hgroup,main,menu,nav,section,summary{display:block}audio,canvas,progress,video{display:inline-block;vertical-align:baseline}audio:not([controls]){display:none;height:0}[hidden],template{display:none}a{background-color:transparent}a:active,a:hover{outline:0}abbr[title]{border-bottom:1px dotted}b,strong{font-weight:700}dfn{font-style:italic}h1{margin:.67em 0;font-size:2em}mark{color:#000;background:#ff0}small{font-size:80%}sub,sup{position:relative;font-size:75%;line-height:0;vertical-align:baseline}sup{top:-.5em}sub{bottom:-.25em}img{border:0}svg:not(:root){overflow:hidden}figure{margin:1em 40px}hr{height:0;-webkit-box-sizing:content-box;-moz-box-sizing:content-box;box-sizing:content-box}pre{overflow:auto}code,kbd,pre,samp{font-family:monospace,monospace;font-size:1em}button,input,optgroup,select,textarea{margin:0;font:inherit;color:inherit}button{overflow:visible}button,select{text-transform:none}button,html input[type=button],input[type=reset],input[type=submit]{-webkit-appearance:button;cursor:pointer}button[disabled],html input[disabled]{cursor:default}button::-moz-focus-inner,input::-moz-focus-inner{padding:0;border:0}input{line-height:normal}input[type=checkbox],input[type=radio]{-webkit-box-sizing:border-box;-moz-box-sizing:border-box;box-sizing:border-box;padding:0}input[type=number]::-webkit-inner-spin-button,input[type=number]::-webkit-outer-spin-button{height:auto}input[type=search]{-webkit-box-sizing:content-box;-moz-box-sizing:content-box;box-sizing:content-box;-webkit-appearance:textfield}input[type=search]::-webkit-search-cancel-button,input[type=search]::-webkit-search-decoration{-webkit-appearance:none}fieldset{padding:.35em .625em .75em;margin:0 2px;border:1px solid silver}legend{padding:0;border:0}textarea{overflow:auto}optgroup{font-weight:700}table{border-spacing:0;border-collapse:collapse}td,th{padding:0}/*! Source: https://github.com/h5bp/html5-boilerplate/blob/master/src/css/main.css */@media print{*,:after,:before{color:#000!important;text-shadow:none!important;background:0 0!important;-webkit-box-shadow:none!important;box-shadow:none!important}a,a:visited{text-decoration:underline}a[href]:after{content:" (" attr(href) ")"}abbr[title]:after{content:" (" attr(title) ")"}a[href^="javascript:"]:after,a[href^="#"]:after{content:""}blockquote,pre{border:1px solid #999;page-break-inside:avoid}thead{display:table-header-group}img,tr{page-break-inside:avoid}img{max-width:100%!important}h2,h3,p{orphans:3;widows:3}h2,h3{page-break-after:avoid}.navbar{display:none}.btn>.caret,.dropup>.btn>.caret{border-top-color:#000!important}.label{border:1px solid #000}.table{border-collapse:collapse!important}.table td,.table th{background-color:#fff!important}.table-bordered td,.table-bordered th{border:1px solid #ddd!important}}@font-face{font-family:'Glyphicons Halflings';src:url(../fonts/glyphicons-halflings-regular.eot);src:url(../fonts/glyphicons-halflings-regular.eot?#iefix) format('embedded-opentype'),url(../fonts/glyphicons-halflings-regular.woff2) format('woff2'),url(../fonts/glyphicons-halflings-regular.woff) format('woff'),url(../fonts/glyphicons-halflings-regular.ttf) format('truetype'),url(../fonts/glyphicons-halflings-regular.svg#glyphicons_halflingsregular) format('svg')}.glyphicon{position:relative;top:1px;display:inline-block;font-family:'Glyphicons Halflings';font-style:normal;font-weight:400;line-height:1;-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale}.glyphicon-asterisk:before{content:"\002a"}.glyphicon-plus:before{content:"\002b"}.glyphicon-eur:before,.glyphicon-euro:before{content:"\20ac"}.glyphicon-minus:before{content:"\2212"}.glyphicon-cloud:before{content:"\2601"}.glyphicon-envelope:before{content:"\2709"}.glyphicon-pencil:before{content:"\270f"}.glyphicon-glass:before{content:"\e001"}.glyphicon-music:before{content:"\e002"}.glyphicon-search:before{content:"\e003"}.glyphicon-heart:before{content:"\e005"}.glyphicon-star:before{content:"\e006"}.glyphicon-star-empty:before{content:"\e007"}.glyphicon-user:before{content:"\e008"}.glyphicon-film:before{content:"\e009"}.glyphicon-th-large:before{content:"\e010"}.glyphicon-th:before{content:"\e011"}.glyphicon-th-list:before{content:"\e012"}.glyphicon-ok:before{content:"\e013"}.glyphicon-remove:before{content:"\e014"}.glyphicon-zoom-in:before{content:"\e015"}.glyphicon-zoom-out:before{content:"\e016"}.glyphicon-off:before{content:"\e017"}.glyphicon-signal:before{content:"\e018"}.glyphicon-cog:before{content:"\e019"}.glyphicon-trash:before{content:"\e020"}.glyphicon-home:before{content:"\e021"}.glyphicon-file:before{content:"\e022"}.glyphicon-time:before{content:"\e023"}.glyphicon-road:before{content:"\e024"}.glyphicon-download-alt:before{content:"\e025"}.glyphicon-download:before{content:"\e026"}.glyphicon-upload:before{content:"\e027"}.glyphicon-inbox:before{content:"\e028"}.glyphicon-play-circle:before{content:"\e029"}.glyphicon-repeat:before{content:"\e030"}.glyphicon-refresh:before{content:"\e031"}.glyphicon-list-alt:before{content:"\e032"}.glyphicon-lock:before{content:"\e033"}.glyphicon-flag:before{content:"\e034"}.glyphicon-headphones:before{content:"\e035"}.glyphicon-volume-off:before{content:"\e036"}.glyphicon-volume-down:before{content:"\e037"}.glyphicon-volume-up:before{content:"\e038"}.glyphicon-qrcode:before{content:"\e039"}.glyphicon-barcode:before{content:"\e040"}.glyphicon-tag:before{content:"\e041"}.glyphicon-tags:before{content:"\e042"}.glyphicon-book:before{content:"\e043"}.glyphicon-bookmark:before{content:"\e044"}.glyphicon-print:before{content:"\e045"}.glyphicon-camera:before{content:"\e046"}.glyphicon-font:before{content:"\e047"}.glyphicon-bold:before{content:"\e048"}.glyphicon-italic:before{content:"\e049"}.glyphicon-text-height:before{content:"\e050"}.glyphicon-text-width:before{content:"\e051"}.glyphicon-align-left:before{content:"\e052"}.glyphicon-align-center:before{content:"\e053"}.glyphicon-align-right:before{content:"\e054"}.glyphicon-align-justify:before{content:"\e055"}.glyphicon-list:before{content:"\e056"}.glyphicon-indent-left:before{content:"\e057"}.glyphicon-indent-right:before{content:"\e058"}.glyphicon-facetime-video:before{content:"\e059"}.glyphicon-picture:before{content:"\e060"}.glyphicon-map-marker:before{content:"\e062"}.glyphicon-adjust:before{content:"\e063"}.glyphicon-tint:before{content:"\e064"}.glyphicon-edit:before{content:"\e065"}.glyphicon-share:before{content:"\e066"}.glyphicon-check:before{content:"\e067"}.glyphicon-move:before{content:"\e068"}.glyphicon-step-backward:before{content:"\e069"}.glyphicon-fast-backward:before{content:"\e070"}.glyphicon-backward:before{content:"\e071"}.glyphicon-play:before{content:"\e072"}.glyphicon-pause:before{content:"\e073"}.glyphicon-stop:before{content:"\e074"}.glyphicon-forward:before{content:"\e075"}.glyphicon-fast-forward:before{content:"\e076"}.glyphicon-step-forward:before{content:"\e077"}.glyphicon-eject:before{content:"\e078"}.glyphicon-chevron-left:before{content:"\e079"}.glyphicon-chevron-right:before{content:"\e080"}.glyphicon-plus-sign:before{content:"\e081"}.glyphicon-minus-sign:before{content:"\e082"}.glyphicon-remove-sign:before{content:"\e083"}.glyphicon-ok-sign:before{content:"\e084"}.glyphicon-question-sign:before{content:"\e085"}.glyphicon-info-sign:before{content:"\e086"}.glyphicon-screenshot:before{content:"\e087"}.glyphicon-remove-circle:before{content:"\e088"}.glyphicon-ok-circle:before{content:"\e089"}.glyphicon-ban-circle:before{content:"\e090"}.glyphicon-arrow-left:before{content:"\e091"}.glyphicon-arrow-right:before{content:"\e092"}.glyphicon-arrow-up:before{content:"\e093"}.glyphicon-arrow-down:before{content:"\e094"}.glyphicon-share-alt:before{content:"\e095"}.glyphicon-resize-full:before{content:"\e096"}.glyphicon-resize-small:before{content:"\e097"}.glyphicon-exclamation-sign:before{content:"\e101"}.glyphicon-gift:before{content:"\e102"}.glyphicon-leaf:before{content:"\e103"}.glyphicon-fire:before{content:"\e104"}.glyphicon-eye-open:before{content:"\e105"}.glyphicon-eye-close:before{content:"\e106"}.glyphicon-warning-sign:before{content:"\e107"}.glyphicon-plane:before{content:"\e108"}.glyphicon-calendar:before{content:"\e109"}.glyphicon-random:before{content:"\e110"}.glyphicon-comment:before{content:"\e111"}.glyphicon-magnet:before{content:"\e112"}.glyphicon-chevron-up:before{content:"\e113"}.glyphicon-chevron-down:before{content:"\e114"}.glyphicon-retweet:before{content:"\e115"}.glyphicon-shopping-cart:before{content:"\e116"}.glyphicon-folder-close:before{content:"\e117"}.glyphicon-folder-open:before{content:"\e118"}.glyphicon-resize-vertical:before{content:"\e119"}.glyphicon-resize-horizontal:before{content:"\e120"}.glyphicon-hdd:before{content:"\e121"}.glyphicon-bullhorn:before{content:"\e122"}.glyphicon-bell:before{content:"\e123"}.glyphicon-certificate:before{content:"\e124"}.glyphicon-thumbs-up:before{content:"\e125"}.glyphicon-thumbs-down:before{content:"\e126"}.glyphicon-hand-right:before{content:"\e127"}.glyphicon-hand-left:before{content:"\e128"}.glyphicon-hand-up:before{content:"\e129"}.glyphicon-hand-down:before{content:"\e130"}.glyphicon-circle-arrow-right:before{content:"\e131"}.glyphicon-circle-arrow-left:before{content:"\e132"}.glyphicon-circle-arrow-up:before{content:"\e133"}.glyphicon-circle-arrow-down:before{content:"\e134"}.glyphicon-globe:before{content:"\e135"}.glyphicon-wrench:before{content:"\e136"}.glyphicon-tasks:before{content:"\e137"}.glyphicon-filter:before{content:"\e138"}.glyphicon-briefcase:before{content:"\e139"}.glyphicon-fullscreen:before{content:"\e140"}.glyphicon-dashboard:before{content:"\e141"}.glyphicon-paperclip:before{content:"\e142"}.glyphicon-heart-empty:before{content:"\e143"}.glyphicon-link:before{content:"\e144"}.glyphicon-phone:before{content:"\e145"}.glyphicon-pushpin:before{content:"\e146"}.glyphicon-usd:before{content:"\e148"}.glyphicon-gbp:before{content:"\e149"}.glyphicon-sort:before{content:"\e150"}.glyphicon-sort-by-alphabet:before{content:"\e151"}.glyphicon-sort-by-alphabet-alt:before{content:"\e152"}.glyphicon-sort-by-order:before{content:"\e153"}.glyphicon-sort-by-order-alt:before{content:"\e154"}.glyphicon-sort-by-attributes:before{content:"\e155"}.glyphicon-sort-by-attributes-alt:before{content:"\e156"}.glyphicon-unchecked:before{content:"\e157"}.glyphicon-expand:before{content:"\e158"}.glyphicon-collapse-down:before{content:"\e159"}.glyphicon-collapse-up:before{content:"\e160"}.glyphicon-log-in:before{content:"\e161"}.glyphicon-flash:before{content:"\e162"}.glyphicon-log-out:before{content:"\e163"}.glyphicon-new-window:before{content:"\e164"}.glyphicon-record:before{content:"\e165"}.glyphicon-save:before{content:"\e166"}.glyphicon-open:before{content:"\e167"}.glyphicon-saved:before{content:"\e168"}.glyphicon-import:before{content:"\e169"}.glyphicon-export:before{content:"\e170"}.glyphicon-send:before{content:"\e171"}.glyphicon-floppy-disk:before{content:"\e172"}.glyphicon-floppy-saved:before{content:"\e173"}.glyphicon-floppy-remove:before{content:"\e174"}.glyphicon-floppy-save:before{content:"\e175"}.glyphicon-floppy-open:before{content:"\e176"}.glyphicon-credit-card:before{content:"\e177"}.glyphicon-transfer:before{content:"\e178"}.glyphicon-cutlery:before{content:"\e179"}.glyphicon-header:before{content:"\e180"}.glyphicon-compressed:before{content:"\e181"}.glyphicon-earphone:before{content:"\e182"}.glyphicon-phone-alt:before{content:"\e183"}.glyphicon-tower:before{content:"\e184"}.glyphicon-stats:before{content:"\e185"}.glyphicon-sd-video:before{content:"\e186"}.glyphicon-hd-video:before{content:"\e187"}.glyphicon-subtitles:before{content:"\e188"}.glyphicon-sound-stereo:before{content:"\e189"}.glyphicon-sound-dolby:before{content:"\e190"}.glyphicon-sound-5-1:before{content:"\e191"}.glyphicon-sound-6-1:before{content:"\e192"}.glyphicon-sound-7-1:before{content:"\e193"}.glyphicon-copyright-mark:before{content:"\e194"}.glyphicon-registration-mark:before{content:"\e195"}.glyphicon-cloud-download:before{content:"\e197"}.glyphicon-cloud-upload:before{content:"\e198"}.glyphicon-tree-conifer:before{content:"\e199"}.glyphicon-tree-deciduous:before{content:"\e200"}.glyphicon-cd:before{content:"\e201"}.glyphicon-save-file:before{content:"\e202"}.glyphicon-open-file:before{content:"\e203"}.glyphicon-level-up:before{content:"\e204"}.glyphicon-copy:before{content:"\e205"}.glyphicon-paste:before{content:"\e206"}.glyphicon-alert:before{content:"\e209"}.glyphicon-equalizer:before{content:"\e210"}.glyphicon-king:before{content:"\e211"}.glyphicon-queen:before{content:"\e212"}.glyphicon-pawn:before{content:"\e213"}.glyphicon-bishop:before{content:"\e214"}.glyphicon-knight:before{content:"\e215"}.glyphicon-baby-formula:before{content:"\e216"}.glyphicon-tent:before{content:"\26fa"}.glyphicon-blackboard:before{content:"\e218"}.glyphicon-bed:before{content:"\e219"}.glyphicon-apple:before{content:"\f8ff"}.glyphicon-erase:before{content:"\e221"}.glyphicon-hourglass:before{content:"\231b"}.glyphicon-lamp:before{content:"\e223"}.glyphicon-duplicate:before{content:"\e224"}.glyphicon-piggy-bank:before{content:"\e225"}.glyphicon-scissors:before{content:"\e226"}.glyphicon-bitcoin:before{content:"\e227"}.glyphicon-btc:before{content:"\e227"}.glyphicon-xbt:before{content:"\e227"}.glyphicon-yen:before{content:"\00a5"}.glyphicon-jpy:before{content:"\00a5"}.glyphicon-ruble:before{content:"\20bd"}.glyphicon-rub:before{content:"\20bd"}.glyphicon-scale:before{content:"\e230"}.glyphicon-ice-lolly:before{content:"\e231"}.glyphicon-ice-lolly-tasted:before{content:"\e232"}.glyphicon-education:before{content:"\e233"}.glyphicon-option-horizontal:before{content:"\e234"}.glyphicon-option-vertical:before{content:"\e235"}.glyphicon-menu-hamburger:before{content:"\e236"}.glyphicon-modal-window:before{content:"\e237"}.glyphicon-oil:before{content:"\e238"}.glyphicon-grain:before{content:"\e239"}.glyphicon-sunglasses:before{content:"\e240"}.glyphicon-text-size:before{content:"\e241"}.glyphicon-text-color:before{content:"\e242"}.glyphicon-text-background:before{content:"\e243"}.glyphicon-object-align-top:before{content:"\e244"}.glyphicon-object-align-bottom:before{content:"\e245"}.glyphicon-object-align-horizontal:before{content:"\e246"}.glyphicon-object-align-left:before{content:"\e247"}.glyphicon-object-align-vertical:before{content:"\e248"}.glyphicon-object-align-right:before{content:"\e249"}.glyphicon-triangle-right:before{content:"\e250"}.glyphicon-triangle-left:before{content:"\e251"}.glyphicon-triangle-bottom:before{content:"\e252"}.glyphicon-triangle-top:before{content:"\e253"}.glyphicon-console:before{content:"\e254"}.glyphicon-superscript:before{content:"\e255"}.glyphicon-subscript:before{content:"\e256"}.glyphicon-menu-left:before{content:"\e257"}.glyphicon-menu-right:before{content:"\e258"}.glyphicon-menu-down:before{content:"\e259"}.glyphicon-menu-up:before{content:"\e260"}*{-webkit-box-sizing:border-box;-moz-box-sizing:border-box;box-sizing:border-box}:after,:before{-webkit-box-sizing:border-box;-moz-box-sizing:border-box;box-sizing:border-box}html{font-size:10px;-webkit-tap-highlight-color:rgba(0,0,0,0)}body{font-family:"Helvetica Neue",Helvetica,Arial,sans-serif;font-size:14px;line-height:1.42857143;color:#333;background-color:#fff}button,input,select,textarea{font-family:inherit;font-size:inherit;line-height:inherit}a{color:#337ab7;text-decoration:none}a:focus,a:hover{color:#23527c;text-decoration:underline}a:focus{outline:5px auto -webkit-focus-ring-color;outline-offset:-2px}figure{margin:0}img{vertical-align:middle}.carousel-inner>.item>a>img,.carousel-inner>.item>img,.img-responsive,.thumbnail a>img,.thumbnail>img{display:block;max-width:100%;height:auto}.img-rounded{border-radius:6px}.img-thumbnail{display:inline-block;max-width:100%;height:auto;padding:4px;line-height:1.42857143;background-color:#fff;border:1px solid #ddd;border-radius:4px;-webkit-transition:all .2s ease-in-out;-o-transition:all .2s ease-in-out;transition:all .2s ease-in-out}.img-circle{border-radius:50%}hr{margin-top:20px;margin-bottom:20px;border:0;border-top:1px solid #eee}.sr-only{position:absolute;width:1px;height:1px;padding:0;margin:-1px;overflow:hidden;clip:rect(0,0,0,0);border:0}.sr-only-focusable:active,.sr-only-focusable:focus{position:static;width:auto;height:auto;margin:0;overflow:visible;clip:auto}[role=button]{cursor:pointer}.h1,.h2,.h3,.h4,.h5,.h6,h1,h2,h3,h4,h5,h6{font-family:inherit;font-weight:500;line-height:1.1;color:inherit}.h1 .small,.h1 small,.h2 .small,.h2 small,.h3 .small,.h3 small,.h4 .small,.h4 small,.h5 .small,.h5 small,.h6 .small,.h6 small,h1 .small,h1 small,h2 .small,h2 small,h3 .small,h3 small,h4 .small,h4 small,h5 .small,h5 small,h6 .small,h6 small{font-weight:400;line-height:1;color:#777}.h1,.h2,.h3,h1,h2,h3{margin-top:20px;margin-bottom:10px}.h1 .small,.h1 small,.h2 .small,.h2 small,.h3 .small,.h3 small,h1 .small,h1 small,h2 .small,h2 small,h3 .small,h3 small{font-size:65%}.h4,.h5,.h6,h4,h5,h6{margin-top:10px;margin-bottom:10px}.h4 .small,.h4 small,.h5 .small,.h5 small,.h6 .small,.h6 small,h4 .small,h4 small,h5 .small,h5 small,h6 .small,h6 small{font-size:75%}.h1,h1{font-size:36px}.h2,h2{font-size:30px}.h3,h3{font-size:24px}.h4,h4{font-size:18px}.h5,h5{font-size:14px}.h6,h6{font-size:12px}p{margin:0 0 10px}.lead{margin-bottom:20px;font-size:16px;font-weight:300;line-height:1.4}@media (min-width:768px){.lead{font-size:21px}}.small,small{font-size:85%}.mark,mark{padding:.2em;background-color:#fcf8e3}.text-left{text-align:left}.text-right{text-align:right}.text-center{text-align:center}.text-justify{text-align:justify}.text-nowrap{white-space:nowrap}.text-lowercase{text-transform:lowercase}.text-uppercase{text-transform:uppercase}.text-capitalize{text-transform:capitalize}.text-muted{color:#777}.text-primary{color:#337ab7}a.text-primary:focus,a.text-primary:hover{color:#286090}.text-success{color:#3c763d}a.text-success:focus,a.text-success:hover{color:#2b542c}.text-info{color:#31708f}a.text-info:focus,a.text-info:hover{color:#245269}.text-warning{color:#8a6d3b}a.text-warning:focus,a.text-warning:hover{color:#66512c}.text-danger{color:#a94442}a.text-danger:focus,a.text-danger:hover{color:#843534}.bg-primary{color:#fff;background-color:#337ab7}a.bg-primary:focus,a.bg-primary:hover{background-color:#286090}.bg-success{background-color:#dff0d8}a.bg-success:focus,a.bg-success:hover{background-color:#c1e2b3}.bg-info{background-color:#d9edf7}a.bg-info:focus,a.bg-info:hover{background-color:#afd9ee}.bg-warning{background-color:#fcf8e3}a.bg-warning:focus,a.bg-warning:hover{background-color:#f7ecb5}.bg-danger{background-color:#f2dede}a.bg-danger:focus,a.bg-danger:hover{background-color:#e4b9b9}.page-header{padding-bottom:9px;margin:40px 0 20px;border-bottom:1px solid #eee}ol,ul{margin-top:0;margin-bottom:10px}ol ol,ol ul,ul ol,ul ul{margin-bottom:0}.list-unstyled{padding-left:0;list-style:none}.list-inline{padding-left:0;margin-left:-5px;list-style:none}.list-inline>li{display:inline-block;padding-right:5px;padding-left:5px}dl{margin-top:0;margin-bottom:20px}dd,dt{line-height:1.42857143}dt{font-weight:700}dd{margin-left:0}@media (min-width:768px){.dl-horizontal dt{float:left;width:160px;overflow:hidden;clear:left;text-align:right;text-overflow:ellipsis;white-space:nowrap}.dl-horizontal dd{margin-left:180px}}abbr[data-original-title],abbr[title]{cursor:help;border-bottom:1px dotted #777}.initialism{font-size:90%;text-transform:uppercase}blockquote{padding:10px 20px;margin:0 0 20px;font-size:17.5px;border-left:5px solid #eee}blockquote ol:last-child,blockquote p:last-child,blockquote ul:last-child{margin-bottom:0}blockquote .small,blockquote footer,blockquote small{display:block;font-size:80%;line-height:1.42857143;color:#777}blockquote .small:before,blockquote footer:before,blockquote small:before{content:'\2014 \00A0'}.blockquote-reverse,blockquote.pull-right{padding-right:15px;padding-left:0;text-align:right;border-right:5px solid #eee;border-left:0}.blockquote-reverse .small:before,.blockquote-reverse footer:before,.blockquote-reverse small:before,blockquote.pull-right .small:before,blockquote.pull-right footer:before,blockquote.pull-right small:before{content:''}.blockquote-reverse .small:after,.blockquote-reverse footer:after,.blockquote-reverse small:after,blockquote.pull-right .small:after,blockquote.pull-right footer:after,blockquote.pull-right small:after{content:'\00A0 \2014'}address{margin-bottom:20px;font-style:normal;line-height:1.42857143}code,kbd,pre,samp{font-family:Menlo,Monaco,Consolas,"Courier New",monospace}code{padding:2px 4px;font-size:90%;color:#c7254e;background-color:#f9f2f4;border-radius:4px}kbd{padding:2px 4px;font-size:90%;color:#fff;background-color:#333;border-radius:3px;-webkit-box-shadow:inset 0 -1px 0 rgba(0,0,0,.25);box-shadow:inset 0 -1px 0 rgba(0,0,0,.25)}kbd kbd{padding:0;font-size:100%;font-weight:700;-webkit-box-shadow:none;box-shadow:none}pre{display:block;padding:9.5px;margin:0 0 10px;font-size:13px;line-height:1.42857143;color:#333;word-break:break-all;word-wrap:break-word;background-color:#f5f5f5;border:1px solid #ccc;border-radius:4px}pre code{padding:0;font-size:inherit;color:inherit;white-space:pre-wrap;background-color:transparent;border-radius:0}.pre-scrollable{max-height:340px;overflow-y:scroll}.container{padding-right:15px;padding-left:15px;margin-right:auto;margin-left:auto}@media (min-width:768px){.container{width:750px}}@media (min-width:992px){.container{width:970px}}@media (min-width:1200px){.container{width:1170px}}.container-fluid{padding-right:15px;padding-left:15px;margin-right:auto;margin-left:auto}.row{margin-right:-15px;margin-left:-15px}.col-lg-1,.col-lg-10,.col-lg-11,.col-lg-12,.col-lg-2,.col-lg-3,.col-lg-4,.col-lg-5,.col-lg-6,.col-lg-7,.col-lg-8,.col-lg-9,.col-md-1,.col-md-10,.col-md-11,.col-md-12,.col-md-2,.col-md-3,.col-md-4,.col-md-5,.col-md-6,.col-md-7,.col-md-8,.col-md-9,.col-sm-1,.col-sm-10,.col-sm-11,.col-sm-12,.col-sm-2,.col-sm-3,.col-sm-4,.col-sm-5,.col-sm-6,.col-sm-7,.col-sm-8,.col-sm-9,.col-xs-1,.col-xs-10,.col-xs-11,.col-xs-12,.col-xs-2,.col-xs-3,.col-xs-4,.col-xs-5,.col-xs-6,.col-xs-7,.col-xs-8,.col-xs-9{position:relative;min-height:1px;padding-right:15px;padding-left:15px}.col-xs-1,.col-xs-10,.col-xs-11,.col-xs-12,.col-xs-2,.col-xs-3,.col-xs-4,.col-xs-5,.col-xs-6,.col-xs-7,.col-xs-8,.col-xs-9{float:left}.col-xs-12{width:100%}.col-xs-11{width:91.66666667%}.col-xs-10{width:83.33333333%}.col-xs-9{width:75%}.col-xs-8{width:66.66666667%}.col-xs-7{width:58.33333333%}.col-xs-6{width:50%}.col-xs-5{width:41.66666667%}.col-xs-4{width:33.33333333%}.col-xs-3{width:25%}.col-xs-2{width:16.66666667%}.col-xs-1{width:8.33333333%}.col-xs-pull-12{right:100%}.col-xs-pull-11{right:91.66666667%}.col-xs-pull-10{right:83.33333333%}.col-xs-pull-9{right:75%}.col-xs-pull-8{right:66.66666667%}.col-xs-pull-7{right:58.33333333%}.col-xs-pull-6{right:50%}.col-xs-pull-5{right:41.66666667%}.col-xs-pull-4{right:33.33333333%}.col-xs-pull-3{right:25%}.col-xs-pull-2{right:16.66666667%}.col-xs-pull-1{right:8.33333333%}.col-xs-pull-0{right:auto}.col-xs-push-12{left:100%}.col-xs-push-11{left:91.66666667%}.col-xs-push-10{left:83.33333333%}.col-xs-push-9{left:75%}.col-xs-push-8{left:66.66666667%}.col-xs-push-7{left:58.33333333%}.col-xs-push-6{left:50%}.col-xs-push-5{left:41.66666667%}.col-xs-push-4{left:33.33333333%}.col-xs-push-3{left:25%}.col-xs-push-2{left:16.66666667%}.col-xs-push-1{left:8.33333333%}.col-xs-push-0{left:auto}.col-xs-offset-12{margin-left:100%}.col-xs-offset-11{margin-left:91.66666667%}.col-xs-offset-10{margin-left:83.33333333%}.col-xs-offset-9{margin-left:75%}.col-xs-offset-8{margin-left:66.66666667%}.col-xs-offset-7{margin-left:58.33333333%}.col-xs-offset-6{margin-left:50%}.col-xs-offset-5{margin-left:41.66666667%}.col-xs-offset-4{margin-left:33.33333333%}.col-xs-offset-3{margin-left:25%}.col-xs-offset-2{margin-left:16.66666667%}.col-xs-offset-1{margin-left:8.33333333%}.col-xs-offset-0{margin-left:0}@media (min-width:768px){.col-sm-1,.col-sm-10,.col-sm-11,.col-sm-12,.col-sm-2,.col-sm-3,.col-sm-4,.col-sm-5,.col-sm-6,.col-sm-7,.col-sm-8,.col-sm-9{float:left}.col-sm-12{width:100%}.col-sm-11{width:91.66666667%}.col-sm-10{width:83.33333333%}.col-sm-9{width:75%}.col-sm-8{width:66.66666667%}.col-sm-7{width:58.33333333%}.col-sm-6{width:50%}.col-sm-5{width:41.66666667%}.col-sm-4{width:33.33333333%}.col-sm-3{width:25%}.col-sm-2{width:16.66666667%}.col-sm-1{width:8.33333333%}.col-sm-pull-12{right:100%}.col-sm-pull-11{right:91.66666667%}.col-sm-pull-10{right:83.33333333%}.col-sm-pull-9{right:75%}.col-sm-pull-8{right:66.66666667%}.col-sm-pull-7{right:58.33333333%}.col-sm-pull-6{right:50%}.col-sm-pull-5{right:41.66666667%}.col-sm-pull-4{right:33.33333333%}.col-sm-pull-3{right:25%}.col-sm-pull-2{right:16.66666667%}.col-sm-pull-1{right:8.33333333%}.col-sm-pull-0{right:auto}.col-sm-push-12{left:100%}.col-sm-push-11{left:91.66666667%}.col-sm-push-10{left:83.33333333%}.col-sm-push-9{left:75%}.col-sm-push-8{left:66.66666667%}.col-sm-push-7{left:58.33333333%}.col-sm-push-6{left:50%}.col-sm-push-5{left:41.66666667%}.col-sm-push-4{left:33.33333333%}.col-sm-push-3{left:25%}.col-sm-push-2{left:16.66666667%}.col-sm-push-1{left:8.33333333%}.col-sm-push-0{left:auto}.col-sm-offset-12{margin-left:100%}.col-sm-offset-11{margin-left:91.66666667%}.col-sm-offset-10{margin-left:83.33333333%}.col-sm-offset-9{margin-left:75%}.col-sm-offset-8{margin-left:66.66666667%}.col-sm-offset-7{margin-left:58.33333333%}.col-sm-offset-6{margin-left:50%}.col-sm-offset-5{margin-left:41.66666667%}.col-sm-offset-4{margin-left:33.33333333%}.col-sm-offset-3{margin-left:25%}.col-sm-offset-2{margin-left:16.66666667%}.col-sm-offset-1{margin-left:8.33333333%}.col-sm-offset-0{margin-left:0}}@media (min-width:992px){.col-md-1,.col-md-10,.col-md-11,.col-md-12,.col-md-2,.col-md-3,.col-md-4,.col-md-5,.col-md-6,.col-md-7,.col-md-8,.col-md-9{float:left}.col-md-12{width:100%}.col-md-11{width:91.66666667%}.col-md-10{width:83.33333333%}.col-md-9{width:75%}.col-md-8{width:66.66666667%}.col-md-7{width:58.33333333%}.col-md-6{width:50%}.col-md-5{width:41.66666667%}.col-md-4{width:33.33333333%}.col-md-3{width:25%}.col-md-2{width:16.66666667%}.col-md-1{width:8.33333333%}.col-md-pull-12{right:100%}.col-md-pull-11{right:91.66666667%}.col-md-pull-10{right:83.33333333%}.col-md-pull-9{right:75%}.col-md-pull-8{right:66.66666667%}.col-md-pull-7{right:58.33333333%}.col-md-pull-6{right:50%}.col-md-pull-5{right:41.66666667%}.col-md-pull-4{right:33.33333333%}.col-md-pull-3{right:25%}.col-md-pull-2{right:16.66666667%}.col-md-pull-1{right:8.33333333%}.col-md-pull-0{right:auto}.col-md-push-12{left:100%}.col-md-push-11{left:91.66666667%}.col-md-push-10{left:83.33333333%}.col-md-push-9{left:75%}.col-md-push-8{left:66.66666667%}.col-md-push-7{left:58.33333333%}.col-md-push-6{left:50%}.col-md-push-5{left:41.66666667%}.col-md-push-4{left:33.33333333%}.col-md-push-3{left:25%}.col-md-push-2{left:16.66666667%}.col-md-push-1{left:8.33333333%}.col-md-push-0{left:auto}.col-md-offset-12{margin-left:100%}.col-md-offset-11{margin-left:91.66666667%}.col-md-offset-10{margin-left:83.33333333%}.col-md-offset-9{margin-left:75%}.col-md-offset-8{margin-left:66.66666667%}.col-md-offset-7{margin-left:58.33333333%}.col-md-offset-6{margin-left:50%}.col-md-offset-5{margin-left:41.66666667%}.col-md-offset-4{margin-left:33.33333333%}.col-md-offset-3{margin-left:25%}.col-md-offset-2{margin-left:16.66666667%}.col-md-offset-1{margin-left:8.33333333%}.col-md-offset-0{margin-left:0}}@media (min-width:1200px){.col-lg-1,.col-lg-10,.col-lg-11,.col-lg-12,.col-lg-2,.col-lg-3,.col-lg-4,.col-lg-5,.col-lg-6,.col-lg-7,.col-lg-8,.col-lg-9{float:left}.col-lg-12{width:100%}.col-lg-11{width:91.66666667%}.col-lg-10{width:83.33333333%}.col-lg-9{width:75%}.col-lg-8{width:66.66666667%}.col-lg-7{width:58.33333333%}.col-lg-6{width:50%}.col-lg-5{width:41.66666667%}.col-lg-4{width:33.33333333%}.col-lg-3{width:25%}.col-lg-2{width:16.66666667%}.col-lg-1{width:8.33333333%}.col-lg-pull-12{right:100%}.col-lg-pull-11{right:91.66666667%}.col-lg-pull-10{right:83.33333333%}.col-lg-pull-9{right:75%}.col-lg-pull-8{right:66.66666667%}.col-lg-pull-7{right:58.33333333%}.col-lg-pull-6{right:50%}.col-lg-pull-5{right:41.66666667%}.col-lg-pull-4{right:33.33333333%}.col-lg-pull-3{right:25%}.col-lg-pull-2{right:16.66666667%}.col-lg-pull-1{right:8.33333333%}.col-lg-pull-0{right:auto}.col-lg-push-12{left:100%}.col-lg-push-11{left:91.66666667%}.col-lg-push-10{left:83.33333333%}.col-lg-push-9{left:75%}.col-lg-push-8{left:66.66666667%}.col-lg-push-7{left:58.33333333%}.col-lg-push-6{left:50%}.col-lg-push-5{left:41.66666667%}.col-lg-push-4{left:33.33333333%}.col-lg-push-3{left:25%}.col-lg-push-2{left:16.66666667%}.col-lg-push-1{left:8.33333333%}.col-lg-push-0{left:auto}.col-lg-offset-12{margin-left:100%}.col-lg-offset-11{margin-left:91.66666667%}.col-lg-offset-10{margin-left:83.33333333%}.col-lg-offset-9{margin-left:75%}.col-lg-offset-8{margin-left:66.66666667%}.col-lg-offset-7{margin-left:58.33333333%}.col-lg-offset-6{margin-left:50%}.col-lg-offset-5{margin-left:41.66666667%}.col-lg-offset-4{margin-left:33.33333333%}.col-lg-offset-3{margin-left:25%}.col-lg-offset-2{margin-left:16.66666667%}.col-lg-offset-1{margin-left:8.33333333%}.col-lg-offset-0{margin-left:0}}table{background-color:transparent}caption{padding-top:8px;padding-bottom:8px;color:#777;text-align:left}th{text-align:left}.table{width:100%;max-width:100%;margin-bottom:20px}.table>tbody>tr>td,.table>tbody>tr>th,.table>tfoot>tr>td,.table>tfoot>tr>th,.table>thead>tr>td,.table>thead>tr>th{padding:8px;line-height:1.42857143;vertical-align:top;border-top:1px solid #ddd}.table>thead>tr>th{vertical-align:bottom;border-bottom:2px solid #ddd}.table>caption+thead>tr:first-child>td,.table>caption+thead>tr:first-child>th,.table>colgroup+thead>tr:first-child>td,.table>colgroup+thead>tr:first-child>th,.table>thead:first-child>tr:first-child>td,.table>thead:first-child>tr:first-child>th{border-top:0}.table>tbody+tbody{border-top:2px solid #ddd}.table .table{background-color:#fff}.table-condensed>tbody>tr>td,.table-condensed>tbody>tr>th,.table-condensed>tfoot>tr>td,.table-condensed>tfoot>tr>th,.table-condensed>thead>tr>td,.table-condensed>thead>tr>th{padding:5px}.table-bordered{border:1px solid #ddd}.table-bordered>tbody>tr>td,.table-bordered>tbody>tr>th,.table-bordered>tfoot>tr>td,.table-bordered>tfoot>tr>th,.table-bordered>thead>tr>td,.table-bordered>thead>tr>th{border:1px solid #ddd}.table-bordered>thead>tr>td,.table-bordered>thead>tr>th{border-bottom-width:2px}.table-striped>tbody>tr:nth-of-type(odd){background-color:#f9f9f9}.table-hover>tbody>tr:hover{background-color:#f5f5f5}table col[class*=col-]{position:static;display:table-column;float:none}table td[class*=col-],table th[class*=col-]{position:static;display:table-cell;float:none}.table>tbody>tr.active>td,.table>tbody>tr.active>th,.table>tbody>tr>td.active,.table>tbody>tr>th.active,.table>tfoot>tr.active>td,.table>tfoot>tr.active>th,.table>tfoot>tr>td.active,.table>tfoot>tr>th.active,.table>thead>tr.active>td,.table>thead>tr.active>th,.table>thead>tr>td.active,.table>thead>tr>th.active{background-color:#f5f5f5}.table-hover>tbody>tr.active:hover>td,.table-hover>tbody>tr.active:hover>th,.table-hover>tbody>tr:hover>.active,.table-hover>tbody>tr>td.active:hover,.table-hover>tbody>tr>th.active:hover{background-color:#e8e8e8}.table>tbody>tr.success>td,.table>tbody>tr.success>th,.table>tbody>tr>td.success,.table>tbody>tr>th.success,.table>tfoot>tr.success>td,.table>tfoot>tr.success>th,.table>tfoot>tr>td.success,.table>tfoot>tr>th.success,.table>thead>tr.success>td,.table>thead>tr.success>th,.table>thead>tr>td.success,.table>thead>tr>th.success{background-color:#dff0d8}.table-hover>tbody>tr.success:hover>td,.table-hover>tbody>tr.success:hover>th,.table-hover>tbody>tr:hover>.success,.table-hover>tbody>tr>td.success:hover,.table-hover>tbody>tr>th.success:hover{background-color:#d0e9c6}.table>tbody>tr.info>td,.table>tbody>tr.info>th,.table>tbody>tr>td.info,.table>tbody>tr>th.info,.table>tfoot>tr.info>td,.table>tfoot>tr.info>th,.table>tfoot>tr>td.info,.table>tfoot>tr>th.info,.table>thead>tr.info>td,.table>thead>tr.info>th,.table>thead>tr>td.info,.table>thead>tr>th.info{background-color:#d9edf7}.table-hover>tbody>tr.info:hover>td,.table-hover>tbody>tr.info:hover>th,.table-hover>tbody>tr:hover>.info,.table-hover>tbody>tr>td.info:hover,.table-hover>tbody>tr>th.info:hover{background-color:#c4e3f3}.table>tbody>tr.warning>td,.table>tbody>tr.warning>th,.table>tbody>tr>td.warning,.table>tbody>tr>th.warning,.table>tfoot>tr.warning>td,.table>tfoot>tr.warning>th,.table>tfoot>tr>td.warning,.table>tfoot>tr>th.warning,.table>thead>tr.warning>td,.table>thead>tr.warning>th,.table>thead>tr>td.warning,.table>thead>tr>th.warning{background-color:#fcf8e3}.table-hover>tbody>tr.warning:hover>td,.table-hover>tbody>tr.warning:hover>th,.table-hover>tbody>tr:hover>.warning,.table-hover>tbody>tr>td.warning:hover,.table-hover>tbody>tr>th.warning:hover{background-color:#faf2cc}.table>tbody>tr.danger>td,.table>tbody>tr.danger>th,.table>tbody>tr>td.danger,.table>tbody>tr>th.danger,.table>tfoot>tr.danger>td,.table>tfoot>tr.danger>th,.table>tfoot>tr>td.danger,.table>tfoot>tr>th.danger,.table>thead>tr.danger>td,.table>thead>tr.danger>th,.table>thead>tr>td.danger,.table>thead>tr>th.danger{background-color:#f2dede}.table-hover>tbody>tr.danger:hover>td,.table-hover>tbody>tr.danger:hover>th,.table-hover>tbody>tr:hover>.danger,.table-hover>tbody>tr>td.danger:hover,.table-hover>tbody>tr>th.danger:hover{background-color:#ebcccc}.table-responsive{min-height:.01%;overflow-x:auto}@media screen and (max-width:767px){.table-responsive{width:100%;margin-bottom:15px;overflow-y:hidden;-ms-overflow-style:-ms-autohiding-scrollbar;border:1px solid #ddd}.table-responsive>.table{margin-bottom:0}.table-responsive>.table>tbody>tr>td,.table-responsive>.table>tbody>tr>th,.table-responsive>.table>tfoot>tr>td,.table-responsive>.table>tfoot>tr>th,.table-responsive>.table>thead>tr>td,.table-responsive>.table>thead>tr>th{white-space:nowrap}.table-responsive>.table-bordered{border:0}.table-responsive>.table-bordered>tbody>tr>td:first-child,.table-responsive>.table-bordered>tbody>tr>th:first-child,.table-responsive>.table-bordered>tfoot>tr>td:first-child,.table-responsive>.table-bordered>tfoot>tr>th:first-child,.table-responsive>.table-bordered>thead>tr>td:first-child,.table-responsive>.table-bordered>thead>tr>th:first-child{border-left:0}.table-responsive>.table-bordered>tbody>tr>td:last-child,.table-responsive>.table-bordered>tbody>tr>th:last-child,.table-responsive>.table-bordered>tfoot>tr>td:last-child,.table-responsive>.table-bordered>tfoot>tr>th:last-child,.table-responsive>.table-bordered>thead>tr>td:last-child,.table-responsive>.table-bordered>thead>tr>th:last-child{border-right:0}.table-responsive>.table-bordered>tbody>tr:last-child>td,.table-responsive>.table-bordered>tbody>tr:last-child>th,.table-responsive>.table-bordered>tfoot>tr:last-child>td,.table-responsive>.table-bordered>tfoot>tr:last-child>th{border-bottom:0}}fieldset{min-width:0;padding:0;margin:0;border:0}legend{display:block;width:100%;padding:0;margin-bottom:20px;font-size:21px;line-height:inherit;color:#333;border:0;border-bottom:1px solid #e5e5e5}label{display:inline-block;max-width:100%;margin-bottom:5px;font-weight:700}input[type=search]{-webkit-box-sizing:border-box;-moz-box-sizing:border-box;box-sizing:border-box}input[type=checkbox],input[type=radio]{margin:4px 0 0;margin-top:1px\9;line-height:normal}input[type=file]{display:block}input[type=range]{display:block;width:100%}select[multiple],select[size]{height:auto}input[type=file]:focus,input[type=checkbox]:focus,input[type=radio]:focus{outline:5px auto -webkit-focus-ring-color;outline-offset:-2px}output{display:block;padding-top:7px;font-size:14px;line-height:1.42857143;color:#555}.form-control{display:block;width:100%;height:34px;padding:6px 12px;font-size:14px;line-height:1.42857143;color:#555;background-color:#fff;background-image:none;border:1px solid #ccc;border-radius:4px;-webkit-box-shadow:inset 0 1px 1px rgba(0,0,0,.075);box-shadow:inset 0 1px 1px rgba(0,0,0,.075);-webkit-transition:border-color ease-in-out .15s,-webkit-box-shadow ease-in-out .15s;-o-transition:border-color ease-in-out .15s,box-shadow ease-in-out .15s;transition:border-color ease-in-out .15s,box-shadow ease-in-out .15s}.form-control:focus{border-color:#66afe9;outline:0;-webkit-box-shadow:inset 0 1px 1px rgba(0,0,0,.075),0 0 8px rgba(102,175,233,.6);box-shadow:inset 0 1px 1px rgba(0,0,0,.075),0 0 8px rgba(102,175,233,.6)}.form-control::-moz-placeholder{color:#999;opacity:1}.form-control:-ms-input-placeholder{color:#999}.form-control::-webkit-input-placeholder{color:#999}.form-control::-ms-expand{background-color:transparent;border:0}.form-control[disabled],.form-control[readonly],fieldset[disabled] .form-control{background-color:#eee;opacity:1}.form-control[disabled],fieldset[disabled] .form-control{cursor:not-allowed}textarea.form-control{height:auto}input[type=search]{-webkit-appearance:none}@media screen and (-webkit-min-device-pixel-ratio:0){input[type=date].form-control,input[type=time].form-control,input[type=datetime-local].form-control,input[type=month].form-control{line-height:34px}.input-group-sm input[type=date],.input-group-sm input[type=time],.input-group-sm input[type=datetime-local],.input-group-sm input[type=month],input[type=date].input-sm,input[type=time].input-sm,input[type=datetime-local].input-sm,input[type=month].input-sm{line-height:30px}.input-group-lg input[type=date],.input-group-lg input[type=time],.input-group-lg input[type=datetime-local],.input-group-lg input[type=month],input[type=date].input-lg,input[type=time].input-lg,input[type=datetime-local].input-lg,input[type=month].input-lg{line-height:46px}}.form-group{margin-bottom:15px}.checkbox,.radio{position:relative;display:block;margin-top:10px;margin-bottom:10px}.checkbox label,.radio label{min-height:20px;padding-left:20px;margin-bottom:0;font-weight:400;cursor:pointer}.checkbox input[type=checkbox],.checkbox-inline input[type=checkbox],.radio input[type=radio],.radio-inline input[type=radio]{position:absolute;margin-top:4px\9;margin-left:-20px}.checkbox+.checkbox,.radio+.radio{margin-top:-5px}.checkbox-inline,.radio-inline{position:relative;display:inline-block;padding-left:20px;margin-bottom:0;font-weight:400;vertical-align:middle;cursor:pointer}.checkbox-inline+.checkbox-inline,.radio-inline+.radio-inline{margin-top:0;margin-left:10px}fieldset[disabled] input[type=checkbox],fieldset[disabled] input[type=radio],input[type=checkbox].disabled,input[type=checkbox][disabled],input[type=radio].disabled,input[type=radio][disabled]{cursor:not-allowed}.checkbox-inline.disabled,.radio-inline.disabled,fieldset[disabled] .checkbox-inline,fieldset[disabled] .radio-inline{cursor:not-allowed}.checkbox.disabled label,.radio.disabled label,fieldset[disabled] .checkbox label,fieldset[disabled] .radio label{cursor:not-allowed}.form-control-static{min-height:34px;padding-top:7px;padding-bottom:7px;margin-bottom:0}.form-control-static.input-lg,.form-control-static.input-sm{padding-right:0;padding-left:0}.input-sm{height:30px;padding:5px 10px;font-size:12px;line-height:1.5;border-radius:3px}select.input-sm{height:30px;line-height:30px}select[multiple].input-sm,textarea.input-sm{height:auto}.form-group-sm .form-control{height:30px;padding:5px 10px;font-size:12px;line-height:1.5;border-radius:3px}.form-group-sm select.form-control{height:30px;line-height:30px}.form-group-sm select[multiple].form-control,.form-group-sm textarea.form-control{height:auto}.form-group-sm .form-control-static{height:30px;min-height:32px;padding:6px 10px;font-size:12px;line-height:1.5}.input-lg{height:46px;padding:10px 16px;font-size:18px;line-height:1.3333333;border-radius:6px}select.input-lg{height:46px;line-height:46px}select[multiple].input-lg,textarea.input-lg{height:auto}.form-group-lg .form-control{height:46px;padding:10px 16px;font-size:18px;line-height:1.3333333;border-radius:6px}.form-group-lg select.form-control{height:46px;line-height:46px}.form-group-lg select[multiple].form-control,.form-group-lg textarea.form-control{height:auto}.form-group-lg .form-control-static{height:46px;min-height:38px;padding:11px 16px;font-size:18px;line-height:1.3333333}.has-feedback{position:relative}.has-feedback .form-control{padding-right:42.5px}.form-control-feedback{position:absolute;top:0;right:0;z-index:2;display:block;width:34px;height:34px;line-height:34px;text-align:center;pointer-events:none}.form-group-lg .form-control+.form-control-feedback,.input-group-lg+.form-control-feedback,.input-lg+.form-control-feedback{width:46px;height:46px;line-height:46px}.form-group-sm .form-control+.form-control-feedback,.input-group-sm+.form-control-feedback,.input-sm+.form-control-feedback{width:30px;height:30px;line-height:30px}.has-success .checkbox,.has-success .checkbox-inline,.has-success .control-label,.has-success .help-block,.has-success .radio,.has-success .radio-inline,.has-success.checkbox label,.has-success.checkbox-inline label,.has-success.radio label,.has-success.radio-inline label{color:#3c763d}.has-success .form-control{border-color:#3c763d;-webkit-box-shadow:inset 0 1px 1px rgba(0,0,0,.075);box-shadow:inset 0 1px 1px rgba(0,0,0,.075)}.has-success .form-control:focus{border-color:#2b542c;-webkit-box-shadow:inset 0 1px 1px rgba(0,0,0,.075),0 0 6px #67b168;box-shadow:inset 0 1px 1px rgba(0,0,0,.075),0 0 6px #67b168}.has-success .input-group-addon{color:#3c763d;background-color:#dff0d8;border-color:#3c763d}.has-success .form-control-feedback{color:#3c763d}.has-warning .checkbox,.has-warning .checkbox-inline,.has-warning .control-label,.has-warning .help-block,.has-warning .radio,.has-warning .radio-inline,.has-warning.checkbox label,.has-warning.checkbox-inline label,.has-warning.radio label,.has-warning.radio-inline label{color:#8a6d3b}.has-warning .form-control{border-color:#8a6d3b;-webkit-box-shadow:inset 0 1px 1px rgba(0,0,0,.075);box-shadow:inset 0 1px 1px rgba(0,0,0,.075)}.has-warning .form-control:focus{border-color:#66512c;-webkit-box-shadow:inset 0 1px 1px rgba(0,0,0,.075),0 0 6px #c0a16b;box-shadow:inset 0 1px 1px rgba(0,0,0,.075),0 0 6px #c0a16b}.has-warning .input-group-addon{color:#8a6d3b;background-color:#fcf8e3;border-color:#8a6d3b}.has-warning .form-control-feedback{color:#8a6d3b}.has-error .checkbox,.has-error .checkbox-inline,.has-error .control-label,.has-error .help-block,.has-error .radio,.has-error .radio-inline,.has-error.checkbox label,.has-error.checkbox-inline label,.has-error.radio label,.has-error.radio-inline label{color:#a94442}.has-error .form-control{border-color:#a94442;-webkit-box-shadow:inset 0 1px 1px rgba(0,0,0,.075);box-shadow:inset 0 1px 1px rgba(0,0,0,.075)}.has-error .form-control:focus{border-color:#843534;-webkit-box-shadow:inset 0 1px 1px rgba(0,0,0,.075),0 0 6px #ce8483;box-shadow:inset 0 1px 1px rgba(0,0,0,.075),0 0 6px #ce8483}.has-error .input-group-addon{color:#a94442;background-color:#f2dede;border-color:#a94442}.has-error .form-control-feedback{color:#a94442}.has-feedback label~.form-control-feedback{top:25px}.has-feedback label.sr-only~.form-control-feedback{top:0}.help-block{display:block;margin-top:5px;margin-bottom:10px;color:#737373}@media (min-width:768px){.form-inline .form-group{display:inline-block;margin-bottom:0;vertical-align:middle}.form-inline .form-control{display:inline-block;width:auto;vertical-align:middle}.form-inline .form-control-static{display:inline-block}.form-inline .input-group{display:inline-table;vertical-align:middle}.form-inline .input-group .form-control,.form-inline .input-group .input-group-addon,.form-inline .input-group .input-group-btn{width:auto}.form-inline .input-group>.form-control{width:100%}.form-inline .control-label{margin-bottom:0;vertical-align:middle}.form-inline .checkbox,.form-inline .radio{display:inline-block;margin-top:0;margin-bottom:0;vertical-align:middle}.form-inline .checkbox label,.form-inline .radio label{padding-left:0}.form-inline .checkbox input[type=checkbox],.form-inline .radio input[type=radio]{position:relative;margin-left:0}.form-inline .has-feedback .form-control-feedback{top:0}}.form-horizontal .checkbox,.form-horizontal .checkbox-inline,.form-horizontal .radio,.form-horizontal .radio-inline{padding-top:7px;margin-top:0;margin-bottom:0}.form-horizontal .checkbox,.form-horizontal .radio{min-height:27px}.form-horizontal .form-group{margin-right:-15px;margin-left:-15px}@media (min-width:768px){.form-horizontal .control-label{padding-top:7px;margin-bottom:0;text-align:right}}.form-horizontal .has-feedback .form-control-feedback{right:15px}@media (min-width:768px){.form-horizontal .form-group-lg .control-label{padding-top:11px;font-size:18px}}@media (min-width:768px){.form-horizontal .form-group-sm .control-label{padding-top:6px;font-size:12px}}.btn{display:inline-block;padding:6px 12px;margin-bottom:0;font-size:14px;font-weight:400;line-height:1.42857143;text-align:center;white-space:nowrap;vertical-align:middle;-ms-touch-action:manipulation;touch-action:manipulation;cursor:pointer;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;background-image:none;border:1px solid transparent;border-radius:4px}.btn.active.focus,.btn.active:focus,.btn.focus,.btn:active.focus,.btn:active:focus,.btn:focus{outline:5px auto -webkit-focus-ring-color;outline-offset:-2px}.btn.focus,.btn:focus,.btn:hover{color:#333;text-decoration:none}.btn.active,.btn:active{background-image:none;outline:0;-webkit-box-shadow:inset 0 3px 5px rgba(0,0,0,.125);box-shadow:inset 0 3px 5px rgba(0,0,0,.125)}.btn.disabled,.btn[disabled],fieldset[disabled] .btn{cursor:not-allowed;filter:alpha(opacity=65);-webkit-box-shadow:none;box-shadow:none;opacity:.65}a.btn.disabled,fieldset[disabled] a.btn{pointer-events:none}.btn-default{color:#333;background-color:#fff;border-color:#ccc}.btn-default.focus,.btn-default:focus{color:#333;background-color:#e6e6e6;border-color:#8c8c8c}.btn-default:hover{color:#333;background-color:#e6e6e6;border-color:#adadad}.btn-default.active,.btn-default:active,.open>.dropdown-toggle.btn-default{color:#333;background-color:#e6e6e6;border-color:#adadad}.btn-default.active.focus,.btn-default.active:focus,.btn-default.active:hover,.btn-default:active.focus,.btn-default:active:focus,.btn-default:active:hover,.open>.dropdown-toggle.btn-default.focus,.open>.dropdown-toggle.btn-default:focus,.open>.dropdown-toggle.btn-default:hover{color:#333;background-color:#d4d4d4;border-color:#8c8c8c}.btn-default.active,.btn-default:active,.open>.dropdown-toggle.btn-default{background-image:none}.btn-default.disabled.focus,.btn-default.disabled:focus,.btn-default.disabled:hover,.btn-default[disabled].focus,.btn-default[disabled]:focus,.btn-default[disabled]:hover,fieldset[disabled] .btn-default.focus,fieldset[disabled] .btn-default:focus,fieldset[disabled] .btn-default:hover{background-color:#fff;border-color:#ccc}.btn-default .badge{color:#fff;background-color:#333}.btn-primary{color:#fff;background-color:#337ab7;border-color:#2e6da4}.btn-primary.focus,.btn-primary:focus{color:#fff;background-color:#286090;border-color:#122b40}.btn-primary:hover{color:#fff;background-color:#286090;border-color:#204d74}.btn-primary.active,.btn-primary:active,.open>.dropdown-toggle.btn-primary{color:#fff;background-color:#286090;border-color:#204d74}.btn-primary.active.focus,.btn-primary.active:focus,.btn-primary.active:hover,.btn-primary:active.focus,.btn-primary:active:focus,.btn-primary:active:hover,.open>.dropdown-toggle.btn-primary.focus,.open>.dropdown-toggle.btn-primary:focus,.open>.dropdown-toggle.btn-primary:hover{color:#fff;background-color:#204d74;border-color:#122b40}.btn-primary.active,.btn-primary:active,.open>.dropdown-toggle.btn-primary{background-image:none}.btn-primary.disabled.focus,.btn-primary.disabled:focus,.btn-primary.disabled:hover,.btn-primary[disabled].focus,.btn-primary[disabled]:focus,.btn-primary[disabled]:hover,fieldset[disabled] .btn-primary.focus,fieldset[disabled] .btn-primary:focus,fieldset[disabled] .btn-primary:hover{background-color:#337ab7;border-color:#2e6da4}.btn-primary .badge{color:#337ab7;background-color:#fff}.btn-success{color:#fff;background-color:#5cb85c;border-color:#4cae4c}.btn-success.focus,.btn-success:focus{color:#fff;background-color:#449d44;border-color:#255625}.btn-success:hover{color:#fff;background-color:#449d44;border-color:#398439}.btn-success.active,.btn-success:active,.open>.dropdown-toggle.btn-success{color:#fff;background-color:#449d44;border-color:#398439}.btn-success.active.focus,.btn-success.active:focus,.btn-success.active:hover,.btn-success:active.focus,.btn-success:active:focus,.btn-success:active:hover,.open>.dropdown-toggle.btn-success.focus,.open>.dropdown-toggle.btn-success:focus,.open>.dropdown-toggle.btn-success:hover{color:#fff;background-color:#398439;border-color:#255625}.btn-success.active,.btn-success:active,.open>.dropdown-toggle.btn-success{background-image:none}.btn-success.disabled.focus,.btn-success.disabled:focus,.btn-success.disabled:hover,.btn-success[disabled].focus,.btn-success[disabled]:focus,.btn-success[disabled]:hover,fieldset[disabled] .btn-success.focus,fieldset[disabled] .btn-success:focus,fieldset[disabled] .btn-success:hover{background-color:#5cb85c;border-color:#4cae4c}.btn-success .badge{color:#5cb85c;background-color:#fff}.btn-info{color:#fff;background-color:#5bc0de;border-color:#46b8da}.btn-info.focus,.btn-info:focus{color:#fff;background-color:#31b0d5;border-color:#1b6d85}.btn-info:hover{color:#fff;background-color:#31b0d5;border-color:#269abc}.btn-info.active,.btn-info:active,.open>.dropdown-toggle.btn-info{color:#fff;background-color:#31b0d5;border-color:#269abc}.btn-info.active.focus,.btn-info.active:focus,.btn-info.active:hover,.btn-info:active.focus,.btn-info:active:focus,.btn-info:active:hover,.open>.dropdown-toggle.btn-info.focus,.open>.dropdown-toggle.btn-info:focus,.open>.dropdown-toggle.btn-info:hover{color:#fff;background-color:#269abc;border-color:#1b6d85}.btn-info.active,.btn-info:active,.open>.dropdown-toggle.btn-info{background-image:none}.btn-info.disabled.focus,.btn-info.disabled:focus,.btn-info.disabled:hover,.btn-info[disabled].focus,.btn-info[disabled]:focus,.btn-info[disabled]:hover,fieldset[disabled] .btn-info.focus,fieldset[disabled] .btn-info:focus,fieldset[disabled] .btn-info:hover{background-color:#5bc0de;border-color:#46b8da}.btn-info .badge{color:#5bc0de;background-color:#fff}.btn-warning{color:#fff;background-color:#f0ad4e;border-color:#eea236}.btn-warning.focus,.btn-warning:focus{color:#fff;background-color:#ec971f;border-color:#985f0d}.btn-warning:hover{color:#fff;background-color:#ec971f;border-color:#d58512}.btn-warning.active,.btn-warning:active,.open>.dropdown-toggle.btn-warning{color:#fff;background-color:#ec971f;border-color:#d58512}.btn-warning.active.focus,.btn-warning.active:focus,.btn-warning.active:hover,.btn-warning:active.focus,.btn-warning:active:focus,.btn-warning:active:hover,.open>.dropdown-toggle.btn-warning.focus,.open>.dropdown-toggle.btn-warning:focus,.open>.dropdown-toggle.btn-warning:hover{color:#fff;background-color:#d58512;border-color:#985f0d}.btn-warning.active,.btn-warning:active,.open>.dropdown-toggle.btn-warning{background-image:none}.btn-warning.disabled.focus,.btn-warning.disabled:focus,.btn-warning.disabled:hover,.btn-warning[disabled].focus,.btn-warning[disabled]:focus,.btn-warning[disabled]:hover,fieldset[disabled] .btn-warning.focus,fieldset[disabled] .btn-warning:focus,fieldset[disabled] .btn-warning:hover{background-color:#f0ad4e;border-color:#eea236}.btn-warning .badge{color:#f0ad4e;background-color:#fff}.btn-danger{color:#fff;background-color:#d9534f;border-color:#d43f3a}.btn-danger.focus,.btn-danger:focus{color:#fff;background-color:#c9302c;border-color:#761c19}.btn-danger:hover{color:#fff;background-color:#c9302c;border-color:#ac2925}.btn-danger.active,.btn-danger:active,.open>.dropdown-toggle.btn-danger{color:#fff;background-color:#c9302c;border-color:#ac2925}.btn-danger.active.focus,.btn-danger.active:focus,.btn-danger.active:hover,.btn-danger:active.focus,.btn-danger:active:focus,.btn-danger:active:hover,.open>.dropdown-toggle.btn-danger.focus,.open>.dropdown-toggle.btn-danger:focus,.open>.dropdown-toggle.btn-danger:hover{color:#fff;background-color:#ac2925;border-color:#761c19}.btn-danger.active,.btn-danger:active,.open>.dropdown-toggle.btn-danger{background-image:none}.btn-danger.disabled.focus,.btn-danger.disabled:focus,.btn-danger.disabled:hover,.btn-danger[disabled].focus,.btn-danger[disabled]:focus,.btn-danger[disabled]:hover,fieldset[disabled] .btn-danger.focus,fieldset[disabled] .btn-danger:focus,fieldset[disabled] .btn-danger:hover{background-color:#d9534f;border-color:#d43f3a}.btn-danger .badge{color:#d9534f;background-color:#fff}.btn-link{font-weight:400;color:#337ab7;border-radius:0}.btn-link,.btn-link.active,.btn-link:active,.btn-link[disabled],fieldset[disabled] .btn-link{background-color:transparent;-webkit-box-shadow:none;box-shadow:none}.btn-link,.btn-link:active,.btn-link:focus,.btn-link:hover{border-color:transparent}.btn-link:focus,.btn-link:hover{color:#23527c;text-decoration:underline;background-color:transparent}.btn-link[disabled]:focus,.btn-link[disabled]:hover,fieldset[disabled] .btn-link:focus,fieldset[disabled] .btn-link:hover{color:#777;text-decoration:none}.btn-group-lg>.btn,.btn-lg{padding:10px 16px;font-size:18px;line-height:1.3333333;border-radius:6px}.btn-group-sm>.btn,.btn-sm{padding:5px 10px;font-size:12px;line-height:1.5;border-radius:3px}.btn-group-xs>.btn,.btn-xs{padding:1px 5px;font-size:12px;line-height:1.5;border-radius:3px}.btn-block{display:block;width:100%}.btn-block+.btn-block{margin-top:5px}input[type=button].btn-block,input[type=reset].btn-block,input[type=submit].btn-block{width:100%}.fade{opacity:0;-webkit-transition:opacity .15s linear;-o-transition:opacity .15s linear;transition:opacity .15s linear}.fade.in{opacity:1}.collapse{display:none}.collapse.in{display:block}tr.collapse.in{display:table-row}tbody.collapse.in{display:table-row-group}.collapsing{position:relative;height:0;overflow:hidden;-webkit-transition-timing-function:ease;-o-transition-timing-function:ease;transition-timing-function:ease;-webkit-transition-duration:.35s;-o-transition-duration:.35s;transition-duration:.35s;-webkit-transition-property:height,visibility;-o-transition-property:height,visibility;transition-property:height,visibility}.caret{display:inline-block;width:0;height:0;margin-left:2px;vertical-align:middle;border-top:4px dashed;border-top:4px solid\9;border-right:4px solid transparent;border-left:4px solid transparent}.dropdown,.dropup{position:relative}.dropdown-toggle:focus{outline:0}.dropdown-menu{position:absolute;top:100%;left:0;z-index:1000;display:none;float:left;min-width:160px;padding:5px 0;margin:2px 0 0;font-size:14px;text-align:left;list-style:none;background-color:#fff;-webkit-background-clip:padding-box;background-clip:padding-box;border:1px solid #ccc;border:1px solid rgba(0,0,0,.15);border-radius:4px;-webkit-box-shadow:0 6px 12px rgba(0,0,0,.175);box-shadow:0 6px 12px rgba(0,0,0,.175)}.dropdown-menu.pull-right{right:0;left:auto}.dropdown-menu .divider{height:1px;margin:9px 0;overflow:hidden;background-color:#e5e5e5}.dropdown-menu>li>a{display:block;padding:3px 20px;clear:both;font-weight:400;line-height:1.42857143;color:#333;white-space:nowrap}.dropdown-menu>li>a:focus,.dropdown-menu>li>a:hover{color:#262626;text-decoration:none;background-color:#f5f5f5}.dropdown-menu>.active>a,.dropdown-menu>.active>a:focus,.dropdown-menu>.active>a:hover{color:#fff;text-decoration:none;background-color:#337ab7;outline:0}.dropdown-menu>.disabled>a,.dropdown-menu>.disabled>a:focus,.dropdown-menu>.disabled>a:hover{color:#777}.dropdown-menu>.disabled>a:focus,.dropdown-menu>.disabled>a:hover{text-decoration:none;cursor:not-allowed;background-color:transparent;background-image:none;filter:progid:DXImageTransform.Microsoft.gradient(enabled=false)}.open>.dropdown-menu{display:block}.open>a{outline:0}.dropdown-menu-right{right:0;left:auto}.dropdown-menu-left{right:auto;left:0}.dropdown-header{display:block;padding:3px 20px;font-size:12px;line-height:1.42857143;color:#777;white-space:nowrap}.dropdown-backdrop{position:fixed;top:0;right:0;bottom:0;left:0;z-index:990}.pull-right>.dropdown-menu{right:0;left:auto}.dropup .caret,.navbar-fixed-bottom .dropdown .caret{content:"";border-top:0;border-bottom:4px dashed;border-bottom:4px solid\9}.dropup .dropdown-menu,.navbar-fixed-bottom .dropdown .dropdown-menu{top:auto;bottom:100%;margin-bottom:2px}@media (min-width:768px){.navbar-right .dropdown-menu{right:0;left:auto}.navbar-right .dropdown-menu-left{right:auto;left:0}}.btn-group,.btn-group-vertical{position:relative;display:inline-block;vertical-align:middle}.btn-group-vertical>.btn,.btn-group>.btn{position:relative;float:left}.btn-group-vertical>.btn.active,.btn-group-vertical>.btn:active,.btn-group-vertical>.btn:focus,.btn-group-vertical>.btn:hover,.btn-group>.btn.active,.btn-group>.btn:active,.btn-group>.btn:focus,.btn-group>.btn:hover{z-index:2}.btn-group .btn+.btn,.btn-group .btn+.btn-group,.btn-group .btn-group+.btn,.btn-group .btn-group+.btn-group{margin-left:-1px}.btn-toolbar{margin-left:-5px}.btn-toolbar .btn,.btn-toolbar .btn-group,.btn-toolbar .input-group{float:left}.btn-toolbar>.btn,.btn-toolbar>.btn-group,.btn-toolbar>.input-group{margin-left:5px}.btn-group>.btn:not(:first-child):not(:last-child):not(.dropdown-toggle){border-radius:0}.btn-group>.btn:first-child{margin-left:0}.btn-group>.btn:first-child:not(:last-child):not(.dropdown-toggle){border-top-right-radius:0;border-bottom-right-radius:0}.btn-group>.btn:last-child:not(:first-child),.btn-group>.dropdown-toggle:not(:first-child){border-top-left-radius:0;border-bottom-left-radius:0}.btn-group>.btn-group{float:left}.btn-group>.btn-group:not(:first-child):not(:last-child)>.btn{border-radius:0}.btn-group>.btn-group:first-child:not(:last-child)>.btn:last-child,.btn-group>.btn-group:first-child:not(:last-child)>.dropdown-toggle{border-top-right-radius:0;border-bottom-right-radius:0}.btn-group>.btn-group:last-child:not(:first-child)>.btn:first-child{border-top-left-radius:0;border-bottom-left-radius:0}.btn-group .dropdown-toggle:active,.btn-group.open .dropdown-toggle{outline:0}.btn-group>.btn+.dropdown-toggle{padding-right:8px;padding-left:8px}.btn-group>.btn-lg+.dropdown-toggle{padding-right:12px;padding-left:12px}.btn-group.open .dropdown-toggle{-webkit-box-shadow:inset 0 3px 5px rgba(0,0,0,.125);box-shadow:inset 0 3px 5px rgba(0,0,0,.125)}.btn-group.open .dropdown-toggle.btn-link{-webkit-box-shadow:none;box-shadow:none}.btn .caret{margin-left:0}.btn-lg .caret{border-width:5px 5px 0;border-bottom-width:0}.dropup .btn-lg .caret{border-width:0 5px 5px}.btn-group-vertical>.btn,.btn-group-vertical>.btn-group,.btn-group-vertical>.btn-group>.btn{display:block;float:none;width:100%;max-width:100%}.btn-group-vertical>.btn-group>.btn{float:none}.btn-group-vertical>.btn+.btn,.btn-group-vertical>.btn+.btn-group,.btn-group-vertical>.btn-group+.btn,.btn-group-vertical>.btn-group+.btn-group{margin-top:-1px;margin-left:0}.btn-group-vertical>.btn:not(:first-child):not(:last-child){border-radius:0}.btn-group-vertical>.btn:first-child:not(:last-child){border-top-left-radius:4px;border-top-right-radius:4px;border-bottom-right-radius:0;border-bottom-left-radius:0}.btn-group-vertical>.btn:last-child:not(:first-child){border-top-left-radius:0;border-top-right-radius:0;border-bottom-right-radius:4px;border-bottom-left-radius:4px}.btn-group-vertical>.btn-group:not(:first-child):not(:last-child)>.btn{border-radius:0}.btn-group-vertical>.btn-group:first-child:not(:last-child)>.btn:last-child,.btn-group-vertical>.btn-group:first-child:not(:last-child)>.dropdown-toggle{border-bottom-right-radius:0;border-bottom-left-radius:0}.btn-group-vertical>.btn-group:last-child:not(:first-child)>.btn:first-child{border-top-left-radius:0;border-top-right-radius:0}.btn-group-justified{display:table;width:100%;table-layout:fixed;border-collapse:separate}.btn-group-justified>.btn,.btn-group-justified>.btn-group{display:table-cell;float:none;width:1%}.btn-group-justified>.btn-group .btn{width:100%}.btn-group-justified>.btn-group .dropdown-menu{left:auto}[data-toggle=buttons]>.btn input[type=checkbox],[data-toggle=buttons]>.btn input[type=radio],[data-toggle=buttons]>.btn-group>.btn input[type=checkbox],[data-toggle=buttons]>.btn-group>.btn input[type=radio]{position:absolute;clip:rect(0,0,0,0);pointer-events:none}.input-group{position:relative;display:table;border-collapse:separate}.input-group[class*=col-]{float:none;padding-right:0;padding-left:0}.input-group .form-control{position:relative;z-index:2;float:left;width:100%;margin-bottom:0}.input-group .form-control:focus{z-index:3}.input-group-lg>.form-control,.input-group-lg>.input-group-addon,.input-group-lg>.input-group-btn>.btn{height:46px;padding:10px 16px;font-size:18px;line-height:1.3333333;border-radius:6px}select.input-group-lg>.form-control,select.input-group-lg>.input-group-addon,select.input-group-lg>.input-group-btn>.btn{height:46px;line-height:46px}select[multiple].input-group-lg>.form-control,select[multiple].input-group-lg>.input-group-addon,select[multiple].input-group-lg>.input-group-btn>.btn,textarea.input-group-lg>.form-control,textarea.input-group-lg>.input-group-addon,textarea.input-group-lg>.input-group-btn>.btn{height:auto}.input-group-sm>.form-control,.input-group-sm>.input-group-addon,.input-group-sm>.input-group-btn>.btn{height:30px;padding:5px 10px;font-size:12px;line-height:1.5;border-radius:3px}select.input-group-sm>.form-control,select.input-group-sm>.input-group-addon,select.input-group-sm>.input-group-btn>.btn{height:30px;line-height:30px}select[multiple].input-group-sm>.form-control,select[multiple].input-group-sm>.input-group-addon,select[multiple].input-group-sm>.input-group-btn>.btn,textarea.input-group-sm>.form-control,textarea.input-group-sm>.input-group-addon,textarea.input-group-sm>.input-group-btn>.btn{height:auto}.input-group .form-control,.input-group-addon,.input-group-btn{display:table-cell}.input-group .form-control:not(:first-child):not(:last-child),.input-group-addon:not(:first-child):not(:last-child),.input-group-btn:not(:first-child):not(:last-child){border-radius:0}.input-group-addon,.input-group-btn{width:1%;white-space:nowrap;vertical-align:middle}.input-group-addon{padding:6px 12px;font-size:14px;font-weight:400;line-height:1;color:#555;text-align:center;background-color:#eee;border:1px solid #ccc;border-radius:4px}.input-group-addon.input-sm{padding:5px 10px;font-size:12px;border-radius:3px}.input-group-addon.input-lg{padding:10px 16px;font-size:18px;border-radius:6px}.input-group-addon input[type=checkbox],.input-group-addon input[type=radio]{margin-top:0}.input-group .form-control:first-child,.input-group-addon:first-child,.input-group-btn:first-child>.btn,.input-group-btn:first-child>.btn-group>.btn,.input-group-btn:first-child>.dropdown-toggle,.input-group-btn:last-child>.btn-group:not(:last-child)>.btn,.input-group-btn:last-child>.btn:not(:last-child):not(.dropdown-toggle){border-top-right-radius:0;border-bottom-right-radius:0}.input-group-addon:first-child{border-right:0}.input-group .form-control:last-child,.input-group-addon:last-child,.input-group-btn:first-child>.btn-group:not(:first-child)>.btn,.input-group-btn:first-child>.btn:not(:first-child),.input-group-btn:last-child>.btn,.input-group-btn:last-child>.btn-group>.btn,.input-group-btn:last-child>.dropdown-toggle{border-top-left-radius:0;border-bottom-left-radius:0}.input-group-addon:last-child{border-left:0}.input-group-btn{position:relative;font-size:0;white-space:nowrap}.input-group-btn>.btn{position:relative}.input-group-btn>.btn+.btn{margin-left:-1px}.input-group-btn>.btn:active,.input-group-btn>.btn:focus,.input-group-btn>.btn:hover{z-index:2}.input-group-btn:first-child>.btn,.input-group-btn:first-child>.btn-group{margin-right:-1px}.input-group-btn:last-child>.btn,.input-group-btn:last-child>.btn-group{z-index:2;margin-left:-1px}.nav{padding-left:0;margin-bottom:0;list-style:none}.nav>li{position:relative;display:block}.nav>li>a{position:relative;display:block;padding:10px 15px}.nav>li>a:focus,.nav>li>a:hover{text-decoration:none;background-color:#eee}.nav>li.disabled>a{color:#777}.nav>li.disabled>a:focus,.nav>li.disabled>a:hover{color:#777;text-decoration:none;cursor:not-allowed;background-color:transparent}.nav .open>a,.nav .open>a:focus,.nav .open>a:hover{background-color:#eee;border-color:#337ab7}.nav .nav-divider{height:1px;margin:9px 0;overflow:hidden;background-color:#e5e5e5}.nav>li>a>img{max-width:none}.nav-tabs{border-bottom:1px solid #ddd}.nav-tabs>li{float:left;margin-bottom:-1px}.nav-tabs>li>a{margin-right:2px;line-height:1.42857143;border:1px solid transparent;border-radius:4px 4px 0 0}.nav-tabs>li>a:hover{border-color:#eee #eee #ddd}.nav-tabs>li.active>a,.nav-tabs>li.active>a:focus,.nav-tabs>li.active>a:hover{color:#555;cursor:default;background-color:#fff;border:1px solid #ddd;border-bottom-color:transparent}.nav-tabs.nav-justified{width:100%;border-bottom:0}.nav-tabs.nav-justified>li{float:none}.nav-tabs.nav-justified>li>a{margin-bottom:5px;text-align:center}.nav-tabs.nav-justified>.dropdown .dropdown-menu{top:auto;left:auto}@media (min-width:768px){.nav-tabs.nav-justified>li{display:table-cell;width:1%}.nav-tabs.nav-justified>li>a{margin-bottom:0}}.nav-tabs.nav-justified>li>a{margin-right:0;border-radius:4px}.nav-tabs.nav-justified>.active>a,.nav-tabs.nav-justified>.active>a:focus,.nav-tabs.nav-justified>.active>a:hover{border:1px solid #ddd}@media (min-width:768px){.nav-tabs.nav-justified>li>a{border-bottom:1px solid #ddd;border-radius:4px 4px 0 0}.nav-tabs.nav-justified>.active>a,.nav-tabs.nav-justified>.active>a:focus,.nav-tabs.nav-justified>.active>a:hover{border-bottom-color:#fff}}.nav-pills>li{float:left}.nav-pills>li>a{border-radius:4px}.nav-pills>li+li{margin-left:2px}.nav-pills>li.active>a,.nav-pills>li.active>a:focus,.nav-pills>li.active>a:hover{color:#fff;background-color:#337ab7}.nav-stacked>li{float:none}.nav-stacked>li+li{margin-top:2px;margin-left:0}.nav-justified{width:100%}.nav-justified>li{float:none}.nav-justified>li>a{margin-bottom:5px;text-align:center}.nav-justified>.dropdown .dropdown-menu{top:auto;left:auto}@media (min-width:768px){.nav-justified>li{display:table-cell;width:1%}.nav-justified>li>a{margin-bottom:0}}.nav-tabs-justified{border-bottom:0}.nav-tabs-justified>li>a{margin-right:0;border-radius:4px}.nav-tabs-justified>.active>a,.nav-tabs-justified>.active>a:focus,.nav-tabs-justified>.active>a:hover{border:1px solid #ddd}@media (min-width:768px){.nav-tabs-justified>li>a{border-bottom:1px solid #ddd;border-radius:4px 4px 0 0}.nav-tabs-justified>.active>a,.nav-tabs-justified>.active>a:focus,.nav-tabs-justified>.active>a:hover{border-bottom-color:#fff}}.tab-content>.tab-pane{display:none}.tab-content>.active{display:block}.nav-tabs .dropdown-menu{margin-top:-1px;border-top-left-radius:0;border-top-right-radius:0}.navbar{position:relative;min-height:50px;margin-bottom:20px;border:1px solid transparent}@media (min-width:768px){.navbar{border-radius:4px}}@media (min-width:768px){.navbar-header{float:left}}.navbar-collapse{padding-right:15px;padding-left:15px;overflow-x:visible;-webkit-overflow-scrolling:touch;border-top:1px solid transparent;-webkit-box-shadow:inset 0 1px 0 rgba(255,255,255,.1);box-shadow:inset 0 1px 0 rgba(255,255,255,.1)}.navbar-collapse.in{overflow-y:auto}@media (min-width:768px){.navbar-collapse{width:auto;border-top:0;-webkit-box-shadow:none;box-shadow:none}.navbar-collapse.collapse{display:block!important;height:auto!important;padding-bottom:0;overflow:visible!important}.navbar-collapse.in{overflow-y:visible}.navbar-fixed-bottom .navbar-collapse,.navbar-fixed-top .navbar-collapse,.navbar-static-top .navbar-collapse{padding-right:0;padding-left:0}}.navbar-fixed-bottom .navbar-collapse,.navbar-fixed-top .navbar-collapse{max-height:340px}@media (max-device-width:480px) and (orientation:landscape){.navbar-fixed-bottom .navbar-collapse,.navbar-fixed-top .navbar-collapse{max-height:200px}}.container-fluid>.navbar-collapse,.container-fluid>.navbar-header,.container>.navbar-collapse,.container>.navbar-header{margin-right:-15px;margin-left:-15px}@media (min-width:768px){.container-fluid>.navbar-collapse,.container-fluid>.navbar-header,.container>.navbar-collapse,.container>.navbar-header{margin-right:0;margin-left:0}}.navbar-static-top{z-index:1000;border-width:0 0 1px}@media (min-width:768px){.navbar-static-top{border-radius:0}}.navbar-fixed-bottom,.navbar-fixed-top{position:fixed;right:0;left:0;z-index:1030}@media (min-width:768px){.navbar-fixed-bottom,.navbar-fixed-top{border-radius:0}}.navbar-fixed-top{top:0;border-width:0 0 1px}.navbar-fixed-bottom{bottom:0;margin-bottom:0;border-width:1px 0 0}.navbar-brand{float:left;height:50px;padding:15px 15px;font-size:18px;line-height:20px}.navbar-brand:focus,.navbar-brand:hover{text-decoration:none}.navbar-brand>img{display:block}@media (min-width:768px){.navbar>.container .navbar-brand,.navbar>.container-fluid .navbar-brand{margin-left:-15px}}.navbar-toggle{position:relative;float:right;padding:9px 10px;margin-top:8px;margin-right:15px;margin-bottom:8px;background-color:transparent;background-image:none;border:1px solid transparent;border-radius:4px}.navbar-toggle:focus{outline:0}.navbar-toggle .icon-bar{display:block;width:22px;height:2px;border-radius:1px}.navbar-toggle .icon-bar+.icon-bar{margin-top:4px}@media (min-width:768px){.navbar-toggle{display:none}}.navbar-nav{margin:7.5px -15px}.navbar-nav>li>a{padding-top:10px;padding-bottom:10px;line-height:20px}@media (max-width:767px){.navbar-nav .open .dropdown-menu{position:static;float:none;width:auto;margin-top:0;background-color:transparent;border:0;-webkit-box-shadow:none;box-shadow:none}.navbar-nav .open .dropdown-menu .dropdown-header,.navbar-nav .open .dropdown-menu>li>a{padding:5px 15px 5px 25px}.navbar-nav .open .dropdown-menu>li>a{line-height:20px}.navbar-nav .open .dropdown-menu>li>a:focus,.navbar-nav .open .dropdown-menu>li>a:hover{background-image:none}}@media (min-width:768px){.navbar-nav{float:left;margin:0}.navbar-nav>li{float:left}.navbar-nav>li>a{padding-top:15px;padding-bottom:15px}}.navbar-form{padding:10px 15px;margin-top:8px;margin-right:-15px;margin-bottom:8px;margin-left:-15px;border-top:1px solid transparent;border-bottom:1px solid transparent;-webkit-box-shadow:inset 0 1px 0 rgba(255,255,255,.1),0 1px 0 rgba(255,255,255,.1);box-shadow:inset 0 1px 0 rgba(255,255,255,.1),0 1px 0 rgba(255,255,255,.1)}@media (min-width:768px){.navbar-form .form-group{display:inline-block;margin-bottom:0;vertical-align:middle}.navbar-form .form-control{display:inline-block;width:auto;vertical-align:middle}.navbar-form .form-control-static{display:inline-block}.navbar-form .input-group{display:inline-table;vertical-align:middle}.navbar-form .input-group .form-control,.navbar-form .input-group .input-group-addon,.navbar-form .input-group .input-group-btn{width:auto}.navbar-form .input-group>.form-control{width:100%}.navbar-form .control-label{margin-bottom:0;vertical-align:middle}.navbar-form .checkbox,.navbar-form .radio{display:inline-block;margin-top:0;margin-bottom:0;vertical-align:middle}.navbar-form .checkbox label,.navbar-form .radio label{padding-left:0}.navbar-form .checkbox input[type=checkbox],.navbar-form .radio input[type=radio]{position:relative;margin-left:0}.navbar-form .has-feedback .form-control-feedback{top:0}}@media (max-width:767px){.navbar-form .form-group{margin-bottom:5px}.navbar-form .form-group:last-child{margin-bottom:0}}@media (min-width:768px){.navbar-form{width:auto;padding-top:0;padding-bottom:0;margin-right:0;margin-left:0;border:0;-webkit-box-shadow:none;box-shadow:none}}.navbar-nav>li>.dropdown-menu{margin-top:0;border-top-left-radius:0;border-top-right-radius:0}.navbar-fixed-bottom .navbar-nav>li>.dropdown-menu{margin-bottom:0;border-top-left-radius:4px;border-top-right-radius:4px;border-bottom-right-radius:0;border-bottom-left-radius:0}.navbar-btn{margin-top:8px;margin-bottom:8px}.navbar-btn.btn-sm{margin-top:10px;margin-bottom:10px}.navbar-btn.btn-xs{margin-top:14px;margin-bottom:14px}.navbar-text{margin-top:15px;margin-bottom:15px}@media (min-width:768px){.navbar-text{float:left;margin-right:15px;margin-left:15px}}@media (min-width:768px){.navbar-left{float:left!important}.navbar-right{float:right!important;margin-right:-15px}.navbar-right~.navbar-right{margin-right:0}}.navbar-default{background-color:#f8f8f8;border-color:#e7e7e7}.navbar-default .navbar-brand{color:#777}.navbar-default .navbar-brand:focus,.navbar-default .navbar-brand:hover{color:#5e5e5e;background-color:transparent}.navbar-default .navbar-text{color:#777}.navbar-default .navbar-nav>li>a{color:#777}.navbar-default .navbar-nav>li>a:focus,.navbar-default .navbar-nav>li>a:hover{color:#333;background-color:transparent}.navbar-default .navbar-nav>.active>a,.navbar-default .navbar-nav>.active>a:focus,.navbar-default .navbar-nav>.active>a:hover{color:#555;background-color:#e7e7e7}.navbar-default .navbar-nav>.disabled>a,.navbar-default .navbar-nav>.disabled>a:focus,.navbar-default .navbar-nav>.disabled>a:hover{color:#ccc;background-color:transparent}.navbar-default .navbar-toggle{border-color:#ddd}.navbar-default .navbar-toggle:focus,.navbar-default .navbar-toggle:hover{background-color:#ddd}.navbar-default .navbar-toggle .icon-bar{background-color:#888}.navbar-default .navbar-collapse,.navbar-default .navbar-form{border-color:#e7e7e7}.navbar-default .navbar-nav>.open>a,.navbar-default .navbar-nav>.open>a:focus,.navbar-default .navbar-nav>.open>a:hover{color:#555;background-color:#e7e7e7}@media (max-width:767px){.navbar-default .navbar-nav .open .dropdown-menu>li>a{color:#777}.navbar-default .navbar-nav .open .dropdown-menu>li>a:focus,.navbar-default .navbar-nav .open .dropdown-menu>li>a:hover{color:#333;background-color:transparent}.navbar-default .navbar-nav .open .dropdown-menu>.active>a,.navbar-default .navbar-nav .open .dropdown-menu>.active>a:focus,.navbar-default .navbar-nav .open .dropdown-menu>.active>a:hover{color:#555;background-color:#e7e7e7}.navbar-default .navbar-nav .open .dropdown-menu>.disabled>a,.navbar-default .navbar-nav .open .dropdown-menu>.disabled>a:focus,.navbar-default .navbar-nav .open .dropdown-menu>.disabled>a:hover{color:#ccc;background-color:transparent}}.navbar-default .navbar-link{color:#777}.navbar-default .navbar-link:hover{color:#333}.navbar-default .btn-link{color:#777}.navbar-default .btn-link:focus,.navbar-default .btn-link:hover{color:#333}.navbar-default .btn-link[disabled]:focus,.navbar-default .btn-link[disabled]:hover,fieldset[disabled] .navbar-default .btn-link:focus,fieldset[disabled] .navbar-default .btn-link:hover{color:#ccc}.navbar-inverse{background-color:#222;border-color:#080808}.navbar-inverse .navbar-brand{color:#9d9d9d}.navbar-inverse .navbar-brand:focus,.navbar-inverse .navbar-brand:hover{color:#fff;background-color:transparent}.navbar-inverse .navbar-text{color:#9d9d9d}.navbar-inverse .navbar-nav>li>a{color:#9d9d9d}.navbar-inverse .navbar-nav>li>a:focus,.navbar-inverse .navbar-nav>li>a:hover{color:#fff;background-color:transparent}.navbar-inverse .navbar-nav>.active>a,.navbar-inverse .navbar-nav>.active>a:focus,.navbar-inverse .navbar-nav>.active>a:hover{color:#fff;background-color:#080808}.navbar-inverse .navbar-nav>.disabled>a,.navbar-inverse .navbar-nav>.disabled>a:focus,.navbar-inverse .navbar-nav>.disabled>a:hover{color:#444;background-color:transparent}.navbar-inverse .navbar-toggle{border-color:#333}.navbar-inverse .navbar-toggle:focus,.navbar-inverse .navbar-toggle:hover{background-color:#333}.navbar-inverse .navbar-toggle .icon-bar{background-color:#fff}.navbar-inverse .navbar-collapse,.navbar-inverse .navbar-form{border-color:#101010}.navbar-inverse .navbar-nav>.open>a,.navbar-inverse .navbar-nav>.open>a:focus,.navbar-inverse .navbar-nav>.open>a:hover{color:#fff;background-color:#080808}@media (max-width:767px){.navbar-inverse .navbar-nav .open .dropdown-menu>.dropdown-header{border-color:#080808}.navbar-inverse .navbar-nav .open .dropdown-menu .divider{background-color:#080808}.navbar-inverse .navbar-nav .open .dropdown-menu>li>a{color:#9d9d9d}.navbar-inverse .navbar-nav .open .dropdown-menu>li>a:focus,.navbar-inverse .navbar-nav .open .dropdown-menu>li>a:hover{color:#fff;background-color:transparent}.navbar-inverse .navbar-nav .open .dropdown-menu>.active>a,.navbar-inverse .navbar-nav .open .dropdown-menu>.active>a:focus,.navbar-inverse .navbar-nav .open .dropdown-menu>.active>a:hover{color:#fff;background-color:#080808}.navbar-inverse .navbar-nav .open .dropdown-menu>.disabled>a,.navbar-inverse .navbar-nav .open .dropdown-menu>.disabled>a:focus,.navbar-inverse .navbar-nav .open .dropdown-menu>.disabled>a:hover{color:#444;background-color:transparent}}.navbar-inverse .navbar-link{color:#9d9d9d}.navbar-inverse .navbar-link:hover{color:#fff}.navbar-inverse .btn-link{color:#9d9d9d}.navbar-inverse .btn-link:focus,.navbar-inverse .btn-link:hover{color:#fff}.navbar-inverse .btn-link[disabled]:focus,.navbar-inverse .btn-link[disabled]:hover,fieldset[disabled] .navbar-inverse .btn-link:focus,fieldset[disabled] .navbar-inverse .btn-link:hover{color:#444}.breadcrumb{padding:8px 15px;margin-bottom:20px;list-style:none;background-color:#f5f5f5;border-radius:4px}.breadcrumb>li{display:inline-block}.breadcrumb>li+li:before{padding:0 5px;color:#ccc;content:"/\00a0"}.breadcrumb>.active{color:#777}.pagination{display:inline-block;padding-left:0;margin:20px 0;border-radius:4px}.pagination>li{display:inline}.pagination>li>a,.pagination>li>span{position:relative;float:left;padding:6px 12px;margin-left:-1px;line-height:1.42857143;color:#337ab7;text-decoration:none;background-color:#fff;border:1px solid #ddd}.pagination>li:first-child>a,.pagination>li:first-child>span{margin-left:0;border-top-left-radius:4px;border-bottom-left-radius:4px}.pagination>li:last-child>a,.pagination>li:last-child>span{border-top-right-radius:4px;border-bottom-right-radius:4px}.pagination>li>a:focus,.pagination>li>a:hover,.pagination>li>span:focus,.pagination>li>span:hover{z-index:2;color:#23527c;background-color:#eee;border-color:#ddd}.pagination>.active>a,.pagination>.active>a:focus,.pagination>.active>a:hover,.pagination>.active>span,.pagination>.active>span:focus,.pagination>.active>span:hover{z-index:3;color:#fff;cursor:default;background-color:#337ab7;border-color:#337ab7}.pagination>.disabled>a,.pagination>.disabled>a:focus,.pagination>.disabled>a:hover,.pagination>.disabled>span,.pagination>.disabled>span:focus,.pagination>.disabled>span:hover{color:#777;cursor:not-allowed;background-color:#fff;border-color:#ddd}.pagination-lg>li>a,.pagination-lg>li>span{padding:10px 16px;font-size:18px;line-height:1.3333333}.pagination-lg>li:first-child>a,.pagination-lg>li:first-child>span{border-top-left-radius:6px;border-bottom-left-radius:6px}.pagination-lg>li:last-child>a,.pagination-lg>li:last-child>span{border-top-right-radius:6px;border-bottom-right-radius:6px}.pagination-sm>li>a,.pagination-sm>li>span{padding:5px 10px;font-size:12px;line-height:1.5}.pagination-sm>li:first-child>a,.pagination-sm>li:first-child>span{border-top-left-radius:3px;border-bottom-left-radius:3px}.pagination-sm>li:last-child>a,.pagination-sm>li:last-child>span{border-top-right-radius:3px;border-bottom-right-radius:3px}.pager{padding-left:0;margin:20px 0;text-align:center;list-style:none}.pager li{display:inline}.pager li>a,.pager li>span{display:inline-block;padding:5px 14px;background-color:#fff;border:1px solid #ddd;border-radius:15px}.pager li>a:focus,.pager li>a:hover{text-decoration:none;background-color:#eee}.pager .next>a,.pager .next>span{float:right}.pager .previous>a,.pager .previous>span{float:left}.pager .disabled>a,.pager .disabled>a:focus,.pager .disabled>a:hover,.pager .disabled>span{color:#777;cursor:not-allowed;background-color:#fff}.label{display:inline;padding:.2em .6em .3em;font-size:75%;font-weight:700;line-height:1;color:#fff;text-align:center;white-space:nowrap;vertical-align:baseline;border-radius:.25em}a.label:focus,a.label:hover{color:#fff;text-decoration:none;cursor:pointer}.label:empty{display:none}.btn .label{position:relative;top:-1px}.label-default{background-color:#777}.label-default[href]:focus,.label-default[href]:hover{background-color:#5e5e5e}.label-primary{background-color:#337ab7}.label-primary[href]:focus,.label-primary[href]:hover{background-color:#286090}.label-success{background-color:#5cb85c}.label-success[href]:focus,.label-success[href]:hover{background-color:#449d44}.label-info{background-color:#5bc0de}.label-info[href]:focus,.label-info[href]:hover{background-color:#31b0d5}.label-warning{background-color:#f0ad4e}.label-warning[href]:focus,.label-warning[href]:hover{background-color:#ec971f}.label-danger{background-color:#d9534f}.label-danger[href]:focus,.label-danger[href]:hover{background-color:#c9302c}.badge{display:inline-block;min-width:10px;padding:3px 7px;font-size:12px;font-weight:700;line-height:1;color:#fff;text-align:center;white-space:nowrap;vertical-align:middle;background-color:#777;border-radius:10px}.badge:empty{display:none}.btn .badge{position:relative;top:-1px}.btn-group-xs>.btn .badge,.btn-xs .badge{top:0;padding:1px 5px}a.badge:focus,a.badge:hover{color:#fff;text-decoration:none;cursor:pointer}.list-group-item.active>.badge,.nav-pills>.active>a>.badge{color:#337ab7;background-color:#fff}.list-group-item>.badge{float:right}.list-group-item>.badge+.badge{margin-right:5px}.nav-pills>li>a>.badge{margin-left:3px}.jumbotron{padding-top:30px;padding-bottom:30px;margin-bottom:30px;color:inherit;background-color:#eee}.jumbotron .h1,.jumbotron h1{color:inherit}.jumbotron p{margin-bottom:15px;font-size:21px;font-weight:200}.jumbotron>hr{border-top-color:#d5d5d5}.container .jumbotron,.container-fluid .jumbotron{padding-right:15px;padding-left:15px;border-radius:6px}.jumbotron .container{max-width:100%}@media screen and (min-width:768px){.jumbotron{padding-top:48px;padding-bottom:48px}.container .jumbotron,.container-fluid .jumbotron{padding-right:60px;padding-left:60px}.jumbotron .h1,.jumbotron h1{font-size:63px}}.thumbnail{display:block;padding:4px;margin-bottom:20px;line-height:1.42857143;background-color:#fff;border:1px solid #ddd;border-radius:4px;-webkit-transition:border .2s ease-in-out;-o-transition:border .2s ease-in-out;transition:border .2s ease-in-out}.thumbnail a>img,.thumbnail>img{margin-right:auto;margin-left:auto}a.thumbnail.active,a.thumbnail:focus,a.thumbnail:hover{border-color:#337ab7}.thumbnail .caption{padding:9px;color:#333}.alert{padding:15px;margin-bottom:20px;border:1px solid transparent;border-radius:4px}.alert h4{margin-top:0;color:inherit}.alert .alert-link{font-weight:700}.alert>p,.alert>ul{margin-bottom:0}.alert>p+p{margin-top:5px}.alert-dismissable,.alert-dismissible{padding-right:35px}.alert-dismissable .close,.alert-dismissible .close{position:relative;top:-2px;right:-21px;color:inherit}.alert-success{color:#3c763d;background-color:#dff0d8;border-color:#d6e9c6}.alert-success hr{border-top-color:#c9e2b3}.alert-success .alert-link{color:#2b542c}.alert-info{color:#31708f;background-color:#d9edf7;border-color:#bce8f1}.alert-info hr{border-top-color:#a6e1ec}.alert-info .alert-link{color:#245269}.alert-warning{color:#8a6d3b;background-color:#fcf8e3;border-color:#faebcc}.alert-warning hr{border-top-color:#f7e1b5}.alert-warning .alert-link{color:#66512c}.alert-danger{color:#a94442;background-color:#f2dede;border-color:#ebccd1}.alert-danger hr{border-top-color:#e4b9c0}.alert-danger .alert-link{color:#843534}@-webkit-keyframes progress-bar-stripes{from{background-position:40px 0}to{background-position:0 0}}@-o-keyframes progress-bar-stripes{from{background-position:40px 0}to{background-position:0 0}}@keyframes progress-bar-stripes{from{background-position:40px 0}to{background-position:0 0}}.progress{height:20px;margin-bottom:20px;overflow:hidden;background-color:#f5f5f5;border-radius:4px;-webkit-box-shadow:inset 0 1px 2px rgba(0,0,0,.1);box-shadow:inset 0 1px 2px rgba(0,0,0,.1)}.progress-bar{float:left;width:0;height:100%;font-size:12px;line-height:20px;color:#fff;text-align:center;background-color:#337ab7;-webkit-box-shadow:inset 0 -1px 0 rgba(0,0,0,.15);box-shadow:inset 0 -1px 0 rgba(0,0,0,.15);-webkit-transition:width .6s ease;-o-transition:width .6s ease;transition:width .6s ease}.progress-bar-striped,.progress-striped .progress-bar{background-image:-webkit-linear-gradient(45deg,rgba(255,255,255,.15) 25%,transparent 25%,transparent 50%,rgba(255,255,255,.15) 50%,rgba(255,255,255,.15) 75%,transparent 75%,transparent);background-image:-o-linear-gradient(45deg,rgba(255,255,255,.15) 25%,transparent 25%,transparent 50%,rgba(255,255,255,.15) 50%,rgba(255,255,255,.15) 75%,transparent 75%,transparent);background-image:linear-gradient(45deg,rgba(255,255,255,.15) 25%,transparent 25%,transparent 50%,rgba(255,255,255,.15) 50%,rgba(255,255,255,.15) 75%,transparent 75%,transparent);-webkit-background-size:40px 40px;background-size:40px 40px}.progress-bar.active,.progress.active .progress-bar{-webkit-animation:progress-bar-stripes 2s linear infinite;-o-animation:progress-bar-stripes 2s linear infinite;animation:progress-bar-stripes 2s linear infinite}.progress-bar-success{background-color:#5cb85c}.progress-striped .progress-bar-success{background-image:-webkit-linear-gradient(45deg,rgba(255,255,255,.15) 25%,transparent 25%,transparent 50%,rgba(255,255,255,.15) 50%,rgba(255,255,255,.15) 75%,transparent 75%,transparent);background-image:-o-linear-gradient(45deg,rgba(255,255,255,.15) 25%,transparent 25%,transparent 50%,rgba(255,255,255,.15) 50%,rgba(255,255,255,.15) 75%,transparent 75%,transparent);background-image:linear-gradient(45deg,rgba(255,255,255,.15) 25%,transparent 25%,transparent 50%,rgba(255,255,255,.15) 50%,rgba(255,255,255,.15) 75%,transparent 75%,transparent)}.progress-bar-info{background-color:#5bc0de}.progress-striped .progress-bar-info{background-image:-webkit-linear-gradient(45deg,rgba(255,255,255,.15) 25%,transparent 25%,transparent 50%,rgba(255,255,255,.15) 50%,rgba(255,255,255,.15) 75%,transparent 75%,transparent);background-image:-o-linear-gradient(45deg,rgba(255,255,255,.15) 25%,transparent 25%,transparent 50%,rgba(255,255,255,.15) 50%,rgba(255,255,255,.15) 75%,transparent 75%,transparent);background-image:linear-gradient(45deg,rgba(255,255,255,.15) 25%,transparent 25%,transparent 50%,rgba(255,255,255,.15) 50%,rgba(255,255,255,.15) 75%,transparent 75%,transparent)}.progress-bar-warning{background-color:#f0ad4e}.progress-striped .progress-bar-warning{background-image:-webkit-linear-gradient(45deg,rgba(255,255,255,.15) 25%,transparent 25%,transparent 50%,rgba(255,255,255,.15) 50%,rgba(255,255,255,.15) 75%,transparent 75%,transparent);background-image:-o-linear-gradient(45deg,rgba(255,255,255,.15) 25%,transparent 25%,transparent 50%,rgba(255,255,255,.15) 50%,rgba(255,255,255,.15) 75%,transparent 75%,transparent);background-image:linear-gradient(45deg,rgba(255,255,255,.15) 25%,transparent 25%,transparent 50%,rgba(255,255,255,.15) 50%,rgba(255,255,255,.15) 75%,transparent 75%,transparent)}.progress-bar-danger{background-color:#d9534f}.progress-striped .progress-bar-danger{background-image:-webkit-linear-gradient(45deg,rgba(255,255,255,.15) 25%,transparent 25%,transparent 50%,rgba(255,255,255,.15) 50%,rgba(255,255,255,.15) 75%,transparent 75%,transparent);background-image:-o-linear-gradient(45deg,rgba(255,255,255,.15) 25%,transparent 25%,transparent 50%,rgba(255,255,255,.15) 50%,rgba(255,255,255,.15) 75%,transparent 75%,transparent);background-image:linear-gradient(45deg,rgba(255,255,255,.15) 25%,transparent 25%,transparent 50%,rgba(255,255,255,.15) 50%,rgba(255,255,255,.15) 75%,transparent 75%,transparent)}.media{margin-top:15px}.media:first-child{margin-top:0}.media,.media-body{overflow:hidden;zoom:1}.media-body{width:10000px}.media-object{display:block}.media-object.img-thumbnail{max-width:none}.media-right,.media>.pull-right{padding-left:10px}.media-left,.media>.pull-left{padding-right:10px}.media-body,.media-left,.media-right{display:table-cell;vertical-align:top}.media-middle{vertical-align:middle}.media-bottom{vertical-align:bottom}.media-heading{margin-top:0;margin-bottom:5px}.media-list{padding-left:0;list-style:none}.list-group{padding-left:0;margin-bottom:20px}.list-group-item{position:relative;display:block;padding:10px 15px;margin-bottom:-1px;background-color:#fff;border:1px solid #ddd}.list-group-item:first-child{border-top-left-radius:4px;border-top-right-radius:4px}.list-group-item:last-child{margin-bottom:0;border-bottom-right-radius:4px;border-bottom-left-radius:4px}a.list-group-item,button.list-group-item{color:#555}a.list-group-item .list-group-item-heading,button.list-group-item .list-group-item-heading{color:#333}a.list-group-item:focus,a.list-group-item:hover,button.list-group-item:focus,button.list-group-item:hover{color:#555;text-decoration:none;background-color:#f5f5f5}button.list-group-item{width:100%;text-align:left}.list-group-item.disabled,.list-group-item.disabled:focus,.list-group-item.disabled:hover{color:#777;cursor:not-allowed;background-color:#eee}.list-group-item.disabled .list-group-item-heading,.list-group-item.disabled:focus .list-group-item-heading,.list-group-item.disabled:hover .list-group-item-heading{color:inherit}.list-group-item.disabled .list-group-item-text,.list-group-item.disabled:focus .list-group-item-text,.list-group-item.disabled:hover .list-group-item-text{color:#777}.list-group-item.active,.list-group-item.active:focus,.list-group-item.active:hover{z-index:2;color:#fff;background-color:#337ab7;border-color:#337ab7}.list-group-item.active .list-group-item-heading,.list-group-item.active .list-group-item-heading>.small,.list-group-item.active .list-group-item-heading>small,.list-group-item.active:focus .list-group-item-heading,.list-group-item.active:focus .list-group-item-heading>.small,.list-group-item.active:focus .list-group-item-heading>small,.list-group-item.active:hover .list-group-item-heading,.list-group-item.active:hover .list-group-item-heading>.small,.list-group-item.active:hover .list-group-item-heading>small{color:inherit}.list-group-item.active .list-group-item-text,.list-group-item.active:focus .list-group-item-text,.list-group-item.active:hover .list-group-item-text{color:#c7ddef}.list-group-item-success{color:#3c763d;background-color:#dff0d8}a.list-group-item-success,button.list-group-item-success{color:#3c763d}a.list-group-item-success .list-group-item-heading,button.list-group-item-success .list-group-item-heading{color:inherit}a.list-group-item-success:focus,a.list-group-item-success:hover,button.list-group-item-success:focus,button.list-group-item-success:hover{color:#3c763d;background-color:#d0e9c6}a.list-group-item-success.active,a.list-group-item-success.active:focus,a.list-group-item-success.active:hover,button.list-group-item-success.active,button.list-group-item-success.active:focus,button.list-group-item-success.active:hover{color:#fff;background-color:#3c763d;border-color:#3c763d}.list-group-item-info{color:#31708f;background-color:#d9edf7}a.list-group-item-info,button.list-group-item-info{color:#31708f}a.list-group-item-info .list-group-item-heading,button.list-group-item-info .list-group-item-heading{color:inherit}a.list-group-item-info:focus,a.list-group-item-info:hover,button.list-group-item-info:focus,button.list-group-item-info:hover{color:#31708f;background-color:#c4e3f3}a.list-group-item-info.active,a.list-group-item-info.active:focus,a.list-group-item-info.active:hover,button.list-group-item-info.active,button.list-group-item-info.active:focus,button.list-group-item-info.active:hover{color:#fff;background-color:#31708f;border-color:#31708f}.list-group-item-warning{color:#8a6d3b;background-color:#fcf8e3}a.list-group-item-warning,button.list-group-item-warning{color:#8a6d3b}a.list-group-item-warning .list-group-item-heading,button.list-group-item-warning .list-group-item-heading{color:inherit}a.list-group-item-warning:focus,a.list-group-item-warning:hover,button.list-group-item-warning:focus,button.list-group-item-warning:hover{color:#8a6d3b;background-color:#faf2cc}a.list-group-item-warning.active,a.list-group-item-warning.active:focus,a.list-group-item-warning.active:hover,button.list-group-item-warning.active,button.list-group-item-warning.active:focus,button.list-group-item-warning.active:hover{color:#fff;background-color:#8a6d3b;border-color:#8a6d3b}.list-group-item-danger{color:#a94442;background-color:#f2dede}a.list-group-item-danger,button.list-group-item-danger{color:#a94442}a.list-group-item-danger .list-group-item-heading,button.list-group-item-danger .list-group-item-heading{color:inherit}a.list-group-item-danger:focus,a.list-group-item-danger:hover,button.list-group-item-danger:focus,button.list-group-item-danger:hover{color:#a94442;background-color:#ebcccc}a.list-group-item-danger.active,a.list-group-item-danger.active:focus,a.list-group-item-danger.active:hover,button.list-group-item-danger.active,button.list-group-item-danger.active:focus,button.list-group-item-danger.active:hover{color:#fff;background-color:#a94442;border-color:#a94442}.list-group-item-heading{margin-top:0;margin-bottom:5px}.list-group-item-text{margin-bottom:0;line-height:1.3}.panel{margin-bottom:20px;background-color:#fff;border:1px solid transparent;border-radius:4px;-webkit-box-shadow:0 1px 1px rgba(0,0,0,.05);box-shadow:0 1px 1px rgba(0,0,0,.05)}.panel-body{padding:15px}.panel-heading{padding:10px 15px;border-bottom:1px solid transparent;border-top-left-radius:3px;border-top-right-radius:3px}.panel-heading>.dropdown .dropdown-toggle{color:inherit}.panel-title{margin-top:0;margin-bottom:0;font-size:16px;color:inherit}.panel-title>.small,.panel-title>.small>a,.panel-title>a,.panel-title>small,.panel-title>small>a{color:inherit}.panel-footer{padding:10px 15px;background-color:#f5f5f5;border-top:1px solid #ddd;border-bottom-right-radius:3px;border-bottom-left-radius:3px}.panel>.list-group,.panel>.panel-collapse>.list-group{margin-bottom:0}.panel>.list-group .list-group-item,.panel>.panel-collapse>.list-group .list-group-item{border-width:1px 0;border-radius:0}.panel>.list-group:first-child .list-group-item:first-child,.panel>.panel-collapse>.list-group:first-child .list-group-item:first-child{border-top:0;border-top-left-radius:3px;border-top-right-radius:3px}.panel>.list-group:last-child .list-group-item:last-child,.panel>.panel-collapse>.list-group:last-child .list-group-item:last-child{border-bottom:0;border-bottom-right-radius:3px;border-bottom-left-radius:3px}.panel>.panel-heading+.panel-collapse>.list-group .list-group-item:first-child{border-top-left-radius:0;border-top-right-radius:0}.panel-heading+.list-group .list-group-item:first-child{border-top-width:0}.list-group+.panel-footer{border-top-width:0}.panel>.panel-collapse>.table,.panel>.table,.panel>.table-responsive>.table{margin-bottom:0}.panel>.panel-collapse>.table caption,.panel>.table caption,.panel>.table-responsive>.table caption{padding-right:15px;padding-left:15px}.panel>.table-responsive:first-child>.table:first-child,.panel>.table:first-child{border-top-left-radius:3px;border-top-right-radius:3px}.panel>.table-responsive:first-child>.table:first-child>tbody:first-child>tr:first-child,.panel>.table-responsive:first-child>.table:first-child>thead:first-child>tr:first-child,.panel>.table:first-child>tbody:first-child>tr:first-child,.panel>.table:first-child>thead:first-child>tr:first-child{border-top-left-radius:3px;border-top-right-radius:3px}.panel>.table-responsive:first-child>.table:first-child>tbody:first-child>tr:first-child td:first-child,.panel>.table-responsive:first-child>.table:first-child>tbody:first-child>tr:first-child th:first-child,.panel>.table-responsive:first-child>.table:first-child>thead:first-child>tr:first-child td:first-child,.panel>.table-responsive:first-child>.table:first-child>thead:first-child>tr:first-child th:first-child,.panel>.table:first-child>tbody:first-child>tr:first-child td:first-child,.panel>.table:first-child>tbody:first-child>tr:first-child th:first-child,.panel>.table:first-child>thead:first-child>tr:first-child td:first-child,.panel>.table:first-child>thead:first-child>tr:first-child th:first-child{border-top-left-radius:3px}.panel>.table-responsive:first-child>.table:first-child>tbody:first-child>tr:first-child td:last-child,.panel>.table-responsive:first-child>.table:first-child>tbody:first-child>tr:first-child th:last-child,.panel>.table-responsive:first-child>.table:first-child>thead:first-child>tr:first-child td:last-child,.panel>.table-responsive:first-child>.table:first-child>thead:first-child>tr:first-child th:last-child,.panel>.table:first-child>tbody:first-child>tr:first-child td:last-child,.panel>.table:first-child>tbody:first-child>tr:first-child th:last-child,.panel>.table:first-child>thead:first-child>tr:first-child td:last-child,.panel>.table:first-child>thead:first-child>tr:first-child th:last-child{border-top-right-radius:3px}.panel>.table-responsive:last-child>.table:last-child,.panel>.table:last-child{border-bottom-right-radius:3px;border-bottom-left-radius:3px}.panel>.table-responsive:last-child>.table:last-child>tbody:last-child>tr:last-child,.panel>.table-responsive:last-child>.table:last-child>tfoot:last-child>tr:last-child,.panel>.table:last-child>tbody:last-child>tr:last-child,.panel>.table:last-child>tfoot:last-child>tr:last-child{border-bottom-right-radius:3px;border-bottom-left-radius:3px}.panel>.table-responsive:last-child>.table:last-child>tbody:last-child>tr:last-child td:first-child,.panel>.table-responsive:last-child>.table:last-child>tbody:last-child>tr:last-child th:first-child,.panel>.table-responsive:last-child>.table:last-child>tfoot:last-child>tr:last-child td:first-child,.panel>.table-responsive:last-child>.table:last-child>tfoot:last-child>tr:last-child th:first-child,.panel>.table:last-child>tbody:last-child>tr:last-child td:first-child,.panel>.table:last-child>tbody:last-child>tr:last-child th:first-child,.panel>.table:last-child>tfoot:last-child>tr:last-child td:first-child,.panel>.table:last-child>tfoot:last-child>tr:last-child th:first-child{border-bottom-left-radius:3px}.panel>.table-responsive:last-child>.table:last-child>tbody:last-child>tr:last-child td:last-child,.panel>.table-responsive:last-child>.table:last-child>tbody:last-child>tr:last-child th:last-child,.panel>.table-responsive:last-child>.table:last-child>tfoot:last-child>tr:last-child td:last-child,.panel>.table-responsive:last-child>.table:last-child>tfoot:last-child>tr:last-child th:last-child,.panel>.table:last-child>tbody:last-child>tr:last-child td:last-child,.panel>.table:last-child>tbody:last-child>tr:last-child th:last-child,.panel>.table:last-child>tfoot:last-child>tr:last-child td:last-child,.panel>.table:last-child>tfoot:last-child>tr:last-child th:last-child{border-bottom-right-radius:3px}.panel>.panel-body+.table,.panel>.panel-body+.table-responsive,.panel>.table+.panel-body,.panel>.table-responsive+.panel-body{border-top:1px solid #ddd}.panel>.table>tbody:first-child>tr:first-child td,.panel>.table>tbody:first-child>tr:first-child th{border-top:0}.panel>.table-bordered,.panel>.table-responsive>.table-bordered{border:0}.panel>.table-bordered>tbody>tr>td:first-child,.panel>.table-bordered>tbody>tr>th:first-child,.panel>.table-bordered>tfoot>tr>td:first-child,.panel>.table-bordered>tfoot>tr>th:first-child,.panel>.table-bordered>thead>tr>td:first-child,.panel>.table-bordered>thead>tr>th:first-child,.panel>.table-responsive>.table-bordered>tbody>tr>td:first-child,.panel>.table-responsive>.table-bordered>tbody>tr>th:first-child,.panel>.table-responsive>.table-bordered>tfoot>tr>td:first-child,.panel>.table-responsive>.table-bordered>tfoot>tr>th:first-child,.panel>.table-responsive>.table-bordered>thead>tr>td:first-child,.panel>.table-responsive>.table-bordered>thead>tr>th:first-child{border-left:0}.panel>.table-bordered>tbody>tr>td:last-child,.panel>.table-bordered>tbody>tr>th:last-child,.panel>.table-bordered>tfoot>tr>td:last-child,.panel>.table-bordered>tfoot>tr>th:last-child,.panel>.table-bordered>thead>tr>td:last-child,.panel>.table-bordered>thead>tr>th:last-child,.panel>.table-responsive>.table-bordered>tbody>tr>td:last-child,.panel>.table-responsive>.table-bordered>tbody>tr>th:last-child,.panel>.table-responsive>.table-bordered>tfoot>tr>td:last-child,.panel>.table-responsive>.table-bordered>tfoot>tr>th:last-child,.panel>.table-responsive>.table-bordered>thead>tr>td:last-child,.panel>.table-responsive>.table-bordered>thead>tr>th:last-child{border-right:0}.panel>.table-bordered>tbody>tr:first-child>td,.panel>.table-bordered>tbody>tr:first-child>th,.panel>.table-bordered>thead>tr:first-child>td,.panel>.table-bordered>thead>tr:first-child>th,.panel>.table-responsive>.table-bordered>tbody>tr:first-child>td,.panel>.table-responsive>.table-bordered>tbody>tr:first-child>th,.panel>.table-responsive>.table-bordered>thead>tr:first-child>td,.panel>.table-responsive>.table-bordered>thead>tr:first-child>th{border-bottom:0}.panel>.table-bordered>tbody>tr:last-child>td,.panel>.table-bordered>tbody>tr:last-child>th,.panel>.table-bordered>tfoot>tr:last-child>td,.panel>.table-bordered>tfoot>tr:last-child>th,.panel>.table-responsive>.table-bordered>tbody>tr:last-child>td,.panel>.table-responsive>.table-bordered>tbody>tr:last-child>th,.panel>.table-responsive>.table-bordered>tfoot>tr:last-child>td,.panel>.table-responsive>.table-bordered>tfoot>tr:last-child>th{border-bottom:0}.panel>.table-responsive{margin-bottom:0;border:0}.panel-group{margin-bottom:20px}.panel-group .panel{margin-bottom:0;border-radius:4px}.panel-group .panel+.panel{margin-top:5px}.panel-group .panel-heading{border-bottom:0}.panel-group .panel-heading+.panel-collapse>.list-group,.panel-group .panel-heading+.panel-collapse>.panel-body{border-top:1px solid #ddd}.panel-group .panel-footer{border-top:0}.panel-group .panel-footer+.panel-collapse .panel-body{border-bottom:1px solid #ddd}.panel-default{border-color:#ddd}.panel-default>.panel-heading{color:#333;background-color:#f5f5f5;border-color:#ddd}.panel-default>.panel-heading+.panel-collapse>.panel-body{border-top-color:#ddd}.panel-default>.panel-heading .badge{color:#f5f5f5;background-color:#333}.panel-default>.panel-footer+.panel-collapse>.panel-body{border-bottom-color:#ddd}.panel-primary{border-color:#337ab7}.panel-primary>.panel-heading{color:#fff;background-color:#337ab7;border-color:#337ab7}.panel-primary>.panel-heading+.panel-collapse>.panel-body{border-top-color:#337ab7}.panel-primary>.panel-heading .badge{color:#337ab7;background-color:#fff}.panel-primary>.panel-footer+.panel-collapse>.panel-body{border-bottom-color:#337ab7}.panel-success{border-color:#d6e9c6}.panel-success>.panel-heading{color:#3c763d;background-color:#dff0d8;border-color:#d6e9c6}.panel-success>.panel-heading+.panel-collapse>.panel-body{border-top-color:#d6e9c6}.panel-success>.panel-heading .badge{color:#dff0d8;background-color:#3c763d}.panel-success>.panel-footer+.panel-collapse>.panel-body{border-bottom-color:#d6e9c6}.panel-info{border-color:#bce8f1}.panel-info>.panel-heading{color:#31708f;background-color:#d9edf7;border-color:#bce8f1}.panel-info>.panel-heading+.panel-collapse>.panel-body{border-top-color:#bce8f1}.panel-info>.panel-heading .badge{color:#d9edf7;background-color:#31708f}.panel-info>.panel-footer+.panel-collapse>.panel-body{border-bottom-color:#bce8f1}.panel-warning{border-color:#faebcc}.panel-warning>.panel-heading{color:#8a6d3b;background-color:#fcf8e3;border-color:#faebcc}.panel-warning>.panel-heading+.panel-collapse>.panel-body{border-top-color:#faebcc}.panel-warning>.panel-heading .badge{color:#fcf8e3;background-color:#8a6d3b}.panel-warning>.panel-footer+.panel-collapse>.panel-body{border-bottom-color:#faebcc}.panel-danger{border-color:#ebccd1}.panel-danger>.panel-heading{color:#a94442;background-color:#f2dede;border-color:#ebccd1}.panel-danger>.panel-heading+.panel-collapse>.panel-body{border-top-color:#ebccd1}.panel-danger>.panel-heading .badge{color:#f2dede;background-color:#a94442}.panel-danger>.panel-footer+.panel-collapse>.panel-body{border-bottom-color:#ebccd1}.embed-responsive{position:relative;display:block;height:0;padding:0;overflow:hidden}.embed-responsive .embed-responsive-item,.embed-responsive embed,.embed-responsive iframe,.embed-responsive object,.embed-responsive video{position:absolute;top:0;bottom:0;left:0;width:100%;height:100%;border:0}.embed-responsive-16by9{padding-bottom:56.25%}.embed-responsive-4by3{padding-bottom:75%}.well{min-height:20px;padding:19px;margin-bottom:20px;background-color:#f5f5f5;border:1px solid #e3e3e3;border-radius:4px;-webkit-box-shadow:inset 0 1px 1px rgba(0,0,0,.05);box-shadow:inset 0 1px 1px rgba(0,0,0,.05)}.well blockquote{border-color:#ddd;border-color:rgba(0,0,0,.15)}.well-lg{padding:24px;border-radius:6px}.well-sm{padding:9px;border-radius:3px}.close{float:right;font-size:21px;font-weight:700;line-height:1;color:#000;text-shadow:0 1px 0 #fff;filter:alpha(opacity=20);opacity:.2}.close:focus,.close:hover{color:#000;text-decoration:none;cursor:pointer;filter:alpha(opacity=50);opacity:.5}button.close{-webkit-appearance:none;padding:0;cursor:pointer;background:0 0;border:0}.modal-open{overflow:hidden}.modal{position:fixed;top:0;right:0;bottom:0;left:0;z-index:1050;display:none;overflow:hidden;-webkit-overflow-scrolling:touch;outline:0}.modal.fade .modal-dialog{-webkit-transition:-webkit-transform .3s ease-out;-o-transition:-o-transform .3s ease-out;transition:transform .3s ease-out;-webkit-transform:translate(0,-25%);-ms-transform:translate(0,-25%);-o-transform:translate(0,-25%);transform:translate(0,-25%)}.modal.in .modal-dialog{-webkit-transform:translate(0,0);-ms-transform:translate(0,0);-o-transform:translate(0,0);transform:translate(0,0)}.modal-open .modal{overflow-x:hidden;overflow-y:auto}.modal-dialog{position:relative;width:auto;margin:10px}.modal-content{position:relative;background-color:#fff;-webkit-background-clip:padding-box;background-clip:padding-box;border:1px solid #999;border:1px solid rgba(0,0,0,.2);border-radius:6px;outline:0;-webkit-box-shadow:0 3px 9px rgba(0,0,0,.5);box-shadow:0 3px 9px rgba(0,0,0,.5)}.modal-backdrop{position:fixed;top:0;right:0;bottom:0;left:0;z-index:1040;background-color:#000}.modal-backdrop.fade{filter:alpha(opacity=0);opacity:0}.modal-backdrop.in{filter:alpha(opacity=50);opacity:.5}.modal-header{padding:15px;border-bottom:1px solid #e5e5e5}.modal-header .close{margin-top:-2px}.modal-title{margin:0;line-height:1.42857143}.modal-body{position:relative;padding:15px}.modal-footer{padding:15px;text-align:right;border-top:1px solid #e5e5e5}.modal-footer .btn+.btn{margin-bottom:0;margin-left:5px}.modal-footer .btn-group .btn+.btn{margin-left:-1px}.modal-footer .btn-block+.btn-block{margin-left:0}.modal-scrollbar-measure{position:absolute;top:-9999px;width:50px;height:50px;overflow:scroll}@media (min-width:768px){.modal-dialog{width:600px;margin:30px auto}.modal-content{-webkit-box-shadow:0 5px 15px rgba(0,0,0,.5);box-shadow:0 5px 15px rgba(0,0,0,.5)}.modal-sm{width:300px}}@media (min-width:992px){.modal-lg{width:900px}}.tooltip{position:absolute;z-index:1070;display:block;font-family:"Helvetica Neue",Helvetica,Arial,sans-serif;font-size:12px;font-style:normal;font-weight:400;line-height:1.42857143;text-align:left;text-align:start;text-decoration:none;text-shadow:none;text-transform:none;letter-spacing:normal;word-break:normal;word-spacing:normal;word-wrap:normal;white-space:normal;filter:alpha(opacity=0);opacity:0;line-break:auto}.tooltip.in{filter:alpha(opacity=90);opacity:.9}.tooltip.top{padding:5px 0;margin-top:-3px}.tooltip.right{padding:0 5px;margin-left:3px}.tooltip.bottom{padding:5px 0;margin-top:3px}.tooltip.left{padding:0 5px;margin-left:-3px}.tooltip-inner{max-width:200px;padding:3px 8px;color:#fff;text-align:center;background-color:#000;border-radius:4px}.tooltip-arrow{position:absolute;width:0;height:0;border-color:transparent;border-style:solid}.tooltip.top .tooltip-arrow{bottom:0;left:50%;margin-left:-5px;border-width:5px 5px 0;border-top-color:#000}.tooltip.top-left .tooltip-arrow{right:5px;bottom:0;margin-bottom:-5px;border-width:5px 5px 0;border-top-color:#000}.tooltip.top-right .tooltip-arrow{bottom:0;left:5px;margin-bottom:-5px;border-width:5px 5px 0;border-top-color:#000}.tooltip.right .tooltip-arrow{top:50%;left:0;margin-top:-5px;border-width:5px 5px 5px 0;border-right-color:#000}.tooltip.left .tooltip-arrow{top:50%;right:0;margin-top:-5px;border-width:5px 0 5px 5px;border-left-color:#000}.tooltip.bottom .tooltip-arrow{top:0;left:50%;margin-left:-5px;border-width:0 5px 5px;border-bottom-color:#000}.tooltip.bottom-left .tooltip-arrow{top:0;right:5px;margin-top:-5px;border-width:0 5px 5px;border-bottom-color:#000}.tooltip.bottom-right .tooltip-arrow{top:0;left:5px;margin-top:-5px;border-width:0 5px 5px;border-bottom-color:#000}.popover{position:absolute;top:0;left:0;z-index:1060;display:none;max-width:276px;padding:1px;font-family:"Helvetica Neue",Helvetica,Arial,sans-serif;font-size:14px;font-style:normal;font-weight:400;line-height:1.42857143;text-align:left;text-align:start;text-decoration:none;text-shadow:none;text-transform:none;letter-spacing:normal;word-break:normal;word-spacing:normal;word-wrap:normal;white-space:normal;background-color:#fff;-webkit-background-clip:padding-box;background-clip:padding-box;border:1px solid #ccc;border:1px solid rgba(0,0,0,.2);border-radius:6px;-webkit-box-shadow:0 5px 10px rgba(0,0,0,.2);box-shadow:0 5px 10px rgba(0,0,0,.2);line-break:auto}.popover.top{margin-top:-10px}.popover.right{margin-left:10px}.popover.bottom{margin-top:10px}.popover.left{margin-left:-10px}.popover-title{padding:8px 14px;margin:0;font-size:14px;background-color:#f7f7f7;border-bottom:1px solid #ebebeb;border-radius:5px 5px 0 0}.popover-content{padding:9px 14px}.popover>.arrow,.popover>.arrow:after{position:absolute;display:block;width:0;height:0;border-color:transparent;border-style:solid}.popover>.arrow{border-width:11px}.popover>.arrow:after{content:"";border-width:10px}.popover.top>.arrow{bottom:-11px;left:50%;margin-left:-11px;border-top-color:#999;border-top-color:rgba(0,0,0,.25);border-bottom-width:0}.popover.top>.arrow:after{bottom:1px;margin-left:-10px;content:" ";border-top-color:#fff;border-bottom-width:0}.popover.right>.arrow{top:50%;left:-11px;margin-top:-11px;border-right-color:#999;border-right-color:rgba(0,0,0,.25);border-left-width:0}.popover.right>.arrow:after{bottom:-10px;left:1px;content:" ";border-right-color:#fff;border-left-width:0}.popover.bottom>.arrow{top:-11px;left:50%;margin-left:-11px;border-top-width:0;border-bottom-color:#999;border-bottom-color:rgba(0,0,0,.25)}.popover.bottom>.arrow:after{top:1px;margin-left:-10px;content:" ";border-top-width:0;border-bottom-color:#fff}.popover.left>.arrow{top:50%;right:-11px;margin-top:-11px;border-right-width:0;border-left-color:#999;border-left-color:rgba(0,0,0,.25)}.popover.left>.arrow:after{right:1px;bottom:-10px;content:" ";border-right-width:0;border-left-color:#fff}.carousel{position:relative}.carousel-inner{position:relative;width:100%;overflow:hidden}.carousel-inner>.item{position:relative;display:none;-webkit-transition:.6s ease-in-out left;-o-transition:.6s ease-in-out left;transition:.6s ease-in-out left}.carousel-inner>.item>a>img,.carousel-inner>.item>img{line-height:1}@media all and (transform-3d),(-webkit-transform-3d){.carousel-inner>.item{-webkit-transition:-webkit-transform .6s ease-in-out;-o-transition:-o-transform .6s ease-in-out;transition:transform .6s ease-in-out;-webkit-backface-visibility:hidden;backface-visibility:hidden;-webkit-perspective:1000px;perspective:1000px}.carousel-inner>.item.active.right,.carousel-inner>.item.next{left:0;-webkit-transform:translate3d(100%,0,0);transform:translate3d(100%,0,0)}.carousel-inner>.item.active.left,.carousel-inner>.item.prev{left:0;-webkit-transform:translate3d(-100%,0,0);transform:translate3d(-100%,0,0)}.carousel-inner>.item.active,.carousel-inner>.item.next.left,.carousel-inner>.item.prev.right{left:0;-webkit-transform:translate3d(0,0,0);transform:translate3d(0,0,0)}}.carousel-inner>.active,.carousel-inner>.next,.carousel-inner>.prev{display:block}.carousel-inner>.active{left:0}.carousel-inner>.next,.carousel-inner>.prev{position:absolute;top:0;width:100%}.carousel-inner>.next{left:100%}.carousel-inner>.prev{left:-100%}.carousel-inner>.next.left,.carousel-inner>.prev.right{left:0}.carousel-inner>.active.left{left:-100%}.carousel-inner>.active.right{left:100%}.carousel-control{position:absolute;top:0;bottom:0;left:0;width:15%;font-size:20px;color:#fff;text-align:center;text-shadow:0 1px 2px rgba(0,0,0,.6);background-color:rgba(0,0,0,0);filter:alpha(opacity=50);opacity:.5}.carousel-control.left{background-image:-webkit-linear-gradient(left,rgba(0,0,0,.5) 0,rgba(0,0,0,.0001) 100%);background-image:-o-linear-gradient(left,rgba(0,0,0,.5) 0,rgba(0,0,0,.0001) 100%);background-image:-webkit-gradient(linear,left top,right top,from(rgba(0,0,0,.5)),to(rgba(0,0,0,.0001)));background-image:linear-gradient(to right,rgba(0,0,0,.5) 0,rgba(0,0,0,.0001) 100%);filter:progid:DXImageTransform.Microsoft.gradient(startColorstr='#80000000', endColorstr='#00000000', GradientType=1);background-repeat:repeat-x}.carousel-control.right{right:0;left:auto;background-image:-webkit-linear-gradient(left,rgba(0,0,0,.0001) 0,rgba(0,0,0,.5) 100%);background-image:-o-linear-gradient(left,rgba(0,0,0,.0001) 0,rgba(0,0,0,.5) 100%);background-image:-webkit-gradient(linear,left top,right top,from(rgba(0,0,0,.0001)),to(rgba(0,0,0,.5)));background-image:linear-gradient(to right,rgba(0,0,0,.0001) 0,rgba(0,0,0,.5) 100%);filter:progid:DXImageTransform.Microsoft.gradient(startColorstr='#00000000', endColorstr='#80000000', GradientType=1);background-repeat:repeat-x}.carousel-control:focus,.carousel-control:hover{color:#fff;text-decoration:none;filter:alpha(opacity=90);outline:0;opacity:.9}.carousel-control .glyphicon-chevron-left,.carousel-control .glyphicon-chevron-right,.carousel-control .icon-next,.carousel-control .icon-prev{position:absolute;top:50%;z-index:5;display:inline-block;margin-top:-10px}.carousel-control .glyphicon-chevron-left,.carousel-control .icon-prev{left:50%;margin-left:-10px}.carousel-control .glyphicon-chevron-right,.carousel-control .icon-next{right:50%;margin-right:-10px}.carousel-control .icon-next,.carousel-control .icon-prev{width:20px;height:20px;font-family:serif;line-height:1}.carousel-control .icon-prev:before{content:'\2039'}.carousel-control .icon-next:before{content:'\203a'}.carousel-indicators{position:absolute;bottom:10px;left:50%;z-index:15;width:60%;padding-left:0;margin-left:-30%;text-align:center;list-style:none}.carousel-indicators li{display:inline-block;width:10px;height:10px;margin:1px;text-indent:-999px;cursor:pointer;background-color:#000\9;background-color:rgba(0,0,0,0);border:1px solid #fff;border-radius:10px}.carousel-indicators .active{width:12px;height:12px;margin:0;background-color:#fff}.carousel-caption{position:absolute;right:15%;bottom:20px;left:15%;z-index:10;padding-top:20px;padding-bottom:20px;color:#fff;text-align:center;text-shadow:0 1px 2px rgba(0,0,0,.6)}.carousel-caption .btn{text-shadow:none}@media screen and (min-width:768px){.carousel-control .glyphicon-chevron-left,.carousel-control .glyphicon-chevron-right,.carousel-control .icon-next,.carousel-control .icon-prev{width:30px;height:30px;margin-top:-10px;font-size:30px}.carousel-control .glyphicon-chevron-left,.carousel-control .icon-prev{margin-left:-10px}.carousel-control .glyphicon-chevron-right,.carousel-control .icon-next{margin-right:-10px}.carousel-caption{right:20%;left:20%;padding-bottom:30px}.carousel-indicators{bottom:20px}}.btn-group-vertical>.btn-group:after,.btn-group-vertical>.btn-group:before,.btn-toolbar:after,.btn-toolbar:before,.clearfix:after,.clearfix:before,.container-fluid:after,.container-fluid:before,.container:after,.container:before,.dl-horizontal dd:after,.dl-horizontal dd:before,.form-horizontal .form-group:after,.form-horizontal .form-group:before,.modal-footer:after,.modal-footer:before,.modal-header:after,.modal-header:before,.nav:after,.nav:before,.navbar-collapse:after,.navbar-collapse:before,.navbar-header:after,.navbar-header:before,.navbar:after,.navbar:before,.pager:after,.pager:before,.panel-body:after,.panel-body:before,.row:after,.row:before{display:table;content:" "}.btn-group-vertical>.btn-group:after,.btn-toolbar:after,.clearfix:after,.container-fluid:after,.container:after,.dl-horizontal dd:after,.form-horizontal .form-group:after,.modal-footer:after,.modal-header:after,.nav:after,.navbar-collapse:after,.navbar-header:after,.navbar:after,.pager:after,.panel-body:after,.row:after{clear:both}.center-block{display:block;margin-right:auto;margin-left:auto}.pull-right{float:right!important}.pull-left{float:left!important}.hide{display:none!important}.show{display:block!important}.invisible{visibility:hidden}.text-hide{font:0/0 a;color:transparent;text-shadow:none;background-color:transparent;border:0}.hidden{display:none!important}.affix{position:fixed}@-ms-viewport{width:device-width}.visible-lg,.visible-md,.visible-sm,.visible-xs{display:none!important}.visible-lg-block,.visible-lg-inline,.visible-lg-inline-block,.visible-md-block,.visible-md-inline,.visible-md-inline-block,.visible-sm-block,.visible-sm-inline,.visible-sm-inline-block,.visible-xs-block,.visible-xs-inline,.visible-xs-inline-block{display:none!important}@media (max-width:767px){.visible-xs{display:block!important}table.visible-xs{display:table!important}tr.visible-xs{display:table-row!important}td.visible-xs,th.visible-xs{display:table-cell!important}}@media (max-width:767px){.visible-xs-block{display:block!important}}@media (max-width:767px){.visible-xs-inline{display:inline!important}}@media (max-width:767px){.visible-xs-inline-block{display:inline-block!important}}@media (min-width:768px) and (max-width:991px){.visible-sm{display:block!important}table.visible-sm{display:table!important}tr.visible-sm{display:table-row!important}td.visible-sm,th.visible-sm{display:table-cell!important}}@media (min-width:768px) and (max-width:991px){.visible-sm-block{display:block!important}}@media (min-width:768px) and (max-width:991px){.visible-sm-inline{display:inline!important}}@media (min-width:768px) and (max-width:991px){.visible-sm-inline-block{display:inline-block!important}}@media (min-width:992px) and (max-width:1199px){.visible-md{display:block!important}table.visible-md{display:table!important}tr.visible-md{display:table-row!important}td.visible-md,th.visible-md{display:table-cell!important}}@media (min-width:992px) and (max-width:1199px){.visible-md-block{display:block!important}}@media (min-width:992px) and (max-width:1199px){.visible-md-inline{display:inline!important}}@media (min-width:992px) and (max-width:1199px){.visible-md-inline-block{display:inline-block!important}}@media (min-width:1200px){.visible-lg{display:block!important}table.visible-lg{display:table!important}tr.visible-lg{display:table-row!important}td.visible-lg,th.visible-lg{display:table-cell!important}}@media (min-width:1200px){.visible-lg-block{display:block!important}}@media (min-width:1200px){.visible-lg-inline{display:inline!important}}@media (min-width:1200px){.visible-lg-inline-block{display:inline-block!important}}@media (max-width:767px){.hidden-xs{display:none!important}}@media (min-width:768px) and (max-width:991px){.hidden-sm{display:none!important}}@media (min-width:992px) and (max-width:1199px){.hidden-md{display:none!important}}@media (min-width:1200px){.hidden-lg{display:none!important}}.visible-print{display:none!important}@media print{.visible-print{display:block!important}table.visible-print{display:table!important}tr.visible-print{display:table-row!important}td.visible-print,th.visible-print{display:table-cell!important}}.visible-print-block{display:none!important}@media print{.visible-print-block{display:block!important}}.visible-print-inline{display:none!important}@media print{.visible-print-inline{display:inline!important}}.visible-print-inline-block{display:none!important}@media print{.visible-print-inline-block{display:inline-block!important}}@media print{.hidden-print{display:none!important}}
/*# sourceMappingURL=bootstrap.min.css.map */

================================================================================
END: D:\QiEOS\apps\web\public\builtbyrays_public\builtbyrays.com\public\css\bootstrap.min.css
================================================================================


================================================================================
FILE: D:\QiEOS\apps\web\public\builtbyrays_public\builtbyrays.com\public\css\style.css
================================================================================

body,
html {
  font-family: "Open Sans", sans-serif;
  text-rendering: optimizeLegibility !important;
  -webkit-font-smoothing: antialiased !important;
  color: #777;
  font-weight: 400;
  width: 100% !important;
  height: 100% !important;
}
h2,
h3,
h4 {
  font-family: "Raleway", sans-serif;
}
h2 {
  text-transform: uppercase;
  margin: 0 0 20px;
  font-weight: 800;
  font-size: 36px;
  color: #333;
}
h3 {
  font-size: 20px;
  font-weight: 600;
  color: #333;
}
h4 {
  font-size: 18px;
  color: #333;
  font-weight: 600;
}
h5 {
  text-transform: uppercase;
  font-weight: 700;
  line-height: 20px;
}
p {
  font-size: 15px;
}
p.intro {
  margin: 12px 0 0;
  line-height: 24px;
}
a {
  color: #608dfd;
  font-weight: 400;
}
a:hover,
a:focus {
  text-decoration: none;
  color: #608dfd;
}
ul,
ol {
  list-style: none;
}
ul,
ol {
  padding: 0;
  webkit-padding: 0;
  moz-padding: 0;
}
hr {
  height: 2px;
  width: 70px;
  text-align: center;
  position: relative;
  background: #1e7a46;
  margin-bottom: 20px;
  border: 0;
}
/* Navigation */
#menu {
  padding: 15px;
  transition: all 0.8s;
}
#menu.navbar-default {
  background-color: #fff;
  border-color: rgba(231, 231, 231, 0);
  box-shadow: 0 0 10px rgba(0, 0, 0, 0.15);
}
#menu a.navbar-brand {
  font-family: "Raleway", sans-serif;
  font-size: 24px;
  font-weight: 700;
  color: #333;
  text-transform: uppercase;
}
#menu.navbar-default .navbar-nav > li > a {
  font-family: "Lato", sans-serif;
  text-transform: uppercase;
  color: #555;
  font-size: 15px;
  font-weight: 400;
  padding: 8px 2px;
  border-radius: 0;
  margin: 9px 20px 0;
}
#menu.navbar-default .navbar-nav > li > a:after {
  display: block;
  position: absolute;
  left: 0;
  bottom: -1px;
  width: 0;
  height: 2px;
  background: linear-gradient(to right, #6372ff 0%, #5ca9fb 100%);
  content: "";
  transition: width 0.2s;
}
#menu.navbar-default .navbar-nav > li > a:hover:after {
  width: 100%;
}
.navbar-default .navbar-nav > .active > a,
.navbar-default .navbar-nav > .active > a:hover,
.navbar-default .navbar-nav > .active > a:focus {
  background-color: transparent;
}
.navbar-default .navbar-nav > .active > a:after,
.navbar-default .navbar-nav > .active > a:hover:after,
.navbar-default .navbar-nav > .active > a:focus:after {
  display: block !important;
  position: absolute !important;
  left: 0 !important;
  bottom: -1px !important;
  width: 100% !important;
  height: 2px !important;
  background: linear-gradient(to right, #6372ff 0%, #5ca9fb 100%) !important;
  content: "" !important;
  transition: width 0.2s !important;
}
.navbar-toggle {
  border-radius: 0;
}
.navbar-default .navbar-toggle:hover,
.navbar-default .navbar-toggle:focus {
  background-color: #fff;
  border-color: #608dfd;
}
.navbar-default .navbar-toggle:hover > .icon-bar {
  background-color: #608dfd;
}
.section-title {
  margin-bottom: 70px;
}
.section-title h2 {
  position: relative;
  margin-top: 10px;
  margin-bottom: 15px;
  padding-bottom: 15px;
}
.section-title h2::after {
  position: absolute;
  content: "";
  background: linear-gradient(to right, #5ca9fb 0%, #6372ff 100%);
  height: 4px;
  width: 60px;
  bottom: 0;
  margin-left: -30px;
  left: 50%;
}
.section-title p {
  font-size: 18px;
}
.btn-custom {
  font-family: "Raleway", sans-serif;
  text-transform: uppercase;
  color: #fff;
  background-color: #5ca9fb;
  background-image: linear-gradient(to right, #5ca9fb 0%, #6372ff 100%);
  padding: 14px 34px;
  letter-spacing: 1px;
  margin: 0;
  font-size: 15px;
  font-weight: 500;
  border-radius: 25px;
  transition: all 0.5s linear;
  border: 0;
}
.btn-custom:hover,
.btn-custom:focus,
.btn-custom.focus,
.btn-custom:active,
.btn-custom.active {
  color: #fff;
  background-image: none;
  background-color: #6372ff;
}
.btn:active,
.btn.active {
  background-image: none;
  outline: 0;
  -webkit-box-shadow: none;
  box-shadow: none;
}
a:focus,
.btn:focus,
.btn:active:focus,
.btn.active:focus,
.btn.focus,
.btn:active.focus,
.btn.active.focus {
  outline: none;
  outline-offset: none;
}
/* Header Section */
.intro {
  display: table;
  width: 100%;
  padding: 0;
  background: url(../img/intro-bg.jpg) center center no-repeat;
  background-color: #e5e5e5;
  -webkit-background-size: cover;
  -moz-background-size: cover;
  background-size: cover;
  -o-background-size: cover;
}
.intro .overlay {
  background: rgba(0, 0, 0, 0.2);
}
.intro h1 {
  font-family: "Raleway", sans-serif;
  color: #fff;
  font-size: 82px;
  font-weight: 700;
  text-transform: uppercase;
  margin-top: 0;
  margin-bottom: 10px;
}
.intro h1 span {
  font-weight: 800;
  color: #5ca9fb;
}
.intro p {
  color: #fff;
  font-size: 22px;
  font-weight: 300;
  line-height: 30px;
  margin: 0 auto;
  margin-bottom: 60px;
}
header .intro-text {
  padding-top: 350px;
  padding-bottom: 200px;
  text-align: center;
}
/* Features Section */
#features {
  background: #f6f6f6;
}
#features i.fa {
  font-size: 38px;
  margin-bottom: 20px;
  transition: all 0.5s;
  color: #fff;
  width: 100px;
  height: 100px;
  padding: 30px 0;
  border-radius: 50%;
  background: linear-gradient(to right, #6372ff 0%, #5ca9fb 100%);
  box-shadow: 10px 10px 10px rgba(0, 0, 0, 0.05);
}
/* About Section */
#about {
  padding: 100px 0;
}
#about h3 {
  font-size: 22px;
  margin: 0 0 20px;
}
#about h2 {
  position: relative;
  margin-bottom: 15px;
  padding-bottom: 15px;
}
#about h2::after {
  position: absolute;
  content: "";
  background: linear-gradient(to right, #5ca9fb 0%, #6372ff 100%);
  height: 4px;
  width: 60px;
  bottom: 0;
  left: 0;
}
#about .about-text li {
  margin-bottom: 6px;
  margin-left: 6px;
  list-style: none;
  padding: 0;
}
#about .about-text li:before {
  content: "\f00c";
  font-family: "FontAwesome";
  color: #5ca9fb;
  font-size: 11px;
  font-weight: 300;
  padding-right: 8px;
}
#about img {
  width: 520px;
  margin-top: 10px;
  background: #fff;
  border-right: 0;
  box-shadow: 0 0 50px rgba(0, 0, 0, 0.06);
}
#about p {
  line-height: 24px;
  margin: 30px 0;
}
/* Services Section */
#services {
  padding: 100px 0;
  background: linear-gradient(to right, #6372ff 0%, #5ca9fb 100%);
  color: #fff;
}
#services .service-desc {
  margin: 10px 10px 20px;
}
#services h2 {
  color: #fff;
}
#services .section-title h2::after {
  position: absolute;
  content: "";
  background: rgba(255, 255, 255, 0.3);
  height: 4px;
  width: 60px;
  bottom: 0;
  margin-left: -30px;
  left: 50%;
}
#services i.fa {
  font-size: 42px;
  width: 120px;
  height: 120px;
  padding: 40px 0;
  background: linear-gradient(to right, #6372ff 0%, #5ca9fb 100%);
  border-radius: 50%;
  color: #fff;
  box-shadow: 10px 10px 10px rgba(0, 0, 0, 0.05);
}
#services h3 {
  font-weight: 500;
  padding: 5px 0;
  color: #fff;
}
#services p {
  color: rgba(255, 255, 255, 0.75);
}
#services .service-desc {
  margin-bottom: 40px;
}
/* Portfolio Section */
#portfolio {
  padding: 100px 0;
}
.portfolio-item {
  margin: 1px -15px 0 -14px;
  padding: 0;
}
.portfolio-item .hover-bg {
  overflow: hidden;
  position: relative;
  margin: 0;
}
.hover-bg .hover-text {
  position: absolute;
  text-align: center;
  margin: 0 auto;
  color: #fff;
  background: linear-gradient(
    to right,
    rgba(99, 114, 255, 0.8) 0%,
    rgba(92, 169, 251, 0.8) 100%
  );
  padding: 30% 0 0;
  height: 100%;
  width: 100%;
  opacity: 0;
  transition: all 0.5s;
}
.hover-bg .hover-text > h4 {
  opacity: 0;
  color: #fff;
  -webkit-transform: translateY(100%);
  transform: translateY(100%);
  transition: all 0.3s;
  font-size: 18px;
  letter-spacing: 1px;
  font-weight: 500;
  text-transform: uppercase;
}
.hover-bg:hover .hover-text > h4 {
  opacity: 1;
  -webkit-backface-visibility: hidden;
  -webkit-transform: translateY(0);
  transform: translateY(0);
}
.hover-bg:hover .hover-text {
  opacity: 1;
}
/* Testimonials Section */
#testimonials {
  padding: 100px 0;
  background: #f6f6f6;
}
#testimonials i {
  color: #e6e6e6;
  font-size: 32px;
  margin-bottom: 20px;
}
.testimonial {
  position: relative;
  padding: 20px;
}
.testimonial-image {
  float: left;
  margin-right: 15px;
}
.testimonial-image,
.testimonial-image img {
  display: block;
  width: 64px;
  height: 64px;
  border-radius: 50%;
}
.testimonial-content {
  position: relative;
  overflow: hidden;
}
.testimonial-content p {
  margin-bottom: 0;
  font-size: 14px;
  font-style: italic;
}
.testimonial-meta {
  margin-top: 10px;
  font-size: 15px;
  font-weight: 600;
  color: #666;
}
/* Team Section */
#team {
  padding: 100px 0;
}
#team h4 {
  margin: 5px 0;
}
#team .team-img {
  width: 240px;
}
#team .thumbnail {
  background: transparent;
  border: 0;
}
#team .thumbnail .caption {
  padding: 10px 0 0;
  color: #888;
}
/* Contact Section */
#contact {
  padding: 100px 0 60px;
  background: linear-gradient(to right, #6372ff 0%, #5ca9fb 100%);
  color: rgba(255, 255, 255, 0.75);
}
#contact .section-title {
  margin-bottom: 40px;
}
#contact .section-title p {
  font-size: 16px;
}
#contact h2 {
  color: #fff;
  margin-top: 10px;
  margin-bottom: 15px;
  padding-bottom: 15px;
}
#contact .section-title h2::after {
  position: absolute;
  content: "";
  background: rgba(255, 255, 255, 0.3);
  height: 4px;
  width: 60px;
  bottom: 0;
  left: 30px;
}
#contact h3 {
  color: #fff;
  margin-top: 80px;
  margin-bottom: 25px;
  padding-bottom: 20px;
  font-weight: 400;
}
#contact form {
  padding-top: 20px;
}
#contact .text-danger {
  color: #cc0033;
  text-align: left;
}
#contact .btn-custom {
  margin: 30px 0;
  background: transparent;
  border: 2px solid #fff;
}
#contact .btn-custom:hover {
  color: #1f386e;
  background: #fff;
}
label {
  font-size: 12px;
  font-weight: 400;
  font-family: "Open Sans", sans-serif;
  float: left;
}
#contact .form-control {
  display: block;
  width: 100%;
  padding: 6px 12px;
  font-size: 16px;
  line-height: 1.42857143;
  color: #444;
  background-color: #fff;
  background-image: none;
  border: 1px solid #ddd;
  border-radius: 0;
  -webkit-box-shadow: none;
  box-shadow: none;
  -webkit-transition: none;
  -o-transition: none;
  transition: none;
}
#contact .form-control:focus {
  border-color: #999;
  outline: 0;
  -webkit-box-shadow: transparent;
  box-shadow: transparent;
}
.form-control::-webkit-input-placeholder {
  color: #777;
}
.form-control:-moz-placeholder {
  color: #777;
}
.form-control::-moz-placeholder {
  color: #777;
}
.form-control:-ms-input-placeholder {
  color: #777;
}
#contact .contact-item {
  margin: 20px 0;
}
#contact .contact-item span {
  color: rgba(255, 255, 255, 1);
  margin-bottom: 10px;
  display: block;
}
#contact .contact-item i.fa {
  margin-right: 10px;
}
#contact .social {
  border-top: 1px solid rgba(255, 255, 255, 0.15);
  padding-top: 50px;
  margin-top: 50px;
  text-align: center;
}
#contact .social ul li {
  display: inline-block;
  margin: 0 20px;
}
#contact .social i.fa {
  font-size: 22px;
  width: 48px;
  height: 48px;
  padding: 12px 0;
  border: 2px solid #fff;
  color: #fff;
  border-radius: 50%;
  transition: all 0.3s;
}
#contact .social i.fa:hover {
  color: #608dfd;
  background: #fff;
}
/* Footer Section*/
#footer {
  background: #f6f6f6;
  padding: 30px 0;
}
#footer p {
  color: #888;
  font-size: 14px;
}
#footer a {
  color: #608dfd;
}
#footer a:hover {
  border-bottom: 2px solid #608dfd;
}

@media (max-width: 768px) {
  #about img {
    margin: 50px 0;
  }
}


================================================================================
END: D:\QiEOS\apps\web\public\builtbyrays_public\builtbyrays.com\public\css\style.css
================================================================================


================================================================================
FILE: D:\QiEOS\apps\web\public\builtbyrays_public\builtbyrays.com\public\css\nivo-lightbox\default.css
================================================================================

/*
 * Nivo Lightbox Default Theme v1.0
 * http://dev7studios.com/nivo-lightbox
 *
 * Copyright 2013, Dev7studios
 * Free to use and abuse under the MIT license.
 * http://www.opensource.org/licenses/mit-license.php
 */
 
 .nivo-lightbox-theme-default * {
    -webkit-box-sizing: initial !important;
    -moz-box-sizing: initial !important;
    box-sizing: initial !important;
 }
.nivo-lightbox-theme-default.nivo-lightbox-overlay { 
	background: #666;
	background: rgba(0,0,0,0.6); 
}
.nivo-lightbox-theme-default .nivo-lightbox-content.nivo-lightbox-loading { background: url(loading.gif) no-repeat 50% 50%; }

.nivo-lightbox-theme-default .nivo-lightbox-nav {
	top: 10%;
	width: 8%;
	height: 80%;
	text-indent: -9999px;
	background-repeat: no-repeat;
	background-position: 50% 50%;
	opacity: 0.5;
}
.nivo-lightbox-theme-default .nivo-lightbox-nav:hover { 
	opacity: 1; 
	background-color: transparent;
}
.nivo-lightbox-theme-default .nivo-lightbox-prev { 
	background-image: url(prev.png); 
	border-radius: 0 3px 3px 0;
}
.nivo-lightbox-theme-default .nivo-lightbox-next { 
	background-image: url(next.png); 
	border-radius: 3px 0 0 3px;
}

.nivo-lightbox-theme-default .nivo-lightbox-close {
	display: block;
	background: url(close.png) no-repeat 5px 5px;
	width: 16px;
	height: 16px;
	text-indent: -9999px;
	padding: 5px;
	opacity: 0.5;
}
.nivo-lightbox-theme-default .nivo-lightbox-close:hover { opacity: 1; }

.nivo-lightbox-theme-default .nivo-lightbox-title-wrap { bottom: -7%; }
.nivo-lightbox-theme-default .nivo-lightbox-title {
	font: 14px/20px 'Helvetica Neue', Helvetica, Arial, sans-serif;
	font-style: normal;
	font-weight: normal;
	background: #000;
	color: #fff;
	padding: 7px 15px;
	border-radius: 30px;
}

.nivo-lightbox-theme-default .nivo-lightbox-image img {
	background: #fff;
	-webkit-box-shadow: 0px 1px 1px rgba(0,0,0,0.4);
	   -moz-box-shadow: 0px 1px 1px rgba(0,0,0,0.4);
	        box-shadow: 0px 1px 1px rgba(0,0,0,0.4);
}
.nivo-lightbox-theme-default .nivo-lightbox-ajax,
.nivo-lightbox-theme-default .nivo-lightbox-inline {
	background: #fff;
	padding: 40px;
	-webkit-box-shadow: 0px 1px 1px rgba(0,0,0,0.4);
	   -moz-box-shadow: 0px 1px 1px rgba(0,0,0,0.4);
	        box-shadow: 0px 1px 1px rgba(0,0,0,0.4);
}

@media (-webkit-min-device-pixel-ratio: 1.3),
       (-o-min-device-pixel-ratio: 2.6/2),
       (min--moz-device-pixel-ratio: 1.3),
       (min-device-pixel-ratio: 1.3),
       (min-resolution: 1.3dppx) {

	.nivo-lightbox-theme-default .nivo-lightbox-content.nivo-lightbox-loading { 
		background-image: url(loading@2x.gif); 
		background-size: 32px 32px;
	}
	.nivo-lightbox-theme-default .nivo-lightbox-prev { 
		background-image: url(prev@2x.png); 
		background-size: 48px 48px;
	}
	.nivo-lightbox-theme-default .nivo-lightbox-next { 
		background-image: url(next@2x.png); 
		background-size: 48px 48px;
	}
	.nivo-lightbox-theme-default .nivo-lightbox-close { 
		background-image: url(close@2x.png); 
		background-size: 16px 16px;
	}
	
}

================================================================================
END: D:\QiEOS\apps\web\public\builtbyrays_public\builtbyrays.com\public\css\nivo-lightbox\default.css
================================================================================


================================================================================
FILE: D:\QiEOS\apps\web\public\builtbyrays_public\builtbyrays.com\public\css\nivo-lightbox\nivo-lightbox.css
================================================================================

/*
 * Nivo Lightbox v1.2.0
 * http://dev7studios.com/nivo-lightbox
 *
 * Copyright 2013, Dev7studios
 * Free to use and abuse under the MIT license.
 * http://www.opensource.org/licenses/mit-license.php
 */

.nivo-lightbox-overlay {
	position: fixed;
	top: 0;
	left: 0;
	z-index: 99998;
	width: 100%;
	height: 100%;
	overflow: hidden;
	visibility: hidden;
	opacity: 0;
	-webkit-box-sizing: border-box;
	-moz-box-sizing: border-box;
	box-sizing: border-box;
}
.nivo-lightbox-overlay.nivo-lightbox-open {
	visibility: visible;
	opacity: 1;
}
.nivo-lightbox-wrap  {
	position: absolute;
	top: 10%;
	bottom: 10%;
	left: 10%;
	right: 10%;
}
.nivo-lightbox-content {
	width: 100%;
	height: 100%;
}
.nivo-lightbox-title-wrap {
	position: absolute;
	bottom: 0;
	left: 0;
	width: 100%;
	z-index: 99999;
	text-align: center;
}
.nivo-lightbox-nav { display: none; }
.nivo-lightbox-prev {
	position: absolute;
	top: 50%;
	left: 0;
}
.nivo-lightbox-next {
	position: absolute;
	top: 50%;
	right: 0;
}
.nivo-lightbox-close {
	position: absolute;
	top: 2%;
	right: 2%;
}

.nivo-lightbox-image { text-align: center; }
.nivo-lightbox-image img {
	max-width: 100%;
	max-height: 100%;
	width: auto;
	height: auto;
	vertical-align: middle;
}
.nivo-lightbox-content iframe {
	width: 100%;
	height: 100%;
}
.nivo-lightbox-inline,
.nivo-lightbox-ajax {
	max-height: 100%;
	overflow: auto;
	-webkit-box-sizing: border-box;
	-moz-box-sizing: border-box;
	box-sizing: border-box;
	/* https://bugzilla.mozilla.org/show_bug.cgi?id=308801 */
}
.nivo-lightbox-error {
	display: table;
	text-align: center;
	width: 100%;
	height: 100%;
	color: #fff;
	text-shadow: 0 1px 1px #000;
}
.nivo-lightbox-error p {
	display: table-cell;
	vertical-align: middle;
}

/* Effects
 **********************************************/
.nivo-lightbox-notouch .nivo-lightbox-effect-fade,
.nivo-lightbox-notouch .nivo-lightbox-effect-fadeScale,
.nivo-lightbox-notouch .nivo-lightbox-effect-slideLeft,
.nivo-lightbox-notouch .nivo-lightbox-effect-slideRight,
.nivo-lightbox-notouch .nivo-lightbox-effect-slideUp,
.nivo-lightbox-notouch .nivo-lightbox-effect-slideDown,
.nivo-lightbox-notouch .nivo-lightbox-effect-fall {
	-webkit-transition: all 0.2s ease-in-out;
	   -moz-transition: all 0.2s ease-in-out;
	    -ms-transition: all 0.2s ease-in-out;
	     -o-transition: all 0.2s ease-in-out;
	        transition: all 0.2s ease-in-out;
}

/* fadeScale */
.nivo-lightbox-effect-fadeScale .nivo-lightbox-wrap {
	-webkit-transition: all 0.3s;
	   -moz-transition: all 0.3s;
	    -ms-transition: all 0.3s;
	     -o-transition: all 0.3s;
	        transition: all 0.3s;
	-webkit-transform: scale(0.7);
	   -moz-transform: scale(0.7);
	    -ms-transform: scale(0.7);
	        transform: scale(0.7);
}
.nivo-lightbox-effect-fadeScale.nivo-lightbox-open .nivo-lightbox-wrap {
	-webkit-transform: scale(1);
	   -moz-transform: scale(1);
	    -ms-transform: scale(1);
	        transform: scale(1);
}

/* slideLeft / slideRight / slideUp / slideDown */
.nivo-lightbox-effect-slideLeft .nivo-lightbox-wrap,
.nivo-lightbox-effect-slideRight .nivo-lightbox-wrap,
.nivo-lightbox-effect-slideUp .nivo-lightbox-wrap,
.nivo-lightbox-effect-slideDown .nivo-lightbox-wrap {
	-webkit-transition: all 0.3s cubic-bezier(0.25, 0.5, 0.5, 0.9);
	   -moz-transition: all 0.3s cubic-bezier(0.25, 0.5, 0.5, 0.9);
	    -ms-transition: all 0.3s cubic-bezier(0.25, 0.5, 0.5, 0.9);
	     -o-transition: all 0.3s cubic-bezier(0.25, 0.5, 0.5, 0.9);
	        transition: all 0.3s cubic-bezier(0.25, 0.5, 0.5, 0.9);
}
.nivo-lightbox-effect-slideLeft .nivo-lightbox-wrap {
	-webkit-transform: translateX(-10%);
	   -moz-transform: translateX(-10%);
	    -ms-transform: translateX(-10%);
	        transform: translateX(-10%);
}
.nivo-lightbox-effect-slideRight .nivo-lightbox-wrap {
	-webkit-transform: translateX(10%);
	   -moz-transform: translateX(10%);
	    -ms-transform: translateX(10%);
	        transform: translateX(10%);
}
.nivo-lightbox-effect-slideLeft.nivo-lightbox-open .nivo-lightbox-wrap,
.nivo-lightbox-effect-slideRight.nivo-lightbox-open .nivo-lightbox-wrap {
	-webkit-transform: translateX(0);
	   -moz-transform: translateX(0);
	    -ms-transform: translateX(0);
	        transform: translateX(0);
}
.nivo-lightbox-effect-slideDown .nivo-lightbox-wrap {
	-webkit-transform: translateY(-10%);
	   -moz-transform: translateY(-10%);
	    -ms-transform: translateY(-10%);
	        transform: translateY(-10%);
}
.nivo-lightbox-effect-slideUp .nivo-lightbox-wrap {
	-webkit-transform: translateY(10%);
	   -moz-transform: translateY(10%);
	    -ms-transform: translateY(10%);
	        transform: translateY(10%);
}
.nivo-lightbox-effect-slideUp.nivo-lightbox-open .nivo-lightbox-wrap,
.nivo-lightbox-effect-slideDown.nivo-lightbox-open .nivo-lightbox-wrap {
	-webkit-transform: translateY(0);
	   -moz-transform: translateY(0);
	    -ms-transform: translateY(0);
	        transform: translateY(0);
}

/* fall */
.nivo-lightbox-body-effect-fall .nivo-lightbox-effect-fall {
	-webkit-perspective: 1000px;
	   -moz-perspective: 1000px;
	        perspective: 1000px;
}
.nivo-lightbox-effect-fall .nivo-lightbox-wrap {
	-webkit-transition: all 0.3s ease-out;
	   -moz-transition: all 0.3s ease-out;
	    -ms-transition: all 0.3s ease-out;
	     -o-transition: all 0.3s ease-out;
	        transition: all 0.3s ease-out;
	-webkit-transform: translateZ(300px);
	   -moz-transform: translateZ(300px);
	    -ms-transform: translateZ(300px);
	        transform: translateZ(300px);
}
.nivo-lightbox-effect-fall.nivo-lightbox-open .nivo-lightbox-wrap {
	-webkit-transform: translateZ(0);
	   -moz-transform: translateZ(0);
	    -ms-transform: translateZ(0);
	        transform: translateZ(0);
}


================================================================================
END: D:\QiEOS\apps\web\public\builtbyrays_public\builtbyrays.com\public\css\nivo-lightbox\nivo-lightbox.css
================================================================================


================================================================================
FILE: D:\QiEOS\apps\web\public\builtbyrays_public\builtbyrays.com\public\fonts\font-awesome\css\font-awesome.css
================================================================================

/*!
 *  Font Awesome 4.3.0 by @davegandy - http://fontawesome.io - @fontawesome
 *  License - http://fontawesome.io/license (Font: SIL OFL 1.1, CSS: MIT License)
 */
/* FONT PATH
 * -------------------------- */
@font-face {
  font-family: 'FontAwesome';
  src: url('../fonts/fontawesome-webfont.eot?v=4.3.0');
  src: url('../fonts/fontawesome-webfont.eot?#iefix&v=4.3.0') format('embedded-opentype'), url('../fonts/fontawesome-webfont.woff2?v=4.3.0') format('woff2'), url('../fonts/fontawesome-webfont.woff?v=4.3.0') format('woff'), url('../fonts/fontawesome-webfont.ttf?v=4.3.0') format('truetype'), url('../fonts/fontawesome-webfont.svg?v=4.3.0#fontawesomeregular') format('svg');
  font-weight: normal;
  font-style: normal;
}
.fa {
  display: inline-block;
  font: normal normal normal 14px/1 FontAwesome;
  font-size: inherit;
  text-rendering: auto;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  transform: translate(0, 0);
}
/* makes the font 33% larger relative to the icon container */
.fa-lg {
  font-size: 1.33333333em;
  line-height: 0.75em;
  vertical-align: -15%;
}
.fa-2x {
  font-size: 2em;
}
.fa-3x {
  font-size: 3em;
}
.fa-4x {
  font-size: 4em;
}
.fa-5x {
  font-size: 5em;
}
.fa-fw {
  width: 1.28571429em;
  text-align: center;
}
.fa-ul {
  padding-left: 0;
  margin-left: 2.14285714em;
  list-style-type: none;
}
.fa-ul > li {
  position: relative;
}
.fa-li {
  position: absolute;
  left: -2.14285714em;
  width: 2.14285714em;
  top: 0.14285714em;
  text-align: center;
}
.fa-li.fa-lg {
  left: -1.85714286em;
}
.fa-border {
  padding: .2em .25em .15em;
  border: solid 0.08em #eeeeee;
  border-radius: .1em;
}
.pull-right {
  float: right;
}
.pull-left {
  float: left;
}
.fa.pull-left {
  margin-right: .3em;
}
.fa.pull-right {
  margin-left: .3em;
}
.fa-spin {
  -webkit-animation: fa-spin 2s infinite linear;
  animation: fa-spin 2s infinite linear;
}
.fa-pulse {
  -webkit-animation: fa-spin 1s infinite steps(8);
  animation: fa-spin 1s infinite steps(8);
}
@-webkit-keyframes fa-spin {
  0% {
    -webkit-transform: rotate(0deg);
    transform: rotate(0deg);
  }
  100% {
    -webkit-transform: rotate(359deg);
    transform: rotate(359deg);
  }
}
@keyframes fa-spin {
  0% {
    -webkit-transform: rotate(0deg);
    transform: rotate(0deg);
  }
  100% {
    -webkit-transform: rotate(359deg);
    transform: rotate(359deg);
  }
}
.fa-rotate-90 {
  filter: progid:DXImageTransform.Microsoft.BasicImage(rotation=1);
  -webkit-transform: rotate(90deg);
  -ms-transform: rotate(90deg);
  transform: rotate(90deg);
}
.fa-rotate-180 {
  filter: progid:DXImageTransform.Microsoft.BasicImage(rotation=2);
  -webkit-transform: rotate(180deg);
  -ms-transform: rotate(180deg);
  transform: rotate(180deg);
}
.fa-rotate-270 {
  filter: progid:DXImageTransform.Microsoft.BasicImage(rotation=3);
  -webkit-transform: rotate(270deg);
  -ms-transform: rotate(270deg);
  transform: rotate(270deg);
}
.fa-flip-horizontal {
  filter: progid:DXImageTransform.Microsoft.BasicImage(rotation=0, mirror=1);
  -webkit-transform: scale(-1, 1);
  -ms-transform: scale(-1, 1);
  transform: scale(-1, 1);
}
.fa-flip-vertical {
  filter: progid:DXImageTransform.Microsoft.BasicImage(rotation=2, mirror=1);
  -webkit-transform: scale(1, -1);
  -ms-transform: scale(1, -1);
  transform: scale(1, -1);
}
:root .fa-rotate-90,
:root .fa-rotate-180,
:root .fa-rotate-270,
:root .fa-flip-horizontal,
:root .fa-flip-vertical {
  filter: none;
}
.fa-stack {
  position: relative;
  display: inline-block;
  width: 2em;
  height: 2em;
  line-height: 2em;
  vertical-align: middle;
}
.fa-stack-1x,
.fa-stack-2x {
  position: absolute;
  left: 0;
  width: 100%;
  text-align: center;
}
.fa-stack-1x {
  line-height: inherit;
}
.fa-stack-2x {
  font-size: 2em;
}
.fa-inverse {
  color: #ffffff;
}
/* Font Awesome uses the Unicode Private Use Area (PUA) to ensure screen
   readers do not read off random characters that represent icons */
.fa-glass:before {
  content: "\f000";
}
.fa-music:before {
  content: "\f001";
}
.fa-search:before {
  content: "\f002";
}
.fa-envelope-o:before {
  content: "\f003";
}
.fa-heart:before {
  content: "\f004";
}
.fa-star:before {
  content: "\f005";
}
.fa-star-o:before {
  content: "\f006";
}
.fa-user:before {
  content: "\f007";
}
.fa-film:before {
  content: "\f008";
}
.fa-th-large:before {
  content: "\f009";
}
.fa-th:before {
  content: "\f00a";
}
.fa-th-list:before {
  content: "\f00b";
}
.fa-check:before {
  content: "\f00c";
}
.fa-remove:before,
.fa-close:before,
.fa-times:before {
  content: "\f00d";
}
.fa-search-plus:before {
  content: "\f00e";
}
.fa-search-minus:before {
  content: "\f010";
}
.fa-power-off:before {
  content: "\f011";
}
.fa-signal:before {
  content: "\f012";
}
.fa-gear:before,
.fa-cog:before {
  content: "\f013";
}
.fa-trash-o:before {
  content: "\f014";
}
.fa-home:before {
  content: "\f015";
}
.fa-file-o:before {
  content: "\f016";
}
.fa-clock-o:before {
  content: "\f017";
}
.fa-road:before {
  content: "\f018";
}
.fa-download:before {
  content: "\f019";
}
.fa-arrow-circle-o-down:before {
  content: "\f01a";
}
.fa-arrow-circle-o-up:before {
  content: "\f01b";
}
.fa-inbox:before {
  content: "\f01c";
}
.fa-play-circle-o:before {
  content: "\f01d";
}
.fa-rotate-right:before,
.fa-repeat:before {
  content: "\f01e";
}
.fa-refresh:before {
  content: "\f021";
}
.fa-list-alt:before {
  content: "\f022";
}
.fa-lock:before {
  content: "\f023";
}
.fa-flag:before {
  content: "\f024";
}
.fa-headphones:before {
  content: "\f025";
}
.fa-volume-off:before {
  content: "\f026";
}
.fa-volume-down:before {
  content: "\f027";
}
.fa-volume-up:before {
  content: "\f028";
}
.fa-qrcode:before {
  content: "\f029";
}
.fa-barcode:before {
  content: "\f02a";
}
.fa-tag:before {
  content: "\f02b";
}
.fa-tags:before {
  content: "\f02c";
}
.fa-book:before {
  content: "\f02d";
}
.fa-bookmark:before {
  content: "\f02e";
}
.fa-print:before {
  content: "\f02f";
}
.fa-camera:before {
  content: "\f030";
}
.fa-font:before {
  content: "\f031";
}
.fa-bold:before {
  content: "\f032";
}
.fa-italic:before {
  content: "\f033";
}
.fa-text-height:before {
  content: "\f034";
}
.fa-text-width:before {
  content: "\f035";
}
.fa-align-left:before {
  content: "\f036";
}
.fa-align-center:before {
  content: "\f037";
}
.fa-align-right:before {
  content: "\f038";
}
.fa-align-justify:before {
  content: "\f039";
}
.fa-list:before {
  content: "\f03a";
}
.fa-dedent:before,
.fa-outdent:before {
  content: "\f03b";
}
.fa-indent:before {
  content: "\f03c";
}
.fa-video-camera:before {
  content: "\f03d";
}
.fa-photo:before,
.fa-image:before,
.fa-picture-o:before {
  content: "\f03e";
}
.fa-pencil:before {
  content: "\f040";
}
.fa-map-marker:before {
  content: "\f041";
}
.fa-adjust:before {
  content: "\f042";
}
.fa-tint:before {
  content: "\f043";
}
.fa-edit:before,
.fa-pencil-square-o:before {
  content: "\f044";
}
.fa-share-square-o:before {
  content: "\f045";
}
.fa-check-square-o:before {
  content: "\f046";
}
.fa-arrows:before {
  content: "\f047";
}
.fa-step-backward:before {
  content: "\f048";
}
.fa-fast-backward:before {
  content: "\f049";
}
.fa-backward:before {
  content: "\f04a";
}
.fa-play:before {
  content: "\f04b";
}
.fa-pause:before {
  content: "\f04c";
}
.fa-stop:before {
  content: "\f04d";
}
.fa-forward:before {
  content: "\f04e";
}
.fa-fast-forward:before {
  content: "\f050";
}
.fa-step-forward:before {
  content: "\f051";
}
.fa-eject:before {
  content: "\f052";
}
.fa-chevron-left:before {
  content: "\f053";
}
.fa-chevron-right:before {
  content: "\f054";
}
.fa-plus-circle:before {
  content: "\f055";
}
.fa-minus-circle:before {
  content: "\f056";
}
.fa-times-circle:before {
  content: "\f057";
}
.fa-check-circle:before {
  content: "\f058";
}
.fa-question-circle:before {
  content: "\f059";
}
.fa-info-circle:before {
  content: "\f05a";
}
.fa-crosshairs:before {
  content: "\f05b";
}
.fa-times-circle-o:before {
  content: "\f05c";
}
.fa-check-circle-o:before {
  content: "\f05d";
}
.fa-ban:before {
  content: "\f05e";
}
.fa-arrow-left:before {
  content: "\f060";
}
.fa-arrow-right:before {
  content: "\f061";
}
.fa-arrow-up:before {
  content: "\f062";
}
.fa-arrow-down:before {
  content: "\f063";
}
.fa-mail-forward:before,
.fa-share:before {
  content: "\f064";
}
.fa-expand:before {
  content: "\f065";
}
.fa-compress:before {
  content: "\f066";
}
.fa-plus:before {
  content: "\f067";
}
.fa-minus:before {
  content: "\f068";
}
.fa-asterisk:before {
  content: "\f069";
}
.fa-exclamation-circle:before {
  content: "\f06a";
}
.fa-gift:before {
  content: "\f06b";
}
.fa-leaf:before {
  content: "\f06c";
}
.fa-fire:before {
  content: "\f06d";
}
.fa-eye:before {
  content: "\f06e";
}
.fa-eye-slash:before {
  content: "\f070";
}
.fa-warning:before,
.fa-exclamation-triangle:before {
  content: "\f071";
}
.fa-plane:before {
  content: "\f072";
}
.fa-calendar:before {
  content: "\f073";
}
.fa-random:before {
  content: "\f074";
}
.fa-comment:before {
  content: "\f075";
}
.fa-magnet:before {
  content: "\f076";
}
.fa-chevron-up:before {
  content: "\f077";
}
.fa-chevron-down:before {
  content: "\f078";
}
.fa-retweet:before {
  content: "\f079";
}
.fa-shopping-cart:before {
  content: "\f07a";
}
.fa-folder:before {
  content: "\f07b";
}
.fa-folder-open:before {
  content: "\f07c";
}
.fa-arrows-v:before {
  content: "\f07d";
}
.fa-arrows-h:before {
  content: "\f07e";
}
.fa-bar-chart-o:before,
.fa-bar-chart:before {
  content: "\f080";
}
.fa-twitter-square:before {
  content: "\f081";
}
.fa-facebook-square:before {
  content: "\f082";
}
.fa-camera-retro:before {
  content: "\f083";
}
.fa-key:before {
  content: "\f084";
}
.fa-gears:before,
.fa-cogs:before {
  content: "\f085";
}
.fa-comments:before {
  content: "\f086";
}
.fa-thumbs-o-up:before {
  content: "\f087";
}
.fa-thumbs-o-down:before {
  content: "\f088";
}
.fa-star-half:before {
  content: "\f089";
}
.fa-heart-o:before {
  content: "\f08a";
}
.fa-sign-out:before {
  content: "\f08b";
}
.fa-linkedin-square:before {
  content: "\f08c";
}
.fa-thumb-tack:before {
  content: "\f08d";
}
.fa-external-link:before {
  content: "\f08e";
}
.fa-sign-in:before {
  content: "\f090";
}
.fa-trophy:before {
  content: "\f091";
}
.fa-github-square:before {
  content: "\f092";
}
.fa-upload:before {
  content: "\f093";
}
.fa-lemon-o:before {
  content: "\f094";
}
.fa-phone:before {
  content: "\f095";
}
.fa-square-o:before {
  content: "\f096";
}
.fa-bookmark-o:before {
  content: "\f097";
}
.fa-phone-square:before {
  content: "\f098";
}
.fa-twitter:before {
  content: "\f099";
}
.fa-facebook-f:before,
.fa-facebook:before {
  content: "\f09a";
}
.fa-github:before {
  content: "\f09b";
}
.fa-unlock:before {
  content: "\f09c";
}
.fa-credit-card:before {
  content: "\f09d";
}
.fa-rss:before {
  content: "\f09e";
}
.fa-hdd-o:before {
  content: "\f0a0";
}
.fa-bullhorn:before {
  content: "\f0a1";
}
.fa-bell:before {
  content: "\f0f3";
}
.fa-certificate:before {
  content: "\f0a3";
}
.fa-hand-o-right:before {
  content: "\f0a4";
}
.fa-hand-o-left:before {
  content: "\f0a5";
}
.fa-hand-o-up:before {
  content: "\f0a6";
}
.fa-hand-o-down:before {
  content: "\f0a7";
}
.fa-arrow-circle-left:before {
  content: "\f0a8";
}
.fa-arrow-circle-right:before {
  content: "\f0a9";
}
.fa-arrow-circle-up:before {
  content: "\f0aa";
}
.fa-arrow-circle-down:before {
  content: "\f0ab";
}
.fa-globe:before {
  content: "\f0ac";
}
.fa-wrench:before {
  content: "\f0ad";
}
.fa-tasks:before {
  content: "\f0ae";
}
.fa-filter:before {
  content: "\f0b0";
}
.fa-briefcase:before {
  content: "\f0b1";
}
.fa-arrows-alt:before {
  content: "\f0b2";
}
.fa-group:before,
.fa-users:before {
  content: "\f0c0";
}
.fa-chain:before,
.fa-link:before {
  content: "\f0c1";
}
.fa-cloud:before {
  content: "\f0c2";
}
.fa-flask:before {
  content: "\f0c3";
}
.fa-cut:before,
.fa-scissors:before {
  content: "\f0c4";
}
.fa-copy:before,
.fa-files-o:before {
  content: "\f0c5";
}
.fa-paperclip:before {
  content: "\f0c6";
}
.fa-save:before,
.fa-floppy-o:before {
  content: "\f0c7";
}
.fa-square:before {
  content: "\f0c8";
}
.fa-navicon:before,
.fa-reorder:before,
.fa-bars:before {
  content: "\f0c9";
}
.fa-list-ul:before {
  content: "\f0ca";
}
.fa-list-ol:before {
  content: "\f0cb";
}
.fa-strikethrough:before {
  content: "\f0cc";
}
.fa-underline:before {
  content: "\f0cd";
}
.fa-table:before {
  content: "\f0ce";
}
.fa-magic:before {
  content: "\f0d0";
}
.fa-truck:before {
  content: "\f0d1";
}
.fa-pinterest:before {
  content: "\f0d2";
}
.fa-pinterest-square:before {
  content: "\f0d3";
}
.fa-google-plus-square:before {
  content: "\f0d4";
}
.fa-google-plus:before {
  content: "\f0d5";
}
.fa-money:before {
  content: "\f0d6";
}
.fa-caret-down:before {
  content: "\f0d7";
}
.fa-caret-up:before {
  content: "\f0d8";
}
.fa-caret-left:before {
  content: "\f0d9";
}
.fa-caret-right:before {
  content: "\f0da";
}
.fa-columns:before {
  content: "\f0db";
}
.fa-unsorted:before,
.fa-sort:before {
  content: "\f0dc";
}
.fa-sort-down:before,
.fa-sort-desc:before {
  content: "\f0dd";
}
.fa-sort-up:before,
.fa-sort-asc:before {
  content: "\f0de";
}
.fa-envelope:before {
  content: "\f0e0";
}
.fa-linkedin:before {
  content: "\f0e1";
}
.fa-rotate-left:before,
.fa-undo:before {
  content: "\f0e2";
}
.fa-legal:before,
.fa-gavel:before {
  content: "\f0e3";
}
.fa-dashboard:before,
.fa-tachometer:before {
  content: "\f0e4";
}
.fa-comment-o:before {
  content: "\f0e5";
}
.fa-comments-o:before {
  content: "\f0e6";
}
.fa-flash:before,
.fa-bolt:before {
  content: "\f0e7";
}
.fa-sitemap:before {
  content: "\f0e8";
}
.fa-umbrella:before {
  content: "\f0e9";
}
.fa-paste:before,
.fa-clipboard:before {
  content: "\f0ea";
}
.fa-lightbulb-o:before {
  content: "\f0eb";
}
.fa-exchange:before {
  content: "\f0ec";
}
.fa-cloud-download:before {
  content: "\f0ed";
}
.fa-cloud-upload:before {
  content: "\f0ee";
}
.fa-user-md:before {
  content: "\f0f0";
}
.fa-stethoscope:before {
  content: "\f0f1";
}
.fa-suitcase:before {
  content: "\f0f2";
}
.fa-bell-o:before {
  content: "\f0a2";
}
.fa-coffee:before {
  content: "\f0f4";
}
.fa-cutlery:before {
  content: "\f0f5";
}
.fa-file-text-o:before {
  content: "\f0f6";
}
.fa-building-o:before {
  content: "\f0f7";
}
.fa-hospital-o:before {
  content: "\f0f8";
}
.fa-ambulance:before {
  content: "\f0f9";
}
.fa-medkit:before {
  content: "\f0fa";
}
.fa-fighter-jet:before {
  content: "\f0fb";
}
.fa-beer:before {
  content: "\f0fc";
}
.fa-h-square:before {
  content: "\f0fd";
}
.fa-plus-square:before {
  content: "\f0fe";
}
.fa-angle-double-left:before {
  content: "\f100";
}
.fa-angle-double-right:before {
  content: "\f101";
}
.fa-angle-double-up:before {
  content: "\f102";
}
.fa-angle-double-down:before {
  content: "\f103";
}
.fa-angle-left:before {
  content: "\f104";
}
.fa-angle-right:before {
  content: "\f105";
}
.fa-angle-up:before {
  content: "\f106";
}
.fa-angle-down:before {
  content: "\f107";
}
.fa-desktop:before {
  content: "\f108";
}
.fa-laptop:before {
  content: "\f109";
}
.fa-tablet:before {
  content: "\f10a";
}
.fa-mobile-phone:before,
.fa-mobile:before {
  content: "\f10b";
}
.fa-circle-o:before {
  content: "\f10c";
}
.fa-quote-left:before {
  content: "\f10d";
}
.fa-quote-right:before {
  content: "\f10e";
}
.fa-spinner:before {
  content: "\f110";
}
.fa-circle:before {
  content: "\f111";
}
.fa-mail-reply:before,
.fa-reply:before {
  content: "\f112";
}
.fa-github-alt:before {
  content: "\f113";
}
.fa-folder-o:before {
  content: "\f114";
}
.fa-folder-open-o:before {
  content: "\f115";
}
.fa-smile-o:before {
  content: "\f118";
}
.fa-frown-o:before {
  content: "\f119";
}
.fa-meh-o:before {
  content: "\f11a";
}
.fa-gamepad:before {
  content: "\f11b";
}
.fa-keyboard-o:before {
  content: "\f11c";
}
.fa-flag-o:before {
  content: "\f11d";
}
.fa-flag-checkered:before {
  content: "\f11e";
}
.fa-terminal:before {
  content: "\f120";
}
.fa-code:before {
  content: "\f121";
}
.fa-mail-reply-all:before,
.fa-reply-all:before {
  content: "\f122";
}
.fa-star-half-empty:before,
.fa-star-half-full:before,
.fa-star-half-o:before {
  content: "\f123";
}
.fa-location-arrow:before {
  content: "\f124";
}
.fa-crop:before {
  content: "\f125";
}
.fa-code-fork:before {
  content: "\f126";
}
.fa-unlink:before,
.fa-chain-broken:before {
  content: "\f127";
}
.fa-question:before {
  content: "\f128";
}
.fa-info:before {
  content: "\f129";
}
.fa-exclamation:before {
  content: "\f12a";
}
.fa-superscript:before {
  content: "\f12b";
}
.fa-subscript:before {
  content: "\f12c";
}
.fa-eraser:before {
  content: "\f12d";
}
.fa-puzzle-piece:before {
  content: "\f12e";
}
.fa-microphone:before {
  content: "\f130";
}
.fa-microphone-slash:before {
  content: "\f131";
}
.fa-shield:before {
  content: "\f132";
}
.fa-calendar-o:before {
  content: "\f133";
}
.fa-fire-extinguisher:before {
  content: "\f134";
}
.fa-rocket:before {
  content: "\f135";
}
.fa-maxcdn:before {
  content: "\f136";
}
.fa-chevron-circle-left:before {
  content: "\f137";
}
.fa-chevron-circle-right:before {
  content: "\f138";
}
.fa-chevron-circle-up:before {
  content: "\f139";
}
.fa-chevron-circle-down:before {
  content: "\f13a";
}
.fa-html5:before {
  content: "\f13b";
}
.fa-css3:before {
  content: "\f13c";
}
.fa-anchor:before {
  content: "\f13d";
}
.fa-unlock-alt:before {
  content: "\f13e";
}
.fa-bullseye:before {
  content: "\f140";
}
.fa-ellipsis-h:before {
  content: "\f141";
}
.fa-ellipsis-v:before {
  content: "\f142";
}
.fa-rss-square:before {
  content: "\f143";
}
.fa-play-circle:before {
  content: "\f144";
}
.fa-ticket:before {
  content: "\f145";
}
.fa-minus-square:before {
  content: "\f146";
}
.fa-minus-square-o:before {
  content: "\f147";
}
.fa-level-up:before {
  content: "\f148";
}
.fa-level-down:before {
  content: "\f149";
}
.fa-check-square:before {
  content: "\f14a";
}
.fa-pencil-square:before {
  content: "\f14b";
}
.fa-external-link-square:before {
  content: "\f14c";
}
.fa-share-square:before {
  content: "\f14d";
}
.fa-compass:before {
  content: "\f14e";
}
.fa-toggle-down:before,
.fa-caret-square-o-down:before {
  content: "\f150";
}
.fa-toggle-up:before,
.fa-caret-square-o-up:before {
  content: "\f151";
}
.fa-toggle-right:before,
.fa-caret-square-o-right:before {
  content: "\f152";
}
.fa-euro:before,
.fa-eur:before {
  content: "\f153";
}
.fa-gbp:before {
  content: "\f154";
}
.fa-dollar:before,
.fa-usd:before {
  content: "\f155";
}
.fa-rupee:before,
.fa-inr:before {
  content: "\f156";
}
.fa-cny:before,
.fa-rmb:before,
.fa-yen:before,
.fa-jpy:before {
  content: "\f157";
}
.fa-ruble:before,
.fa-rouble:before,
.fa-rub:before {
  content: "\f158";
}
.fa-won:before,
.fa-krw:before {
  content: "\f159";
}
.fa-bitcoin:before,
.fa-btc:before {
  content: "\f15a";
}
.fa-file:before {
  content: "\f15b";
}
.fa-file-text:before {
  content: "\f15c";
}
.fa-sort-alpha-asc:before {
  content: "\f15d";
}
.fa-sort-alpha-desc:before {
  content: "\f15e";
}
.fa-sort-amount-asc:before {
  content: "\f160";
}
.fa-sort-amount-desc:before {
  content: "\f161";
}
.fa-sort-numeric-asc:before {
  content: "\f162";
}
.fa-sort-numeric-desc:before {
  content: "\f163";
}
.fa-thumbs-up:before {
  content: "\f164";
}
.fa-thumbs-down:before {
  content: "\f165";
}
.fa-youtube-square:before {
  content: "\f166";
}
.fa-youtube:before {
  content: "\f167";
}
.fa-xing:before {
  content: "\f168";
}
.fa-xing-square:before {
  content: "\f169";
}
.fa-youtube-play:before {
  content: "\f16a";
}
.fa-dropbox:before {
  content: "\f16b";
}
.fa-stack-overflow:before {
  content: "\f16c";
}
.fa-instagram:before {
  content: "\f16d";
}
.fa-flickr:before {
  content: "\f16e";
}
.fa-adn:before {
  content: "\f170";
}
.fa-bitbucket:before {
  content: "\f171";
}
.fa-bitbucket-square:before {
  content: "\f172";
}
.fa-tumblr:before {
  content: "\f173";
}
.fa-tumblr-square:before {
  content: "\f174";
}
.fa-long-arrow-down:before {
  content: "\f175";
}
.fa-long-arrow-up:before {
  content: "\f176";
}
.fa-long-arrow-left:before {
  content: "\f177";
}
.fa-long-arrow-right:before {
  content: "\f178";
}
.fa-apple:before {
  content: "\f179";
}
.fa-windows:before {
  content: "\f17a";
}
.fa-android:before {
  content: "\f17b";
}
.fa-linux:before {
  content: "\f17c";
}
.fa-dribbble:before {
  content: "\f17d";
}
.fa-skype:before {
  content: "\f17e";
}
.fa-foursquare:before {
  content: "\f180";
}
.fa-trello:before {
  content: "\f181";
}
.fa-female:before {
  content: "\f182";
}
.fa-male:before {
  content: "\f183";
}
.fa-gittip:before,
.fa-gratipay:before {
  content: "\f184";
}
.fa-sun-o:before {
  content: "\f185";
}
.fa-moon-o:before {
  content: "\f186";
}
.fa-archive:before {
  content: "\f187";
}
.fa-bug:before {
  content: "\f188";
}
.fa-vk:before {
  content: "\f189";
}
.fa-weibo:before {
  content: "\f18a";
}
.fa-renren:before {
  content: "\f18b";
}
.fa-pagelines:before {
  content: "\f18c";
}
.fa-stack-exchange:before {
  content: "\f18d";
}
.fa-arrow-circle-o-right:before {
  content: "\f18e";
}
.fa-arrow-circle-o-left:before {
  content: "\f190";
}
.fa-toggle-left:before,
.fa-caret-square-o-left:before {
  content: "\f191";
}
.fa-dot-circle-o:before {
  content: "\f192";
}
.fa-wheelchair:before {
  content: "\f193";
}
.fa-vimeo-square:before {
  content: "\f194";
}
.fa-turkish-lira:before,
.fa-try:before {
  content: "\f195";
}
.fa-plus-square-o:before {
  content: "\f196";
}
.fa-space-shuttle:before {
  content: "\f197";
}
.fa-slack:before {
  content: "\f198";
}
.fa-envelope-square:before {
  content: "\f199";
}
.fa-wordpress:before {
  content: "\f19a";
}
.fa-openid:before {
  content: "\f19b";
}
.fa-institution:before,
.fa-bank:before,
.fa-university:before {
  content: "\f19c";
}
.fa-mortar-board:before,
.fa-graduation-cap:before {
  content: "\f19d";
}
.fa-yahoo:before {
  content: "\f19e";
}
.fa-google:before {
  content: "\f1a0";
}
.fa-reddit:before {
  content: "\f1a1";
}
.fa-reddit-square:before {
  content: "\f1a2";
}
.fa-stumbleupon-circle:before {
  content: "\f1a3";
}
.fa-stumbleupon:before {
  content: "\f1a4";
}
.fa-delicious:before {
  content: "\f1a5";
}
.fa-digg:before {
  content: "\f1a6";
}
.fa-pied-piper:before {
  content: "\f1a7";
}
.fa-pied-piper-alt:before {
  content: "\f1a8";
}
.fa-drupal:before {
  content: "\f1a9";
}
.fa-joomla:before {
  content: "\f1aa";
}
.fa-language:before {
  content: "\f1ab";
}
.fa-fax:before {
  content: "\f1ac";
}
.fa-building:before {
  content: "\f1ad";
}
.fa-child:before {
  content: "\f1ae";
}
.fa-paw:before {
  content: "\f1b0";
}
.fa-spoon:before {
  content: "\f1b1";
}
.fa-cube:before {
  content: "\f1b2";
}
.fa-cubes:before {
  content: "\f1b3";
}
.fa-behance:before {
  content: "\f1b4";
}
.fa-behance-square:before {
  content: "\f1b5";
}
.fa-steam:before {
  content: "\f1b6";
}
.fa-steam-square:before {
  content: "\f1b7";
}
.fa-recycle:before {
  content: "\f1b8";
}
.fa-automobile:before,
.fa-car:before {
  content: "\f1b9";
}
.fa-cab:before,
.fa-taxi:before {
  content: "\f1ba";
}
.fa-tree:before {
  content: "\f1bb";
}
.fa-spotify:before {
  content: "\f1bc";
}
.fa-deviantart:before {
  content: "\f1bd";
}
.fa-soundcloud:before {
  content: "\f1be";
}
.fa-database:before {
  content: "\f1c0";
}
.fa-file-pdf-o:before {
  content: "\f1c1";
}
.fa-file-word-o:before {
  content: "\f1c2";
}
.fa-file-excel-o:before {
  content: "\f1c3";
}
.fa-file-powerpoint-o:before {
  content: "\f1c4";
}
.fa-file-photo-o:before,
.fa-file-picture-o:before,
.fa-file-image-o:before {
  content: "\f1c5";
}
.fa-file-zip-o:before,
.fa-file-archive-o:before {
  content: "\f1c6";
}
.fa-file-sound-o:before,
.fa-file-audio-o:before {
  content: "\f1c7";
}
.fa-file-movie-o:before,
.fa-file-video-o:before {
  content: "\f1c8";
}
.fa-file-code-o:before {
  content: "\f1c9";
}
.fa-vine:before {
  content: "\f1ca";
}
.fa-codepen:before {
  content: "\f1cb";
}
.fa-jsfiddle:before {
  content: "\f1cc";
}
.fa-life-bouy:before,
.fa-life-buoy:before,
.fa-life-saver:before,
.fa-support:before,
.fa-life-ring:before {
  content: "\f1cd";
}
.fa-circle-o-notch:before {
  content: "\f1ce";
}
.fa-ra:before,
.fa-rebel:before {
  content: "\f1d0";
}
.fa-ge:before,
.fa-empire:before {
  content: "\f1d1";
}
.fa-git-square:before {
  content: "\f1d2";
}
.fa-git:before {
  content: "\f1d3";
}
.fa-hacker-news:before {
  content: "\f1d4";
}
.fa-tencent-weibo:before {
  content: "\f1d5";
}
.fa-qq:before {
  content: "\f1d6";
}
.fa-wechat:before,
.fa-weixin:before {
  content: "\f1d7";
}
.fa-send:before,
.fa-paper-plane:before {
  content: "\f1d8";
}
.fa-send-o:before,
.fa-paper-plane-o:before {
  content: "\f1d9";
}
.fa-history:before {
  content: "\f1da";
}
.fa-genderless:before,
.fa-circle-thin:before {
  content: "\f1db";
}
.fa-header:before {
  content: "\f1dc";
}
.fa-paragraph:before {
  content: "\f1dd";
}
.fa-sliders:before {
  content: "\f1de";
}
.fa-share-alt:before {
  content: "\f1e0";
}
.fa-share-alt-square:before {
  content: "\f1e1";
}
.fa-bomb:before {
  content: "\f1e2";
}
.fa-soccer-ball-o:before,
.fa-futbol-o:before {
  content: "\f1e3";
}
.fa-tty:before {
  content: "\f1e4";
}
.fa-binoculars:before {
  content: "\f1e5";
}
.fa-plug:before {
  content: "\f1e6";
}
.fa-slideshare:before {
  content: "\f1e7";
}
.fa-twitch:before {
  content: "\f1e8";
}
.fa-yelp:before {
  content: "\f1e9";
}
.fa-newspaper-o:before {
  content: "\f1ea";
}
.fa-wifi:before {
  content: "\f1eb";
}
.fa-calculator:before {
  content: "\f1ec";
}
.fa-paypal:before {
  content: "\f1ed";
}
.fa-google-wallet:before {
  content: "\f1ee";
}
.fa-cc-visa:before {
  content: "\f1f0";
}
.fa-cc-mastercard:before {
  content: "\f1f1";
}
.fa-cc-discover:before {
  content: "\f1f2";
}
.fa-cc-amex:before {
  content: "\f1f3";
}
.fa-cc-paypal:before {
  content: "\f1f4";
}
.fa-cc-stripe:before {
  content: "\f1f5";
}
.fa-bell-slash:before {
  content: "\f1f6";
}
.fa-bell-slash-o:before {
  content: "\f1f7";
}
.fa-trash:before {
  content: "\f1f8";
}
.fa-copyright:before {
  content: "\f1f9";
}
.fa-at:before {
  content: "\f1fa";
}
.fa-eyedropper:before {
  content: "\f1fb";
}
.fa-paint-brush:before {
  content: "\f1fc";
}
.fa-birthday-cake:before {
  content: "\f1fd";
}
.fa-area-chart:before {
  content: "\f1fe";
}
.fa-pie-chart:before {
  content: "\f200";
}
.fa-line-chart:before {
  content: "\f201";
}
.fa-lastfm:before {
  content: "\f202";
}
.fa-lastfm-square:before {
  content: "\f203";
}
.fa-toggle-off:before {
  content: "\f204";
}
.fa-toggle-on:before {
  content: "\f205";
}
.fa-bicycle:before {
  content: "\f206";
}
.fa-bus:before {
  content: "\f207";
}
.fa-ioxhost:before {
  content: "\f208";
}
.fa-angellist:before {
  content: "\f209";
}
.fa-cc:before {
  content: "\f20a";
}
.fa-shekel:before,
.fa-sheqel:before,
.fa-ils:before {
  content: "\f20b";
}
.fa-meanpath:before {
  content: "\f20c";
}
.fa-buysellads:before {
  content: "\f20d";
}
.fa-connectdevelop:before {
  content: "\f20e";
}
.fa-dashcube:before {
  content: "\f210";
}
.fa-forumbee:before {
  content: "\f211";
}
.fa-leanpub:before {
  content: "\f212";
}
.fa-sellsy:before {
  content: "\f213";
}
.fa-shirtsinbulk:before {
  content: "\f214";
}
.fa-simplybuilt:before {
  content: "\f215";
}
.fa-skyatlas:before {
  content: "\f216";
}
.fa-cart-plus:before {
  content: "\f217";
}
.fa-cart-arrow-down:before {
  content: "\f218";
}
.fa-diamond:before {
  content: "\f219";
}
.fa-ship:before {
  content: "\f21a";
}
.fa-user-secret:before {
  content: "\f21b";
}
.fa-motorcycle:before {
  content: "\f21c";
}
.fa-street-view:before {
  content: "\f21d";
}
.fa-heartbeat:before {
  content: "\f21e";
}
.fa-venus:before {
  content: "\f221";
}
.fa-mars:before {
  content: "\f222";
}
.fa-mercury:before {
  content: "\f223";
}
.fa-transgender:before {
  content: "\f224";
}
.fa-transgender-alt:before {
  content: "\f225";
}
.fa-venus-double:before {
  content: "\f226";
}
.fa-mars-double:before {
  content: "\f227";
}
.fa-venus-mars:before {
  content: "\f228";
}
.fa-mars-stroke:before {
  content: "\f229";
}
.fa-mars-stroke-v:before {
  content: "\f22a";
}
.fa-mars-stroke-h:before {
  content: "\f22b";
}
.fa-neuter:before {
  content: "\f22c";
}
.fa-facebook-official:before {
  content: "\f230";
}
.fa-pinterest-p:before {
  content: "\f231";
}
.fa-whatsapp:before {
  content: "\f232";
}
.fa-server:before {
  content: "\f233";
}
.fa-user-plus:before {
  content: "\f234";
}
.fa-user-times:before {
  content: "\f235";
}
.fa-hotel:before,
.fa-bed:before {
  content: "\f236";
}
.fa-viacoin:before {
  content: "\f237";
}
.fa-train:before {
  content: "\f238";
}
.fa-subway:before {
  content: "\f239";
}
.fa-medium:before {
  content: "\f23a";
}


================================================================================
END: D:\QiEOS\apps\web\public\builtbyrays_public\builtbyrays.com\public\fonts\font-awesome\css\font-awesome.css
================================================================================


================================================================================
FILE: D:\QiEOS\apps\web\public\builtbyrays_public\builtbyrays.com\public\fonts\font-awesome\css\font-awesome.min.css
================================================================================

/*!
 *  Font Awesome 4.3.0 by @davegandy - http://fontawesome.io - @fontawesome
 *  License - http://fontawesome.io/license (Font: SIL OFL 1.1, CSS: MIT License)
 */@font-face{font-family:'FontAwesome';src:url('../fonts/fontawesome-webfont.eot?v=4.3.0');src:url('../fonts/fontawesome-webfont.eot?#iefix&v=4.3.0') format('embedded-opentype'),url('../fonts/fontawesome-webfont.woff2?v=4.3.0') format('woff2'),url('../fonts/fontawesome-webfont.woff?v=4.3.0') format('woff'),url('../fonts/fontawesome-webfont.ttf?v=4.3.0') format('truetype'),url('../fonts/fontawesome-webfont.svg?v=4.3.0#fontawesomeregular') format('svg');font-weight:normal;font-style:normal}.fa{display:inline-block;font:normal normal normal 14px/1 FontAwesome;font-size:inherit;text-rendering:auto;-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale;transform:translate(0, 0)}.fa-lg{font-size:1.33333333em;line-height:.75em;vertical-align:-15%}.fa-2x{font-size:2em}.fa-3x{font-size:3em}.fa-4x{font-size:4em}.fa-5x{font-size:5em}.fa-fw{width:1.28571429em;text-align:center}.fa-ul{padding-left:0;margin-left:2.14285714em;list-style-type:none}.fa-ul>li{position:relative}.fa-li{position:absolute;left:-2.14285714em;width:2.14285714em;top:.14285714em;text-align:center}.fa-li.fa-lg{left:-1.85714286em}.fa-border{padding:.2em .25em .15em;border:solid .08em #eee;border-radius:.1em}.pull-right{float:right}.pull-left{float:left}.fa.pull-left{margin-right:.3em}.fa.pull-right{margin-left:.3em}.fa-spin{-webkit-animation:fa-spin 2s infinite linear;animation:fa-spin 2s infinite linear}.fa-pulse{-webkit-animation:fa-spin 1s infinite steps(8);animation:fa-spin 1s infinite steps(8)}@-webkit-keyframes fa-spin{0%{-webkit-transform:rotate(0deg);transform:rotate(0deg)}100%{-webkit-transform:rotate(359deg);transform:rotate(359deg)}}@keyframes fa-spin{0%{-webkit-transform:rotate(0deg);transform:rotate(0deg)}100%{-webkit-transform:rotate(359deg);transform:rotate(359deg)}}.fa-rotate-90{filter:progid:DXImageTransform.Microsoft.BasicImage(rotation=1);-webkit-transform:rotate(90deg);-ms-transform:rotate(90deg);transform:rotate(90deg)}.fa-rotate-180{filter:progid:DXImageTransform.Microsoft.BasicImage(rotation=2);-webkit-transform:rotate(180deg);-ms-transform:rotate(180deg);transform:rotate(180deg)}.fa-rotate-270{filter:progid:DXImageTransform.Microsoft.BasicImage(rotation=3);-webkit-transform:rotate(270deg);-ms-transform:rotate(270deg);transform:rotate(270deg)}.fa-flip-horizontal{filter:progid:DXImageTransform.Microsoft.BasicImage(rotation=0, mirror=1);-webkit-transform:scale(-1, 1);-ms-transform:scale(-1, 1);transform:scale(-1, 1)}.fa-flip-vertical{filter:progid:DXImageTransform.Microsoft.BasicImage(rotation=2, mirror=1);-webkit-transform:scale(1, -1);-ms-transform:scale(1, -1);transform:scale(1, -1)}:root .fa-rotate-90,:root .fa-rotate-180,:root .fa-rotate-270,:root .fa-flip-horizontal,:root .fa-flip-vertical{filter:none}.fa-stack{position:relative;display:inline-block;width:2em;height:2em;line-height:2em;vertical-align:middle}.fa-stack-1x,.fa-stack-2x{position:absolute;left:0;width:100%;text-align:center}.fa-stack-1x{line-height:inherit}.fa-stack-2x{font-size:2em}.fa-inverse{color:#fff}.fa-glass:before{content:"\f000"}.fa-music:before{content:"\f001"}.fa-search:before{content:"\f002"}.fa-envelope-o:before{content:"\f003"}.fa-heart:before{content:"\f004"}.fa-star:before{content:"\f005"}.fa-star-o:before{content:"\f006"}.fa-user:before{content:"\f007"}.fa-film:before{content:"\f008"}.fa-th-large:before{content:"\f009"}.fa-th:before{content:"\f00a"}.fa-th-list:before{content:"\f00b"}.fa-check:before{content:"\f00c"}.fa-remove:before,.fa-close:before,.fa-times:before{content:"\f00d"}.fa-search-plus:before{content:"\f00e"}.fa-search-minus:before{content:"\f010"}.fa-power-off:before{content:"\f011"}.fa-signal:before{content:"\f012"}.fa-gear:before,.fa-cog:before{content:"\f013"}.fa-trash-o:before{content:"\f014"}.fa-home:before{content:"\f015"}.fa-file-o:before{content:"\f016"}.fa-clock-o:before{content:"\f017"}.fa-road:before{content:"\f018"}.fa-download:before{content:"\f019"}.fa-arrow-circle-o-down:before{content:"\f01a"}.fa-arrow-circle-o-up:before{content:"\f01b"}.fa-inbox:before{content:"\f01c"}.fa-play-circle-o:before{content:"\f01d"}.fa-rotate-right:before,.fa-repeat:before{content:"\f01e"}.fa-refresh:before{content:"\f021"}.fa-list-alt:before{content:"\f022"}.fa-lock:before{content:"\f023"}.fa-flag:before{content:"\f024"}.fa-headphones:before{content:"\f025"}.fa-volume-off:before{content:"\f026"}.fa-volume-down:before{content:"\f027"}.fa-volume-up:before{content:"\f028"}.fa-qrcode:before{content:"\f029"}.fa-barcode:before{content:"\f02a"}.fa-tag:before{content:"\f02b"}.fa-tags:before{content:"\f02c"}.fa-book:before{content:"\f02d"}.fa-bookmark:before{content:"\f02e"}.fa-print:before{content:"\f02f"}.fa-camera:before{content:"\f030"}.fa-font:before{content:"\f031"}.fa-bold:before{content:"\f032"}.fa-italic:before{content:"\f033"}.fa-text-height:before{content:"\f034"}.fa-text-width:before{content:"\f035"}.fa-align-left:before{content:"\f036"}.fa-align-center:before{content:"\f037"}.fa-align-right:before{content:"\f038"}.fa-align-justify:before{content:"\f039"}.fa-list:before{content:"\f03a"}.fa-dedent:before,.fa-outdent:before{content:"\f03b"}.fa-indent:before{content:"\f03c"}.fa-video-camera:before{content:"\f03d"}.fa-photo:before,.fa-image:before,.fa-picture-o:before{content:"\f03e"}.fa-pencil:before{content:"\f040"}.fa-map-marker:before{content:"\f041"}.fa-adjust:before{content:"\f042"}.fa-tint:before{content:"\f043"}.fa-edit:before,.fa-pencil-square-o:before{content:"\f044"}.fa-share-square-o:before{content:"\f045"}.fa-check-square-o:before{content:"\f046"}.fa-arrows:before{content:"\f047"}.fa-step-backward:before{content:"\f048"}.fa-fast-backward:before{content:"\f049"}.fa-backward:before{content:"\f04a"}.fa-play:before{content:"\f04b"}.fa-pause:before{content:"\f04c"}.fa-stop:before{content:"\f04d"}.fa-forward:before{content:"\f04e"}.fa-fast-forward:before{content:"\f050"}.fa-step-forward:before{content:"\f051"}.fa-eject:before{content:"\f052"}.fa-chevron-left:before{content:"\f053"}.fa-chevron-right:before{content:"\f054"}.fa-plus-circle:before{content:"\f055"}.fa-minus-circle:before{content:"\f056"}.fa-times-circle:before{content:"\f057"}.fa-check-circle:before{content:"\f058"}.fa-question-circle:before{content:"\f059"}.fa-info-circle:before{content:"\f05a"}.fa-crosshairs:before{content:"\f05b"}.fa-times-circle-o:before{content:"\f05c"}.fa-check-circle-o:before{content:"\f05d"}.fa-ban:before{content:"\f05e"}.fa-arrow-left:before{content:"\f060"}.fa-arrow-right:before{content:"\f061"}.fa-arrow-up:before{content:"\f062"}.fa-arrow-down:before{content:"\f063"}.fa-mail-forward:before,.fa-share:before{content:"\f064"}.fa-expand:before{content:"\f065"}.fa-compress:before{content:"\f066"}.fa-plus:before{content:"\f067"}.fa-minus:before{content:"\f068"}.fa-asterisk:before{content:"\f069"}.fa-exclamation-circle:before{content:"\f06a"}.fa-gift:before{content:"\f06b"}.fa-leaf:before{content:"\f06c"}.fa-fire:before{content:"\f06d"}.fa-eye:before{content:"\f06e"}.fa-eye-slash:before{content:"\f070"}.fa-warning:before,.fa-exclamation-triangle:before{content:"\f071"}.fa-plane:before{content:"\f072"}.fa-calendar:before{content:"\f073"}.fa-random:before{content:"\f074"}.fa-comment:before{content:"\f075"}.fa-magnet:before{content:"\f076"}.fa-chevron-up:before{content:"\f077"}.fa-chevron-down:before{content:"\f078"}.fa-retweet:before{content:"\f079"}.fa-shopping-cart:before{content:"\f07a"}.fa-folder:before{content:"\f07b"}.fa-folder-open:before{content:"\f07c"}.fa-arrows-v:before{content:"\f07d"}.fa-arrows-h:before{content:"\f07e"}.fa-bar-chart-o:before,.fa-bar-chart:before{content:"\f080"}.fa-twitter-square:before{content:"\f081"}.fa-facebook-square:before{content:"\f082"}.fa-camera-retro:before{content:"\f083"}.fa-key:before{content:"\f084"}.fa-gears:before,.fa-cogs:before{content:"\f085"}.fa-comments:before{content:"\f086"}.fa-thumbs-o-up:before{content:"\f087"}.fa-thumbs-o-down:before{content:"\f088"}.fa-star-half:before{content:"\f089"}.fa-heart-o:before{content:"\f08a"}.fa-sign-out:before{content:"\f08b"}.fa-linkedin-square:before{content:"\f08c"}.fa-thumb-tack:before{content:"\f08d"}.fa-external-link:before{content:"\f08e"}.fa-sign-in:before{content:"\f090"}.fa-trophy:before{content:"\f091"}.fa-github-square:before{content:"\f092"}.fa-upload:before{content:"\f093"}.fa-lemon-o:before{content:"\f094"}.fa-phone:before{content:"\f095"}.fa-square-o:before{content:"\f096"}.fa-bookmark-o:before{content:"\f097"}.fa-phone-square:before{content:"\f098"}.fa-twitter:before{content:"\f099"}.fa-facebook-f:before,.fa-facebook:before{content:"\f09a"}.fa-github:before{content:"\f09b"}.fa-unlock:before{content:"\f09c"}.fa-credit-card:before{content:"\f09d"}.fa-rss:before{content:"\f09e"}.fa-hdd-o:before{content:"\f0a0"}.fa-bullhorn:before{content:"\f0a1"}.fa-bell:before{content:"\f0f3"}.fa-certificate:before{content:"\f0a3"}.fa-hand-o-right:before{content:"\f0a4"}.fa-hand-o-left:before{content:"\f0a5"}.fa-hand-o-up:before{content:"\f0a6"}.fa-hand-o-down:before{content:"\f0a7"}.fa-arrow-circle-left:before{content:"\f0a8"}.fa-arrow-circle-right:before{content:"\f0a9"}.fa-arrow-circle-up:before{content:"\f0aa"}.fa-arrow-circle-down:before{content:"\f0ab"}.fa-globe:before{content:"\f0ac"}.fa-wrench:before{content:"\f0ad"}.fa-tasks:before{content:"\f0ae"}.fa-filter:before{content:"\f0b0"}.fa-briefcase:before{content:"\f0b1"}.fa-arrows-alt:before{content:"\f0b2"}.fa-group:before,.fa-users:before{content:"\f0c0"}.fa-chain:before,.fa-link:before{content:"\f0c1"}.fa-cloud:before{content:"\f0c2"}.fa-flask:before{content:"\f0c3"}.fa-cut:before,.fa-scissors:before{content:"\f0c4"}.fa-copy:before,.fa-files-o:before{content:"\f0c5"}.fa-paperclip:before{content:"\f0c6"}.fa-save:before,.fa-floppy-o:before{content:"\f0c7"}.fa-square:before{content:"\f0c8"}.fa-navicon:before,.fa-reorder:before,.fa-bars:before{content:"\f0c9"}.fa-list-ul:before{content:"\f0ca"}.fa-list-ol:before{content:"\f0cb"}.fa-strikethrough:before{content:"\f0cc"}.fa-underline:before{content:"\f0cd"}.fa-table:before{content:"\f0ce"}.fa-magic:before{content:"\f0d0"}.fa-truck:before{content:"\f0d1"}.fa-pinterest:before{content:"\f0d2"}.fa-pinterest-square:before{content:"\f0d3"}.fa-google-plus-square:before{content:"\f0d4"}.fa-google-plus:before{content:"\f0d5"}.fa-money:before{content:"\f0d6"}.fa-caret-down:before{content:"\f0d7"}.fa-caret-up:before{content:"\f0d8"}.fa-caret-left:before{content:"\f0d9"}.fa-caret-right:before{content:"\f0da"}.fa-columns:before{content:"\f0db"}.fa-unsorted:before,.fa-sort:before{content:"\f0dc"}.fa-sort-down:before,.fa-sort-desc:before{content:"\f0dd"}.fa-sort-up:before,.fa-sort-asc:before{content:"\f0de"}.fa-envelope:before{content:"\f0e0"}.fa-linkedin:before{content:"\f0e1"}.fa-rotate-left:before,.fa-undo:before{content:"\f0e2"}.fa-legal:before,.fa-gavel:before{content:"\f0e3"}.fa-dashboard:before,.fa-tachometer:before{content:"\f0e4"}.fa-comment-o:before{content:"\f0e5"}.fa-comments-o:before{content:"\f0e6"}.fa-flash:before,.fa-bolt:before{content:"\f0e7"}.fa-sitemap:before{content:"\f0e8"}.fa-umbrella:before{content:"\f0e9"}.fa-paste:before,.fa-clipboard:before{content:"\f0ea"}.fa-lightbulb-o:before{content:"\f0eb"}.fa-exchange:before{content:"\f0ec"}.fa-cloud-download:before{content:"\f0ed"}.fa-cloud-upload:before{content:"\f0ee"}.fa-user-md:before{content:"\f0f0"}.fa-stethoscope:before{content:"\f0f1"}.fa-suitcase:before{content:"\f0f2"}.fa-bell-o:before{content:"\f0a2"}.fa-coffee:before{content:"\f0f4"}.fa-cutlery:before{content:"\f0f5"}.fa-file-text-o:before{content:"\f0f6"}.fa-building-o:before{content:"\f0f7"}.fa-hospital-o:before{content:"\f0f8"}.fa-ambulance:before{content:"\f0f9"}.fa-medkit:before{content:"\f0fa"}.fa-fighter-jet:before{content:"\f0fb"}.fa-beer:before{content:"\f0fc"}.fa-h-square:before{content:"\f0fd"}.fa-plus-square:before{content:"\f0fe"}.fa-angle-double-left:before{content:"\f100"}.fa-angle-double-right:before{content:"\f101"}.fa-angle-double-up:before{content:"\f102"}.fa-angle-double-down:before{content:"\f103"}.fa-angle-left:before{content:"\f104"}.fa-angle-right:before{content:"\f105"}.fa-angle-up:before{content:"\f106"}.fa-angle-down:before{content:"\f107"}.fa-desktop:before{content:"\f108"}.fa-laptop:before{content:"\f109"}.fa-tablet:before{content:"\f10a"}.fa-mobile-phone:before,.fa-mobile:before{content:"\f10b"}.fa-circle-o:before{content:"\f10c"}.fa-quote-left:before{content:"\f10d"}.fa-quote-right:before{content:"\f10e"}.fa-spinner:before{content:"\f110"}.fa-circle:before{content:"\f111"}.fa-mail-reply:before,.fa-reply:before{content:"\f112"}.fa-github-alt:before{content:"\f113"}.fa-folder-o:before{content:"\f114"}.fa-folder-open-o:before{content:"\f115"}.fa-smile-o:before{content:"\f118"}.fa-frown-o:before{content:"\f119"}.fa-meh-o:before{content:"\f11a"}.fa-gamepad:before{content:"\f11b"}.fa-keyboard-o:before{content:"\f11c"}.fa-flag-o:before{content:"\f11d"}.fa-flag-checkered:before{content:"\f11e"}.fa-terminal:before{content:"\f120"}.fa-code:before{content:"\f121"}.fa-mail-reply-all:before,.fa-reply-all:before{content:"\f122"}.fa-star-half-empty:before,.fa-star-half-full:before,.fa-star-half-o:before{content:"\f123"}.fa-location-arrow:before{content:"\f124"}.fa-crop:before{content:"\f125"}.fa-code-fork:before{content:"\f126"}.fa-unlink:before,.fa-chain-broken:before{content:"\f127"}.fa-question:before{content:"\f128"}.fa-info:before{content:"\f129"}.fa-exclamation:before{content:"\f12a"}.fa-superscript:before{content:"\f12b"}.fa-subscript:before{content:"\f12c"}.fa-eraser:before{content:"\f12d"}.fa-puzzle-piece:before{content:"\f12e"}.fa-microphone:before{content:"\f130"}.fa-microphone-slash:before{content:"\f131"}.fa-shield:before{content:"\f132"}.fa-calendar-o:before{content:"\f133"}.fa-fire-extinguisher:before{content:"\f134"}.fa-rocket:before{content:"\f135"}.fa-maxcdn:before{content:"\f136"}.fa-chevron-circle-left:before{content:"\f137"}.fa-chevron-circle-right:before{content:"\f138"}.fa-chevron-circle-up:before{content:"\f139"}.fa-chevron-circle-down:before{content:"\f13a"}.fa-html5:before{content:"\f13b"}.fa-css3:before{content:"\f13c"}.fa-anchor:before{content:"\f13d"}.fa-unlock-alt:before{content:"\f13e"}.fa-bullseye:before{content:"\f140"}.fa-ellipsis-h:before{content:"\f141"}.fa-ellipsis-v:before{content:"\f142"}.fa-rss-square:before{content:"\f143"}.fa-play-circle:before{content:"\f144"}.fa-ticket:before{content:"\f145"}.fa-minus-square:before{content:"\f146"}.fa-minus-square-o:before{content:"\f147"}.fa-level-up:before{content:"\f148"}.fa-level-down:before{content:"\f149"}.fa-check-square:before{content:"\f14a"}.fa-pencil-square:before{content:"\f14b"}.fa-external-link-square:before{content:"\f14c"}.fa-share-square:before{content:"\f14d"}.fa-compass:before{content:"\f14e"}.fa-toggle-down:before,.fa-caret-square-o-down:before{content:"\f150"}.fa-toggle-up:before,.fa-caret-square-o-up:before{content:"\f151"}.fa-toggle-right:before,.fa-caret-square-o-right:before{content:"\f152"}.fa-euro:before,.fa-eur:before{content:"\f153"}.fa-gbp:before{content:"\f154"}.fa-dollar:before,.fa-usd:before{content:"\f155"}.fa-rupee:before,.fa-inr:before{content:"\f156"}.fa-cny:before,.fa-rmb:before,.fa-yen:before,.fa-jpy:before{content:"\f157"}.fa-ruble:before,.fa-rouble:before,.fa-rub:before{content:"\f158"}.fa-won:before,.fa-krw:before{content:"\f159"}.fa-bitcoin:before,.fa-btc:before{content:"\f15a"}.fa-file:before{content:"\f15b"}.fa-file-text:before{content:"\f15c"}.fa-sort-alpha-asc:before{content:"\f15d"}.fa-sort-alpha-desc:before{content:"\f15e"}.fa-sort-amount-asc:before{content:"\f160"}.fa-sort-amount-desc:before{content:"\f161"}.fa-sort-numeric-asc:before{content:"\f162"}.fa-sort-numeric-desc:before{content:"\f163"}.fa-thumbs-up:before{content:"\f164"}.fa-thumbs-down:before{content:"\f165"}.fa-youtube-square:before{content:"\f166"}.fa-youtube:before{content:"\f167"}.fa-xing:before{content:"\f168"}.fa-xing-square:before{content:"\f169"}.fa-youtube-play:before{content:"\f16a"}.fa-dropbox:before{content:"\f16b"}.fa-stack-overflow:before{content:"\f16c"}.fa-instagram:before{content:"\f16d"}.fa-flickr:before{content:"\f16e"}.fa-adn:before{content:"\f170"}.fa-bitbucket:before{content:"\f171"}.fa-bitbucket-square:before{content:"\f172"}.fa-tumblr:before{content:"\f173"}.fa-tumblr-square:before{content:"\f174"}.fa-long-arrow-down:before{content:"\f175"}.fa-long-arrow-up:before{content:"\f176"}.fa-long-arrow-left:before{content:"\f177"}.fa-long-arrow-right:before{content:"\f178"}.fa-apple:before{content:"\f179"}.fa-windows:before{content:"\f17a"}.fa-android:before{content:"\f17b"}.fa-linux:before{content:"\f17c"}.fa-dribbble:before{content:"\f17d"}.fa-skype:before{content:"\f17e"}.fa-foursquare:before{content:"\f180"}.fa-trello:before{content:"\f181"}.fa-female:before{content:"\f182"}.fa-male:before{content:"\f183"}.fa-gittip:before,.fa-gratipay:before{content:"\f184"}.fa-sun-o:before{content:"\f185"}.fa-moon-o:before{content:"\f186"}.fa-archive:before{content:"\f187"}.fa-bug:before{content:"\f188"}.fa-vk:before{content:"\f189"}.fa-weibo:before{content:"\f18a"}.fa-renren:before{content:"\f18b"}.fa-pagelines:before{content:"\f18c"}.fa-stack-exchange:before{content:"\f18d"}.fa-arrow-circle-o-right:before{content:"\f18e"}.fa-arrow-circle-o-left:before{content:"\f190"}.fa-toggle-left:before,.fa-caret-square-o-left:before{content:"\f191"}.fa-dot-circle-o:before{content:"\f192"}.fa-wheelchair:before{content:"\f193"}.fa-vimeo-square:before{content:"\f194"}.fa-turkish-lira:before,.fa-try:before{content:"\f195"}.fa-plus-square-o:before{content:"\f196"}.fa-space-shuttle:before{content:"\f197"}.fa-slack:before{content:"\f198"}.fa-envelope-square:before{content:"\f199"}.fa-wordpress:before{content:"\f19a"}.fa-openid:before{content:"\f19b"}.fa-institution:before,.fa-bank:before,.fa-university:before{content:"\f19c"}.fa-mortar-board:before,.fa-graduation-cap:before{content:"\f19d"}.fa-yahoo:before{content:"\f19e"}.fa-google:before{content:"\f1a0"}.fa-reddit:before{content:"\f1a1"}.fa-reddit-square:before{content:"\f1a2"}.fa-stumbleupon-circle:before{content:"\f1a3"}.fa-stumbleupon:before{content:"\f1a4"}.fa-delicious:before{content:"\f1a5"}.fa-digg:before{content:"\f1a6"}.fa-pied-piper:before{content:"\f1a7"}.fa-pied-piper-alt:before{content:"\f1a8"}.fa-drupal:before{content:"\f1a9"}.fa-joomla:before{content:"\f1aa"}.fa-language:before{content:"\f1ab"}.fa-fax:before{content:"\f1ac"}.fa-building:before{content:"\f1ad"}.fa-child:before{content:"\f1ae"}.fa-paw:before{content:"\f1b0"}.fa-spoon:before{content:"\f1b1"}.fa-cube:before{content:"\f1b2"}.fa-cubes:before{content:"\f1b3"}.fa-behance:before{content:"\f1b4"}.fa-behance-square:before{content:"\f1b5"}.fa-steam:before{content:"\f1b6"}.fa-steam-square:before{content:"\f1b7"}.fa-recycle:before{content:"\f1b8"}.fa-automobile:before,.fa-car:before{content:"\f1b9"}.fa-cab:before,.fa-taxi:before{content:"\f1ba"}.fa-tree:before{content:"\f1bb"}.fa-spotify:before{content:"\f1bc"}.fa-deviantart:before{content:"\f1bd"}.fa-soundcloud:before{content:"\f1be"}.fa-database:before{content:"\f1c0"}.fa-file-pdf-o:before{content:"\f1c1"}.fa-file-word-o:before{content:"\f1c2"}.fa-file-excel-o:before{content:"\f1c3"}.fa-file-powerpoint-o:before{content:"\f1c4"}.fa-file-photo-o:before,.fa-file-picture-o:before,.fa-file-image-o:before{content:"\f1c5"}.fa-file-zip-o:before,.fa-file-archive-o:before{content:"\f1c6"}.fa-file-sound-o:before,.fa-file-audio-o:before{content:"\f1c7"}.fa-file-movie-o:before,.fa-file-video-o:before{content:"\f1c8"}.fa-file-code-o:before{content:"\f1c9"}.fa-vine:before{content:"\f1ca"}.fa-codepen:before{content:"\f1cb"}.fa-jsfiddle:before{content:"\f1cc"}.fa-life-bouy:before,.fa-life-buoy:before,.fa-life-saver:before,.fa-support:before,.fa-life-ring:before{content:"\f1cd"}.fa-circle-o-notch:before{content:"\f1ce"}.fa-ra:before,.fa-rebel:before{content:"\f1d0"}.fa-ge:before,.fa-empire:before{content:"\f1d1"}.fa-git-square:before{content:"\f1d2"}.fa-git:before{content:"\f1d3"}.fa-hacker-news:before{content:"\f1d4"}.fa-tencent-weibo:before{content:"\f1d5"}.fa-qq:before{content:"\f1d6"}.fa-wechat:before,.fa-weixin:before{content:"\f1d7"}.fa-send:before,.fa-paper-plane:before{content:"\f1d8"}.fa-send-o:before,.fa-paper-plane-o:before{content:"\f1d9"}.fa-history:before{content:"\f1da"}.fa-genderless:before,.fa-circle-thin:before{content:"\f1db"}.fa-header:before{content:"\f1dc"}.fa-paragraph:before{content:"\f1dd"}.fa-sliders:before{content:"\f1de"}.fa-share-alt:before{content:"\f1e0"}.fa-share-alt-square:before{content:"\f1e1"}.fa-bomb:before{content:"\f1e2"}.fa-soccer-ball-o:before,.fa-futbol-o:before{content:"\f1e3"}.fa-tty:before{content:"\f1e4"}.fa-binoculars:before{content:"\f1e5"}.fa-plug:before{content:"\f1e6"}.fa-slideshare:before{content:"\f1e7"}.fa-twitch:before{content:"\f1e8"}.fa-yelp:before{content:"\f1e9"}.fa-newspaper-o:before{content:"\f1ea"}.fa-wifi:before{content:"\f1eb"}.fa-calculator:before{content:"\f1ec"}.fa-paypal:before{content:"\f1ed"}.fa-google-wallet:before{content:"\f1ee"}.fa-cc-visa:before{content:"\f1f0"}.fa-cc-mastercard:before{content:"\f1f1"}.fa-cc-discover:before{content:"\f1f2"}.fa-cc-amex:before{content:"\f1f3"}.fa-cc-paypal:before{content:"\f1f4"}.fa-cc-stripe:before{content:"\f1f5"}.fa-bell-slash:before{content:"\f1f6"}.fa-bell-slash-o:before{content:"\f1f7"}.fa-trash:before{content:"\f1f8"}.fa-copyright:before{content:"\f1f9"}.fa-at:before{content:"\f1fa"}.fa-eyedropper:before{content:"\f1fb"}.fa-paint-brush:before{content:"\f1fc"}.fa-birthday-cake:before{content:"\f1fd"}.fa-area-chart:before{content:"\f1fe"}.fa-pie-chart:before{content:"\f200"}.fa-line-chart:before{content:"\f201"}.fa-lastfm:before{content:"\f202"}.fa-lastfm-square:before{content:"\f203"}.fa-toggle-off:before{content:"\f204"}.fa-toggle-on:before{content:"\f205"}.fa-bicycle:before{content:"\f206"}.fa-bus:before{content:"\f207"}.fa-ioxhost:before{content:"\f208"}.fa-angellist:before{content:"\f209"}.fa-cc:before{content:"\f20a"}.fa-shekel:before,.fa-sheqel:before,.fa-ils:before{content:"\f20b"}.fa-meanpath:before{content:"\f20c"}.fa-buysellads:before{content:"\f20d"}.fa-connectdevelop:before{content:"\f20e"}.fa-dashcube:before{content:"\f210"}.fa-forumbee:before{content:"\f211"}.fa-leanpub:before{content:"\f212"}.fa-sellsy:before{content:"\f213"}.fa-shirtsinbulk:before{content:"\f214"}.fa-simplybuilt:before{content:"\f215"}.fa-skyatlas:before{content:"\f216"}.fa-cart-plus:before{content:"\f217"}.fa-cart-arrow-down:before{content:"\f218"}.fa-diamond:before{content:"\f219"}.fa-ship:before{content:"\f21a"}.fa-user-secret:before{content:"\f21b"}.fa-motorcycle:before{content:"\f21c"}.fa-street-view:before{content:"\f21d"}.fa-heartbeat:before{content:"\f21e"}.fa-venus:before{content:"\f221"}.fa-mars:before{content:"\f222"}.fa-mercury:before{content:"\f223"}.fa-transgender:before{content:"\f224"}.fa-transgender-alt:before{content:"\f225"}.fa-venus-double:before{content:"\f226"}.fa-mars-double:before{content:"\f227"}.fa-venus-mars:before{content:"\f228"}.fa-mars-stroke:before{content:"\f229"}.fa-mars-stroke-v:before{content:"\f22a"}.fa-mars-stroke-h:before{content:"\f22b"}.fa-neuter:before{content:"\f22c"}.fa-facebook-official:before{content:"\f230"}.fa-pinterest-p:before{content:"\f231"}.fa-whatsapp:before{content:"\f232"}.fa-server:before{content:"\f233"}.fa-user-plus:before{content:"\f234"}.fa-user-times:before{content:"\f235"}.fa-hotel:before,.fa-bed:before{content:"\f236"}.fa-viacoin:before{content:"\f237"}.fa-train:before{content:"\f238"}.fa-subway:before{content:"\f239"}.fa-medium:before{content:"\f23a"}

================================================================================
END: D:\QiEOS\apps\web\public\builtbyrays_public\builtbyrays.com\public\fonts\font-awesome\css\font-awesome.min.css
================================================================================


================================================================================
FILE: D:\QiEOS\apps\web\public\builtbyrays_public\builtbyrays.com\public\fonts\font-awesome\scss\_animated.scss
================================================================================

// Spinning Icons
// --------------------------

.#{$fa-css-prefix}-spin {
  -webkit-animation: fa-spin 2s infinite linear;
          animation: fa-spin 2s infinite linear;
}

.#{$fa-css-prefix}-pulse {
  -webkit-animation: fa-spin 1s infinite steps(8);
          animation: fa-spin 1s infinite steps(8);
}

@-webkit-keyframes fa-spin {
  0% {
    -webkit-transform: rotate(0deg);
            transform: rotate(0deg);
  }
  100% {
    -webkit-transform: rotate(359deg);
            transform: rotate(359deg);
  }
}

@keyframes fa-spin {
  0% {
    -webkit-transform: rotate(0deg);
            transform: rotate(0deg);
  }
  100% {
    -webkit-transform: rotate(359deg);
            transform: rotate(359deg);
  }
}


================================================================================
END: D:\QiEOS\apps\web\public\builtbyrays_public\builtbyrays.com\public\fonts\font-awesome\scss\_animated.scss
================================================================================


================================================================================
FILE: D:\QiEOS\apps\web\public\builtbyrays_public\builtbyrays.com\public\fonts\font-awesome\scss\_bordered-pulled.scss
================================================================================

// Bordered & Pulled
// -------------------------

.#{$fa-css-prefix}-border {
  padding: .2em .25em .15em;
  border: solid .08em $fa-border-color;
  border-radius: .1em;
}

.pull-right { float: right; }
.pull-left { float: left; }

.#{$fa-css-prefix} {
  &.pull-left { margin-right: .3em; }
  &.pull-right { margin-left: .3em; }
}


================================================================================
END: D:\QiEOS\apps\web\public\builtbyrays_public\builtbyrays.com\public\fonts\font-awesome\scss\_bordered-pulled.scss
================================================================================


================================================================================
FILE: D:\QiEOS\apps\web\public\builtbyrays_public\builtbyrays.com\public\fonts\font-awesome\scss\_core.scss
================================================================================

// Base Class Definition
// -------------------------

.#{$fa-css-prefix} {
  display: inline-block;
  font: normal normal normal #{$fa-font-size-base}/1 FontAwesome; // shortening font declaration
  font-size: inherit; // can't have font-size inherit on line above, so need to override
  text-rendering: auto; // optimizelegibility throws things off #1094
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  transform: translate(0, 0); // ensures no half-pixel rendering in firefox

}


================================================================================
END: D:\QiEOS\apps\web\public\builtbyrays_public\builtbyrays.com\public\fonts\font-awesome\scss\_core.scss
================================================================================


================================================================================
FILE: D:\QiEOS\apps\web\public\builtbyrays_public\builtbyrays.com\public\fonts\font-awesome\scss\_fixed-width.scss
================================================================================

// Fixed Width Icons
// -------------------------
.#{$fa-css-prefix}-fw {
  width: (18em / 14);
  text-align: center;
}


================================================================================
END: D:\QiEOS\apps\web\public\builtbyrays_public\builtbyrays.com\public\fonts\font-awesome\scss\_fixed-width.scss
================================================================================


================================================================================
FILE: D:\QiEOS\apps\web\public\builtbyrays_public\builtbyrays.com\public\fonts\font-awesome\scss\_icons.scss
================================================================================

/* Font Awesome uses the Unicode Private Use Area (PUA) to ensure screen
   readers do not read off random characters that represent icons */

.#{$fa-css-prefix}-glass:before { content: $fa-var-glass; }
.#{$fa-css-prefix}-music:before { content: $fa-var-music; }
.#{$fa-css-prefix}-search:before { content: $fa-var-search; }
.#{$fa-css-prefix}-envelope-o:before { content: $fa-var-envelope-o; }
.#{$fa-css-prefix}-heart:before { content: $fa-var-heart; }
.#{$fa-css-prefix}-star:before { content: $fa-var-star; }
.#{$fa-css-prefix}-star-o:before { content: $fa-var-star-o; }
.#{$fa-css-prefix}-user:before { content: $fa-var-user; }
.#{$fa-css-prefix}-film:before { content: $fa-var-film; }
.#{$fa-css-prefix}-th-large:before { content: $fa-var-th-large; }
.#{$fa-css-prefix}-th:before { content: $fa-var-th; }
.#{$fa-css-prefix}-th-list:before { content: $fa-var-th-list; }
.#{$fa-css-prefix}-check:before { content: $fa-var-check; }
.#{$fa-css-prefix}-remove:before,
.#{$fa-css-prefix}-close:before,
.#{$fa-css-prefix}-times:before { content: $fa-var-times; }
.#{$fa-css-prefix}-search-plus:before { content: $fa-var-search-plus; }
.#{$fa-css-prefix}-search-minus:before { content: $fa-var-search-minus; }
.#{$fa-css-prefix}-power-off:before { content: $fa-var-power-off; }
.#{$fa-css-prefix}-signal:before { content: $fa-var-signal; }
.#{$fa-css-prefix}-gear:before,
.#{$fa-css-prefix}-cog:before { content: $fa-var-cog; }
.#{$fa-css-prefix}-trash-o:before { content: $fa-var-trash-o; }
.#{$fa-css-prefix}-home:before { content: $fa-var-home; }
.#{$fa-css-prefix}-file-o:before { content: $fa-var-file-o; }
.#{$fa-css-prefix}-clock-o:before { content: $fa-var-clock-o; }
.#{$fa-css-prefix}-road:before { content: $fa-var-road; }
.#{$fa-css-prefix}-download:before { content: $fa-var-download; }
.#{$fa-css-prefix}-arrow-circle-o-down:before { content: $fa-var-arrow-circle-o-down; }
.#{$fa-css-prefix}-arrow-circle-o-up:before { content: $fa-var-arrow-circle-o-up; }
.#{$fa-css-prefix}-inbox:before { content: $fa-var-inbox; }
.#{$fa-css-prefix}-play-circle-o:before { content: $fa-var-play-circle-o; }
.#{$fa-css-prefix}-rotate-right:before,
.#{$fa-css-prefix}-repeat:before { content: $fa-var-repeat; }
.#{$fa-css-prefix}-refresh:before { content: $fa-var-refresh; }
.#{$fa-css-prefix}-list-alt:before { content: $fa-var-list-alt; }
.#{$fa-css-prefix}-lock:before { content: $fa-var-lock; }
.#{$fa-css-prefix}-flag:before { content: $fa-var-flag; }
.#{$fa-css-prefix}-headphones:before { content: $fa-var-headphones; }
.#{$fa-css-prefix}-volume-off:before { content: $fa-var-volume-off; }
.#{$fa-css-prefix}-volume-down:before { content: $fa-var-volume-down; }
.#{$fa-css-prefix}-volume-up:before { content: $fa-var-volume-up; }
.#{$fa-css-prefix}-qrcode:before { content: $fa-var-qrcode; }
.#{$fa-css-prefix}-barcode:before { content: $fa-var-barcode; }
.#{$fa-css-prefix}-tag:before { content: $fa-var-tag; }
.#{$fa-css-prefix}-tags:before { content: $fa-var-tags; }
.#{$fa-css-prefix}-book:before { content: $fa-var-book; }
.#{$fa-css-prefix}-bookmark:before { content: $fa-var-bookmark; }
.#{$fa-css-prefix}-print:before { content: $fa-var-print; }
.#{$fa-css-prefix}-camera:before { content: $fa-var-camera; }
.#{$fa-css-prefix}-font:before { content: $fa-var-font; }
.#{$fa-css-prefix}-bold:before { content: $fa-var-bold; }
.#{$fa-css-prefix}-italic:before { content: $fa-var-italic; }
.#{$fa-css-prefix}-text-height:before { content: $fa-var-text-height; }
.#{$fa-css-prefix}-text-width:before { content: $fa-var-text-width; }
.#{$fa-css-prefix}-align-left:before { content: $fa-var-align-left; }
.#{$fa-css-prefix}-align-center:before { content: $fa-var-align-center; }
.#{$fa-css-prefix}-align-right:before { content: $fa-var-align-right; }
.#{$fa-css-prefix}-align-justify:before { content: $fa-var-align-justify; }
.#{$fa-css-prefix}-list:before { content: $fa-var-list; }
.#{$fa-css-prefix}-dedent:before,
.#{$fa-css-prefix}-outdent:before { content: $fa-var-outdent; }
.#{$fa-css-prefix}-indent:before { content: $fa-var-indent; }
.#{$fa-css-prefix}-video-camera:before { content: $fa-var-video-camera; }
.#{$fa-css-prefix}-photo:before,
.#{$fa-css-prefix}-image:before,
.#{$fa-css-prefix}-picture-o:before { content: $fa-var-picture-o; }
.#{$fa-css-prefix}-pencil:before { content: $fa-var-pencil; }
.#{$fa-css-prefix}-map-marker:before { content: $fa-var-map-marker; }
.#{$fa-css-prefix}-adjust:before { content: $fa-var-adjust; }
.#{$fa-css-prefix}-tint:before { content: $fa-var-tint; }
.#{$fa-css-prefix}-edit:before,
.#{$fa-css-prefix}-pencil-square-o:before { content: $fa-var-pencil-square-o; }
.#{$fa-css-prefix}-share-square-o:before { content: $fa-var-share-square-o; }
.#{$fa-css-prefix}-check-square-o:before { content: $fa-var-check-square-o; }
.#{$fa-css-prefix}-arrows:before { content: $fa-var-arrows; }
.#{$fa-css-prefix}-step-backward:before { content: $fa-var-step-backward; }
.#{$fa-css-prefix}-fast-backward:before { content: $fa-var-fast-backward; }
.#{$fa-css-prefix}-backward:before { content: $fa-var-backward; }
.#{$fa-css-prefix}-play:before { content: $fa-var-play; }
.#{$fa-css-prefix}-pause:before { content: $fa-var-pause; }
.#{$fa-css-prefix}-stop:before { content: $fa-var-stop; }
.#{$fa-css-prefix}-forward:before { content: $fa-var-forward; }
.#{$fa-css-prefix}-fast-forward:before { content: $fa-var-fast-forward; }
.#{$fa-css-prefix}-step-forward:before { content: $fa-var-step-forward; }
.#{$fa-css-prefix}-eject:before { content: $fa-var-eject; }
.#{$fa-css-prefix}-chevron-left:before { content: $fa-var-chevron-left; }
.#{$fa-css-prefix}-chevron-right:before { content: $fa-var-chevron-right; }
.#{$fa-css-prefix}-plus-circle:before { content: $fa-var-plus-circle; }
.#{$fa-css-prefix}-minus-circle:before { content: $fa-var-minus-circle; }
.#{$fa-css-prefix}-times-circle:before { content: $fa-var-times-circle; }
.#{$fa-css-prefix}-check-circle:before { content: $fa-var-check-circle; }
.#{$fa-css-prefix}-question-circle:before { content: $fa-var-question-circle; }
.#{$fa-css-prefix}-info-circle:before { content: $fa-var-info-circle; }
.#{$fa-css-prefix}-crosshairs:before { content: $fa-var-crosshairs; }
.#{$fa-css-prefix}-times-circle-o:before { content: $fa-var-times-circle-o; }
.#{$fa-css-prefix}-check-circle-o:before { content: $fa-var-check-circle-o; }
.#{$fa-css-prefix}-ban:before { content: $fa-var-ban; }
.#{$fa-css-prefix}-arrow-left:before { content: $fa-var-arrow-left; }
.#{$fa-css-prefix}-arrow-right:before { content: $fa-var-arrow-right; }
.#{$fa-css-prefix}-arrow-up:before { content: $fa-var-arrow-up; }
.#{$fa-css-prefix}-arrow-down:before { content: $fa-var-arrow-down; }
.#{$fa-css-prefix}-mail-forward:before,
.#{$fa-css-prefix}-share:before { content: $fa-var-share; }
.#{$fa-css-prefix}-expand:before { content: $fa-var-expand; }
.#{$fa-css-prefix}-compress:before { content: $fa-var-compress; }
.#{$fa-css-prefix}-plus:before { content: $fa-var-plus; }
.#{$fa-css-prefix}-minus:before { content: $fa-var-minus; }
.#{$fa-css-prefix}-asterisk:before { content: $fa-var-asterisk; }
.#{$fa-css-prefix}-exclamation-circle:before { content: $fa-var-exclamation-circle; }
.#{$fa-css-prefix}-gift:before { content: $fa-var-gift; }
.#{$fa-css-prefix}-leaf:before { content: $fa-var-leaf; }
.#{$fa-css-prefix}-fire:before { content: $fa-var-fire; }
.#{$fa-css-prefix}-eye:before { content: $fa-var-eye; }
.#{$fa-css-prefix}-eye-slash:before { content: $fa-var-eye-slash; }
.#{$fa-css-prefix}-warning:before,
.#{$fa-css-prefix}-exclamation-triangle:before { content: $fa-var-exclamation-triangle; }
.#{$fa-css-prefix}-plane:before { content: $fa-var-plane; }
.#{$fa-css-prefix}-calendar:before { content: $fa-var-calendar; }
.#{$fa-css-prefix}-random:before { content: $fa-var-random; }
.#{$fa-css-prefix}-comment:before { content: $fa-var-comment; }
.#{$fa-css-prefix}-magnet:before { content: $fa-var-magnet; }
.#{$fa-css-prefix}-chevron-up:before { content: $fa-var-chevron-up; }
.#{$fa-css-prefix}-chevron-down:before { content: $fa-var-chevron-down; }
.#{$fa-css-prefix}-retweet:before { content: $fa-var-retweet; }
.#{$fa-css-prefix}-shopping-cart:before { content: $fa-var-shopping-cart; }
.#{$fa-css-prefix}-folder:before { content: $fa-var-folder; }
.#{$fa-css-prefix}-folder-open:before { content: $fa-var-folder-open; }
.#{$fa-css-prefix}-arrows-v:before { content: $fa-var-arrows-v; }
.#{$fa-css-prefix}-arrows-h:before { content: $fa-var-arrows-h; }
.#{$fa-css-prefix}-bar-chart-o:before,
.#{$fa-css-prefix}-bar-chart:before { content: $fa-var-bar-chart; }
.#{$fa-css-prefix}-twitter-square:before { content: $fa-var-twitter-square; }
.#{$fa-css-prefix}-facebook-square:before { content: $fa-var-facebook-square; }
.#{$fa-css-prefix}-camera-retro:before { content: $fa-var-camera-retro; }
.#{$fa-css-prefix}-key:before { content: $fa-var-key; }
.#{$fa-css-prefix}-gears:before,
.#{$fa-css-prefix}-cogs:before { content: $fa-var-cogs; }
.#{$fa-css-prefix}-comments:before { content: $fa-var-comments; }
.#{$fa-css-prefix}-thumbs-o-up:before { content: $fa-var-thumbs-o-up; }
.#{$fa-css-prefix}-thumbs-o-down:before { content: $fa-var-thumbs-o-down; }
.#{$fa-css-prefix}-star-half:before { content: $fa-var-star-half; }
.#{$fa-css-prefix}-heart-o:before { content: $fa-var-heart-o; }
.#{$fa-css-prefix}-sign-out:before { content: $fa-var-sign-out; }
.#{$fa-css-prefix}-linkedin-square:before { content: $fa-var-linkedin-square; }
.#{$fa-css-prefix}-thumb-tack:before { content: $fa-var-thumb-tack; }
.#{$fa-css-prefix}-external-link:before { content: $fa-var-external-link; }
.#{$fa-css-prefix}-sign-in:before { content: $fa-var-sign-in; }
.#{$fa-css-prefix}-trophy:before { content: $fa-var-trophy; }
.#{$fa-css-prefix}-github-square:before { content: $fa-var-github-square; }
.#{$fa-css-prefix}-upload:before { content: $fa-var-upload; }
.#{$fa-css-prefix}-lemon-o:before { content: $fa-var-lemon-o; }
.#{$fa-css-prefix}-phone:before { content: $fa-var-phone; }
.#{$fa-css-prefix}-square-o:before { content: $fa-var-square-o; }
.#{$fa-css-prefix}-bookmark-o:before { content: $fa-var-bookmark-o; }
.#{$fa-css-prefix}-phone-square:before { content: $fa-var-phone-square; }
.#{$fa-css-prefix}-twitter:before { content: $fa-var-twitter; }
.#{$fa-css-prefix}-facebook-f:before,
.#{$fa-css-prefix}-facebook:before { content: $fa-var-facebook; }
.#{$fa-css-prefix}-github:before { content: $fa-var-github; }
.#{$fa-css-prefix}-unlock:before { content: $fa-var-unlock; }
.#{$fa-css-prefix}-credit-card:before { content: $fa-var-credit-card; }
.#{$fa-css-prefix}-rss:before { content: $fa-var-rss; }
.#{$fa-css-prefix}-hdd-o:before { content: $fa-var-hdd-o; }
.#{$fa-css-prefix}-bullhorn:before { content: $fa-var-bullhorn; }
.#{$fa-css-prefix}-bell:before { content: $fa-var-bell; }
.#{$fa-css-prefix}-certificate:before { content: $fa-var-certificate; }
.#{$fa-css-prefix}-hand-o-right:before { content: $fa-var-hand-o-right; }
.#{$fa-css-prefix}-hand-o-left:before { content: $fa-var-hand-o-left; }
.#{$fa-css-prefix}-hand-o-up:before { content: $fa-var-hand-o-up; }
.#{$fa-css-prefix}-hand-o-down:before { content: $fa-var-hand-o-down; }
.#{$fa-css-prefix}-arrow-circle-left:before { content: $fa-var-arrow-circle-left; }
.#{$fa-css-prefix}-arrow-circle-right:before { content: $fa-var-arrow-circle-right; }
.#{$fa-css-prefix}-arrow-circle-up:before { content: $fa-var-arrow-circle-up; }
.#{$fa-css-prefix}-arrow-circle-down:before { content: $fa-var-arrow-circle-down; }
.#{$fa-css-prefix}-globe:before { content: $fa-var-globe; }
.#{$fa-css-prefix}-wrench:before { content: $fa-var-wrench; }
.#{$fa-css-prefix}-tasks:before { content: $fa-var-tasks; }
.#{$fa-css-prefix}-filter:before { content: $fa-var-filter; }
.#{$fa-css-prefix}-briefcase:before { content: $fa-var-briefcase; }
.#{$fa-css-prefix}-arrows-alt:before { content: $fa-var-arrows-alt; }
.#{$fa-css-prefix}-group:before,
.#{$fa-css-prefix}-users:before { content: $fa-var-users; }
.#{$fa-css-prefix}-chain:before,
.#{$fa-css-prefix}-link:before { content: $fa-var-link; }
.#{$fa-css-prefix}-cloud:before { content: $fa-var-cloud; }
.#{$fa-css-prefix}-flask:before { content: $fa-var-flask; }
.#{$fa-css-prefix}-cut:before,
.#{$fa-css-prefix}-scissors:before { content: $fa-var-scissors; }
.#{$fa-css-prefix}-copy:before,
.#{$fa-css-prefix}-files-o:before { content: $fa-var-files-o; }
.#{$fa-css-prefix}-paperclip:before { content: $fa-var-paperclip; }
.#{$fa-css-prefix}-save:before,
.#{$fa-css-prefix}-floppy-o:before { content: $fa-var-floppy-o; }
.#{$fa-css-prefix}-square:before { content: $fa-var-square; }
.#{$fa-css-prefix}-navicon:before,
.#{$fa-css-prefix}-reorder:before,
.#{$fa-css-prefix}-bars:before { content: $fa-var-bars; }
.#{$fa-css-prefix}-list-ul:before { content: $fa-var-list-ul; }
.#{$fa-css-prefix}-list-ol:before { content: $fa-var-list-ol; }
.#{$fa-css-prefix}-strikethrough:before { content: $fa-var-strikethrough; }
.#{$fa-css-prefix}-underline:before { content: $fa-var-underline; }
.#{$fa-css-prefix}-table:before { content: $fa-var-table; }
.#{$fa-css-prefix}-magic:before { content: $fa-var-magic; }
.#{$fa-css-prefix}-truck:before { content: $fa-var-truck; }
.#{$fa-css-prefix}-pinterest:before { content: $fa-var-pinterest; }
.#{$fa-css-prefix}-pinterest-square:before { content: $fa-var-pinterest-square; }
.#{$fa-css-prefix}-google-plus-square:before { content: $fa-var-google-plus-square; }
.#{$fa-css-prefix}-google-plus:before { content: $fa-var-google-plus; }
.#{$fa-css-prefix}-money:before { content: $fa-var-money; }
.#{$fa-css-prefix}-caret-down:before { content: $fa-var-caret-down; }
.#{$fa-css-prefix}-caret-up:before { content: $fa-var-caret-up; }
.#{$fa-css-prefix}-caret-left:before { content: $fa-var-caret-left; }
.#{$fa-css-prefix}-caret-right:before { content: $fa-var-caret-right; }
.#{$fa-css-prefix}-columns:before { content: $fa-var-columns; }
.#{$fa-css-prefix}-unsorted:before,
.#{$fa-css-prefix}-sort:before { content: $fa-var-sort; }
.#{$fa-css-prefix}-sort-down:before,
.#{$fa-css-prefix}-sort-desc:before { content: $fa-var-sort-desc; }
.#{$fa-css-prefix}-sort-up:before,
.#{$fa-css-prefix}-sort-asc:before { content: $fa-var-sort-asc; }
.#{$fa-css-prefix}-envelope:before { content: $fa-var-envelope; }
.#{$fa-css-prefix}-linkedin:before { content: $fa-var-linkedin; }
.#{$fa-css-prefix}-rotate-left:before,
.#{$fa-css-prefix}-undo:before { content: $fa-var-undo; }
.#{$fa-css-prefix}-legal:before,
.#{$fa-css-prefix}-gavel:before { content: $fa-var-gavel; }
.#{$fa-css-prefix}-dashboard:before,
.#{$fa-css-prefix}-tachometer:before { content: $fa-var-tachometer; }
.#{$fa-css-prefix}-comment-o:before { content: $fa-var-comment-o; }
.#{$fa-css-prefix}-comments-o:before { content: $fa-var-comments-o; }
.#{$fa-css-prefix}-flash:before,
.#{$fa-css-prefix}-bolt:before { content: $fa-var-bolt; }
.#{$fa-css-prefix}-sitemap:before { content: $fa-var-sitemap; }
.#{$fa-css-prefix}-umbrella:before { content: $fa-var-umbrella; }
.#{$fa-css-prefix}-paste:before,
.#{$fa-css-prefix}-clipboard:before { content: $fa-var-clipboard; }
.#{$fa-css-prefix}-lightbulb-o:before { content: $fa-var-lightbulb-o; }
.#{$fa-css-prefix}-exchange:before { content: $fa-var-exchange; }
.#{$fa-css-prefix}-cloud-download:before { content: $fa-var-cloud-download; }
.#{$fa-css-prefix}-cloud-upload:before { content: $fa-var-cloud-upload; }
.#{$fa-css-prefix}-user-md:before { content: $fa-var-user-md; }
.#{$fa-css-prefix}-stethoscope:before { content: $fa-var-stethoscope; }
.#{$fa-css-prefix}-suitcase:before { content: $fa-var-suitcase; }
.#{$fa-css-prefix}-bell-o:before { content: $fa-var-bell-o; }
.#{$fa-css-prefix}-coffee:before { content: $fa-var-coffee; }
.#{$fa-css-prefix}-cutlery:before { content: $fa-var-cutlery; }
.#{$fa-css-prefix}-file-text-o:before { content: $fa-var-file-text-o; }
.#{$fa-css-prefix}-building-o:before { content: $fa-var-building-o; }
.#{$fa-css-prefix}-hospital-o:before { content: $fa-var-hospital-o; }
.#{$fa-css-prefix}-ambulance:before { content: $fa-var-ambulance; }
.#{$fa-css-prefix}-medkit:before { content: $fa-var-medkit; }
.#{$fa-css-prefix}-fighter-jet:before { content: $fa-var-fighter-jet; }
.#{$fa-css-prefix}-beer:before { content: $fa-var-beer; }
.#{$fa-css-prefix}-h-square:before { content: $fa-var-h-square; }
.#{$fa-css-prefix}-plus-square:before { content: $fa-var-plus-square; }
.#{$fa-css-prefix}-angle-double-left:before { content: $fa-var-angle-double-left; }
.#{$fa-css-prefix}-angle-double-right:before { content: $fa-var-angle-double-right; }
.#{$fa-css-prefix}-angle-double-up:before { content: $fa-var-angle-double-up; }
.#{$fa-css-prefix}-angle-double-down:before { content: $fa-var-angle-double-down; }
.#{$fa-css-prefix}-angle-left:before { content: $fa-var-angle-left; }
.#{$fa-css-prefix}-angle-right:before { content: $fa-var-angle-right; }
.#{$fa-css-prefix}-angle-up:before { content: $fa-var-angle-up; }
.#{$fa-css-prefix}-angle-down:before { content: $fa-var-angle-down; }
.#{$fa-css-prefix}-desktop:before { content: $fa-var-desktop; }
.#{$fa-css-prefix}-laptop:before { content: $fa-var-laptop; }
.#{$fa-css-prefix}-tablet:before { content: $fa-var-tablet; }
.#{$fa-css-prefix}-mobile-phone:before,
.#{$fa-css-prefix}-mobile:before { content: $fa-var-mobile; }
.#{$fa-css-prefix}-circle-o:before { content: $fa-var-circle-o; }
.#{$fa-css-prefix}-quote-left:before { content: $fa-var-quote-left; }
.#{$fa-css-prefix}-quote-right:before { content: $fa-var-quote-right; }
.#{$fa-css-prefix}-spinner:before { content: $fa-var-spinner; }
.#{$fa-css-prefix}-circle:before { content: $fa-var-circle; }
.#{$fa-css-prefix}-mail-reply:before,
.#{$fa-css-prefix}-reply:before { content: $fa-var-reply; }
.#{$fa-css-prefix}-github-alt:before { content: $fa-var-github-alt; }
.#{$fa-css-prefix}-folder-o:before { content: $fa-var-folder-o; }
.#{$fa-css-prefix}-folder-open-o:before { content: $fa-var-folder-open-o; }
.#{$fa-css-prefix}-smile-o:before { content: $fa-var-smile-o; }
.#{$fa-css-prefix}-frown-o:before { content: $fa-var-frown-o; }
.#{$fa-css-prefix}-meh-o:before { content: $fa-var-meh-o; }
.#{$fa-css-prefix}-gamepad:before { content: $fa-var-gamepad; }
.#{$fa-css-prefix}-keyboard-o:before { content: $fa-var-keyboard-o; }
.#{$fa-css-prefix}-flag-o:before { content: $fa-var-flag-o; }
.#{$fa-css-prefix}-flag-checkered:before { content: $fa-var-flag-checkered; }
.#{$fa-css-prefix}-terminal:before { content: $fa-var-terminal; }
.#{$fa-css-prefix}-code:before { content: $fa-var-code; }
.#{$fa-css-prefix}-mail-reply-all:before,
.#{$fa-css-prefix}-reply-all:before { content: $fa-var-reply-all; }
.#{$fa-css-prefix}-star-half-empty:before,
.#{$fa-css-prefix}-star-half-full:before,
.#{$fa-css-prefix}-star-half-o:before { content: $fa-var-star-half-o; }
.#{$fa-css-prefix}-location-arrow:before { content: $fa-var-location-arrow; }
.#{$fa-css-prefix}-crop:before { content: $fa-var-crop; }
.#{$fa-css-prefix}-code-fork:before { content: $fa-var-code-fork; }
.#{$fa-css-prefix}-unlink:before,
.#{$fa-css-prefix}-chain-broken:before { content: $fa-var-chain-broken; }
.#{$fa-css-prefix}-question:before { content: $fa-var-question; }
.#{$fa-css-prefix}-info:before { content: $fa-var-info; }
.#{$fa-css-prefix}-exclamation:before { content: $fa-var-exclamation; }
.#{$fa-css-prefix}-superscript:before { content: $fa-var-superscript; }
.#{$fa-css-prefix}-subscript:before { content: $fa-var-subscript; }
.#{$fa-css-prefix}-eraser:before { content: $fa-var-eraser; }
.#{$fa-css-prefix}-puzzle-piece:before { content: $fa-var-puzzle-piece; }
.#{$fa-css-prefix}-microphone:before { content: $fa-var-microphone; }
.#{$fa-css-prefix}-microphone-slash:before { content: $fa-var-microphone-slash; }
.#{$fa-css-prefix}-shield:before { content: $fa-var-shield; }
.#{$fa-css-prefix}-calendar-o:before { content: $fa-var-calendar-o; }
.#{$fa-css-prefix}-fire-extinguisher:before { content: $fa-var-fire-extinguisher; }
.#{$fa-css-prefix}-rocket:before { content: $fa-var-rocket; }
.#{$fa-css-prefix}-maxcdn:before { content: $fa-var-maxcdn; }
.#{$fa-css-prefix}-chevron-circle-left:before { content: $fa-var-chevron-circle-left; }
.#{$fa-css-prefix}-chevron-circle-right:before { content: $fa-var-chevron-circle-right; }
.#{$fa-css-prefix}-chevron-circle-up:before { content: $fa-var-chevron-circle-up; }
.#{$fa-css-prefix}-chevron-circle-down:before { content: $fa-var-chevron-circle-down; }
.#{$fa-css-prefix}-html5:before { content: $fa-var-html5; }
.#{$fa-css-prefix}-css3:before { content: $fa-var-css3; }
.#{$fa-css-prefix}-anchor:before { content: $fa-var-anchor; }
.#{$fa-css-prefix}-unlock-alt:before { content: $fa-var-unlock-alt; }
.#{$fa-css-prefix}-bullseye:before { content: $fa-var-bullseye; }
.#{$fa-css-prefix}-ellipsis-h:before { content: $fa-var-ellipsis-h; }
.#{$fa-css-prefix}-ellipsis-v:before { content: $fa-var-ellipsis-v; }
.#{$fa-css-prefix}-rss-square:before { content: $fa-var-rss-square; }
.#{$fa-css-prefix}-play-circle:before { content: $fa-var-play-circle; }
.#{$fa-css-prefix}-ticket:before { content: $fa-var-ticket; }
.#{$fa-css-prefix}-minus-square:before { content: $fa-var-minus-square; }
.#{$fa-css-prefix}-minus-square-o:before { content: $fa-var-minus-square-o; }
.#{$fa-css-prefix}-level-up:before { content: $fa-var-level-up; }
.#{$fa-css-prefix}-level-down:before { content: $fa-var-level-down; }
.#{$fa-css-prefix}-check-square:before { content: $fa-var-check-square; }
.#{$fa-css-prefix}-pencil-square:before { content: $fa-var-pencil-square; }
.#{$fa-css-prefix}-external-link-square:before { content: $fa-var-external-link-square; }
.#{$fa-css-prefix}-share-square:before { content: $fa-var-share-square; }
.#{$fa-css-prefix}-compass:before { content: $fa-var-compass; }
.#{$fa-css-prefix}-toggle-down:before,
.#{$fa-css-prefix}-caret-square-o-down:before { content: $fa-var-caret-square-o-down; }
.#{$fa-css-prefix}-toggle-up:before,
.#{$fa-css-prefix}-caret-square-o-up:before { content: $fa-var-caret-square-o-up; }
.#{$fa-css-prefix}-toggle-right:before,
.#{$fa-css-prefix}-caret-square-o-right:before { content: $fa-var-caret-square-o-right; }
.#{$fa-css-prefix}-euro:before,
.#{$fa-css-prefix}-eur:before { content: $fa-var-eur; }
.#{$fa-css-prefix}-gbp:before { content: $fa-var-gbp; }
.#{$fa-css-prefix}-dollar:before,
.#{$fa-css-prefix}-usd:before { content: $fa-var-usd; }
.#{$fa-css-prefix}-rupee:before,
.#{$fa-css-prefix}-inr:before { content: $fa-var-inr; }
.#{$fa-css-prefix}-cny:before,
.#{$fa-css-prefix}-rmb:before,
.#{$fa-css-prefix}-yen:before,
.#{$fa-css-prefix}-jpy:before { content: $fa-var-jpy; }
.#{$fa-css-prefix}-ruble:before,
.#{$fa-css-prefix}-rouble:before,
.#{$fa-css-prefix}-rub:before { content: $fa-var-rub; }
.#{$fa-css-prefix}-won:before,
.#{$fa-css-prefix}-krw:before { content: $fa-var-krw; }
.#{$fa-css-prefix}-bitcoin:before,
.#{$fa-css-prefix}-btc:before { content: $fa-var-btc; }
.#{$fa-css-prefix}-file:before { content: $fa-var-file; }
.#{$fa-css-prefix}-file-text:before { content: $fa-var-file-text; }
.#{$fa-css-prefix}-sort-alpha-asc:before { content: $fa-var-sort-alpha-asc; }
.#{$fa-css-prefix}-sort-alpha-desc:before { content: $fa-var-sort-alpha-desc; }
.#{$fa-css-prefix}-sort-amount-asc:before { content: $fa-var-sort-amount-asc; }
.#{$fa-css-prefix}-sort-amount-desc:before { content: $fa-var-sort-amount-desc; }
.#{$fa-css-prefix}-sort-numeric-asc:before { content: $fa-var-sort-numeric-asc; }
.#{$fa-css-prefix}-sort-numeric-desc:before { content: $fa-var-sort-numeric-desc; }
.#{$fa-css-prefix}-thumbs-up:before { content: $fa-var-thumbs-up; }
.#{$fa-css-prefix}-thumbs-down:before { content: $fa-var-thumbs-down; }
.#{$fa-css-prefix}-youtube-square:before { content: $fa-var-youtube-square; }
.#{$fa-css-prefix}-youtube:before { content: $fa-var-youtube; }
.#{$fa-css-prefix}-xing:before { content: $fa-var-xing; }
.#{$fa-css-prefix}-xing-square:before { content: $fa-var-xing-square; }
.#{$fa-css-prefix}-youtube-play:before { content: $fa-var-youtube-play; }
.#{$fa-css-prefix}-dropbox:before { content: $fa-var-dropbox; }
.#{$fa-css-prefix}-stack-overflow:before { content: $fa-var-stack-overflow; }
.#{$fa-css-prefix}-instagram:before { content: $fa-var-instagram; }
.#{$fa-css-prefix}-flickr:before { content: $fa-var-flickr; }
.#{$fa-css-prefix}-adn:before { content: $fa-var-adn; }
.#{$fa-css-prefix}-bitbucket:before { content: $fa-var-bitbucket; }
.#{$fa-css-prefix}-bitbucket-square:before { content: $fa-var-bitbucket-square; }
.#{$fa-css-prefix}-tumblr:before { content: $fa-var-tumblr; }
.#{$fa-css-prefix}-tumblr-square:before { content: $fa-var-tumblr-square; }
.#{$fa-css-prefix}-long-arrow-down:before { content: $fa-var-long-arrow-down; }
.#{$fa-css-prefix}-long-arrow-up:before { content: $fa-var-long-arrow-up; }
.#{$fa-css-prefix}-long-arrow-left:before { content: $fa-var-long-arrow-left; }
.#{$fa-css-prefix}-long-arrow-right:before { content: $fa-var-long-arrow-right; }
.#{$fa-css-prefix}-apple:before { content: $fa-var-apple; }
.#{$fa-css-prefix}-windows:before { content: $fa-var-windows; }
.#{$fa-css-prefix}-android:before { content: $fa-var-android; }
.#{$fa-css-prefix}-linux:before { content: $fa-var-linux; }
.#{$fa-css-prefix}-dribbble:before { content: $fa-var-dribbble; }
.#{$fa-css-prefix}-skype:before { content: $fa-var-skype; }
.#{$fa-css-prefix}-foursquare:before { content: $fa-var-foursquare; }
.#{$fa-css-prefix}-trello:before { content: $fa-var-trello; }
.#{$fa-css-prefix}-female:before { content: $fa-var-female; }
.#{$fa-css-prefix}-male:before { content: $fa-var-male; }
.#{$fa-css-prefix}-gittip:before,
.#{$fa-css-prefix}-gratipay:before { content: $fa-var-gratipay; }
.#{$fa-css-prefix}-sun-o:before { content: $fa-var-sun-o; }
.#{$fa-css-prefix}-moon-o:before { content: $fa-var-moon-o; }
.#{$fa-css-prefix}-archive:before { content: $fa-var-archive; }
.#{$fa-css-prefix}-bug:before { content: $fa-var-bug; }
.#{$fa-css-prefix}-vk:before { content: $fa-var-vk; }
.#{$fa-css-prefix}-weibo:before { content: $fa-var-weibo; }
.#{$fa-css-prefix}-renren:before { content: $fa-var-renren; }
.#{$fa-css-prefix}-pagelines:before { content: $fa-var-pagelines; }
.#{$fa-css-prefix}-stack-exchange:before { content: $fa-var-stack-exchange; }
.#{$fa-css-prefix}-arrow-circle-o-right:before { content: $fa-var-arrow-circle-o-right; }
.#{$fa-css-prefix}-arrow-circle-o-left:before { content: $fa-var-arrow-circle-o-left; }
.#{$fa-css-prefix}-toggle-left:before,
.#{$fa-css-prefix}-caret-square-o-left:before { content: $fa-var-caret-square-o-left; }
.#{$fa-css-prefix}-dot-circle-o:before { content: $fa-var-dot-circle-o; }
.#{$fa-css-prefix}-wheelchair:before { content: $fa-var-wheelchair; }
.#{$fa-css-prefix}-vimeo-square:before { content: $fa-var-vimeo-square; }
.#{$fa-css-prefix}-turkish-lira:before,
.#{$fa-css-prefix}-try:before { content: $fa-var-try; }
.#{$fa-css-prefix}-plus-square-o:before { content: $fa-var-plus-square-o; }
.#{$fa-css-prefix}-space-shuttle:before { content: $fa-var-space-shuttle; }
.#{$fa-css-prefix}-slack:before { content: $fa-var-slack; }
.#{$fa-css-prefix}-envelope-square:before { content: $fa-var-envelope-square; }
.#{$fa-css-prefix}-wordpress:before { content: $fa-var-wordpress; }
.#{$fa-css-prefix}-openid:before { content: $fa-var-openid; }
.#{$fa-css-prefix}-institution:before,
.#{$fa-css-prefix}-bank:before,
.#{$fa-css-prefix}-university:before { content: $fa-var-university; }
.#{$fa-css-prefix}-mortar-board:before,
.#{$fa-css-prefix}-graduation-cap:before { content: $fa-var-graduation-cap; }
.#{$fa-css-prefix}-yahoo:before { content: $fa-var-yahoo; }
.#{$fa-css-prefix}-google:before { content: $fa-var-google; }
.#{$fa-css-prefix}-reddit:before { content: $fa-var-reddit; }
.#{$fa-css-prefix}-reddit-square:before { content: $fa-var-reddit-square; }
.#{$fa-css-prefix}-stumbleupon-circle:before { content: $fa-var-stumbleupon-circle; }
.#{$fa-css-prefix}-stumbleupon:before { content: $fa-var-stumbleupon; }
.#{$fa-css-prefix}-delicious:before { content: $fa-var-delicious; }
.#{$fa-css-prefix}-digg:before { content: $fa-var-digg; }
.#{$fa-css-prefix}-pied-piper:before { content: $fa-var-pied-piper; }
.#{$fa-css-prefix}-pied-piper-alt:before { content: $fa-var-pied-piper-alt; }
.#{$fa-css-prefix}-drupal:before { content: $fa-var-drupal; }
.#{$fa-css-prefix}-joomla:before { content: $fa-var-joomla; }
.#{$fa-css-prefix}-language:before { content: $fa-var-language; }
.#{$fa-css-prefix}-fax:before { content: $fa-var-fax; }
.#{$fa-css-prefix}-building:before { content: $fa-var-building; }
.#{$fa-css-prefix}-child:before { content: $fa-var-child; }
.#{$fa-css-prefix}-paw:before { content: $fa-var-paw; }
.#{$fa-css-prefix}-spoon:before { content: $fa-var-spoon; }
.#{$fa-css-prefix}-cube:before { content: $fa-var-cube; }
.#{$fa-css-prefix}-cubes:before { content: $fa-var-cubes; }
.#{$fa-css-prefix}-behance:before { content: $fa-var-behance; }
.#{$fa-css-prefix}-behance-square:before { content: $fa-var-behance-square; }
.#{$fa-css-prefix}-steam:before { content: $fa-var-steam; }
.#{$fa-css-prefix}-steam-square:before { content: $fa-var-steam-square; }
.#{$fa-css-prefix}-recycle:before { content: $fa-var-recycle; }
.#{$fa-css-prefix}-automobile:before,
.#{$fa-css-prefix}-car:before { content: $fa-var-car; }
.#{$fa-css-prefix}-cab:before,
.#{$fa-css-prefix}-taxi:before { content: $fa-var-taxi; }
.#{$fa-css-prefix}-tree:before { content: $fa-var-tree; }
.#{$fa-css-prefix}-spotify:before { content: $fa-var-spotify; }
.#{$fa-css-prefix}-deviantart:before { content: $fa-var-deviantart; }
.#{$fa-css-prefix}-soundcloud:before { content: $fa-var-soundcloud; }
.#{$fa-css-prefix}-database:before { content: $fa-var-database; }
.#{$fa-css-prefix}-file-pdf-o:before { content: $fa-var-file-pdf-o; }
.#{$fa-css-prefix}-file-word-o:before { content: $fa-var-file-word-o; }
.#{$fa-css-prefix}-file-excel-o:before { content: $fa-var-file-excel-o; }
.#{$fa-css-prefix}-file-powerpoint-o:before { content: $fa-var-file-powerpoint-o; }
.#{$fa-css-prefix}-file-photo-o:before,
.#{$fa-css-prefix}-file-picture-o:before,
.#{$fa-css-prefix}-file-image-o:before { content: $fa-var-file-image-o; }
.#{$fa-css-prefix}-file-zip-o:before,
.#{$fa-css-prefix}-file-archive-o:before { content: $fa-var-file-archive-o; }
.#{$fa-css-prefix}-file-sound-o:before,
.#{$fa-css-prefix}-file-audio-o:before { content: $fa-var-file-audio-o; }
.#{$fa-css-prefix}-file-movie-o:before,
.#{$fa-css-prefix}-file-video-o:before { content: $fa-var-file-video-o; }
.#{$fa-css-prefix}-file-code-o:before { content: $fa-var-file-code-o; }
.#{$fa-css-prefix}-vine:before { content: $fa-var-vine; }
.#{$fa-css-prefix}-codepen:before { content: $fa-var-codepen; }
.#{$fa-css-prefix}-jsfiddle:before { content: $fa-var-jsfiddle; }
.#{$fa-css-prefix}-life-bouy:before,
.#{$fa-css-prefix}-life-buoy:before,
.#{$fa-css-prefix}-life-saver:before,
.#{$fa-css-prefix}-support:before,
.#{$fa-css-prefix}-life-ring:before { content: $fa-var-life-ring; }
.#{$fa-css-prefix}-circle-o-notch:before { content: $fa-var-circle-o-notch; }
.#{$fa-css-prefix}-ra:before,
.#{$fa-css-prefix}-rebel:before { content: $fa-var-rebel; }
.#{$fa-css-prefix}-ge:before,
.#{$fa-css-prefix}-empire:before { content: $fa-var-empire; }
.#{$fa-css-prefix}-git-square:before { content: $fa-var-git-square; }
.#{$fa-css-prefix}-git:before { content: $fa-var-git; }
.#{$fa-css-prefix}-hacker-news:before { content: $fa-var-hacker-news; }
.#{$fa-css-prefix}-tencent-weibo:before { content: $fa-var-tencent-weibo; }
.#{$fa-css-prefix}-qq:before { content: $fa-var-qq; }
.#{$fa-css-prefix}-wechat:before,
.#{$fa-css-prefix}-weixin:before { content: $fa-var-weixin; }
.#{$fa-css-prefix}-send:before,
.#{$fa-css-prefix}-paper-plane:before { content: $fa-var-paper-plane; }
.#{$fa-css-prefix}-send-o:before,
.#{$fa-css-prefix}-paper-plane-o:before { content: $fa-var-paper-plane-o; }
.#{$fa-css-prefix}-history:before { content: $fa-var-history; }
.#{$fa-css-prefix}-genderless:before,
.#{$fa-css-prefix}-circle-thin:before { content: $fa-var-circle-thin; }
.#{$fa-css-prefix}-header:before { content: $fa-var-header; }
.#{$fa-css-prefix}-paragraph:before { content: $fa-var-paragraph; }
.#{$fa-css-prefix}-sliders:before { content: $fa-var-sliders; }
.#{$fa-css-prefix}-share-alt:before { content: $fa-var-share-alt; }
.#{$fa-css-prefix}-share-alt-square:before { content: $fa-var-share-alt-square; }
.#{$fa-css-prefix}-bomb:before { content: $fa-var-bomb; }
.#{$fa-css-prefix}-soccer-ball-o:before,
.#{$fa-css-prefix}-futbol-o:before { content: $fa-var-futbol-o; }
.#{$fa-css-prefix}-tty:before { content: $fa-var-tty; }
.#{$fa-css-prefix}-binoculars:before { content: $fa-var-binoculars; }
.#{$fa-css-prefix}-plug:before { content: $fa-var-plug; }
.#{$fa-css-prefix}-slideshare:before { content: $fa-var-slideshare; }
.#{$fa-css-prefix}-twitch:before { content: $fa-var-twitch; }
.#{$fa-css-prefix}-yelp:before { content: $fa-var-yelp; }
.#{$fa-css-prefix}-newspaper-o:before { content: $fa-var-newspaper-o; }
.#{$fa-css-prefix}-wifi:before { content: $fa-var-wifi; }
.#{$fa-css-prefix}-calculator:before { content: $fa-var-calculator; }
.#{$fa-css-prefix}-paypal:before { content: $fa-var-paypal; }
.#{$fa-css-prefix}-google-wallet:before { content: $fa-var-google-wallet; }
.#{$fa-css-prefix}-cc-visa:before { content: $fa-var-cc-visa; }
.#{$fa-css-prefix}-cc-mastercard:before { content: $fa-var-cc-mastercard; }
.#{$fa-css-prefix}-cc-discover:before { content: $fa-var-cc-discover; }
.#{$fa-css-prefix}-cc-amex:before { content: $fa-var-cc-amex; }
.#{$fa-css-prefix}-cc-paypal:before { content: $fa-var-cc-paypal; }
.#{$fa-css-prefix}-cc-stripe:before { content: $fa-var-cc-stripe; }
.#{$fa-css-prefix}-bell-slash:before { content: $fa-var-bell-slash; }
.#{$fa-css-prefix}-bell-slash-o:before { content: $fa-var-bell-slash-o; }
.#{$fa-css-prefix}-trash:before { content: $fa-var-trash; }
.#{$fa-css-prefix}-copyright:before { content: $fa-var-copyright; }
.#{$fa-css-prefix}-at:before { content: $fa-var-at; }
.#{$fa-css-prefix}-eyedropper:before { content: $fa-var-eyedropper; }
.#{$fa-css-prefix}-paint-brush:before { content: $fa-var-paint-brush; }
.#{$fa-css-prefix}-birthday-cake:before { content: $fa-var-birthday-cake; }
.#{$fa-css-prefix}-area-chart:before { content: $fa-var-area-chart; }
.#{$fa-css-prefix}-pie-chart:before { content: $fa-var-pie-chart; }
.#{$fa-css-prefix}-line-chart:before { content: $fa-var-line-chart; }
.#{$fa-css-prefix}-lastfm:before { content: $fa-var-lastfm; }
.#{$fa-css-prefix}-lastfm-square:before { content: $fa-var-lastfm-square; }
.#{$fa-css-prefix}-toggle-off:before { content: $fa-var-toggle-off; }
.#{$fa-css-prefix}-toggle-on:before { content: $fa-var-toggle-on; }
.#{$fa-css-prefix}-bicycle:before { content: $fa-var-bicycle; }
.#{$fa-css-prefix}-bus:before { content: $fa-var-bus; }
.#{$fa-css-prefix}-ioxhost:before { content: $fa-var-ioxhost; }
.#{$fa-css-prefix}-angellist:before { content: $fa-var-angellist; }
.#{$fa-css-prefix}-cc:before { content: $fa-var-cc; }
.#{$fa-css-prefix}-shekel:before,
.#{$fa-css-prefix}-sheqel:before,
.#{$fa-css-prefix}-ils:before { content: $fa-var-ils; }
.#{$fa-css-prefix}-meanpath:before { content: $fa-var-meanpath; }
.#{$fa-css-prefix}-buysellads:before { content: $fa-var-buysellads; }
.#{$fa-css-prefix}-connectdevelop:before { content: $fa-var-connectdevelop; }
.#{$fa-css-prefix}-dashcube:before { content: $fa-var-dashcube; }
.#{$fa-css-prefix}-forumbee:before { content: $fa-var-forumbee; }
.#{$fa-css-prefix}-leanpub:before { content: $fa-var-leanpub; }
.#{$fa-css-prefix}-sellsy:before { content: $fa-var-sellsy; }
.#{$fa-css-prefix}-shirtsinbulk:before { content: $fa-var-shirtsinbulk; }
.#{$fa-css-prefix}-simplybuilt:before { content: $fa-var-simplybuilt; }
.#{$fa-css-prefix}-skyatlas:before { content: $fa-var-skyatlas; }
.#{$fa-css-prefix}-cart-plus:before { content: $fa-var-cart-plus; }
.#{$fa-css-prefix}-cart-arrow-down:before { content: $fa-var-cart-arrow-down; }
.#{$fa-css-prefix}-diamond:before { content: $fa-var-diamond; }
.#{$fa-css-prefix}-ship:before { content: $fa-var-ship; }
.#{$fa-css-prefix}-user-secret:before { content: $fa-var-user-secret; }
.#{$fa-css-prefix}-motorcycle:before { content: $fa-var-motorcycle; }
.#{$fa-css-prefix}-street-view:before { content: $fa-var-street-view; }
.#{$fa-css-prefix}-heartbeat:before { content: $fa-var-heartbeat; }
.#{$fa-css-prefix}-venus:before { content: $fa-var-venus; }
.#{$fa-css-prefix}-mars:before { content: $fa-var-mars; }
.#{$fa-css-prefix}-mercury:before { content: $fa-var-mercury; }
.#{$fa-css-prefix}-transgender:before { content: $fa-var-transgender; }
.#{$fa-css-prefix}-transgender-alt:before { content: $fa-var-transgender-alt; }
.#{$fa-css-prefix}-venus-double:before { content: $fa-var-venus-double; }
.#{$fa-css-prefix}-mars-double:before { content: $fa-var-mars-double; }
.#{$fa-css-prefix}-venus-mars:before { content: $fa-var-venus-mars; }
.#{$fa-css-prefix}-mars-stroke:before { content: $fa-var-mars-stroke; }
.#{$fa-css-prefix}-mars-stroke-v:before { content: $fa-var-mars-stroke-v; }
.#{$fa-css-prefix}-mars-stroke-h:before { content: $fa-var-mars-stroke-h; }
.#{$fa-css-prefix}-neuter:before { content: $fa-var-neuter; }
.#{$fa-css-prefix}-facebook-official:before { content: $fa-var-facebook-official; }
.#{$fa-css-prefix}-pinterest-p:before { content: $fa-var-pinterest-p; }
.#{$fa-css-prefix}-whatsapp:before { content: $fa-var-whatsapp; }
.#{$fa-css-prefix}-server:before { content: $fa-var-server; }
.#{$fa-css-prefix}-user-plus:before { content: $fa-var-user-plus; }
.#{$fa-css-prefix}-user-times:before { content: $fa-var-user-times; }
.#{$fa-css-prefix}-hotel:before,
.#{$fa-css-prefix}-bed:before { content: $fa-var-bed; }
.#{$fa-css-prefix}-viacoin:before { content: $fa-var-viacoin; }
.#{$fa-css-prefix}-train:before { content: $fa-var-train; }
.#{$fa-css-prefix}-subway:before { content: $fa-var-subway; }
.#{$fa-css-prefix}-medium:before { content: $fa-var-medium; }


================================================================================
END: D:\QiEOS\apps\web\public\builtbyrays_public\builtbyrays.com\public\fonts\font-awesome\scss\_icons.scss
================================================================================


================================================================================
FILE: D:\QiEOS\apps\web\public\builtbyrays_public\builtbyrays.com\public\fonts\font-awesome\scss\_larger.scss
================================================================================

// Icon Sizes
// -------------------------

/* makes the font 33% larger relative to the icon container */
.#{$fa-css-prefix}-lg {
  font-size: (4em / 3);
  line-height: (3em / 4);
  vertical-align: -15%;
}
.#{$fa-css-prefix}-2x { font-size: 2em; }
.#{$fa-css-prefix}-3x { font-size: 3em; }
.#{$fa-css-prefix}-4x { font-size: 4em; }
.#{$fa-css-prefix}-5x { font-size: 5em; }


================================================================================
END: D:\QiEOS\apps\web\public\builtbyrays_public\builtbyrays.com\public\fonts\font-awesome\scss\_larger.scss
================================================================================


================================================================================
FILE: D:\QiEOS\apps\web\public\builtbyrays_public\builtbyrays.com\public\fonts\font-awesome\scss\_list.scss
================================================================================

// List Icons
// -------------------------

.#{$fa-css-prefix}-ul {
  padding-left: 0;
  margin-left: $fa-li-width;
  list-style-type: none;
  > li { position: relative; }
}
.#{$fa-css-prefix}-li {
  position: absolute;
  left: -$fa-li-width;
  width: $fa-li-width;
  top: (2em / 14);
  text-align: center;
  &.#{$fa-css-prefix}-lg {
    left: -$fa-li-width + (4em / 14);
  }
}


================================================================================
END: D:\QiEOS\apps\web\public\builtbyrays_public\builtbyrays.com\public\fonts\font-awesome\scss\_list.scss
================================================================================


================================================================================
FILE: D:\QiEOS\apps\web\public\builtbyrays_public\builtbyrays.com\public\fonts\font-awesome\scss\_mixins.scss
================================================================================

// Mixins
// --------------------------

@mixin fa-icon() {
  display: inline-block;
  font: normal normal normal #{$fa-font-size-base}/1 FontAwesome; // shortening font declaration
  font-size: inherit; // can't have font-size inherit on line above, so need to override
  text-rendering: auto; // optimizelegibility throws things off #1094
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  transform: translate(0, 0); // ensures no half-pixel rendering in firefox

}

@mixin fa-icon-rotate($degrees, $rotation) {
  filter: progid:DXImageTransform.Microsoft.BasicImage(rotation=#{$rotation});
  -webkit-transform: rotate($degrees);
      -ms-transform: rotate($degrees);
          transform: rotate($degrees);
}

@mixin fa-icon-flip($horiz, $vert, $rotation) {
  filter: progid:DXImageTransform.Microsoft.BasicImage(rotation=#{$rotation});
  -webkit-transform: scale($horiz, $vert);
      -ms-transform: scale($horiz, $vert);
          transform: scale($horiz, $vert);
}


================================================================================
END: D:\QiEOS\apps\web\public\builtbyrays_public\builtbyrays.com\public\fonts\font-awesome\scss\_mixins.scss
================================================================================


================================================================================
FILE: D:\QiEOS\apps\web\public\builtbyrays_public\builtbyrays.com\public\fonts\font-awesome\scss\_path.scss
================================================================================

/* FONT PATH
 * -------------------------- */

@font-face {
  font-family: 'FontAwesome';
  src: url('#{$fa-font-path}/fontawesome-webfont.eot?v=#{$fa-version}');
  src: url('#{$fa-font-path}/fontawesome-webfont.eot?#iefix&v=#{$fa-version}') format('embedded-opentype'),
    url('#{$fa-font-path}/fontawesome-webfont.woff2?v=#{$fa-version}') format('woff2'),
    url('#{$fa-font-path}/fontawesome-webfont.woff?v=#{$fa-version}') format('woff'),
    url('#{$fa-font-path}/fontawesome-webfont.ttf?v=#{$fa-version}') format('truetype'),
    url('#{$fa-font-path}/fontawesome-webfont.svg?v=#{$fa-version}#fontawesomeregular') format('svg');
//  src: url('#{$fa-font-path}/FontAwesome.otf') format('opentype'); // used when developing fonts
  font-weight: normal;
  font-style: normal;
}


================================================================================
END: D:\QiEOS\apps\web\public\builtbyrays_public\builtbyrays.com\public\fonts\font-awesome\scss\_path.scss
================================================================================


================================================================================
FILE: D:\QiEOS\apps\web\public\builtbyrays_public\builtbyrays.com\public\fonts\font-awesome\scss\_rotated-flipped.scss
================================================================================

// Rotated & Flipped Icons
// -------------------------

.#{$fa-css-prefix}-rotate-90  { @include fa-icon-rotate(90deg, 1);  }
.#{$fa-css-prefix}-rotate-180 { @include fa-icon-rotate(180deg, 2); }
.#{$fa-css-prefix}-rotate-270 { @include fa-icon-rotate(270deg, 3); }

.#{$fa-css-prefix}-flip-horizontal { @include fa-icon-flip(-1, 1, 0); }
.#{$fa-css-prefix}-flip-vertical   { @include fa-icon-flip(1, -1, 2); }

// Hook for IE8-9
// -------------------------

:root .#{$fa-css-prefix}-rotate-90,
:root .#{$fa-css-prefix}-rotate-180,
:root .#{$fa-css-prefix}-rotate-270,
:root .#{$fa-css-prefix}-flip-horizontal,
:root .#{$fa-css-prefix}-flip-vertical {
  filter: none;
}


================================================================================
END: D:\QiEOS\apps\web\public\builtbyrays_public\builtbyrays.com\public\fonts\font-awesome\scss\_rotated-flipped.scss
================================================================================


================================================================================
FILE: D:\QiEOS\apps\web\public\builtbyrays_public\builtbyrays.com\public\fonts\font-awesome\scss\_stacked.scss
================================================================================

// Stacked Icons
// -------------------------

.#{$fa-css-prefix}-stack {
  position: relative;
  display: inline-block;
  width: 2em;
  height: 2em;
  line-height: 2em;
  vertical-align: middle;
}
.#{$fa-css-prefix}-stack-1x, .#{$fa-css-prefix}-stack-2x {
  position: absolute;
  left: 0;
  width: 100%;
  text-align: center;
}
.#{$fa-css-prefix}-stack-1x { line-height: inherit; }
.#{$fa-css-prefix}-stack-2x { font-size: 2em; }
.#{$fa-css-prefix}-inverse { color: $fa-inverse; }


================================================================================
END: D:\QiEOS\apps\web\public\builtbyrays_public\builtbyrays.com\public\fonts\font-awesome\scss\_stacked.scss
================================================================================


================================================================================
FILE: D:\QiEOS\apps\web\public\builtbyrays_public\builtbyrays.com\public\fonts\font-awesome\scss\_variables.scss
================================================================================

// Variables
// --------------------------

$fa-font-path:        "../fonts" !default;
$fa-font-size-base:   14px !default;
//$fa-font-path:        "//netdna.bootstrapcdn.com/font-awesome/4.3.0/fonts" !default; // for referencing Bootstrap CDN font files directly
$fa-css-prefix:       fa !default;
$fa-version:          "4.3.0" !default;
$fa-border-color:     #eee !default;
$fa-inverse:          #fff !default;
$fa-li-width:         (30em / 14) !default;

$fa-var-adjust: "\f042";
$fa-var-adn: "\f170";
$fa-var-align-center: "\f037";
$fa-var-align-justify: "\f039";
$fa-var-align-left: "\f036";
$fa-var-align-right: "\f038";
$fa-var-ambulance: "\f0f9";
$fa-var-anchor: "\f13d";
$fa-var-android: "\f17b";
$fa-var-angellist: "\f209";
$fa-var-angle-double-down: "\f103";
$fa-var-angle-double-left: "\f100";
$fa-var-angle-double-right: "\f101";
$fa-var-angle-double-up: "\f102";
$fa-var-angle-down: "\f107";
$fa-var-angle-left: "\f104";
$fa-var-angle-right: "\f105";
$fa-var-angle-up: "\f106";
$fa-var-apple: "\f179";
$fa-var-archive: "\f187";
$fa-var-area-chart: "\f1fe";
$fa-var-arrow-circle-down: "\f0ab";
$fa-var-arrow-circle-left: "\f0a8";
$fa-var-arrow-circle-o-down: "\f01a";
$fa-var-arrow-circle-o-left: "\f190";
$fa-var-arrow-circle-o-right: "\f18e";
$fa-var-arrow-circle-o-up: "\f01b";
$fa-var-arrow-circle-right: "\f0a9";
$fa-var-arrow-circle-up: "\f0aa";
$fa-var-arrow-down: "\f063";
$fa-var-arrow-left: "\f060";
$fa-var-arrow-right: "\f061";
$fa-var-arrow-up: "\f062";
$fa-var-arrows: "\f047";
$fa-var-arrows-alt: "\f0b2";
$fa-var-arrows-h: "\f07e";
$fa-var-arrows-v: "\f07d";
$fa-var-asterisk: "\f069";
$fa-var-at: "\f1fa";
$fa-var-automobile: "\f1b9";
$fa-var-backward: "\f04a";
$fa-var-ban: "\f05e";
$fa-var-bank: "\f19c";
$fa-var-bar-chart: "\f080";
$fa-var-bar-chart-o: "\f080";
$fa-var-barcode: "\f02a";
$fa-var-bars: "\f0c9";
$fa-var-bed: "\f236";
$fa-var-beer: "\f0fc";
$fa-var-behance: "\f1b4";
$fa-var-behance-square: "\f1b5";
$fa-var-bell: "\f0f3";
$fa-var-bell-o: "\f0a2";
$fa-var-bell-slash: "\f1f6";
$fa-var-bell-slash-o: "\f1f7";
$fa-var-bicycle: "\f206";
$fa-var-binoculars: "\f1e5";
$fa-var-birthday-cake: "\f1fd";
$fa-var-bitbucket: "\f171";
$fa-var-bitbucket-square: "\f172";
$fa-var-bitcoin: "\f15a";
$fa-var-bold: "\f032";
$fa-var-bolt: "\f0e7";
$fa-var-bomb: "\f1e2";
$fa-var-book: "\f02d";
$fa-var-bookmark: "\f02e";
$fa-var-bookmark-o: "\f097";
$fa-var-briefcase: "\f0b1";
$fa-var-btc: "\f15a";
$fa-var-bug: "\f188";
$fa-var-building: "\f1ad";
$fa-var-building-o: "\f0f7";
$fa-var-bullhorn: "\f0a1";
$fa-var-bullseye: "\f140";
$fa-var-bus: "\f207";
$fa-var-buysellads: "\f20d";
$fa-var-cab: "\f1ba";
$fa-var-calculator: "\f1ec";
$fa-var-calendar: "\f073";
$fa-var-calendar-o: "\f133";
$fa-var-camera: "\f030";
$fa-var-camera-retro: "\f083";
$fa-var-car: "\f1b9";
$fa-var-caret-down: "\f0d7";
$fa-var-caret-left: "\f0d9";
$fa-var-caret-right: "\f0da";
$fa-var-caret-square-o-down: "\f150";
$fa-var-caret-square-o-left: "\f191";
$fa-var-caret-square-o-right: "\f152";
$fa-var-caret-square-o-up: "\f151";
$fa-var-caret-up: "\f0d8";
$fa-var-cart-arrow-down: "\f218";
$fa-var-cart-plus: "\f217";
$fa-var-cc: "\f20a";
$fa-var-cc-amex: "\f1f3";
$fa-var-cc-discover: "\f1f2";
$fa-var-cc-mastercard: "\f1f1";
$fa-var-cc-paypal: "\f1f4";
$fa-var-cc-stripe: "\f1f5";
$fa-var-cc-visa: "\f1f0";
$fa-var-certificate: "\f0a3";
$fa-var-chain: "\f0c1";
$fa-var-chain-broken: "\f127";
$fa-var-check: "\f00c";
$fa-var-check-circle: "\f058";
$fa-var-check-circle-o: "\f05d";
$fa-var-check-square: "\f14a";
$fa-var-check-square-o: "\f046";
$fa-var-chevron-circle-down: "\f13a";
$fa-var-chevron-circle-left: "\f137";
$fa-var-chevron-circle-right: "\f138";
$fa-var-chevron-circle-up: "\f139";
$fa-var-chevron-down: "\f078";
$fa-var-chevron-left: "\f053";
$fa-var-chevron-right: "\f054";
$fa-var-chevron-up: "\f077";
$fa-var-child: "\f1ae";
$fa-var-circle: "\f111";
$fa-var-circle-o: "\f10c";
$fa-var-circle-o-notch: "\f1ce";
$fa-var-circle-thin: "\f1db";
$fa-var-clipboard: "\f0ea";
$fa-var-clock-o: "\f017";
$fa-var-close: "\f00d";
$fa-var-cloud: "\f0c2";
$fa-var-cloud-download: "\f0ed";
$fa-var-cloud-upload: "\f0ee";
$fa-var-cny: "\f157";
$fa-var-code: "\f121";
$fa-var-code-fork: "\f126";
$fa-var-codepen: "\f1cb";
$fa-var-coffee: "\f0f4";
$fa-var-cog: "\f013";
$fa-var-cogs: "\f085";
$fa-var-columns: "\f0db";
$fa-var-comment: "\f075";
$fa-var-comment-o: "\f0e5";
$fa-var-comments: "\f086";
$fa-var-comments-o: "\f0e6";
$fa-var-compass: "\f14e";
$fa-var-compress: "\f066";
$fa-var-connectdevelop: "\f20e";
$fa-var-copy: "\f0c5";
$fa-var-copyright: "\f1f9";
$fa-var-credit-card: "\f09d";
$fa-var-crop: "\f125";
$fa-var-crosshairs: "\f05b";
$fa-var-css3: "\f13c";
$fa-var-cube: "\f1b2";
$fa-var-cubes: "\f1b3";
$fa-var-cut: "\f0c4";
$fa-var-cutlery: "\f0f5";
$fa-var-dashboard: "\f0e4";
$fa-var-dashcube: "\f210";
$fa-var-database: "\f1c0";
$fa-var-dedent: "\f03b";
$fa-var-delicious: "\f1a5";
$fa-var-desktop: "\f108";
$fa-var-deviantart: "\f1bd";
$fa-var-diamond: "\f219";
$fa-var-digg: "\f1a6";
$fa-var-dollar: "\f155";
$fa-var-dot-circle-o: "\f192";
$fa-var-download: "\f019";
$fa-var-dribbble: "\f17d";
$fa-var-dropbox: "\f16b";
$fa-var-drupal: "\f1a9";
$fa-var-edit: "\f044";
$fa-var-eject: "\f052";
$fa-var-ellipsis-h: "\f141";
$fa-var-ellipsis-v: "\f142";
$fa-var-empire: "\f1d1";
$fa-var-envelope: "\f0e0";
$fa-var-envelope-o: "\f003";
$fa-var-envelope-square: "\f199";
$fa-var-eraser: "\f12d";
$fa-var-eur: "\f153";
$fa-var-euro: "\f153";
$fa-var-exchange: "\f0ec";
$fa-var-exclamation: "\f12a";
$fa-var-exclamation-circle: "\f06a";
$fa-var-exclamation-triangle: "\f071";
$fa-var-expand: "\f065";
$fa-var-external-link: "\f08e";
$fa-var-external-link-square: "\f14c";
$fa-var-eye: "\f06e";
$fa-var-eye-slash: "\f070";
$fa-var-eyedropper: "\f1fb";
$fa-var-facebook: "\f09a";
$fa-var-facebook-f: "\f09a";
$fa-var-facebook-official: "\f230";
$fa-var-facebook-square: "\f082";
$fa-var-fast-backward: "\f049";
$fa-var-fast-forward: "\f050";
$fa-var-fax: "\f1ac";
$fa-var-female: "\f182";
$fa-var-fighter-jet: "\f0fb";
$fa-var-file: "\f15b";
$fa-var-file-archive-o: "\f1c6";
$fa-var-file-audio-o: "\f1c7";
$fa-var-file-code-o: "\f1c9";
$fa-var-file-excel-o: "\f1c3";
$fa-var-file-image-o: "\f1c5";
$fa-var-file-movie-o: "\f1c8";
$fa-var-file-o: "\f016";
$fa-var-file-pdf-o: "\f1c1";
$fa-var-file-photo-o: "\f1c5";
$fa-var-file-picture-o: "\f1c5";
$fa-var-file-powerpoint-o: "\f1c4";
$fa-var-file-sound-o: "\f1c7";
$fa-var-file-text: "\f15c";
$fa-var-file-text-o: "\f0f6";
$fa-var-file-video-o: "\f1c8";
$fa-var-file-word-o: "\f1c2";
$fa-var-file-zip-o: "\f1c6";
$fa-var-files-o: "\f0c5";
$fa-var-film: "\f008";
$fa-var-filter: "\f0b0";
$fa-var-fire: "\f06d";
$fa-var-fire-extinguisher: "\f134";
$fa-var-flag: "\f024";
$fa-var-flag-checkered: "\f11e";
$fa-var-flag-o: "\f11d";
$fa-var-flash: "\f0e7";
$fa-var-flask: "\f0c3";
$fa-var-flickr: "\f16e";
$fa-var-floppy-o: "\f0c7";
$fa-var-folder: "\f07b";
$fa-var-folder-o: "\f114";
$fa-var-folder-open: "\f07c";
$fa-var-folder-open-o: "\f115";
$fa-var-font: "\f031";
$fa-var-forumbee: "\f211";
$fa-var-forward: "\f04e";
$fa-var-foursquare: "\f180";
$fa-var-frown-o: "\f119";
$fa-var-futbol-o: "\f1e3";
$fa-var-gamepad: "\f11b";
$fa-var-gavel: "\f0e3";
$fa-var-gbp: "\f154";
$fa-var-ge: "\f1d1";
$fa-var-gear: "\f013";
$fa-var-gears: "\f085";
$fa-var-genderless: "\f1db";
$fa-var-gift: "\f06b";
$fa-var-git: "\f1d3";
$fa-var-git-square: "\f1d2";
$fa-var-github: "\f09b";
$fa-var-github-alt: "\f113";
$fa-var-github-square: "\f092";
$fa-var-gittip: "\f184";
$fa-var-glass: "\f000";
$fa-var-globe: "\f0ac";
$fa-var-google: "\f1a0";
$fa-var-google-plus: "\f0d5";
$fa-var-google-plus-square: "\f0d4";
$fa-var-google-wallet: "\f1ee";
$fa-var-graduation-cap: "\f19d";
$fa-var-gratipay: "\f184";
$fa-var-group: "\f0c0";
$fa-var-h-square: "\f0fd";
$fa-var-hacker-news: "\f1d4";
$fa-var-hand-o-down: "\f0a7";
$fa-var-hand-o-left: "\f0a5";
$fa-var-hand-o-right: "\f0a4";
$fa-var-hand-o-up: "\f0a6";
$fa-var-hdd-o: "\f0a0";
$fa-var-header: "\f1dc";
$fa-var-headphones: "\f025";
$fa-var-heart: "\f004";
$fa-var-heart-o: "\f08a";
$fa-var-heartbeat: "\f21e";
$fa-var-history: "\f1da";
$fa-var-home: "\f015";
$fa-var-hospital-o: "\f0f8";
$fa-var-hotel: "\f236";
$fa-var-html5: "\f13b";
$fa-var-ils: "\f20b";
$fa-var-image: "\f03e";
$fa-var-inbox: "\f01c";
$fa-var-indent: "\f03c";
$fa-var-info: "\f129";
$fa-var-info-circle: "\f05a";
$fa-var-inr: "\f156";
$fa-var-instagram: "\f16d";
$fa-var-institution: "\f19c";
$fa-var-ioxhost: "\f208";
$fa-var-italic: "\f033";
$fa-var-joomla: "\f1aa";
$fa-var-jpy: "\f157";
$fa-var-jsfiddle: "\f1cc";
$fa-var-key: "\f084";
$fa-var-keyboard-o: "\f11c";
$fa-var-krw: "\f159";
$fa-var-language: "\f1ab";
$fa-var-laptop: "\f109";
$fa-var-lastfm: "\f202";
$fa-var-lastfm-square: "\f203";
$fa-var-leaf: "\f06c";
$fa-var-leanpub: "\f212";
$fa-var-legal: "\f0e3";
$fa-var-lemon-o: "\f094";
$fa-var-level-down: "\f149";
$fa-var-level-up: "\f148";
$fa-var-life-bouy: "\f1cd";
$fa-var-life-buoy: "\f1cd";
$fa-var-life-ring: "\f1cd";
$fa-var-life-saver: "\f1cd";
$fa-var-lightbulb-o: "\f0eb";
$fa-var-line-chart: "\f201";
$fa-var-link: "\f0c1";
$fa-var-linkedin: "\f0e1";
$fa-var-linkedin-square: "\f08c";
$fa-var-linux: "\f17c";
$fa-var-list: "\f03a";
$fa-var-list-alt: "\f022";
$fa-var-list-ol: "\f0cb";
$fa-var-list-ul: "\f0ca";
$fa-var-location-arrow: "\f124";
$fa-var-lock: "\f023";
$fa-var-long-arrow-down: "\f175";
$fa-var-long-arrow-left: "\f177";
$fa-var-long-arrow-right: "\f178";
$fa-var-long-arrow-up: "\f176";
$fa-var-magic: "\f0d0";
$fa-var-magnet: "\f076";
$fa-var-mail-forward: "\f064";
$fa-var-mail-reply: "\f112";
$fa-var-mail-reply-all: "\f122";
$fa-var-male: "\f183";
$fa-var-map-marker: "\f041";
$fa-var-mars: "\f222";
$fa-var-mars-double: "\f227";
$fa-var-mars-stroke: "\f229";
$fa-var-mars-stroke-h: "\f22b";
$fa-var-mars-stroke-v: "\f22a";
$fa-var-maxcdn: "\f136";
$fa-var-meanpath: "\f20c";
$fa-var-medium: "\f23a";
$fa-var-medkit: "\f0fa";
$fa-var-meh-o: "\f11a";
$fa-var-mercury: "\f223";
$fa-var-microphone: "\f130";
$fa-var-microphone-slash: "\f131";
$fa-var-minus: "\f068";
$fa-var-minus-circle: "\f056";
$fa-var-minus-square: "\f146";
$fa-var-minus-square-o: "\f147";
$fa-var-mobile: "\f10b";
$fa-var-mobile-phone: "\f10b";
$fa-var-money: "\f0d6";
$fa-var-moon-o: "\f186";
$fa-var-mortar-board: "\f19d";
$fa-var-motorcycle: "\f21c";
$fa-var-music: "\f001";
$fa-var-navicon: "\f0c9";
$fa-var-neuter: "\f22c";
$fa-var-newspaper-o: "\f1ea";
$fa-var-openid: "\f19b";
$fa-var-outdent: "\f03b";
$fa-var-pagelines: "\f18c";
$fa-var-paint-brush: "\f1fc";
$fa-var-paper-plane: "\f1d8";
$fa-var-paper-plane-o: "\f1d9";
$fa-var-paperclip: "\f0c6";
$fa-var-paragraph: "\f1dd";
$fa-var-paste: "\f0ea";
$fa-var-pause: "\f04c";
$fa-var-paw: "\f1b0";
$fa-var-paypal: "\f1ed";
$fa-var-pencil: "\f040";
$fa-var-pencil-square: "\f14b";
$fa-var-pencil-square-o: "\f044";
$fa-var-phone: "\f095";
$fa-var-phone-square: "\f098";
$fa-var-photo: "\f03e";
$fa-var-picture-o: "\f03e";
$fa-var-pie-chart: "\f200";
$fa-var-pied-piper: "\f1a7";
$fa-var-pied-piper-alt: "\f1a8";
$fa-var-pinterest: "\f0d2";
$fa-var-pinterest-p: "\f231";
$fa-var-pinterest-square: "\f0d3";
$fa-var-plane: "\f072";
$fa-var-play: "\f04b";
$fa-var-play-circle: "\f144";
$fa-var-play-circle-o: "\f01d";
$fa-var-plug: "\f1e6";
$fa-var-plus: "\f067";
$fa-var-plus-circle: "\f055";
$fa-var-plus-square: "\f0fe";
$fa-var-plus-square-o: "\f196";
$fa-var-power-off: "\f011";
$fa-var-print: "\f02f";
$fa-var-puzzle-piece: "\f12e";
$fa-var-qq: "\f1d6";
$fa-var-qrcode: "\f029";
$fa-var-question: "\f128";
$fa-var-question-circle: "\f059";
$fa-var-quote-left: "\f10d";
$fa-var-quote-right: "\f10e";
$fa-var-ra: "\f1d0";
$fa-var-random: "\f074";
$fa-var-rebel: "\f1d0";
$fa-var-recycle: "\f1b8";
$fa-var-reddit: "\f1a1";
$fa-var-reddit-square: "\f1a2";
$fa-var-refresh: "\f021";
$fa-var-remove: "\f00d";
$fa-var-renren: "\f18b";
$fa-var-reorder: "\f0c9";
$fa-var-repeat: "\f01e";
$fa-var-reply: "\f112";
$fa-var-reply-all: "\f122";
$fa-var-retweet: "\f079";
$fa-var-rmb: "\f157";
$fa-var-road: "\f018";
$fa-var-rocket: "\f135";
$fa-var-rotate-left: "\f0e2";
$fa-var-rotate-right: "\f01e";
$fa-var-rouble: "\f158";
$fa-var-rss: "\f09e";
$fa-var-rss-square: "\f143";
$fa-var-rub: "\f158";
$fa-var-ruble: "\f158";
$fa-var-rupee: "\f156";
$fa-var-save: "\f0c7";
$fa-var-scissors: "\f0c4";
$fa-var-search: "\f002";
$fa-var-search-minus: "\f010";
$fa-var-search-plus: "\f00e";
$fa-var-sellsy: "\f213";
$fa-var-send: "\f1d8";
$fa-var-send-o: "\f1d9";
$fa-var-server: "\f233";
$fa-var-share: "\f064";
$fa-var-share-alt: "\f1e0";
$fa-var-share-alt-square: "\f1e1";
$fa-var-share-square: "\f14d";
$fa-var-share-square-o: "\f045";
$fa-var-shekel: "\f20b";
$fa-var-sheqel: "\f20b";
$fa-var-shield: "\f132";
$fa-var-ship: "\f21a";
$fa-var-shirtsinbulk: "\f214";
$fa-var-shopping-cart: "\f07a";
$fa-var-sign-in: "\f090";
$fa-var-sign-out: "\f08b";
$fa-var-signal: "\f012";
$fa-var-simplybuilt: "\f215";
$fa-var-sitemap: "\f0e8";
$fa-var-skyatlas: "\f216";
$fa-var-skype: "\f17e";
$fa-var-slack: "\f198";
$fa-var-sliders: "\f1de";
$fa-var-slideshare: "\f1e7";
$fa-var-smile-o: "\f118";
$fa-var-soccer-ball-o: "\f1e3";
$fa-var-sort: "\f0dc";
$fa-var-sort-alpha-asc: "\f15d";
$fa-var-sort-alpha-desc: "\f15e";
$fa-var-sort-amount-asc: "\f160";
$fa-var-sort-amount-desc: "\f161";
$fa-var-sort-asc: "\f0de";
$fa-var-sort-desc: "\f0dd";
$fa-var-sort-down: "\f0dd";
$fa-var-sort-numeric-asc: "\f162";
$fa-var-sort-numeric-desc: "\f163";
$fa-var-sort-up: "\f0de";
$fa-var-soundcloud: "\f1be";
$fa-var-space-shuttle: "\f197";
$fa-var-spinner: "\f110";
$fa-var-spoon: "\f1b1";
$fa-var-spotify: "\f1bc";
$fa-var-square: "\f0c8";
$fa-var-square-o: "\f096";
$fa-var-stack-exchange: "\f18d";
$fa-var-stack-overflow: "\f16c";
$fa-var-star: "\f005";
$fa-var-star-half: "\f089";
$fa-var-star-half-empty: "\f123";
$fa-var-star-half-full: "\f123";
$fa-var-star-half-o: "\f123";
$fa-var-star-o: "\f006";
$fa-var-steam: "\f1b6";
$fa-var-steam-square: "\f1b7";
$fa-var-step-backward: "\f048";
$fa-var-step-forward: "\f051";
$fa-var-stethoscope: "\f0f1";
$fa-var-stop: "\f04d";
$fa-var-street-view: "\f21d";
$fa-var-strikethrough: "\f0cc";
$fa-var-stumbleupon: "\f1a4";
$fa-var-stumbleupon-circle: "\f1a3";
$fa-var-subscript: "\f12c";
$fa-var-subway: "\f239";
$fa-var-suitcase: "\f0f2";
$fa-var-sun-o: "\f185";
$fa-var-superscript: "\f12b";
$fa-var-support: "\f1cd";
$fa-var-table: "\f0ce";
$fa-var-tablet: "\f10a";
$fa-var-tachometer: "\f0e4";
$fa-var-tag: "\f02b";
$fa-var-tags: "\f02c";
$fa-var-tasks: "\f0ae";
$fa-var-taxi: "\f1ba";
$fa-var-tencent-weibo: "\f1d5";
$fa-var-terminal: "\f120";
$fa-var-text-height: "\f034";
$fa-var-text-width: "\f035";
$fa-var-th: "\f00a";
$fa-var-th-large: "\f009";
$fa-var-th-list: "\f00b";
$fa-var-thumb-tack: "\f08d";
$fa-var-thumbs-down: "\f165";
$fa-var-thumbs-o-down: "\f088";
$fa-var-thumbs-o-up: "\f087";
$fa-var-thumbs-up: "\f164";
$fa-var-ticket: "\f145";
$fa-var-times: "\f00d";
$fa-var-times-circle: "\f057";
$fa-var-times-circle-o: "\f05c";
$fa-var-tint: "\f043";
$fa-var-toggle-down: "\f150";
$fa-var-toggle-left: "\f191";
$fa-var-toggle-off: "\f204";
$fa-var-toggle-on: "\f205";
$fa-var-toggle-right: "\f152";
$fa-var-toggle-up: "\f151";
$fa-var-train: "\f238";
$fa-var-transgender: "\f224";
$fa-var-transgender-alt: "\f225";
$fa-var-trash: "\f1f8";
$fa-var-trash-o: "\f014";
$fa-var-tree: "\f1bb";
$fa-var-trello: "\f181";
$fa-var-trophy: "\f091";
$fa-var-truck: "\f0d1";
$fa-var-try: "\f195";
$fa-var-tty: "\f1e4";
$fa-var-tumblr: "\f173";
$fa-var-tumblr-square: "\f174";
$fa-var-turkish-lira: "\f195";
$fa-var-twitch: "\f1e8";
$fa-var-twitter: "\f099";
$fa-var-twitter-square: "\f081";
$fa-var-umbrella: "\f0e9";
$fa-var-underline: "\f0cd";
$fa-var-undo: "\f0e2";
$fa-var-university: "\f19c";
$fa-var-unlink: "\f127";
$fa-var-unlock: "\f09c";
$fa-var-unlock-alt: "\f13e";
$fa-var-unsorted: "\f0dc";
$fa-var-upload: "\f093";
$fa-var-usd: "\f155";
$fa-var-user: "\f007";
$fa-var-user-md: "\f0f0";
$fa-var-user-plus: "\f234";
$fa-var-user-secret: "\f21b";
$fa-var-user-times: "\f235";
$fa-var-users: "\f0c0";
$fa-var-venus: "\f221";
$fa-var-venus-double: "\f226";
$fa-var-venus-mars: "\f228";
$fa-var-viacoin: "\f237";
$fa-var-video-camera: "\f03d";
$fa-var-vimeo-square: "\f194";
$fa-var-vine: "\f1ca";
$fa-var-vk: "\f189";
$fa-var-volume-down: "\f027";
$fa-var-volume-off: "\f026";
$fa-var-volume-up: "\f028";
$fa-var-warning: "\f071";
$fa-var-wechat: "\f1d7";
$fa-var-weibo: "\f18a";
$fa-var-weixin: "\f1d7";
$fa-var-whatsapp: "\f232";
$fa-var-wheelchair: "\f193";
$fa-var-wifi: "\f1eb";
$fa-var-windows: "\f17a";
$fa-var-won: "\f159";
$fa-var-wordpress: "\f19a";
$fa-var-wrench: "\f0ad";
$fa-var-xing: "\f168";
$fa-var-xing-square: "\f169";
$fa-var-yahoo: "\f19e";
$fa-var-yelp: "\f1e9";
$fa-var-yen: "\f157";
$fa-var-youtube: "\f167";
$fa-var-youtube-play: "\f16a";
$fa-var-youtube-square: "\f166";



================================================================================
END: D:\QiEOS\apps\web\public\builtbyrays_public\builtbyrays.com\public\fonts\font-awesome\scss\_variables.scss
================================================================================


================================================================================
FILE: D:\QiEOS\apps\web\public\builtbyrays_public\builtbyrays.com\public\fonts\font-awesome\scss\font-awesome.scss
================================================================================

/*!
 *  Font Awesome 4.3.0 by @davegandy - http://fontawesome.io - @fontawesome
 *  License - http://fontawesome.io/license (Font: SIL OFL 1.1, CSS: MIT License)
 */

@import "variables";
@import "mixins";
@import "path";
@import "core";
@import "larger";
@import "fixed-width";
@import "list";
@import "bordered-pulled";
@import "animated";
@import "rotated-flipped";
@import "stacked";
@import "icons";


================================================================================
END: D:\QiEOS\apps\web\public\builtbyrays_public\builtbyrays.com\public\fonts\font-awesome\scss\font-awesome.scss
================================================================================


================================================================================
FILE: D:\QiEOS\apps\web\public\builtbyrays_public\builtbyrays.com\public\js\bootstrap.js
================================================================================

/*!
 * Bootstrap v3.3.7 (http://getbootstrap.com)
 * Copyright 2011-2016 Twitter, Inc.
 * Licensed under the MIT license
 */

if (typeof jQuery === 'undefined') {
  throw new Error('Bootstrap\'s JavaScript requires jQuery')
}

+function ($) {
  'use strict';
  var version = $.fn.jquery.split(' ')[0].split('.')
  if ((version[0] < 2 && version[1] < 9) || (version[0] == 1 && version[1] == 9 && version[2] < 1) || (version[0] > 3)) {
    throw new Error('Bootstrap\'s JavaScript requires jQuery version 1.9.1 or higher, but lower than version 4')
  }
}(jQuery);

/* ========================================================================
 * Bootstrap: transition.js v3.3.7
 * http://getbootstrap.com/javascript/#transitions
 * ========================================================================
 * Copyright 2011-2016 Twitter, Inc.
 * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)
 * ======================================================================== */


+function ($) {
  'use strict';

  // CSS TRANSITION SUPPORT (Shoutout: http://www.modernizr.com/)
  // ============================================================

  function transitionEnd() {
    var el = document.createElement('bootstrap')

    var transEndEventNames = {
      WebkitTransition : 'webkitTransitionEnd',
      MozTransition    : 'transitionend',
      OTransition      : 'oTransitionEnd otransitionend',
      transition       : 'transitionend'
    }

    for (var name in transEndEventNames) {
      if (el.style[name] !== undefined) {
        return { end: transEndEventNames[name] }
      }
    }

    return false // explicit for ie8 (  ._.)
  }

  // http://blog.alexmaccaw.com/css-transitions
  $.fn.emulateTransitionEnd = function (duration) {
    var called = false
    var $el = this
    $(this).one('bsTransitionEnd', function () { called = true })
    var callback = function () { if (!called) $($el).trigger($.support.transition.end) }
    setTimeout(callback, duration)
    return this
  }

  $(function () {
    $.support.transition = transitionEnd()

    if (!$.support.transition) return

    $.event.special.bsTransitionEnd = {
      bindType: $.support.transition.end,
      delegateType: $.support.transition.end,
      handle: function (e) {
        if ($(e.target).is(this)) return e.handleObj.handler.apply(this, arguments)
      }
    }
  })

}(jQuery);

/* ========================================================================
 * Bootstrap: alert.js v3.3.7
 * http://getbootstrap.com/javascript/#alerts
 * ========================================================================
 * Copyright 2011-2016 Twitter, Inc.
 * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)
 * ======================================================================== */


+function ($) {
  'use strict';

  // ALERT CLASS DEFINITION
  // ======================

  var dismiss = '[data-dismiss="alert"]'
  var Alert   = function (el) {
    $(el).on('click', dismiss, this.close)
  }

  Alert.VERSION = '3.3.7'

  Alert.TRANSITION_DURATION = 150

  Alert.prototype.close = function (e) {
    var $this    = $(this)
    var selector = $this.attr('data-target')

    if (!selector) {
      selector = $this.attr('href')
      selector = selector && selector.replace(/.*(?=#[^\s]*$)/, '') // strip for ie7
    }

    var $parent = $(selector === '#' ? [] : selector)

    if (e) e.preventDefault()

    if (!$parent.length) {
      $parent = $this.closest('.alert')
    }

    $parent.trigger(e = $.Event('close.bs.alert'))

    if (e.isDefaultPrevented()) return

    $parent.removeClass('in')

    function removeElement() {
      // detach from parent, fire event then clean up data
      $parent.detach().trigger('closed.bs.alert').remove()
    }

    $.support.transition && $parent.hasClass('fade') ?
      $parent
        .one('bsTransitionEnd', removeElement)
        .emulateTransitionEnd(Alert.TRANSITION_DURATION) :
      removeElement()
  }


  // ALERT PLUGIN DEFINITION
  // =======================

  function Plugin(option) {
    return this.each(function () {
      var $this = $(this)
      var data  = $this.data('bs.alert')

      if (!data) $this.data('bs.alert', (data = new Alert(this)))
      if (typeof option == 'string') data[option].call($this)
    })
  }

  var old = $.fn.alert

  $.fn.alert             = Plugin
  $.fn.alert.Constructor = Alert


  // ALERT NO CONFLICT
  // =================

  $.fn.alert.noConflict = function () {
    $.fn.alert = old
    return this
  }


  // ALERT DATA-API
  // ==============

  $(document).on('click.bs.alert.data-api', dismiss, Alert.prototype.close)

}(jQuery);

/* ========================================================================
 * Bootstrap: button.js v3.3.7
 * http://getbootstrap.com/javascript/#buttons
 * ========================================================================
 * Copyright 2011-2016 Twitter, Inc.
 * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)
 * ======================================================================== */


+function ($) {
  'use strict';

  // BUTTON PUBLIC CLASS DEFINITION
  // ==============================

  var Button = function (element, options) {
    this.$element  = $(element)
    this.options   = $.extend({}, Button.DEFAULTS, options)
    this.isLoading = false
  }

  Button.VERSION  = '3.3.7'

  Button.DEFAULTS = {
    loadingText: 'loading...'
  }

  Button.prototype.setState = function (state) {
    var d    = 'disabled'
    var $el  = this.$element
    var val  = $el.is('input') ? 'val' : 'html'
    var data = $el.data()

    state += 'Text'

    if (data.resetText == null) $el.data('resetText', $el[val]())

    // push to event loop to allow forms to submit
    setTimeout($.proxy(function () {
      $el[val](data[state] == null ? this.options[state] : data[state])

      if (state == 'loadingText') {
        this.isLoading = true
        $el.addClass(d).attr(d, d).prop(d, true)
      } else if (this.isLoading) {
        this.isLoading = false
        $el.removeClass(d).removeAttr(d).prop(d, false)
      }
    }, this), 0)
  }

  Button.prototype.toggle = function () {
    var changed = true
    var $parent = this.$element.closest('[data-toggle="buttons"]')

    if ($parent.length) {
      var $input = this.$element.find('input')
      if ($input.prop('type') == 'radio') {
        if ($input.prop('checked')) changed = false
        $parent.find('.active').removeClass('active')
        this.$element.addClass('active')
      } else if ($input.prop('type') == 'checkbox') {
        if (($input.prop('checked')) !== this.$element.hasClass('active')) changed = false
        this.$element.toggleClass('active')
      }
      $input.prop('checked', this.$element.hasClass('active'))
      if (changed) $input.trigger('change')
    } else {
      this.$element.attr('aria-pressed', !this.$element.hasClass('active'))
      this.$element.toggleClass('active')
    }
  }


  // BUTTON PLUGIN DEFINITION
  // ========================

  function Plugin(option) {
    return this.each(function () {
      var $this   = $(this)
      var data    = $this.data('bs.button')
      var options = typeof option == 'object' && option

      if (!data) $this.data('bs.button', (data = new Button(this, options)))

      if (option == 'toggle') data.toggle()
      else if (option) data.setState(option)
    })
  }

  var old = $.fn.button

  $.fn.button             = Plugin
  $.fn.button.Constructor = Button


  // BUTTON NO CONFLICT
  // ==================

  $.fn.button.noConflict = function () {
    $.fn.button = old
    return this
  }


  // BUTTON DATA-API
  // ===============

  $(document)
    .on('click.bs.button.data-api', '[data-toggle^="button"]', function (e) {
      var $btn = $(e.target).closest('.btn')
      Plugin.call($btn, 'toggle')
      if (!($(e.target).is('input[type="radio"], input[type="checkbox"]'))) {
        // Prevent double click on radios, and the double selections (so cancellation) on checkboxes
        e.preventDefault()
        // The target component still receive the focus
        if ($btn.is('input,button')) $btn.trigger('focus')
        else $btn.find('input:visible,button:visible').first().trigger('focus')
      }
    })
    .on('focus.bs.button.data-api blur.bs.button.data-api', '[data-toggle^="button"]', function (e) {
      $(e.target).closest('.btn').toggleClass('focus', /^focus(in)?$/.test(e.type))
    })

}(jQuery);

/* ========================================================================
 * Bootstrap: carousel.js v3.3.7
 * http://getbootstrap.com/javascript/#carousel
 * ========================================================================
 * Copyright 2011-2016 Twitter, Inc.
 * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)
 * ======================================================================== */


+function ($) {
  'use strict';

  // CAROUSEL CLASS DEFINITION
  // =========================

  var Carousel = function (element, options) {
    this.$element    = $(element)
    this.$indicators = this.$element.find('.carousel-indicators')
    this.options     = options
    this.paused      = null
    this.sliding     = null
    this.interval    = null
    this.$active     = null
    this.$items      = null

    this.options.keyboard && this.$element.on('keydown.bs.carousel', $.proxy(this.keydown, this))

    this.options.pause == 'hover' && !('ontouchstart' in document.documentElement) && this.$element
      .on('mouseenter.bs.carousel', $.proxy(this.pause, this))
      .on('mouseleave.bs.carousel', $.proxy(this.cycle, this))
  }

  Carousel.VERSION  = '3.3.7'

  Carousel.TRANSITION_DURATION = 600

  Carousel.DEFAULTS = {
    interval: 5000,
    pause: 'hover',
    wrap: true,
    keyboard: true
  }

  Carousel.prototype.keydown = function (e) {
    if (/input|textarea/i.test(e.target.tagName)) return
    switch (e.which) {
      case 37: this.prev(); break
      case 39: this.next(); break
      default: return
    }

    e.preventDefault()
  }

  Carousel.prototype.cycle = function (e) {
    e || (this.paused = false)

    this.interval && clearInterval(this.interval)

    this.options.interval
      && !this.paused
      && (this.interval = setInterval($.proxy(this.next, this), this.options.interval))

    return this
  }

  Carousel.prototype.getItemIndex = function (item) {
    this.$items = item.parent().children('.item')
    return this.$items.index(item || this.$active)
  }

  Carousel.prototype.getItemForDirection = function (direction, active) {
    var activeIndex = this.getItemIndex(active)
    var willWrap = (direction == 'prev' && activeIndex === 0)
                || (direction == 'next' && activeIndex == (this.$items.length - 1))
    if (willWrap && !this.options.wrap) return active
    var delta = direction == 'prev' ? -1 : 1
    var itemIndex = (activeIndex + delta) % this.$items.length
    return this.$items.eq(itemIndex)
  }

  Carousel.prototype.to = function (pos) {
    var that        = this
    var activeIndex = this.getItemIndex(this.$active = this.$element.find('.item.active'))

    if (pos > (this.$items.length - 1) || pos < 0) return

    if (this.sliding)       return this.$element.one('slid.bs.carousel', function () { that.to(pos) }) // yes, "slid"
    if (activeIndex == pos) return this.pause().cycle()

    return this.slide(pos > activeIndex ? 'next' : 'prev', this.$items.eq(pos))
  }

  Carousel.prototype.pause = function (e) {
    e || (this.paused = true)

    if (this.$element.find('.next, .prev').length && $.support.transition) {
      this.$element.trigger($.support.transition.end)
      this.cycle(true)
    }

    this.interval = clearInterval(this.interval)

    return this
  }

  Carousel.prototype.next = function () {
    if (this.sliding) return
    return this.slide('next')
  }

  Carousel.prototype.prev = function () {
    if (this.sliding) return
    return this.slide('prev')
  }

  Carousel.prototype.slide = function (type, next) {
    var $active   = this.$element.find('.item.active')
    var $next     = next || this.getItemForDirection(type, $active)
    var isCycling = this.interval
    var direction = type == 'next' ? 'left' : 'right'
    var that      = this

    if ($next.hasClass('active')) return (this.sliding = false)

    var relatedTarget = $next[0]
    var slideEvent = $.Event('slide.bs.carousel', {
      relatedTarget: relatedTarget,
      direction: direction
    })
    this.$element.trigger(slideEvent)
    if (slideEvent.isDefaultPrevented()) return

    this.sliding = true

    isCycling && this.pause()

    if (this.$indicators.length) {
      this.$indicators.find('.active').removeClass('active')
      var $nextIndicator = $(this.$indicators.children()[this.getItemIndex($next)])
      $nextIndicator && $nextIndicator.addClass('active')
    }

    var slidEvent = $.Event('slid.bs.carousel', { relatedTarget: relatedTarget, direction: direction }) // yes, "slid"
    if ($.support.transition && this.$element.hasClass('slide')) {
      $next.addClass(type)
      $next[0].offsetWidth // force reflow
      $active.addClass(direction)
      $next.addClass(direction)
      $active
        .one('bsTransitionEnd', function () {
          $next.removeClass([type, direction].join(' ')).addClass('active')
          $active.removeClass(['active', direction].join(' '))
          that.sliding = false
          setTimeout(function () {
            that.$element.trigger(slidEvent)
          }, 0)
        })
        .emulateTransitionEnd(Carousel.TRANSITION_DURATION)
    } else {
      $active.removeClass('active')
      $next.addClass('active')
      this.sliding = false
      this.$element.trigger(slidEvent)
    }

    isCycling && this.cycle()

    return this
  }


  // CAROUSEL PLUGIN DEFINITION
  // ==========================

  function Plugin(option) {
    return this.each(function () {
      var $this   = $(this)
      var data    = $this.data('bs.carousel')
      var options = $.extend({}, Carousel.DEFAULTS, $this.data(), typeof option == 'object' && option)
      var action  = typeof option == 'string' ? option : options.slide

      if (!data) $this.data('bs.carousel', (data = new Carousel(this, options)))
      if (typeof option == 'number') data.to(option)
      else if (action) data[action]()
      else if (options.interval) data.pause().cycle()
    })
  }

  var old = $.fn.carousel

  $.fn.carousel             = Plugin
  $.fn.carousel.Constructor = Carousel


  // CAROUSEL NO CONFLICT
  // ====================

  $.fn.carousel.noConflict = function () {
    $.fn.carousel = old
    return this
  }


  // CAROUSEL DATA-API
  // =================

  var clickHandler = function (e) {
    var href
    var $this   = $(this)
    var $target = $($this.attr('data-target') || (href = $this.attr('href')) && href.replace(/.*(?=#[^\s]+$)/, '')) // strip for ie7
    if (!$target.hasClass('carousel')) return
    var options = $.extend({}, $target.data(), $this.data())
    var slideIndex = $this.attr('data-slide-to')
    if (slideIndex) options.interval = false

    Plugin.call($target, options)

    if (slideIndex) {
      $target.data('bs.carousel').to(slideIndex)
    }

    e.preventDefault()
  }

  $(document)
    .on('click.bs.carousel.data-api', '[data-slide]', clickHandler)
    .on('click.bs.carousel.data-api', '[data-slide-to]', clickHandler)

  $(window).on('load', function () {
    $('[data-ride="carousel"]').each(function () {
      var $carousel = $(this)
      Plugin.call($carousel, $carousel.data())
    })
  })

}(jQuery);

/* ========================================================================
 * Bootstrap: collapse.js v3.3.7
 * http://getbootstrap.com/javascript/#collapse
 * ========================================================================
 * Copyright 2011-2016 Twitter, Inc.
 * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)
 * ======================================================================== */

/* jshint latedef: false */

+function ($) {
  'use strict';

  // COLLAPSE PUBLIC CLASS DEFINITION
  // ================================

  var Collapse = function (element, options) {
    this.$element      = $(element)
    this.options       = $.extend({}, Collapse.DEFAULTS, options)
    this.$trigger      = $('[data-toggle="collapse"][href="#' + element.id + '"],' +
                           '[data-toggle="collapse"][data-target="#' + element.id + '"]')
    this.transitioning = null

    if (this.options.parent) {
      this.$parent = this.getParent()
    } else {
      this.addAriaAndCollapsedClass(this.$element, this.$trigger)
    }

    if (this.options.toggle) this.toggle()
  }

  Collapse.VERSION  = '3.3.7'

  Collapse.TRANSITION_DURATION = 350

  Collapse.DEFAULTS = {
    toggle: true
  }

  Collapse.prototype.dimension = function () {
    var hasWidth = this.$element.hasClass('width')
    return hasWidth ? 'width' : 'height'
  }

  Collapse.prototype.show = function () {
    if (this.transitioning || this.$element.hasClass('in')) return

    var activesData
    var actives = this.$parent && this.$parent.children('.panel').children('.in, .collapsing')

    if (actives && actives.length) {
      activesData = actives.data('bs.collapse')
      if (activesData && activesData.transitioning) return
    }

    var startEvent = $.Event('show.bs.collapse')
    this.$element.trigger(startEvent)
    if (startEvent.isDefaultPrevented()) return

    if (actives && actives.length) {
      Plugin.call(actives, 'hide')
      activesData || actives.data('bs.collapse', null)
    }

    var dimension = this.dimension()

    this.$element
      .removeClass('collapse')
      .addClass('collapsing')[dimension](0)
      .attr('aria-expanded', true)

    this.$trigger
      .removeClass('collapsed')
      .attr('aria-expanded', true)

    this.transitioning = 1

    var complete = function () {
      this.$element
        .removeClass('collapsing')
        .addClass('collapse in')[dimension]('')
      this.transitioning = 0
      this.$element
        .trigger('shown.bs.collapse')
    }

    if (!$.support.transition) return complete.call(this)

    var scrollSize = $.camelCase(['scroll', dimension].join('-'))

    this.$element
      .one('bsTransitionEnd', $.proxy(complete, this))
      .emulateTransitionEnd(Collapse.TRANSITION_DURATION)[dimension](this.$element[0][scrollSize])
  }

  Collapse.prototype.hide = function () {
    if (this.transitioning || !this.$element.hasClass('in')) return

    var startEvent = $.Event('hide.bs.collapse')
    this.$element.trigger(startEvent)
    if (startEvent.isDefaultPrevented()) return

    var dimension = this.dimension()

    this.$element[dimension](this.$element[dimension]())[0].offsetHeight

    this.$element
      .addClass('collapsing')
      .removeClass('collapse in')
      .attr('aria-expanded', false)

    this.$trigger
      .addClass('collapsed')
      .attr('aria-expanded', false)

    this.transitioning = 1

    var complete = function () {
      this.transitioning = 0
      this.$element
        .removeClass('collapsing')
        .addClass('collapse')
        .trigger('hidden.bs.collapse')
    }

    if (!$.support.transition) return complete.call(this)

    this.$element
      [dimension](0)
      .one('bsTransitionEnd', $.proxy(complete, this))
      .emulateTransitionEnd(Collapse.TRANSITION_DURATION)
  }

  Collapse.prototype.toggle = function () {
    this[this.$element.hasClass('in') ? 'hide' : 'show']()
  }

  Collapse.prototype.getParent = function () {
    return $(this.options.parent)
      .find('[data-toggle="collapse"][data-parent="' + this.options.parent + '"]')
      .each($.proxy(function (i, element) {
        var $element = $(element)
        this.addAriaAndCollapsedClass(getTargetFromTrigger($element), $element)
      }, this))
      .end()
  }

  Collapse.prototype.addAriaAndCollapsedClass = function ($element, $trigger) {
    var isOpen = $element.hasClass('in')

    $element.attr('aria-expanded', isOpen)
    $trigger
      .toggleClass('collapsed', !isOpen)
      .attr('aria-expanded', isOpen)
  }

  function getTargetFromTrigger($trigger) {
    var href
    var target = $trigger.attr('data-target')
      || (href = $trigger.attr('href')) && href.replace(/.*(?=#[^\s]+$)/, '') // strip for ie7

    return $(target)
  }


  // COLLAPSE PLUGIN DEFINITION
  // ==========================

  function Plugin(option) {
    return this.each(function () {
      var $this   = $(this)
      var data    = $this.data('bs.collapse')
      var options = $.extend({}, Collapse.DEFAULTS, $this.data(), typeof option == 'object' && option)

      if (!data && options.toggle && /show|hide/.test(option)) options.toggle = false
      if (!data) $this.data('bs.collapse', (data = new Collapse(this, options)))
      if (typeof option == 'string') data[option]()
    })
  }

  var old = $.fn.collapse

  $.fn.collapse             = Plugin
  $.fn.collapse.Constructor = Collapse


  // COLLAPSE NO CONFLICT
  // ====================

  $.fn.collapse.noConflict = function () {
    $.fn.collapse = old
    return this
  }


  // COLLAPSE DATA-API
  // =================

  $(document).on('click.bs.collapse.data-api', '[data-toggle="collapse"]', function (e) {
    var $this   = $(this)

    if (!$this.attr('data-target')) e.preventDefault()

    var $target = getTargetFromTrigger($this)
    var data    = $target.data('bs.collapse')
    var option  = data ? 'toggle' : $this.data()

    Plugin.call($target, option)
  })

}(jQuery);

/* ========================================================================
 * Bootstrap: dropdown.js v3.3.7
 * http://getbootstrap.com/javascript/#dropdowns
 * ========================================================================
 * Copyright 2011-2016 Twitter, Inc.
 * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)
 * ======================================================================== */


+function ($) {
  'use strict';

  // DROPDOWN CLASS DEFINITION
  // =========================

  var backdrop = '.dropdown-backdrop'
  var toggle   = '[data-toggle="dropdown"]'
  var Dropdown = function (element) {
    $(element).on('click.bs.dropdown', this.toggle)
  }

  Dropdown.VERSION = '3.3.7'

  function getParent($this) {
    var selector = $this.attr('data-target')

    if (!selector) {
      selector = $this.attr('href')
      selector = selector && /#[A-Za-z]/.test(selector) && selector.replace(/.*(?=#[^\s]*$)/, '') // strip for ie7
    }

    var $parent = selector && $(selector)

    return $parent && $parent.length ? $parent : $this.parent()
  }

  function clearMenus(e) {
    if (e && e.which === 3) return
    $(backdrop).remove()
    $(toggle).each(function () {
      var $this         = $(this)
      var $parent       = getParent($this)
      var relatedTarget = { relatedTarget: this }

      if (!$parent.hasClass('open')) return

      if (e && e.type == 'click' && /input|textarea/i.test(e.target.tagName) && $.contains($parent[0], e.target)) return

      $parent.trigger(e = $.Event('hide.bs.dropdown', relatedTarget))

      if (e.isDefaultPrevented()) return

      $this.attr('aria-expanded', 'false')
      $parent.removeClass('open').trigger($.Event('hidden.bs.dropdown', relatedTarget))
    })
  }

  Dropdown.prototype.toggle = function (e) {
    var $this = $(this)

    if ($this.is('.disabled, :disabled')) return

    var $parent  = getParent($this)
    var isActive = $parent.hasClass('open')

    clearMenus()

    if (!isActive) {
      if ('ontouchstart' in document.documentElement && !$parent.closest('.navbar-nav').length) {
        // if mobile we use a backdrop because click events don't delegate
        $(document.createElement('div'))
          .addClass('dropdown-backdrop')
          .insertAfter($(this))
          .on('click', clearMenus)
      }

      var relatedTarget = { relatedTarget: this }
      $parent.trigger(e = $.Event('show.bs.dropdown', relatedTarget))

      if (e.isDefaultPrevented()) return

      $this
        .trigger('focus')
        .attr('aria-expanded', 'true')

      $parent
        .toggleClass('open')
        .trigger($.Event('shown.bs.dropdown', relatedTarget))
    }

    return false
  }

  Dropdown.prototype.keydown = function (e) {
    if (!/(38|40|27|32)/.test(e.which) || /input|textarea/i.test(e.target.tagName)) return

    var $this = $(this)

    e.preventDefault()
    e.stopPropagation()

    if ($this.is('.disabled, :disabled')) return

    var $parent  = getParent($this)
    var isActive = $parent.hasClass('open')

    if (!isActive && e.which != 27 || isActive && e.which == 27) {
      if (e.which == 27) $parent.find(toggle).trigger('focus')
      return $this.trigger('click')
    }

    var desc = ' li:not(.disabled):visible a'
    var $items = $parent.find('.dropdown-menu' + desc)

    if (!$items.length) return

    var index = $items.index(e.target)

    if (e.which == 38 && index > 0)                 index--         // up
    if (e.which == 40 && index < $items.length - 1) index++         // down
    if (!~index)                                    index = 0

    $items.eq(index).trigger('focus')
  }


  // DROPDOWN PLUGIN DEFINITION
  // ==========================

  function Plugin(option) {
    return this.each(function () {
      var $this = $(this)
      var data  = $this.data('bs.dropdown')

      if (!data) $this.data('bs.dropdown', (data = new Dropdown(this)))
      if (typeof option == 'string') data[option].call($this)
    })
  }

  var old = $.fn.dropdown

  $.fn.dropdown             = Plugin
  $.fn.dropdown.Constructor = Dropdown


  // DROPDOWN NO CONFLICT
  // ====================

  $.fn.dropdown.noConflict = function () {
    $.fn.dropdown = old
    return this
  }


  // APPLY TO STANDARD DROPDOWN ELEMENTS
  // ===================================

  $(document)
    .on('click.bs.dropdown.data-api', clearMenus)
    .on('click.bs.dropdown.data-api', '.dropdown form', function (e) { e.stopPropagation() })
    .on('click.bs.dropdown.data-api', toggle, Dropdown.prototype.toggle)
    .on('keydown.bs.dropdown.data-api', toggle, Dropdown.prototype.keydown)
    .on('keydown.bs.dropdown.data-api', '.dropdown-menu', Dropdown.prototype.keydown)

}(jQuery);

/* ========================================================================
 * Bootstrap: modal.js v3.3.7
 * http://getbootstrap.com/javascript/#modals
 * ========================================================================
 * Copyright 2011-2016 Twitter, Inc.
 * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)
 * ======================================================================== */


+function ($) {
  'use strict';

  // MODAL CLASS DEFINITION
  // ======================

  var Modal = function (element, options) {
    this.options             = options
    this.$body               = $(document.body)
    this.$element            = $(element)
    this.$dialog             = this.$element.find('.modal-dialog')
    this.$backdrop           = null
    this.isShown             = null
    this.originalBodyPad     = null
    this.scrollbarWidth      = 0
    this.ignoreBackdropClick = false

    if (this.options.remote) {
      this.$element
        .find('.modal-content')
        .load(this.options.remote, $.proxy(function () {
          this.$element.trigger('loaded.bs.modal')
        }, this))
    }
  }

  Modal.VERSION  = '3.3.7'

  Modal.TRANSITION_DURATION = 300
  Modal.BACKDROP_TRANSITION_DURATION = 150

  Modal.DEFAULTS = {
    backdrop: true,
    keyboard: true,
    show: true
  }

  Modal.prototype.toggle = function (_relatedTarget) {
    return this.isShown ? this.hide() : this.show(_relatedTarget)
  }

  Modal.prototype.show = function (_relatedTarget) {
    var that = this
    var e    = $.Event('show.bs.modal', { relatedTarget: _relatedTarget })

    this.$element.trigger(e)

    if (this.isShown || e.isDefaultPrevented()) return

    this.isShown = true

    this.checkScrollbar()
    this.setScrollbar()
    this.$body.addClass('modal-open')

    this.escape()
    this.resize()

    this.$element.on('click.dismiss.bs.modal', '[data-dismiss="modal"]', $.proxy(this.hide, this))

    this.$dialog.on('mousedown.dismiss.bs.modal', function () {
      that.$element.one('mouseup.dismiss.bs.modal', function (e) {
        if ($(e.target).is(that.$element)) that.ignoreBackdropClick = true
      })
    })

    this.backdrop(function () {
      var transition = $.support.transition && that.$element.hasClass('fade')

      if (!that.$element.parent().length) {
        that.$element.appendTo(that.$body) // don't move modals dom position
      }

      that.$element
        .show()
        .scrollTop(0)

      that.adjustDialog()

      if (transition) {
        that.$element[0].offsetWidth // force reflow
      }

      that.$element.addClass('in')

      that.enforceFocus()

      var e = $.Event('shown.bs.modal', { relatedTarget: _relatedTarget })

      transition ?
        that.$dialog // wait for modal to slide in
          .one('bsTransitionEnd', function () {
            that.$element.trigger('focus').trigger(e)
          })
          .emulateTransitionEnd(Modal.TRANSITION_DURATION) :
        that.$element.trigger('focus').trigger(e)
    })
  }

  Modal.prototype.hide = function (e) {
    if (e) e.preventDefault()

    e = $.Event('hide.bs.modal')

    this.$element.trigger(e)

    if (!this.isShown || e.isDefaultPrevented()) return

    this.isShown = false

    this.escape()
    this.resize()

    $(document).off('focusin.bs.modal')

    this.$element
      .removeClass('in')
      .off('click.dismiss.bs.modal')
      .off('mouseup.dismiss.bs.modal')

    this.$dialog.off('mousedown.dismiss.bs.modal')

    $.support.transition && this.$element.hasClass('fade') ?
      this.$element
        .one('bsTransitionEnd', $.proxy(this.hideModal, this))
        .emulateTransitionEnd(Modal.TRANSITION_DURATION) :
      this.hideModal()
  }

  Modal.prototype.enforceFocus = function () {
    $(document)
      .off('focusin.bs.modal') // guard against infinite focus loop
      .on('focusin.bs.modal', $.proxy(function (e) {
        if (document !== e.target &&
            this.$element[0] !== e.target &&
            !this.$element.has(e.target).length) {
          this.$element.trigger('focus')
        }
      }, this))
  }

  Modal.prototype.escape = function () {
    if (this.isShown && this.options.keyboard) {
      this.$element.on('keydown.dismiss.bs.modal', $.proxy(function (e) {
        e.which == 27 && this.hide()
      }, this))
    } else if (!this.isShown) {
      this.$element.off('keydown.dismiss.bs.modal')
    }
  }

  Modal.prototype.resize = function () {
    if (this.isShown) {
      $(window).on('resize.bs.modal', $.proxy(this.handleUpdate, this))
    } else {
      $(window).off('resize.bs.modal')
    }
  }

  Modal.prototype.hideModal = function () {
    var that = this
    this.$element.hide()
    this.backdrop(function () {
      that.$body.removeClass('modal-open')
      that.resetAdjustments()
      that.resetScrollbar()
      that.$element.trigger('hidden.bs.modal')
    })
  }

  Modal.prototype.removeBackdrop = function () {
    this.$backdrop && this.$backdrop.remove()
    this.$backdrop = null
  }

  Modal.prototype.backdrop = function (callback) {
    var that = this
    var animate = this.$element.hasClass('fade') ? 'fade' : ''

    if (this.isShown && this.options.backdrop) {
      var doAnimate = $.support.transition && animate

      this.$backdrop = $(document.createElement('div'))
        .addClass('modal-backdrop ' + animate)
        .appendTo(this.$body)

      this.$element.on('click.dismiss.bs.modal', $.proxy(function (e) {
        if (this.ignoreBackdropClick) {
          this.ignoreBackdropClick = false
          return
        }
        if (e.target !== e.currentTarget) return
        this.options.backdrop == 'static'
          ? this.$element[0].focus()
          : this.hide()
      }, this))

      if (doAnimate) this.$backdrop[0].offsetWidth // force reflow

      this.$backdrop.addClass('in')

      if (!callback) return

      doAnimate ?
        this.$backdrop
          .one('bsTransitionEnd', callback)
          .emulateTransitionEnd(Modal.BACKDROP_TRANSITION_DURATION) :
        callback()

    } else if (!this.isShown && this.$backdrop) {
      this.$backdrop.removeClass('in')

      var callbackRemove = function () {
        that.removeBackdrop()
        callback && callback()
      }
      $.support.transition && this.$element.hasClass('fade') ?
        this.$backdrop
          .one('bsTransitionEnd', callbackRemove)
          .emulateTransitionEnd(Modal.BACKDROP_TRANSITION_DURATION) :
        callbackRemove()

    } else if (callback) {
      callback()
    }
  }

  // these following methods are used to handle overflowing modals

  Modal.prototype.handleUpdate = function () {
    this.adjustDialog()
  }

  Modal.prototype.adjustDialog = function () {
    var modalIsOverflowing = this.$element[0].scrollHeight > document.documentElement.clientHeight

    this.$element.css({
      paddingLeft:  !this.bodyIsOverflowing && modalIsOverflowing ? this.scrollbarWidth : '',
      paddingRight: this.bodyIsOverflowing && !modalIsOverflowing ? this.scrollbarWidth : ''
    })
  }

  Modal.prototype.resetAdjustments = function () {
    this.$element.css({
      paddingLeft: '',
      paddingRight: ''
    })
  }

  Modal.prototype.checkScrollbar = function () {
    var fullWindowWidth = window.innerWidth
    if (!fullWindowWidth) { // workaround for missing window.innerWidth in IE8
      var documentElementRect = document.documentElement.getBoundingClientRect()
      fullWindowWidth = documentElementRect.right - Math.abs(documentElementRect.left)
    }
    this.bodyIsOverflowing = document.body.clientWidth < fullWindowWidth
    this.scrollbarWidth = this.measureScrollbar()
  }

  Modal.prototype.setScrollbar = function () {
    var bodyPad = parseInt((this.$body.css('padding-right') || 0), 10)
    this.originalBodyPad = document.body.style.paddingRight || ''
    if (this.bodyIsOverflowing) this.$body.css('padding-right', bodyPad + this.scrollbarWidth)
  }

  Modal.prototype.resetScrollbar = function () {
    this.$body.css('padding-right', this.originalBodyPad)
  }

  Modal.prototype.measureScrollbar = function () { // thx walsh
    var scrollDiv = document.createElement('div')
    scrollDiv.className = 'modal-scrollbar-measure'
    this.$body.append(scrollDiv)
    var scrollbarWidth = scrollDiv.offsetWidth - scrollDiv.clientWidth
    this.$body[0].removeChild(scrollDiv)
    return scrollbarWidth
  }


  // MODAL PLUGIN DEFINITION
  // =======================

  function Plugin(option, _relatedTarget) {
    return this.each(function () {
      var $this   = $(this)
      var data    = $this.data('bs.modal')
      var options = $.extend({}, Modal.DEFAULTS, $this.data(), typeof option == 'object' && option)

      if (!data) $this.data('bs.modal', (data = new Modal(this, options)))
      if (typeof option == 'string') data[option](_relatedTarget)
      else if (options.show) data.show(_relatedTarget)
    })
  }

  var old = $.fn.modal

  $.fn.modal             = Plugin
  $.fn.modal.Constructor = Modal


  // MODAL NO CONFLICT
  // =================

  $.fn.modal.noConflict = function () {
    $.fn.modal = old
    return this
  }


  // MODAL DATA-API
  // ==============

  $(document).on('click.bs.modal.data-api', '[data-toggle="modal"]', function (e) {
    var $this   = $(this)
    var href    = $this.attr('href')
    var $target = $($this.attr('data-target') || (href && href.replace(/.*(?=#[^\s]+$)/, ''))) // strip for ie7
    var option  = $target.data('bs.modal') ? 'toggle' : $.extend({ remote: !/#/.test(href) && href }, $target.data(), $this.data())

    if ($this.is('a')) e.preventDefault()

    $target.one('show.bs.modal', function (showEvent) {
      if (showEvent.isDefaultPrevented()) return // only register focus restorer if modal will actually get shown
      $target.one('hidden.bs.modal', function () {
        $this.is(':visible') && $this.trigger('focus')
      })
    })
    Plugin.call($target, option, this)
  })

}(jQuery);

/* ========================================================================
 * Bootstrap: tooltip.js v3.3.7
 * http://getbootstrap.com/javascript/#tooltip
 * Inspired by the original jQuery.tipsy by Jason Frame
 * ========================================================================
 * Copyright 2011-2016 Twitter, Inc.
 * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)
 * ======================================================================== */


+function ($) {
  'use strict';

  // TOOLTIP PUBLIC CLASS DEFINITION
  // ===============================

  var Tooltip = function (element, options) {
    this.type       = null
    this.options    = null
    this.enabled    = null
    this.timeout    = null
    this.hoverState = null
    this.$element   = null
    this.inState    = null

    this.init('tooltip', element, options)
  }

  Tooltip.VERSION  = '3.3.7'

  Tooltip.TRANSITION_DURATION = 150

  Tooltip.DEFAULTS = {
    animation: true,
    placement: 'top',
    selector: false,
    template: '<div class="tooltip" role="tooltip"><div class="tooltip-arrow"></div><div class="tooltip-inner"></div></div>',
    trigger: 'hover focus',
    title: '',
    delay: 0,
    html: false,
    container: false,
    viewport: {
      selector: 'body',
      padding: 0
    }
  }

  Tooltip.prototype.init = function (type, element, options) {
    this.enabled   = true
    this.type      = type
    this.$element  = $(element)
    this.options   = this.getOptions(options)
    this.$viewport = this.options.viewport && $($.isFunction(this.options.viewport) ? this.options.viewport.call(this, this.$element) : (this.options.viewport.selector || this.options.viewport))
    this.inState   = { click: false, hover: false, focus: false }

    if (this.$element[0] instanceof document.constructor && !this.options.selector) {
      throw new Error('`selector` option must be specified when initializing ' + this.type + ' on the window.document object!')
    }

    var triggers = this.options.trigger.split(' ')

    for (var i = triggers.length; i--;) {
      var trigger = triggers[i]

      if (trigger == 'click') {
        this.$element.on('click.' + this.type, this.options.selector, $.proxy(this.toggle, this))
      } else if (trigger != 'manual') {
        var eventIn  = trigger == 'hover' ? 'mouseenter' : 'focusin'
        var eventOut = trigger == 'hover' ? 'mouseleave' : 'focusout'

        this.$element.on(eventIn  + '.' + this.type, this.options.selector, $.proxy(this.enter, this))
        this.$element.on(eventOut + '.' + this.type, this.options.selector, $.proxy(this.leave, this))
      }
    }

    this.options.selector ?
      (this._options = $.extend({}, this.options, { trigger: 'manual', selector: '' })) :
      this.fixTitle()
  }

  Tooltip.prototype.getDefaults = function () {
    return Tooltip.DEFAULTS
  }

  Tooltip.prototype.getOptions = function (options) {
    options = $.extend({}, this.getDefaults(), this.$element.data(), options)

    if (options.delay && typeof options.delay == 'number') {
      options.delay = {
        show: options.delay,
        hide: options.delay
      }
    }

    return options
  }

  Tooltip.prototype.getDelegateOptions = function () {
    var options  = {}
    var defaults = this.getDefaults()

    this._options && $.each(this._options, function (key, value) {
      if (defaults[key] != value) options[key] = value
    })

    return options
  }

  Tooltip.prototype.enter = function (obj) {
    var self = obj instanceof this.constructor ?
      obj : $(obj.currentTarget).data('bs.' + this.type)

    if (!self) {
      self = new this.constructor(obj.currentTarget, this.getDelegateOptions())
      $(obj.currentTarget).data('bs.' + this.type, self)
    }

    if (obj instanceof $.Event) {
      self.inState[obj.type == 'focusin' ? 'focus' : 'hover'] = true
    }

    if (self.tip().hasClass('in') || self.hoverState == 'in') {
      self.hoverState = 'in'
      return
    }

    clearTimeout(self.timeout)

    self.hoverState = 'in'

    if (!self.options.delay || !self.options.delay.show) return self.show()

    self.timeout = setTimeout(function () {
      if (self.hoverState == 'in') self.show()
    }, self.options.delay.show)
  }

  Tooltip.prototype.isInStateTrue = function () {
    for (var key in this.inState) {
      if (this.inState[key]) return true
    }

    return false
  }

  Tooltip.prototype.leave = function (obj) {
    var self = obj instanceof this.constructor ?
      obj : $(obj.currentTarget).data('bs.' + this.type)

    if (!self) {
      self = new this.constructor(obj.currentTarget, this.getDelegateOptions())
      $(obj.currentTarget).data('bs.' + this.type, self)
    }

    if (obj instanceof $.Event) {
      self.inState[obj.type == 'focusout' ? 'focus' : 'hover'] = false
    }

    if (self.isInStateTrue()) return

    clearTimeout(self.timeout)

    self.hoverState = 'out'

    if (!self.options.delay || !self.options.delay.hide) return self.hide()

    self.timeout = setTimeout(function () {
      if (self.hoverState == 'out') self.hide()
    }, self.options.delay.hide)
  }

  Tooltip.prototype.show = function () {
    var e = $.Event('show.bs.' + this.type)

    if (this.hasContent() && this.enabled) {
      this.$element.trigger(e)

      var inDom = $.contains(this.$element[0].ownerDocument.documentElement, this.$element[0])
      if (e.isDefaultPrevented() || !inDom) return
      var that = this

      var $tip = this.tip()

      var tipId = this.getUID(this.type)

      this.setContent()
      $tip.attr('id', tipId)
      this.$element.attr('aria-describedby', tipId)

      if (this.options.animation) $tip.addClass('fade')

      var placement = typeof this.options.placement == 'function' ?
        this.options.placement.call(this, $tip[0], this.$element[0]) :
        this.options.placement

      var autoToken = /\s?auto?\s?/i
      var autoPlace = autoToken.test(placement)
      if (autoPlace) placement = placement.replace(autoToken, '') || 'top'

      $tip
        .detach()
        .css({ top: 0, left: 0, display: 'block' })
        .addClass(placement)
        .data('bs.' + this.type, this)

      this.options.container ? $tip.appendTo(this.options.container) : $tip.insertAfter(this.$element)
      this.$element.trigger('inserted.bs.' + this.type)

      var pos          = this.getPosition()
      var actualWidth  = $tip[0].offsetWidth
      var actualHeight = $tip[0].offsetHeight

      if (autoPlace) {
        var orgPlacement = placement
        var viewportDim = this.getPosition(this.$viewport)

        placement = placement == 'bottom' && pos.bottom + actualHeight > viewportDim.bottom ? 'top'    :
                    placement == 'top'    && pos.top    - actualHeight < viewportDim.top    ? 'bottom' :
                    placement == 'right'  && pos.right  + actualWidth  > viewportDim.width  ? 'left'   :
                    placement == 'left'   && pos.left   - actualWidth  < viewportDim.left   ? 'right'  :
                    placement

        $tip
          .removeClass(orgPlacement)
          .addClass(placement)
      }

      var calculatedOffset = this.getCalculatedOffset(placement, pos, actualWidth, actualHeight)

      this.applyPlacement(calculatedOffset, placement)

      var complete = function () {
        var prevHoverState = that.hoverState
        that.$element.trigger('shown.bs.' + that.type)
        that.hoverState = null

        if (prevHoverState == 'out') that.leave(that)
      }

      $.support.transition && this.$tip.hasClass('fade') ?
        $tip
          .one('bsTransitionEnd', complete)
          .emulateTransitionEnd(Tooltip.TRANSITION_DURATION) :
        complete()
    }
  }

  Tooltip.prototype.applyPlacement = function (offset, placement) {
    var $tip   = this.tip()
    var width  = $tip[0].offsetWidth
    var height = $tip[0].offsetHeight

    // manually read margins because getBoundingClientRect includes difference
    var marginTop = parseInt($tip.css('margin-top'), 10)
    var marginLeft = parseInt($tip.css('margin-left'), 10)

    // we must check for NaN for ie 8/9
    if (isNaN(marginTop))  marginTop  = 0
    if (isNaN(marginLeft)) marginLeft = 0

    offset.top  += marginTop
    offset.left += marginLeft

    // $.fn.offset doesn't round pixel values
    // so we use setOffset directly with our own function B-0
    $.offset.setOffset($tip[0], $.extend({
      using: function (props) {
        $tip.css({
          top: Math.round(props.top),
          left: Math.round(props.left)
        })
      }
    }, offset), 0)

    $tip.addClass('in')

    // check to see if placing tip in new offset caused the tip to resize itself
    var actualWidth  = $tip[0].offsetWidth
    var actualHeight = $tip[0].offsetHeight

    if (placement == 'top' && actualHeight != height) {
      offset.top = offset.top + height - actualHeight
    }

    var delta = this.getViewportAdjustedDelta(placement, offset, actualWidth, actualHeight)

    if (delta.left) offset.left += delta.left
    else offset.top += delta.top

    var isVertical          = /top|bottom/.test(placement)
    var arrowDelta          = isVertical ? delta.left * 2 - width + actualWidth : delta.top * 2 - height + actualHeight
    var arrowOffsetPosition = isVertical ? 'offsetWidth' : 'offsetHeight'

    $tip.offset(offset)
    this.replaceArrow(arrowDelta, $tip[0][arrowOffsetPosition], isVertical)
  }

  Tooltip.prototype.replaceArrow = function (delta, dimension, isVertical) {
    this.arrow()
      .css(isVertical ? 'left' : 'top', 50 * (1 - delta / dimension) + '%')
      .css(isVertical ? 'top' : 'left', '')
  }

  Tooltip.prototype.setContent = function () {
    var $tip  = this.tip()
    var title = this.getTitle()

    $tip.find('.tooltip-inner')[this.options.html ? 'html' : 'text'](title)
    $tip.removeClass('fade in top bottom left right')
  }

  Tooltip.prototype.hide = function (callback) {
    var that = this
    var $tip = $(this.$tip)
    var e    = $.Event('hide.bs.' + this.type)

    function complete() {
      if (that.hoverState != 'in') $tip.detach()
      if (that.$element) { // TODO: Check whether guarding this code with this `if` is really necessary.
        that.$element
          .removeAttr('aria-describedby')
          .trigger('hidden.bs.' + that.type)
      }
      callback && callback()
    }

    this.$element.trigger(e)

    if (e.isDefaultPrevented()) return

    $tip.removeClass('in')

    $.support.transition && $tip.hasClass('fade') ?
      $tip
        .one('bsTransitionEnd', complete)
        .emulateTransitionEnd(Tooltip.TRANSITION_DURATION) :
      complete()

    this.hoverState = null

    return this
  }

  Tooltip.prototype.fixTitle = function () {
    var $e = this.$element
    if ($e.attr('title') || typeof $e.attr('data-original-title') != 'string') {
      $e.attr('data-original-title', $e.attr('title') || '').attr('title', '')
    }
  }

  Tooltip.prototype.hasContent = function () {
    return this.getTitle()
  }

  Tooltip.prototype.getPosition = function ($element) {
    $element   = $element || this.$element

    var el     = $element[0]
    var isBody = el.tagName == 'BODY'

    var elRect    = el.getBoundingClientRect()
    if (elRect.width == null) {
      // width and height are missing in IE8, so compute them manually; see https://github.com/twbs/bootstrap/issues/14093
      elRect = $.extend({}, elRect, { width: elRect.right - elRect.left, height: elRect.bottom - elRect.top })
    }
    var isSvg = window.SVGElement && el instanceof window.SVGElement
    // Avoid using $.offset() on SVGs since it gives incorrect results in jQuery 3.
    // See https://github.com/twbs/bootstrap/issues/20280
    var elOffset  = isBody ? { top: 0, left: 0 } : (isSvg ? null : $element.offset())
    var scroll    = { scroll: isBody ? document.documentElement.scrollTop || document.body.scrollTop : $element.scrollTop() }
    var outerDims = isBody ? { width: $(window).width(), height: $(window).height() } : null

    return $.extend({}, elRect, scroll, outerDims, elOffset)
  }

  Tooltip.prototype.getCalculatedOffset = function (placement, pos, actualWidth, actualHeight) {
    return placement == 'bottom' ? { top: pos.top + pos.height,   left: pos.left + pos.width / 2 - actualWidth / 2 } :
           placement == 'top'    ? { top: pos.top - actualHeight, left: pos.left + pos.width / 2 - actualWidth / 2 } :
           placement == 'left'   ? { top: pos.top + pos.height / 2 - actualHeight / 2, left: pos.left - actualWidth } :
        /* placement == 'right' */ { top: pos.top + pos.height / 2 - actualHeight / 2, left: pos.left + pos.width }

  }

  Tooltip.prototype.getViewportAdjustedDelta = function (placement, pos, actualWidth, actualHeight) {
    var delta = { top: 0, left: 0 }
    if (!this.$viewport) return delta

    var viewportPadding = this.options.viewport && this.options.viewport.padding || 0
    var viewportDimensions = this.getPosition(this.$viewport)

    if (/right|left/.test(placement)) {
      var topEdgeOffset    = pos.top - viewportPadding - viewportDimensions.scroll
      var bottomEdgeOffset = pos.top + viewportPadding - viewportDimensions.scroll + actualHeight
      if (topEdgeOffset < viewportDimensions.top) { // top overflow
        delta.top = viewportDimensions.top - topEdgeOffset
      } else if (bottomEdgeOffset > viewportDimensions.top + viewportDimensions.height) { // bottom overflow
        delta.top = viewportDimensions.top + viewportDimensions.height - bottomEdgeOffset
      }
    } else {
      var leftEdgeOffset  = pos.left - viewportPadding
      var rightEdgeOffset = pos.left + viewportPadding + actualWidth
      if (leftEdgeOffset < viewportDimensions.left) { // left overflow
        delta.left = viewportDimensions.left - leftEdgeOffset
      } else if (rightEdgeOffset > viewportDimensions.right) { // right overflow
        delta.left = viewportDimensions.left + viewportDimensions.width - rightEdgeOffset
      }
    }

    return delta
  }

  Tooltip.prototype.getTitle = function () {
    var title
    var $e = this.$element
    var o  = this.options

    title = $e.attr('data-original-title')
      || (typeof o.title == 'function' ? o.title.call($e[0]) :  o.title)

    return title
  }

  Tooltip.prototype.getUID = function (prefix) {
    do prefix += ~~(Math.random() * 1000000)
    while (document.getElementById(prefix))
    return prefix
  }

  Tooltip.prototype.tip = function () {
    if (!this.$tip) {
      this.$tip = $(this.options.template)
      if (this.$tip.length != 1) {
        throw new Error(this.type + ' `template` option must consist of exactly 1 top-level element!')
      }
    }
    return this.$tip
  }

  Tooltip.prototype.arrow = function () {
    return (this.$arrow = this.$arrow || this.tip().find('.tooltip-arrow'))
  }

  Tooltip.prototype.enable = function () {
    this.enabled = true
  }

  Tooltip.prototype.disable = function () {
    this.enabled = false
  }

  Tooltip.prototype.toggleEnabled = function () {
    this.enabled = !this.enabled
  }

  Tooltip.prototype.toggle = function (e) {
    var self = this
    if (e) {
      self = $(e.currentTarget).data('bs.' + this.type)
      if (!self) {
        self = new this.constructor(e.currentTarget, this.getDelegateOptions())
        $(e.currentTarget).data('bs.' + this.type, self)
      }
    }

    if (e) {
      self.inState.click = !self.inState.click
      if (self.isInStateTrue()) self.enter(self)
      else self.leave(self)
    } else {
      self.tip().hasClass('in') ? self.leave(self) : self.enter(self)
    }
  }

  Tooltip.prototype.destroy = function () {
    var that = this
    clearTimeout(this.timeout)
    this.hide(function () {
      that.$element.off('.' + that.type).removeData('bs.' + that.type)
      if (that.$tip) {
        that.$tip.detach()
      }
      that.$tip = null
      that.$arrow = null
      that.$viewport = null
      that.$element = null
    })
  }


  // TOOLTIP PLUGIN DEFINITION
  // =========================

  function Plugin(option) {
    return this.each(function () {
      var $this   = $(this)
      var data    = $this.data('bs.tooltip')
      var options = typeof option == 'object' && option

      if (!data && /destroy|hide/.test(option)) return
      if (!data) $this.data('bs.tooltip', (data = new Tooltip(this, options)))
      if (typeof option == 'string') data[option]()
    })
  }

  var old = $.fn.tooltip

  $.fn.tooltip             = Plugin
  $.fn.tooltip.Constructor = Tooltip


  // TOOLTIP NO CONFLICT
  // ===================

  $.fn.tooltip.noConflict = function () {
    $.fn.tooltip = old
    return this
  }

}(jQuery);

/* ========================================================================
 * Bootstrap: popover.js v3.3.7
 * http://getbootstrap.com/javascript/#popovers
 * ========================================================================
 * Copyright 2011-2016 Twitter, Inc.
 * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)
 * ======================================================================== */


+function ($) {
  'use strict';

  // POPOVER PUBLIC CLASS DEFINITION
  // ===============================

  var Popover = function (element, options) {
    this.init('popover', element, options)
  }

  if (!$.fn.tooltip) throw new Error('Popover requires tooltip.js')

  Popover.VERSION  = '3.3.7'

  Popover.DEFAULTS = $.extend({}, $.fn.tooltip.Constructor.DEFAULTS, {
    placement: 'right',
    trigger: 'click',
    content: '',
    template: '<div class="popover" role="tooltip"><div class="arrow"></div><h3 class="popover-title"></h3><div class="popover-content"></div></div>'
  })


  // NOTE: POPOVER EXTENDS tooltip.js
  // ================================

  Popover.prototype = $.extend({}, $.fn.tooltip.Constructor.prototype)

  Popover.prototype.constructor = Popover

  Popover.prototype.getDefaults = function () {
    return Popover.DEFAULTS
  }

  Popover.prototype.setContent = function () {
    var $tip    = this.tip()
    var title   = this.getTitle()
    var content = this.getContent()

    $tip.find('.popover-title')[this.options.html ? 'html' : 'text'](title)
    $tip.find('.popover-content').children().detach().end()[ // we use append for html objects to maintain js events
      this.options.html ? (typeof content == 'string' ? 'html' : 'append') : 'text'
    ](content)

    $tip.removeClass('fade top bottom left right in')

    // IE8 doesn't accept hiding via the `:empty` pseudo selector, we have to do
    // this manually by checking the contents.
    if (!$tip.find('.popover-title').html()) $tip.find('.popover-title').hide()
  }

  Popover.prototype.hasContent = function () {
    return this.getTitle() || this.getContent()
  }

  Popover.prototype.getContent = function () {
    var $e = this.$element
    var o  = this.options

    return $e.attr('data-content')
      || (typeof o.content == 'function' ?
            o.content.call($e[0]) :
            o.content)
  }

  Popover.prototype.arrow = function () {
    return (this.$arrow = this.$arrow || this.tip().find('.arrow'))
  }


  // POPOVER PLUGIN DEFINITION
  // =========================

  function Plugin(option) {
    return this.each(function () {
      var $this   = $(this)
      var data    = $this.data('bs.popover')
      var options = typeof option == 'object' && option

      if (!data && /destroy|hide/.test(option)) return
      if (!data) $this.data('bs.popover', (data = new Popover(this, options)))
      if (typeof option == 'string') data[option]()
    })
  }

  var old = $.fn.popover

  $.fn.popover             = Plugin
  $.fn.popover.Constructor = Popover


  // POPOVER NO CONFLICT
  // ===================

  $.fn.popover.noConflict = function () {
    $.fn.popover = old
    return this
  }

}(jQuery);

/* ========================================================================
 * Bootstrap: scrollspy.js v3.3.7
 * http://getbootstrap.com/javascript/#scrollspy
 * ========================================================================
 * Copyright 2011-2016 Twitter, Inc.
 * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)
 * ======================================================================== */


+function ($) {
  'use strict';

  // SCROLLSPY CLASS DEFINITION
  // ==========================

  function ScrollSpy(element, options) {
    this.$body          = $(document.body)
    this.$scrollElement = $(element).is(document.body) ? $(window) : $(element)
    this.options        = $.extend({}, ScrollSpy.DEFAULTS, options)
    this.selector       = (this.options.target || '') + ' .nav li > a'
    this.offsets        = []
    this.targets        = []
    this.activeTarget   = null
    this.scrollHeight   = 0

    this.$scrollElement.on('scroll.bs.scrollspy', $.proxy(this.process, this))
    this.refresh()
    this.process()
  }

  ScrollSpy.VERSION  = '3.3.7'

  ScrollSpy.DEFAULTS = {
    offset: 10
  }

  ScrollSpy.prototype.getScrollHeight = function () {
    return this.$scrollElement[0].scrollHeight || Math.max(this.$body[0].scrollHeight, document.documentElement.scrollHeight)
  }

  ScrollSpy.prototype.refresh = function () {
    var that          = this
    var offsetMethod  = 'offset'
    var offsetBase    = 0

    this.offsets      = []
    this.targets      = []
    this.scrollHeight = this.getScrollHeight()

    if (!$.isWindow(this.$scrollElement[0])) {
      offsetMethod = 'position'
      offsetBase   = this.$scrollElement.scrollTop()
    }

    this.$body
      .find(this.selector)
      .map(function () {
        var $el   = $(this)
        var href  = $el.data('target') || $el.attr('href')
        var $href = /^#./.test(href) && $(href)

        return ($href
          && $href.length
          && $href.is(':visible')
          && [[$href[offsetMethod]().top + offsetBase, href]]) || null
      })
      .sort(function (a, b) { return a[0] - b[0] })
      .each(function () {
        that.offsets.push(this[0])
        that.targets.push(this[1])
      })
  }

  ScrollSpy.prototype.process = function () {
    var scrollTop    = this.$scrollElement.scrollTop() + this.options.offset
    var scrollHeight = this.getScrollHeight()
    var maxScroll    = this.options.offset + scrollHeight - this.$scrollElement.height()
    var offsets      = this.offsets
    var targets      = this.targets
    var activeTarget = this.activeTarget
    var i

    if (this.scrollHeight != scrollHeight) {
      this.refresh()
    }

    if (scrollTop >= maxScroll) {
      return activeTarget != (i = targets[targets.length - 1]) && this.activate(i)
    }

    if (activeTarget && scrollTop < offsets[0]) {
      this.activeTarget = null
      return this.clear()
    }

    for (i = offsets.length; i--;) {
      activeTarget != targets[i]
        && scrollTop >= offsets[i]
        && (offsets[i + 1] === undefined || scrollTop < offsets[i + 1])
        && this.activate(targets[i])
    }
  }

  ScrollSpy.prototype.activate = function (target) {
    this.activeTarget = target

    this.clear()

    var selector = this.selector +
      '[data-target="' + target + '"],' +
      this.selector + '[href="' + target + '"]'

    var active = $(selector)
      .parents('li')
      .addClass('active')

    if (active.parent('.dropdown-menu').length) {
      active = active
        .closest('li.dropdown')
        .addClass('active')
    }

    active.trigger('activate.bs.scrollspy')
  }

  ScrollSpy.prototype.clear = function () {
    $(this.selector)
      .parentsUntil(this.options.target, '.active')
      .removeClass('active')
  }


  // SCROLLSPY PLUGIN DEFINITION
  // ===========================

  function Plugin(option) {
    return this.each(function () {
      var $this   = $(this)
      var data    = $this.data('bs.scrollspy')
      var options = typeof option == 'object' && option

      if (!data) $this.data('bs.scrollspy', (data = new ScrollSpy(this, options)))
      if (typeof option == 'string') data[option]()
    })
  }

  var old = $.fn.scrollspy

  $.fn.scrollspy             = Plugin
  $.fn.scrollspy.Constructor = ScrollSpy


  // SCROLLSPY NO CONFLICT
  // =====================

  $.fn.scrollspy.noConflict = function () {
    $.fn.scrollspy = old
    return this
  }


  // SCROLLSPY DATA-API
  // ==================

  $(window).on('load.bs.scrollspy.data-api', function () {
    $('[data-spy="scroll"]').each(function () {
      var $spy = $(this)
      Plugin.call($spy, $spy.data())
    })
  })

}(jQuery);

/* ========================================================================
 * Bootstrap: tab.js v3.3.7
 * http://getbootstrap.com/javascript/#tabs
 * ========================================================================
 * Copyright 2011-2016 Twitter, Inc.
 * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)
 * ======================================================================== */


+function ($) {
  'use strict';

  // TAB CLASS DEFINITION
  // ====================

  var Tab = function (element) {
    // jscs:disable requireDollarBeforejQueryAssignment
    this.element = $(element)
    // jscs:enable requireDollarBeforejQueryAssignment
  }

  Tab.VERSION = '3.3.7'

  Tab.TRANSITION_DURATION = 150

  Tab.prototype.show = function () {
    var $this    = this.element
    var $ul      = $this.closest('ul:not(.dropdown-menu)')
    var selector = $this.data('target')

    if (!selector) {
      selector = $this.attr('href')
      selector = selector && selector.replace(/.*(?=#[^\s]*$)/, '') // strip for ie7
    }

    if ($this.parent('li').hasClass('active')) return

    var $previous = $ul.find('.active:last a')
    var hideEvent = $.Event('hide.bs.tab', {
      relatedTarget: $this[0]
    })
    var showEvent = $.Event('show.bs.tab', {
      relatedTarget: $previous[0]
    })

    $previous.trigger(hideEvent)
    $this.trigger(showEvent)

    if (showEvent.isDefaultPrevented() || hideEvent.isDefaultPrevented()) return

    var $target = $(selector)

    this.activate($this.closest('li'), $ul)
    this.activate($target, $target.parent(), function () {
      $previous.trigger({
        type: 'hidden.bs.tab',
        relatedTarget: $this[0]
      })
      $this.trigger({
        type: 'shown.bs.tab',
        relatedTarget: $previous[0]
      })
    })
  }

  Tab.prototype.activate = function (element, container, callback) {
    var $active    = container.find('> .active')
    var transition = callback
      && $.support.transition
      && ($active.length && $active.hasClass('fade') || !!container.find('> .fade').length)

    function next() {
      $active
        .removeClass('active')
        .find('> .dropdown-menu > .active')
          .removeClass('active')
        .end()
        .find('[data-toggle="tab"]')
          .attr('aria-expanded', false)

      element
        .addClass('active')
        .find('[data-toggle="tab"]')
          .attr('aria-expanded', true)

      if (transition) {
        element[0].offsetWidth // reflow for transition
        element.addClass('in')
      } else {
        element.removeClass('fade')
      }

      if (element.parent('.dropdown-menu').length) {
        element
          .closest('li.dropdown')
            .addClass('active')
          .end()
          .find('[data-toggle="tab"]')
            .attr('aria-expanded', true)
      }

      callback && callback()
    }

    $active.length && transition ?
      $active
        .one('bsTransitionEnd', next)
        .emulateTransitionEnd(Tab.TRANSITION_DURATION) :
      next()

    $active.removeClass('in')
  }


  // TAB PLUGIN DEFINITION
  // =====================

  function Plugin(option) {
    return this.each(function () {
      var $this = $(this)
      var data  = $this.data('bs.tab')

      if (!data) $this.data('bs.tab', (data = new Tab(this)))
      if (typeof option == 'string') data[option]()
    })
  }

  var old = $.fn.tab

  $.fn.tab             = Plugin
  $.fn.tab.Constructor = Tab


  // TAB NO CONFLICT
  // ===============

  $.fn.tab.noConflict = function () {
    $.fn.tab = old
    return this
  }


  // TAB DATA-API
  // ============

  var clickHandler = function (e) {
    e.preventDefault()
    Plugin.call($(this), 'show')
  }

  $(document)
    .on('click.bs.tab.data-api', '[data-toggle="tab"]', clickHandler)
    .on('click.bs.tab.data-api', '[data-toggle="pill"]', clickHandler)

}(jQuery);

/* ========================================================================
 * Bootstrap: affix.js v3.3.7
 * http://getbootstrap.com/javascript/#affix
 * ========================================================================
 * Copyright 2011-2016 Twitter, Inc.
 * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)
 * ======================================================================== */


+function ($) {
  'use strict';

  // AFFIX CLASS DEFINITION
  // ======================

  var Affix = function (element, options) {
    this.options = $.extend({}, Affix.DEFAULTS, options)

    this.$target = $(this.options.target)
      .on('scroll.bs.affix.data-api', $.proxy(this.checkPosition, this))
      .on('click.bs.affix.data-api',  $.proxy(this.checkPositionWithEventLoop, this))

    this.$element     = $(element)
    this.affixed      = null
    this.unpin        = null
    this.pinnedOffset = null

    this.checkPosition()
  }

  Affix.VERSION  = '3.3.7'

  Affix.RESET    = 'affix affix-top affix-bottom'

  Affix.DEFAULTS = {
    offset: 0,
    target: window
  }

  Affix.prototype.getState = function (scrollHeight, height, offsetTop, offsetBottom) {
    var scrollTop    = this.$target.scrollTop()
    var position     = this.$element.offset()
    var targetHeight = this.$target.height()

    if (offsetTop != null && this.affixed == 'top') return scrollTop < offsetTop ? 'top' : false

    if (this.affixed == 'bottom') {
      if (offsetTop != null) return (scrollTop + this.unpin <= position.top) ? false : 'bottom'
      return (scrollTop + targetHeight <= scrollHeight - offsetBottom) ? false : 'bottom'
    }

    var initializing   = this.affixed == null
    var colliderTop    = initializing ? scrollTop : position.top
    var colliderHeight = initializing ? targetHeight : height

    if (offsetTop != null && scrollTop <= offsetTop) return 'top'
    if (offsetBottom != null && (colliderTop + colliderHeight >= scrollHeight - offsetBottom)) return 'bottom'

    return false
  }

  Affix.prototype.getPinnedOffset = function () {
    if (this.pinnedOffset) return this.pinnedOffset
    this.$element.removeClass(Affix.RESET).addClass('affix')
    var scrollTop = this.$target.scrollTop()
    var position  = this.$element.offset()
    return (this.pinnedOffset = position.top - scrollTop)
  }

  Affix.prototype.checkPositionWithEventLoop = function () {
    setTimeout($.proxy(this.checkPosition, this), 1)
  }

  Affix.prototype.checkPosition = function () {
    if (!this.$element.is(':visible')) return

    var height       = this.$element.height()
    var offset       = this.options.offset
    var offsetTop    = offset.top
    var offsetBottom = offset.bottom
    var scrollHeight = Math.max($(document).height(), $(document.body).height())

    if (typeof offset != 'object')         offsetBottom = offsetTop = offset
    if (typeof offsetTop == 'function')    offsetTop    = offset.top(this.$element)
    if (typeof offsetBottom == 'function') offsetBottom = offset.bottom(this.$element)

    var affix = this.getState(scrollHeight, height, offsetTop, offsetBottom)

    if (this.affixed != affix) {
      if (this.unpin != null) this.$element.css('top', '')

      var affixType = 'affix' + (affix ? '-' + affix : '')
      var e         = $.Event(affixType + '.bs.affix')

      this.$element.trigger(e)

      if (e.isDefaultPrevented()) return

      this.affixed = affix
      this.unpin = affix == 'bottom' ? this.getPinnedOffset() : null

      this.$element
        .removeClass(Affix.RESET)
        .addClass(affixType)
        .trigger(affixType.replace('affix', 'affixed') + '.bs.affix')
    }

    if (affix == 'bottom') {
      this.$element.offset({
        top: scrollHeight - height - offsetBottom
      })
    }
  }


  // AFFIX PLUGIN DEFINITION
  // =======================

  function Plugin(option) {
    return this.each(function () {
      var $this   = $(this)
      var data    = $this.data('bs.affix')
      var options = typeof option == 'object' && option

      if (!data) $this.data('bs.affix', (data = new Affix(this, options)))
      if (typeof option == 'string') data[option]()
    })
  }

  var old = $.fn.affix

  $.fn.affix             = Plugin
  $.fn.affix.Constructor = Affix


  // AFFIX NO CONFLICT
  // =================

  $.fn.affix.noConflict = function () {
    $.fn.affix = old
    return this
  }


  // AFFIX DATA-API
  // ==============

  $(window).on('load', function () {
    $('[data-spy="affix"]').each(function () {
      var $spy = $(this)
      var data = $spy.data()

      data.offset = data.offset || {}

      if (data.offsetBottom != null) data.offset.bottom = data.offsetBottom
      if (data.offsetTop    != null) data.offset.top    = data.offsetTop

      Plugin.call($spy, data)
    })
  })

}(jQuery);


================================================================================
END: D:\QiEOS\apps\web\public\builtbyrays_public\builtbyrays.com\public\js\bootstrap.js
================================================================================


================================================================================
FILE: D:\QiEOS\apps\web\public\builtbyrays_public\builtbyrays.com\public\js\jquery.1.11.1.js
================================================================================

/*! jQuery v1.11.1 | (c) 2005, 2014 jQuery Foundation, Inc. | jquery.org/license */
!function(a,b){"object"==typeof module&&"object"==typeof module.exports?module.exports=a.document?b(a,!0):function(a){if(!a.document)throw new Error("jQuery requires a window with a document");return b(a)}:b(a)}("undefined"!=typeof window?window:this,function(a,b){var c=[],d=c.slice,e=c.concat,f=c.push,g=c.indexOf,h={},i=h.toString,j=h.hasOwnProperty,k={},l="1.11.1",m=function(a,b){return new m.fn.init(a,b)},n=/^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g,o=/^-ms-/,p=/-([\da-z])/gi,q=function(a,b){return b.toUpperCase()};m.fn=m.prototype={jquery:l,constructor:m,selector:"",length:0,toArray:function(){return d.call(this)},get:function(a){return null!=a?0>a?this[a+this.length]:this[a]:d.call(this)},pushStack:function(a){var b=m.merge(this.constructor(),a);return b.prevObject=this,b.context=this.context,b},each:function(a,b){return m.each(this,a,b)},map:function(a){return this.pushStack(m.map(this,function(b,c){return a.call(b,c,b)}))},slice:function(){return this.pushStack(d.apply(this,arguments))},first:function(){return this.eq(0)},last:function(){return this.eq(-1)},eq:function(a){var b=this.length,c=+a+(0>a?b:0);return this.pushStack(c>=0&&b>c?[this[c]]:[])},end:function(){return this.prevObject||this.constructor(null)},push:f,sort:c.sort,splice:c.splice},m.extend=m.fn.extend=function(){var a,b,c,d,e,f,g=arguments[0]||{},h=1,i=arguments.length,j=!1;for("boolean"==typeof g&&(j=g,g=arguments[h]||{},h++),"object"==typeof g||m.isFunction(g)||(g={}),h===i&&(g=this,h--);i>h;h++)if(null!=(e=arguments[h]))for(d in e)a=g[d],c=e[d],g!==c&&(j&&c&&(m.isPlainObject(c)||(b=m.isArray(c)))?(b?(b=!1,f=a&&m.isArray(a)?a:[]):f=a&&m.isPlainObject(a)?a:{},g[d]=m.extend(j,f,c)):void 0!==c&&(g[d]=c));return g},m.extend({expando:"jQuery"+(l+Math.random()).replace(/\D/g,""),isReady:!0,error:function(a){throw new Error(a)},noop:function(){},isFunction:function(a){return"function"===m.type(a)},isArray:Array.isArray||function(a){return"array"===m.type(a)},isWindow:function(a){return null!=a&&a==a.window},isNumeric:function(a){return!m.isArray(a)&&a-parseFloat(a)>=0},isEmptyObject:function(a){var b;for(b in a)return!1;return!0},isPlainObject:function(a){var b;if(!a||"object"!==m.type(a)||a.nodeType||m.isWindow(a))return!1;try{if(a.constructor&&!j.call(a,"constructor")&&!j.call(a.constructor.prototype,"isPrototypeOf"))return!1}catch(c){return!1}if(k.ownLast)for(b in a)return j.call(a,b);for(b in a);return void 0===b||j.call(a,b)},type:function(a){return null==a?a+"":"object"==typeof a||"function"==typeof a?h[i.call(a)]||"object":typeof a},globalEval:function(b){b&&m.trim(b)&&(a.execScript||function(b){a.eval.call(a,b)})(b)},camelCase:function(a){return a.replace(o,"ms-").replace(p,q)},nodeName:function(a,b){return a.nodeName&&a.nodeName.toLowerCase()===b.toLowerCase()},each:function(a,b,c){var d,e=0,f=a.length,g=r(a);if(c){if(g){for(;f>e;e++)if(d=b.apply(a[e],c),d===!1)break}else for(e in a)if(d=b.apply(a[e],c),d===!1)break}else if(g){for(;f>e;e++)if(d=b.call(a[e],e,a[e]),d===!1)break}else for(e in a)if(d=b.call(a[e],e,a[e]),d===!1)break;return a},trim:function(a){return null==a?"":(a+"").replace(n,"")},makeArray:function(a,b){var c=b||[];return null!=a&&(r(Object(a))?m.merge(c,"string"==typeof a?[a]:a):f.call(c,a)),c},inArray:function(a,b,c){var d;if(b){if(g)return g.call(b,a,c);for(d=b.length,c=c?0>c?Math.max(0,d+c):c:0;d>c;c++)if(c in b&&b[c]===a)return c}return-1},merge:function(a,b){var c=+b.length,d=0,e=a.length;while(c>d)a[e++]=b[d++];if(c!==c)while(void 0!==b[d])a[e++]=b[d++];return a.length=e,a},grep:function(a,b,c){for(var d,e=[],f=0,g=a.length,h=!c;g>f;f++)d=!b(a[f],f),d!==h&&e.push(a[f]);return e},map:function(a,b,c){var d,f=0,g=a.length,h=r(a),i=[];if(h)for(;g>f;f++)d=b(a[f],f,c),null!=d&&i.push(d);else for(f in a)d=b(a[f],f,c),null!=d&&i.push(d);return e.apply([],i)},guid:1,proxy:function(a,b){var c,e,f;return"string"==typeof b&&(f=a[b],b=a,a=f),m.isFunction(a)?(c=d.call(arguments,2),e=function(){return a.apply(b||this,c.concat(d.call(arguments)))},e.guid=a.guid=a.guid||m.guid++,e):void 0},now:function(){return+new Date},support:k}),m.each("Boolean Number String Function Array Date RegExp Object Error".split(" "),function(a,b){h["[object "+b+"]"]=b.toLowerCase()});function r(a){var b=a.length,c=m.type(a);return"function"===c||m.isWindow(a)?!1:1===a.nodeType&&b?!0:"array"===c||0===b||"number"==typeof b&&b>0&&b-1 in a}var s=function(a){var b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u="sizzle"+-new Date,v=a.document,w=0,x=0,y=gb(),z=gb(),A=gb(),B=function(a,b){return a===b&&(l=!0),0},C="undefined",D=1<<31,E={}.hasOwnProperty,F=[],G=F.pop,H=F.push,I=F.push,J=F.slice,K=F.indexOf||function(a){for(var b=0,c=this.length;c>b;b++)if(this[b]===a)return b;return-1},L="checked|selected|async|autofocus|autoplay|controls|defer|disabled|hidden|ismap|loop|multiple|open|readonly|required|scoped",M="[\\x20\\t\\r\\n\\f]",N="(?:\\\\.|[\\w-]|[^\\x00-\\xa0])+",O=N.replace("w","w#"),P="\\["+M+"*("+N+")(?:"+M+"*([*^$|!~]?=)"+M+"*(?:'((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\"|("+O+"))|)"+M+"*\\]",Q=":("+N+")(?:\\((('((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\")|((?:\\\\.|[^\\\\()[\\]]|"+P+")*)|.*)\\)|)",R=new RegExp("^"+M+"+|((?:^|[^\\\\])(?:\\\\.)*)"+M+"+$","g"),S=new RegExp("^"+M+"*,"+M+"*"),T=new RegExp("^"+M+"*([>+~]|"+M+")"+M+"*"),U=new RegExp("="+M+"*([^\\]'\"]*?)"+M+"*\\]","g"),V=new RegExp(Q),W=new RegExp("^"+O+"$"),X={ID:new RegExp("^#("+N+")"),CLASS:new RegExp("^\\.("+N+")"),TAG:new RegExp("^("+N.replace("w","w*")+")"),ATTR:new RegExp("^"+P),PSEUDO:new RegExp("^"+Q),CHILD:new RegExp("^:(only|first|last|nth|nth-last)-(child|of-type)(?:\\("+M+"*(even|odd|(([+-]|)(\\d*)n|)"+M+"*(?:([+-]|)"+M+"*(\\d+)|))"+M+"*\\)|)","i"),bool:new RegExp("^(?:"+L+")$","i"),needsContext:new RegExp("^"+M+"*[>+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\\("+M+"*((?:-\\d)?\\d*)"+M+"*\\)|)(?=[^-]|$)","i")},Y=/^(?:input|select|textarea|button)$/i,Z=/^h\d$/i,$=/^[^{]+\{\s*\[native \w/,_=/^(?:#([\w-]+)|(\w+)|\.([\w-]+))$/,ab=/[+~]/,bb=/'|\\/g,cb=new RegExp("\\\\([\\da-f]{1,6}"+M+"?|("+M+")|.)","ig"),db=function(a,b,c){var d="0x"+b-65536;return d!==d||c?b:0>d?String.fromCharCode(d+65536):String.fromCharCode(d>>10|55296,1023&d|56320)};try{I.apply(F=J.call(v.childNodes),v.childNodes),F[v.childNodes.length].nodeType}catch(eb){I={apply:F.length?function(a,b){H.apply(a,J.call(b))}:function(a,b){var c=a.length,d=0;while(a[c++]=b[d++]);a.length=c-1}}}function fb(a,b,d,e){var f,h,j,k,l,o,r,s,w,x;if((b?b.ownerDocument||b:v)!==n&&m(b),b=b||n,d=d||[],!a||"string"!=typeof a)return d;if(1!==(k=b.nodeType)&&9!==k)return[];if(p&&!e){if(f=_.exec(a))if(j=f[1]){if(9===k){if(h=b.getElementById(j),!h||!h.parentNode)return d;if(h.id===j)return d.push(h),d}else if(b.ownerDocument&&(h=b.ownerDocument.getElementById(j))&&t(b,h)&&h.id===j)return d.push(h),d}else{if(f[2])return I.apply(d,b.getElementsByTagName(a)),d;if((j=f[3])&&c.getElementsByClassName&&b.getElementsByClassName)return I.apply(d,b.getElementsByClassName(j)),d}if(c.qsa&&(!q||!q.test(a))){if(s=r=u,w=b,x=9===k&&a,1===k&&"object"!==b.nodeName.toLowerCase()){o=g(a),(r=b.getAttribute("id"))?s=r.replace(bb,"\\$&"):b.setAttribute("id",s),s="[id='"+s+"'] ",l=o.length;while(l--)o[l]=s+qb(o[l]);w=ab.test(a)&&ob(b.parentNode)||b,x=o.join(",")}if(x)try{return I.apply(d,w.querySelectorAll(x)),d}catch(y){}finally{r||b.removeAttribute("id")}}}return i(a.replace(R,"$1"),b,d,e)}function gb(){var a=[];function b(c,e){return a.push(c+" ")>d.cacheLength&&delete b[a.shift()],b[c+" "]=e}return b}function hb(a){return a[u]=!0,a}function ib(a){var b=n.createElement("div");try{return!!a(b)}catch(c){return!1}finally{b.parentNode&&b.parentNode.removeChild(b),b=null}}function jb(a,b){var c=a.split("|"),e=a.length;while(e--)d.attrHandle[c[e]]=b}function kb(a,b){var c=b&&a,d=c&&1===a.nodeType&&1===b.nodeType&&(~b.sourceIndex||D)-(~a.sourceIndex||D);if(d)return d;if(c)while(c=c.nextSibling)if(c===b)return-1;return a?1:-1}function lb(a){return function(b){var c=b.nodeName.toLowerCase();return"input"===c&&b.type===a}}function mb(a){return function(b){var c=b.nodeName.toLowerCase();return("input"===c||"button"===c)&&b.type===a}}function nb(a){return hb(function(b){return b=+b,hb(function(c,d){var e,f=a([],c.length,b),g=f.length;while(g--)c[e=f[g]]&&(c[e]=!(d[e]=c[e]))})})}function ob(a){return a&&typeof a.getElementsByTagName!==C&&a}c=fb.support={},f=fb.isXML=function(a){var b=a&&(a.ownerDocument||a).documentElement;return b?"HTML"!==b.nodeName:!1},m=fb.setDocument=function(a){var b,e=a?a.ownerDocument||a:v,g=e.defaultView;return e!==n&&9===e.nodeType&&e.documentElement?(n=e,o=e.documentElement,p=!f(e),g&&g!==g.top&&(g.addEventListener?g.addEventListener("unload",function(){m()},!1):g.attachEvent&&g.attachEvent("onunload",function(){m()})),c.attributes=ib(function(a){return a.className="i",!a.getAttribute("className")}),c.getElementsByTagName=ib(function(a){return a.appendChild(e.createComment("")),!a.getElementsByTagName("*").length}),c.getElementsByClassName=$.test(e.getElementsByClassName)&&ib(function(a){return a.innerHTML="<div class='a'></div><div class='a i'></div>",a.firstChild.className="i",2===a.getElementsByClassName("i").length}),c.getById=ib(function(a){return o.appendChild(a).id=u,!e.getElementsByName||!e.getElementsByName(u).length}),c.getById?(d.find.ID=function(a,b){if(typeof b.getElementById!==C&&p){var c=b.getElementById(a);return c&&c.parentNode?[c]:[]}},d.filter.ID=function(a){var b=a.replace(cb,db);return function(a){return a.getAttribute("id")===b}}):(delete d.find.ID,d.filter.ID=function(a){var b=a.replace(cb,db);return function(a){var c=typeof a.getAttributeNode!==C&&a.getAttributeNode("id");return c&&c.value===b}}),d.find.TAG=c.getElementsByTagName?function(a,b){return typeof b.getElementsByTagName!==C?b.getElementsByTagName(a):void 0}:function(a,b){var c,d=[],e=0,f=b.getElementsByTagName(a);if("*"===a){while(c=f[e++])1===c.nodeType&&d.push(c);return d}return f},d.find.CLASS=c.getElementsByClassName&&function(a,b){return typeof b.getElementsByClassName!==C&&p?b.getElementsByClassName(a):void 0},r=[],q=[],(c.qsa=$.test(e.querySelectorAll))&&(ib(function(a){a.innerHTML="<select msallowclip=''><option selected=''></option></select>",a.querySelectorAll("[msallowclip^='']").length&&q.push("[*^$]="+M+"*(?:''|\"\")"),a.querySelectorAll("[selected]").length||q.push("\\["+M+"*(?:value|"+L+")"),a.querySelectorAll(":checked").length||q.push(":checked")}),ib(function(a){var b=e.createElement("input");b.setAttribute("type","hidden"),a.appendChild(b).setAttribute("name","D"),a.querySelectorAll("[name=d]").length&&q.push("name"+M+"*[*^$|!~]?="),a.querySelectorAll(":enabled").length||q.push(":enabled",":disabled"),a.querySelectorAll("*,:x"),q.push(",.*:")})),(c.matchesSelector=$.test(s=o.matches||o.webkitMatchesSelector||o.mozMatchesSelector||o.oMatchesSelector||o.msMatchesSelector))&&ib(function(a){c.disconnectedMatch=s.call(a,"div"),s.call(a,"[s!='']:x"),r.push("!=",Q)}),q=q.length&&new RegExp(q.join("|")),r=r.length&&new RegExp(r.join("|")),b=$.test(o.compareDocumentPosition),t=b||$.test(o.contains)?function(a,b){var c=9===a.nodeType?a.documentElement:a,d=b&&b.parentNode;return a===d||!(!d||1!==d.nodeType||!(c.contains?c.contains(d):a.compareDocumentPosition&&16&a.compareDocumentPosition(d)))}:function(a,b){if(b)while(b=b.parentNode)if(b===a)return!0;return!1},B=b?function(a,b){if(a===b)return l=!0,0;var d=!a.compareDocumentPosition-!b.compareDocumentPosition;return d?d:(d=(a.ownerDocument||a)===(b.ownerDocument||b)?a.compareDocumentPosition(b):1,1&d||!c.sortDetached&&b.compareDocumentPosition(a)===d?a===e||a.ownerDocument===v&&t(v,a)?-1:b===e||b.ownerDocument===v&&t(v,b)?1:k?K.call(k,a)-K.call(k,b):0:4&d?-1:1)}:function(a,b){if(a===b)return l=!0,0;var c,d=0,f=a.parentNode,g=b.parentNode,h=[a],i=[b];if(!f||!g)return a===e?-1:b===e?1:f?-1:g?1:k?K.call(k,a)-K.call(k,b):0;if(f===g)return kb(a,b);c=a;while(c=c.parentNode)h.unshift(c);c=b;while(c=c.parentNode)i.unshift(c);while(h[d]===i[d])d++;return d?kb(h[d],i[d]):h[d]===v?-1:i[d]===v?1:0},e):n},fb.matches=function(a,b){return fb(a,null,null,b)},fb.matchesSelector=function(a,b){if((a.ownerDocument||a)!==n&&m(a),b=b.replace(U,"='$1']"),!(!c.matchesSelector||!p||r&&r.test(b)||q&&q.test(b)))try{var d=s.call(a,b);if(d||c.disconnectedMatch||a.document&&11!==a.document.nodeType)return d}catch(e){}return fb(b,n,null,[a]).length>0},fb.contains=function(a,b){return(a.ownerDocument||a)!==n&&m(a),t(a,b)},fb.attr=function(a,b){(a.ownerDocument||a)!==n&&m(a);var e=d.attrHandle[b.toLowerCase()],f=e&&E.call(d.attrHandle,b.toLowerCase())?e(a,b,!p):void 0;return void 0!==f?f:c.attributes||!p?a.getAttribute(b):(f=a.getAttributeNode(b))&&f.specified?f.value:null},fb.error=function(a){throw new Error("Syntax error, unrecognized expression: "+a)},fb.uniqueSort=function(a){var b,d=[],e=0,f=0;if(l=!c.detectDuplicates,k=!c.sortStable&&a.slice(0),a.sort(B),l){while(b=a[f++])b===a[f]&&(e=d.push(f));while(e--)a.splice(d[e],1)}return k=null,a},e=fb.getText=function(a){var b,c="",d=0,f=a.nodeType;if(f){if(1===f||9===f||11===f){if("string"==typeof a.textContent)return a.textContent;for(a=a.firstChild;a;a=a.nextSibling)c+=e(a)}else if(3===f||4===f)return a.nodeValue}else while(b=a[d++])c+=e(b);return c},d=fb.selectors={cacheLength:50,createPseudo:hb,match:X,attrHandle:{},find:{},relative:{">":{dir:"parentNode",first:!0}," ":{dir:"parentNode"},"+":{dir:"previousSibling",first:!0},"~":{dir:"previousSibling"}},preFilter:{ATTR:function(a){return a[1]=a[1].replace(cb,db),a[3]=(a[3]||a[4]||a[5]||"").replace(cb,db),"~="===a[2]&&(a[3]=" "+a[3]+" "),a.slice(0,4)},CHILD:function(a){return a[1]=a[1].toLowerCase(),"nth"===a[1].slice(0,3)?(a[3]||fb.error(a[0]),a[4]=+(a[4]?a[5]+(a[6]||1):2*("even"===a[3]||"odd"===a[3])),a[5]=+(a[7]+a[8]||"odd"===a[3])):a[3]&&fb.error(a[0]),a},PSEUDO:function(a){var b,c=!a[6]&&a[2];return X.CHILD.test(a[0])?null:(a[3]?a[2]=a[4]||a[5]||"":c&&V.test(c)&&(b=g(c,!0))&&(b=c.indexOf(")",c.length-b)-c.length)&&(a[0]=a[0].slice(0,b),a[2]=c.slice(0,b)),a.slice(0,3))}},filter:{TAG:function(a){var b=a.replace(cb,db).toLowerCase();return"*"===a?function(){return!0}:function(a){return a.nodeName&&a.nodeName.toLowerCase()===b}},CLASS:function(a){var b=y[a+" "];return b||(b=new RegExp("(^|"+M+")"+a+"("+M+"|$)"))&&y(a,function(a){return b.test("string"==typeof a.className&&a.className||typeof a.getAttribute!==C&&a.getAttribute("class")||"")})},ATTR:function(a,b,c){return function(d){var e=fb.attr(d,a);return null==e?"!="===b:b?(e+="","="===b?e===c:"!="===b?e!==c:"^="===b?c&&0===e.indexOf(c):"*="===b?c&&e.indexOf(c)>-1:"$="===b?c&&e.slice(-c.length)===c:"~="===b?(" "+e+" ").indexOf(c)>-1:"|="===b?e===c||e.slice(0,c.length+1)===c+"-":!1):!0}},CHILD:function(a,b,c,d,e){var f="nth"!==a.slice(0,3),g="last"!==a.slice(-4),h="of-type"===b;return 1===d&&0===e?function(a){return!!a.parentNode}:function(b,c,i){var j,k,l,m,n,o,p=f!==g?"nextSibling":"previousSibling",q=b.parentNode,r=h&&b.nodeName.toLowerCase(),s=!i&&!h;if(q){if(f){while(p){l=b;while(l=l[p])if(h?l.nodeName.toLowerCase()===r:1===l.nodeType)return!1;o=p="only"===a&&!o&&"nextSibling"}return!0}if(o=[g?q.firstChild:q.lastChild],g&&s){k=q[u]||(q[u]={}),j=k[a]||[],n=j[0]===w&&j[1],m=j[0]===w&&j[2],l=n&&q.childNodes[n];while(l=++n&&l&&l[p]||(m=n=0)||o.pop())if(1===l.nodeType&&++m&&l===b){k[a]=[w,n,m];break}}else if(s&&(j=(b[u]||(b[u]={}))[a])&&j[0]===w)m=j[1];else while(l=++n&&l&&l[p]||(m=n=0)||o.pop())if((h?l.nodeName.toLowerCase()===r:1===l.nodeType)&&++m&&(s&&((l[u]||(l[u]={}))[a]=[w,m]),l===b))break;return m-=e,m===d||m%d===0&&m/d>=0}}},PSEUDO:function(a,b){var c,e=d.pseudos[a]||d.setFilters[a.toLowerCase()]||fb.error("unsupported pseudo: "+a);return e[u]?e(b):e.length>1?(c=[a,a,"",b],d.setFilters.hasOwnProperty(a.toLowerCase())?hb(function(a,c){var d,f=e(a,b),g=f.length;while(g--)d=K.call(a,f[g]),a[d]=!(c[d]=f[g])}):function(a){return e(a,0,c)}):e}},pseudos:{not:hb(function(a){var b=[],c=[],d=h(a.replace(R,"$1"));return d[u]?hb(function(a,b,c,e){var f,g=d(a,null,e,[]),h=a.length;while(h--)(f=g[h])&&(a[h]=!(b[h]=f))}):function(a,e,f){return b[0]=a,d(b,null,f,c),!c.pop()}}),has:hb(function(a){return function(b){return fb(a,b).length>0}}),contains:hb(function(a){return function(b){return(b.textContent||b.innerText||e(b)).indexOf(a)>-1}}),lang:hb(function(a){return W.test(a||"")||fb.error("unsupported lang: "+a),a=a.replace(cb,db).toLowerCase(),function(b){var c;do if(c=p?b.lang:b.getAttribute("xml:lang")||b.getAttribute("lang"))return c=c.toLowerCase(),c===a||0===c.indexOf(a+"-");while((b=b.parentNode)&&1===b.nodeType);return!1}}),target:function(b){var c=a.location&&a.location.hash;return c&&c.slice(1)===b.id},root:function(a){return a===o},focus:function(a){return a===n.activeElement&&(!n.hasFocus||n.hasFocus())&&!!(a.type||a.href||~a.tabIndex)},enabled:function(a){return a.disabled===!1},disabled:function(a){return a.disabled===!0},checked:function(a){var b=a.nodeName.toLowerCase();return"input"===b&&!!a.checked||"option"===b&&!!a.selected},selected:function(a){return a.parentNode&&a.parentNode.selectedIndex,a.selected===!0},empty:function(a){for(a=a.firstChild;a;a=a.nextSibling)if(a.nodeType<6)return!1;return!0},parent:function(a){return!d.pseudos.empty(a)},header:function(a){return Z.test(a.nodeName)},input:function(a){return Y.test(a.nodeName)},button:function(a){var b=a.nodeName.toLowerCase();return"input"===b&&"button"===a.type||"button"===b},text:function(a){var b;return"input"===a.nodeName.toLowerCase()&&"text"===a.type&&(null==(b=a.getAttribute("type"))||"text"===b.toLowerCase())},first:nb(function(){return[0]}),last:nb(function(a,b){return[b-1]}),eq:nb(function(a,b,c){return[0>c?c+b:c]}),even:nb(function(a,b){for(var c=0;b>c;c+=2)a.push(c);return a}),odd:nb(function(a,b){for(var c=1;b>c;c+=2)a.push(c);return a}),lt:nb(function(a,b,c){for(var d=0>c?c+b:c;--d>=0;)a.push(d);return a}),gt:nb(function(a,b,c){for(var d=0>c?c+b:c;++d<b;)a.push(d);return a})}},d.pseudos.nth=d.pseudos.eq;for(b in{radio:!0,checkbox:!0,file:!0,password:!0,image:!0})d.pseudos[b]=lb(b);for(b in{submit:!0,reset:!0})d.pseudos[b]=mb(b);function pb(){}pb.prototype=d.filters=d.pseudos,d.setFilters=new pb,g=fb.tokenize=function(a,b){var c,e,f,g,h,i,j,k=z[a+" "];if(k)return b?0:k.slice(0);h=a,i=[],j=d.preFilter;while(h){(!c||(e=S.exec(h)))&&(e&&(h=h.slice(e[0].length)||h),i.push(f=[])),c=!1,(e=T.exec(h))&&(c=e.shift(),f.push({value:c,type:e[0].replace(R," ")}),h=h.slice(c.length));for(g in d.filter)!(e=X[g].exec(h))||j[g]&&!(e=j[g](e))||(c=e.shift(),f.push({value:c,type:g,matches:e}),h=h.slice(c.length));if(!c)break}return b?h.length:h?fb.error(a):z(a,i).slice(0)};function qb(a){for(var b=0,c=a.length,d="";c>b;b++)d+=a[b].value;return d}function rb(a,b,c){var d=b.dir,e=c&&"parentNode"===d,f=x++;return b.first?function(b,c,f){while(b=b[d])if(1===b.nodeType||e)return a(b,c,f)}:function(b,c,g){var h,i,j=[w,f];if(g){while(b=b[d])if((1===b.nodeType||e)&&a(b,c,g))return!0}else while(b=b[d])if(1===b.nodeType||e){if(i=b[u]||(b[u]={}),(h=i[d])&&h[0]===w&&h[1]===f)return j[2]=h[2];if(i[d]=j,j[2]=a(b,c,g))return!0}}}function sb(a){return a.length>1?function(b,c,d){var e=a.length;while(e--)if(!a[e](b,c,d))return!1;return!0}:a[0]}function tb(a,b,c){for(var d=0,e=b.length;e>d;d++)fb(a,b[d],c);return c}function ub(a,b,c,d,e){for(var f,g=[],h=0,i=a.length,j=null!=b;i>h;h++)(f=a[h])&&(!c||c(f,d,e))&&(g.push(f),j&&b.push(h));return g}function vb(a,b,c,d,e,f){return d&&!d[u]&&(d=vb(d)),e&&!e[u]&&(e=vb(e,f)),hb(function(f,g,h,i){var j,k,l,m=[],n=[],o=g.length,p=f||tb(b||"*",h.nodeType?[h]:h,[]),q=!a||!f&&b?p:ub(p,m,a,h,i),r=c?e||(f?a:o||d)?[]:g:q;if(c&&c(q,r,h,i),d){j=ub(r,n),d(j,[],h,i),k=j.length;while(k--)(l=j[k])&&(r[n[k]]=!(q[n[k]]=l))}if(f){if(e||a){if(e){j=[],k=r.length;while(k--)(l=r[k])&&j.push(q[k]=l);e(null,r=[],j,i)}k=r.length;while(k--)(l=r[k])&&(j=e?K.call(f,l):m[k])>-1&&(f[j]=!(g[j]=l))}}else r=ub(r===g?r.splice(o,r.length):r),e?e(null,g,r,i):I.apply(g,r)})}function wb(a){for(var b,c,e,f=a.length,g=d.relative[a[0].type],h=g||d.relative[" "],i=g?1:0,k=rb(function(a){return a===b},h,!0),l=rb(function(a){return K.call(b,a)>-1},h,!0),m=[function(a,c,d){return!g&&(d||c!==j)||((b=c).nodeType?k(a,c,d):l(a,c,d))}];f>i;i++)if(c=d.relative[a[i].type])m=[rb(sb(m),c)];else{if(c=d.filter[a[i].type].apply(null,a[i].matches),c[u]){for(e=++i;f>e;e++)if(d.relative[a[e].type])break;return vb(i>1&&sb(m),i>1&&qb(a.slice(0,i-1).concat({value:" "===a[i-2].type?"*":""})).replace(R,"$1"),c,e>i&&wb(a.slice(i,e)),f>e&&wb(a=a.slice(e)),f>e&&qb(a))}m.push(c)}return sb(m)}function xb(a,b){var c=b.length>0,e=a.length>0,f=function(f,g,h,i,k){var l,m,o,p=0,q="0",r=f&&[],s=[],t=j,u=f||e&&d.find.TAG("*",k),v=w+=null==t?1:Math.random()||.1,x=u.length;for(k&&(j=g!==n&&g);q!==x&&null!=(l=u[q]);q++){if(e&&l){m=0;while(o=a[m++])if(o(l,g,h)){i.push(l);break}k&&(w=v)}c&&((l=!o&&l)&&p--,f&&r.push(l))}if(p+=q,c&&q!==p){m=0;while(o=b[m++])o(r,s,g,h);if(f){if(p>0)while(q--)r[q]||s[q]||(s[q]=G.call(i));s=ub(s)}I.apply(i,s),k&&!f&&s.length>0&&p+b.length>1&&fb.uniqueSort(i)}return k&&(w=v,j=t),r};return c?hb(f):f}return h=fb.compile=function(a,b){var c,d=[],e=[],f=A[a+" "];if(!f){b||(b=g(a)),c=b.length;while(c--)f=wb(b[c]),f[u]?d.push(f):e.push(f);f=A(a,xb(e,d)),f.selector=a}return f},i=fb.select=function(a,b,e,f){var i,j,k,l,m,n="function"==typeof a&&a,o=!f&&g(a=n.selector||a);if(e=e||[],1===o.length){if(j=o[0]=o[0].slice(0),j.length>2&&"ID"===(k=j[0]).type&&c.getById&&9===b.nodeType&&p&&d.relative[j[1].type]){if(b=(d.find.ID(k.matches[0].replace(cb,db),b)||[])[0],!b)return e;n&&(b=b.parentNode),a=a.slice(j.shift().value.length)}i=X.needsContext.test(a)?0:j.length;while(i--){if(k=j[i],d.relative[l=k.type])break;if((m=d.find[l])&&(f=m(k.matches[0].replace(cb,db),ab.test(j[0].type)&&ob(b.parentNode)||b))){if(j.splice(i,1),a=f.length&&qb(j),!a)return I.apply(e,f),e;break}}}return(n||h(a,o))(f,b,!p,e,ab.test(a)&&ob(b.parentNode)||b),e},c.sortStable=u.split("").sort(B).join("")===u,c.detectDuplicates=!!l,m(),c.sortDetached=ib(function(a){return 1&a.compareDocumentPosition(n.createElement("div"))}),ib(function(a){return a.innerHTML="<a href='#'></a>","#"===a.firstChild.getAttribute("href")})||jb("type|href|height|width",function(a,b,c){return c?void 0:a.getAttribute(b,"type"===b.toLowerCase()?1:2)}),c.attributes&&ib(function(a){return a.innerHTML="<input/>",a.firstChild.setAttribute("value",""),""===a.firstChild.getAttribute("value")})||jb("value",function(a,b,c){return c||"input"!==a.nodeName.toLowerCase()?void 0:a.defaultValue}),ib(function(a){return null==a.getAttribute("disabled")})||jb(L,function(a,b,c){var d;return c?void 0:a[b]===!0?b.toLowerCase():(d=a.getAttributeNode(b))&&d.specified?d.value:null}),fb}(a);m.find=s,m.expr=s.selectors,m.expr[":"]=m.expr.pseudos,m.unique=s.uniqueSort,m.text=s.getText,m.isXMLDoc=s.isXML,m.contains=s.contains;var t=m.expr.match.needsContext,u=/^<(\w+)\s*\/?>(?:<\/\1>|)$/,v=/^.[^:#\[\.,]*$/;function w(a,b,c){if(m.isFunction(b))return m.grep(a,function(a,d){return!!b.call(a,d,a)!==c});if(b.nodeType)return m.grep(a,function(a){return a===b!==c});if("string"==typeof b){if(v.test(b))return m.filter(b,a,c);b=m.filter(b,a)}return m.grep(a,function(a){return m.inArray(a,b)>=0!==c})}m.filter=function(a,b,c){var d=b[0];return c&&(a=":not("+a+")"),1===b.length&&1===d.nodeType?m.find.matchesSelector(d,a)?[d]:[]:m.find.matches(a,m.grep(b,function(a){return 1===a.nodeType}))},m.fn.extend({find:function(a){var b,c=[],d=this,e=d.length;if("string"!=typeof a)return this.pushStack(m(a).filter(function(){for(b=0;e>b;b++)if(m.contains(d[b],this))return!0}));for(b=0;e>b;b++)m.find(a,d[b],c);return c=this.pushStack(e>1?m.unique(c):c),c.selector=this.selector?this.selector+" "+a:a,c},filter:function(a){return this.pushStack(w(this,a||[],!1))},not:function(a){return this.pushStack(w(this,a||[],!0))},is:function(a){return!!w(this,"string"==typeof a&&t.test(a)?m(a):a||[],!1).length}});var x,y=a.document,z=/^(?:\s*(<[\w\W]+>)[^>]*|#([\w-]*))$/,A=m.fn.init=function(a,b){var c,d;if(!a)return this;if("string"==typeof a){if(c="<"===a.charAt(0)&&">"===a.charAt(a.length-1)&&a.length>=3?[null,a,null]:z.exec(a),!c||!c[1]&&b)return!b||b.jquery?(b||x).find(a):this.constructor(b).find(a);if(c[1]){if(b=b instanceof m?b[0]:b,m.merge(this,m.parseHTML(c[1],b&&b.nodeType?b.ownerDocument||b:y,!0)),u.test(c[1])&&m.isPlainObject(b))for(c in b)m.isFunction(this[c])?this[c](b[c]):this.attr(c,b[c]);return this}if(d=y.getElementById(c[2]),d&&d.parentNode){if(d.id!==c[2])return x.find(a);this.length=1,this[0]=d}return this.context=y,this.selector=a,this}return a.nodeType?(this.context=this[0]=a,this.length=1,this):m.isFunction(a)?"undefined"!=typeof x.ready?x.ready(a):a(m):(void 0!==a.selector&&(this.selector=a.selector,this.context=a.context),m.makeArray(a,this))};A.prototype=m.fn,x=m(y);var B=/^(?:parents|prev(?:Until|All))/,C={children:!0,contents:!0,next:!0,prev:!0};m.extend({dir:function(a,b,c){var d=[],e=a[b];while(e&&9!==e.nodeType&&(void 0===c||1!==e.nodeType||!m(e).is(c)))1===e.nodeType&&d.push(e),e=e[b];return d},sibling:function(a,b){for(var c=[];a;a=a.nextSibling)1===a.nodeType&&a!==b&&c.push(a);return c}}),m.fn.extend({has:function(a){var b,c=m(a,this),d=c.length;return this.filter(function(){for(b=0;d>b;b++)if(m.contains(this,c[b]))return!0})},closest:function(a,b){for(var c,d=0,e=this.length,f=[],g=t.test(a)||"string"!=typeof a?m(a,b||this.context):0;e>d;d++)for(c=this[d];c&&c!==b;c=c.parentNode)if(c.nodeType<11&&(g?g.index(c)>-1:1===c.nodeType&&m.find.matchesSelector(c,a))){f.push(c);break}return this.pushStack(f.length>1?m.unique(f):f)},index:function(a){return a?"string"==typeof a?m.inArray(this[0],m(a)):m.inArray(a.jquery?a[0]:a,this):this[0]&&this[0].parentNode?this.first().prevAll().length:-1},add:function(a,b){return this.pushStack(m.unique(m.merge(this.get(),m(a,b))))},addBack:function(a){return this.add(null==a?this.prevObject:this.prevObject.filter(a))}});function D(a,b){do a=a[b];while(a&&1!==a.nodeType);return a}m.each({parent:function(a){var b=a.parentNode;return b&&11!==b.nodeType?b:null},parents:function(a){return m.dir(a,"parentNode")},parentsUntil:function(a,b,c){return m.dir(a,"parentNode",c)},next:function(a){return D(a,"nextSibling")},prev:function(a){return D(a,"previousSibling")},nextAll:function(a){return m.dir(a,"nextSibling")},prevAll:function(a){return m.dir(a,"previousSibling")},nextUntil:function(a,b,c){return m.dir(a,"nextSibling",c)},prevUntil:function(a,b,c){return m.dir(a,"previousSibling",c)},siblings:function(a){return m.sibling((a.parentNode||{}).firstChild,a)},children:function(a){return m.sibling(a.firstChild)},contents:function(a){return m.nodeName(a,"iframe")?a.contentDocument||a.contentWindow.document:m.merge([],a.childNodes)}},function(a,b){m.fn[a]=function(c,d){var e=m.map(this,b,c);return"Until"!==a.slice(-5)&&(d=c),d&&"string"==typeof d&&(e=m.filter(d,e)),this.length>1&&(C[a]||(e=m.unique(e)),B.test(a)&&(e=e.reverse())),this.pushStack(e)}});var E=/\S+/g,F={};function G(a){var b=F[a]={};return m.each(a.match(E)||[],function(a,c){b[c]=!0}),b}m.Callbacks=function(a){a="string"==typeof a?F[a]||G(a):m.extend({},a);var b,c,d,e,f,g,h=[],i=!a.once&&[],j=function(l){for(c=a.memory&&l,d=!0,f=g||0,g=0,e=h.length,b=!0;h&&e>f;f++)if(h[f].apply(l[0],l[1])===!1&&a.stopOnFalse){c=!1;break}b=!1,h&&(i?i.length&&j(i.shift()):c?h=[]:k.disable())},k={add:function(){if(h){var d=h.length;!function f(b){m.each(b,function(b,c){var d=m.type(c);"function"===d?a.unique&&k.has(c)||h.push(c):c&&c.length&&"string"!==d&&f(c)})}(arguments),b?e=h.length:c&&(g=d,j(c))}return this},remove:function(){return h&&m.each(arguments,function(a,c){var d;while((d=m.inArray(c,h,d))>-1)h.splice(d,1),b&&(e>=d&&e--,f>=d&&f--)}),this},has:function(a){return a?m.inArray(a,h)>-1:!(!h||!h.length)},empty:function(){return h=[],e=0,this},disable:function(){return h=i=c=void 0,this},disabled:function(){return!h},lock:function(){return i=void 0,c||k.disable(),this},locked:function(){return!i},fireWith:function(a,c){return!h||d&&!i||(c=c||[],c=[a,c.slice?c.slice():c],b?i.push(c):j(c)),this},fire:function(){return k.fireWith(this,arguments),this},fired:function(){return!!d}};return k},m.extend({Deferred:function(a){var b=[["resolve","done",m.Callbacks("once memory"),"resolved"],["reject","fail",m.Callbacks("once memory"),"rejected"],["notify","progress",m.Callbacks("memory")]],c="pending",d={state:function(){return c},always:function(){return e.done(arguments).fail(arguments),this},then:function(){var a=arguments;return m.Deferred(function(c){m.each(b,function(b,f){var g=m.isFunction(a[b])&&a[b];e[f[1]](function(){var a=g&&g.apply(this,arguments);a&&m.isFunction(a.promise)?a.promise().done(c.resolve).fail(c.reject).progress(c.notify):c[f[0]+"With"](this===d?c.promise():this,g?[a]:arguments)})}),a=null}).promise()},promise:function(a){return null!=a?m.extend(a,d):d}},e={};return d.pipe=d.then,m.each(b,function(a,f){var g=f[2],h=f[3];d[f[1]]=g.add,h&&g.add(function(){c=h},b[1^a][2].disable,b[2][2].lock),e[f[0]]=function(){return e[f[0]+"With"](this===e?d:this,arguments),this},e[f[0]+"With"]=g.fireWith}),d.promise(e),a&&a.call(e,e),e},when:function(a){var b=0,c=d.call(arguments),e=c.length,f=1!==e||a&&m.isFunction(a.promise)?e:0,g=1===f?a:m.Deferred(),h=function(a,b,c){return function(e){b[a]=this,c[a]=arguments.length>1?d.call(arguments):e,c===i?g.notifyWith(b,c):--f||g.resolveWith(b,c)}},i,j,k;if(e>1)for(i=new Array(e),j=new Array(e),k=new Array(e);e>b;b++)c[b]&&m.isFunction(c[b].promise)?c[b].promise().done(h(b,k,c)).fail(g.reject).progress(h(b,j,i)):--f;return f||g.resolveWith(k,c),g.promise()}});var H;m.fn.ready=function(a){return m.ready.promise().done(a),this},m.extend({isReady:!1,readyWait:1,holdReady:function(a){a?m.readyWait++:m.ready(!0)},ready:function(a){if(a===!0?!--m.readyWait:!m.isReady){if(!y.body)return setTimeout(m.ready);m.isReady=!0,a!==!0&&--m.readyWait>0||(H.resolveWith(y,[m]),m.fn.triggerHandler&&(m(y).triggerHandler("ready"),m(y).off("ready")))}}});function I(){y.addEventListener?(y.removeEventListener("DOMContentLoaded",J,!1),a.removeEventListener("load",J,!1)):(y.detachEvent("onreadystatechange",J),a.detachEvent("onload",J))}function J(){(y.addEventListener||"load"===event.type||"complete"===y.readyState)&&(I(),m.ready())}m.ready.promise=function(b){if(!H)if(H=m.Deferred(),"complete"===y.readyState)setTimeout(m.ready);else if(y.addEventListener)y.addEventListener("DOMContentLoaded",J,!1),a.addEventListener("load",J,!1);else{y.attachEvent("onreadystatechange",J),a.attachEvent("onload",J);var c=!1;try{c=null==a.frameElement&&y.documentElement}catch(d){}c&&c.doScroll&&!function e(){if(!m.isReady){try{c.doScroll("left")}catch(a){return setTimeout(e,50)}I(),m.ready()}}()}return H.promise(b)};var K="undefined",L;for(L in m(k))break;k.ownLast="0"!==L,k.inlineBlockNeedsLayout=!1,m(function(){var a,b,c,d;c=y.getElementsByTagName("body")[0],c&&c.style&&(b=y.createElement("div"),d=y.createElement("div"),d.style.cssText="position:absolute;border:0;width:0;height:0;top:0;left:-9999px",c.appendChild(d).appendChild(b),typeof b.style.zoom!==K&&(b.style.cssText="display:inline;margin:0;border:0;padding:1px;width:1px;zoom:1",k.inlineBlockNeedsLayout=a=3===b.offsetWidth,a&&(c.style.zoom=1)),c.removeChild(d))}),function(){var a=y.createElement("div");if(null==k.deleteExpando){k.deleteExpando=!0;try{delete a.test}catch(b){k.deleteExpando=!1}}a=null}(),m.acceptData=function(a){var b=m.noData[(a.nodeName+" ").toLowerCase()],c=+a.nodeType||1;return 1!==c&&9!==c?!1:!b||b!==!0&&a.getAttribute("classid")===b};var M=/^(?:\{[\w\W]*\}|\[[\w\W]*\])$/,N=/([A-Z])/g;function O(a,b,c){if(void 0===c&&1===a.nodeType){var d="data-"+b.replace(N,"-$1").toLowerCase();if(c=a.getAttribute(d),"string"==typeof c){try{c="true"===c?!0:"false"===c?!1:"null"===c?null:+c+""===c?+c:M.test(c)?m.parseJSON(c):c}catch(e){}m.data(a,b,c)}else c=void 0}return c}function P(a){var b;for(b in a)if(("data"!==b||!m.isEmptyObject(a[b]))&&"toJSON"!==b)return!1;return!0}function Q(a,b,d,e){if(m.acceptData(a)){var f,g,h=m.expando,i=a.nodeType,j=i?m.cache:a,k=i?a[h]:a[h]&&h;
if(k&&j[k]&&(e||j[k].data)||void 0!==d||"string"!=typeof b)return k||(k=i?a[h]=c.pop()||m.guid++:h),j[k]||(j[k]=i?{}:{toJSON:m.noop}),("object"==typeof b||"function"==typeof b)&&(e?j[k]=m.extend(j[k],b):j[k].data=m.extend(j[k].data,b)),g=j[k],e||(g.data||(g.data={}),g=g.data),void 0!==d&&(g[m.camelCase(b)]=d),"string"==typeof b?(f=g[b],null==f&&(f=g[m.camelCase(b)])):f=g,f}}function R(a,b,c){if(m.acceptData(a)){var d,e,f=a.nodeType,g=f?m.cache:a,h=f?a[m.expando]:m.expando;if(g[h]){if(b&&(d=c?g[h]:g[h].data)){m.isArray(b)?b=b.concat(m.map(b,m.camelCase)):b in d?b=[b]:(b=m.camelCase(b),b=b in d?[b]:b.split(" ")),e=b.length;while(e--)delete d[b[e]];if(c?!P(d):!m.isEmptyObject(d))return}(c||(delete g[h].data,P(g[h])))&&(f?m.cleanData([a],!0):k.deleteExpando||g!=g.window?delete g[h]:g[h]=null)}}}m.extend({cache:{},noData:{"applet ":!0,"embed ":!0,"object ":"clsid:D27CDB6E-AE6D-11cf-96B8-444553540000"},hasData:function(a){return a=a.nodeType?m.cache[a[m.expando]]:a[m.expando],!!a&&!P(a)},data:function(a,b,c){return Q(a,b,c)},removeData:function(a,b){return R(a,b)},_data:function(a,b,c){return Q(a,b,c,!0)},_removeData:function(a,b){return R(a,b,!0)}}),m.fn.extend({data:function(a,b){var c,d,e,f=this[0],g=f&&f.attributes;if(void 0===a){if(this.length&&(e=m.data(f),1===f.nodeType&&!m._data(f,"parsedAttrs"))){c=g.length;while(c--)g[c]&&(d=g[c].name,0===d.indexOf("data-")&&(d=m.camelCase(d.slice(5)),O(f,d,e[d])));m._data(f,"parsedAttrs",!0)}return e}return"object"==typeof a?this.each(function(){m.data(this,a)}):arguments.length>1?this.each(function(){m.data(this,a,b)}):f?O(f,a,m.data(f,a)):void 0},removeData:function(a){return this.each(function(){m.removeData(this,a)})}}),m.extend({queue:function(a,b,c){var d;return a?(b=(b||"fx")+"queue",d=m._data(a,b),c&&(!d||m.isArray(c)?d=m._data(a,b,m.makeArray(c)):d.push(c)),d||[]):void 0},dequeue:function(a,b){b=b||"fx";var c=m.queue(a,b),d=c.length,e=c.shift(),f=m._queueHooks(a,b),g=function(){m.dequeue(a,b)};"inprogress"===e&&(e=c.shift(),d--),e&&("fx"===b&&c.unshift("inprogress"),delete f.stop,e.call(a,g,f)),!d&&f&&f.empty.fire()},_queueHooks:function(a,b){var c=b+"queueHooks";return m._data(a,c)||m._data(a,c,{empty:m.Callbacks("once memory").add(function(){m._removeData(a,b+"queue"),m._removeData(a,c)})})}}),m.fn.extend({queue:function(a,b){var c=2;return"string"!=typeof a&&(b=a,a="fx",c--),arguments.length<c?m.queue(this[0],a):void 0===b?this:this.each(function(){var c=m.queue(this,a,b);m._queueHooks(this,a),"fx"===a&&"inprogress"!==c[0]&&m.dequeue(this,a)})},dequeue:function(a){return this.each(function(){m.dequeue(this,a)})},clearQueue:function(a){return this.queue(a||"fx",[])},promise:function(a,b){var c,d=1,e=m.Deferred(),f=this,g=this.length,h=function(){--d||e.resolveWith(f,[f])};"string"!=typeof a&&(b=a,a=void 0),a=a||"fx";while(g--)c=m._data(f[g],a+"queueHooks"),c&&c.empty&&(d++,c.empty.add(h));return h(),e.promise(b)}});var S=/[+-]?(?:\d*\.|)\d+(?:[eE][+-]?\d+|)/.source,T=["Top","Right","Bottom","Left"],U=function(a,b){return a=b||a,"none"===m.css(a,"display")||!m.contains(a.ownerDocument,a)},V=m.access=function(a,b,c,d,e,f,g){var h=0,i=a.length,j=null==c;if("object"===m.type(c)){e=!0;for(h in c)m.access(a,b,h,c[h],!0,f,g)}else if(void 0!==d&&(e=!0,m.isFunction(d)||(g=!0),j&&(g?(b.call(a,d),b=null):(j=b,b=function(a,b,c){return j.call(m(a),c)})),b))for(;i>h;h++)b(a[h],c,g?d:d.call(a[h],h,b(a[h],c)));return e?a:j?b.call(a):i?b(a[0],c):f},W=/^(?:checkbox|radio)$/i;!function(){var a=y.createElement("input"),b=y.createElement("div"),c=y.createDocumentFragment();if(b.innerHTML="  <link/><table></table><a href='/a'>a</a><input type='checkbox'/>",k.leadingWhitespace=3===b.firstChild.nodeType,k.tbody=!b.getElementsByTagName("tbody").length,k.htmlSerialize=!!b.getElementsByTagName("link").length,k.html5Clone="<:nav></:nav>"!==y.createElement("nav").cloneNode(!0).outerHTML,a.type="checkbox",a.checked=!0,c.appendChild(a),k.appendChecked=a.checked,b.innerHTML="<textarea>x</textarea>",k.noCloneChecked=!!b.cloneNode(!0).lastChild.defaultValue,c.appendChild(b),b.innerHTML="<input type='radio' checked='checked' name='t'/>",k.checkClone=b.cloneNode(!0).cloneNode(!0).lastChild.checked,k.noCloneEvent=!0,b.attachEvent&&(b.attachEvent("onclick",function(){k.noCloneEvent=!1}),b.cloneNode(!0).click()),null==k.deleteExpando){k.deleteExpando=!0;try{delete b.test}catch(d){k.deleteExpando=!1}}}(),function(){var b,c,d=y.createElement("div");for(b in{submit:!0,change:!0,focusin:!0})c="on"+b,(k[b+"Bubbles"]=c in a)||(d.setAttribute(c,"t"),k[b+"Bubbles"]=d.attributes[c].expando===!1);d=null}();var X=/^(?:input|select|textarea)$/i,Y=/^key/,Z=/^(?:mouse|pointer|contextmenu)|click/,$=/^(?:focusinfocus|focusoutblur)$/,_=/^([^.]*)(?:\.(.+)|)$/;function ab(){return!0}function bb(){return!1}function cb(){try{return y.activeElement}catch(a){}}m.event={global:{},add:function(a,b,c,d,e){var f,g,h,i,j,k,l,n,o,p,q,r=m._data(a);if(r){c.handler&&(i=c,c=i.handler,e=i.selector),c.guid||(c.guid=m.guid++),(g=r.events)||(g=r.events={}),(k=r.handle)||(k=r.handle=function(a){return typeof m===K||a&&m.event.triggered===a.type?void 0:m.event.dispatch.apply(k.elem,arguments)},k.elem=a),b=(b||"").match(E)||[""],h=b.length;while(h--)f=_.exec(b[h])||[],o=q=f[1],p=(f[2]||"").split(".").sort(),o&&(j=m.event.special[o]||{},o=(e?j.delegateType:j.bindType)||o,j=m.event.special[o]||{},l=m.extend({type:o,origType:q,data:d,handler:c,guid:c.guid,selector:e,needsContext:e&&m.expr.match.needsContext.test(e),namespace:p.join(".")},i),(n=g[o])||(n=g[o]=[],n.delegateCount=0,j.setup&&j.setup.call(a,d,p,k)!==!1||(a.addEventListener?a.addEventListener(o,k,!1):a.attachEvent&&a.attachEvent("on"+o,k))),j.add&&(j.add.call(a,l),l.handler.guid||(l.handler.guid=c.guid)),e?n.splice(n.delegateCount++,0,l):n.push(l),m.event.global[o]=!0);a=null}},remove:function(a,b,c,d,e){var f,g,h,i,j,k,l,n,o,p,q,r=m.hasData(a)&&m._data(a);if(r&&(k=r.events)){b=(b||"").match(E)||[""],j=b.length;while(j--)if(h=_.exec(b[j])||[],o=q=h[1],p=(h[2]||"").split(".").sort(),o){l=m.event.special[o]||{},o=(d?l.delegateType:l.bindType)||o,n=k[o]||[],h=h[2]&&new RegExp("(^|\\.)"+p.join("\\.(?:.*\\.|)")+"(\\.|$)"),i=f=n.length;while(f--)g=n[f],!e&&q!==g.origType||c&&c.guid!==g.guid||h&&!h.test(g.namespace)||d&&d!==g.selector&&("**"!==d||!g.selector)||(n.splice(f,1),g.selector&&n.delegateCount--,l.remove&&l.remove.call(a,g));i&&!n.length&&(l.teardown&&l.teardown.call(a,p,r.handle)!==!1||m.removeEvent(a,o,r.handle),delete k[o])}else for(o in k)m.event.remove(a,o+b[j],c,d,!0);m.isEmptyObject(k)&&(delete r.handle,m._removeData(a,"events"))}},trigger:function(b,c,d,e){var f,g,h,i,k,l,n,o=[d||y],p=j.call(b,"type")?b.type:b,q=j.call(b,"namespace")?b.namespace.split("."):[];if(h=l=d=d||y,3!==d.nodeType&&8!==d.nodeType&&!$.test(p+m.event.triggered)&&(p.indexOf(".")>=0&&(q=p.split("."),p=q.shift(),q.sort()),g=p.indexOf(":")<0&&"on"+p,b=b[m.expando]?b:new m.Event(p,"object"==typeof b&&b),b.isTrigger=e?2:3,b.namespace=q.join("."),b.namespace_re=b.namespace?new RegExp("(^|\\.)"+q.join("\\.(?:.*\\.|)")+"(\\.|$)"):null,b.result=void 0,b.target||(b.target=d),c=null==c?[b]:m.makeArray(c,[b]),k=m.event.special[p]||{},e||!k.trigger||k.trigger.apply(d,c)!==!1)){if(!e&&!k.noBubble&&!m.isWindow(d)){for(i=k.delegateType||p,$.test(i+p)||(h=h.parentNode);h;h=h.parentNode)o.push(h),l=h;l===(d.ownerDocument||y)&&o.push(l.defaultView||l.parentWindow||a)}n=0;while((h=o[n++])&&!b.isPropagationStopped())b.type=n>1?i:k.bindType||p,f=(m._data(h,"events")||{})[b.type]&&m._data(h,"handle"),f&&f.apply(h,c),f=g&&h[g],f&&f.apply&&m.acceptData(h)&&(b.result=f.apply(h,c),b.result===!1&&b.preventDefault());if(b.type=p,!e&&!b.isDefaultPrevented()&&(!k._default||k._default.apply(o.pop(),c)===!1)&&m.acceptData(d)&&g&&d[p]&&!m.isWindow(d)){l=d[g],l&&(d[g]=null),m.event.triggered=p;try{d[p]()}catch(r){}m.event.triggered=void 0,l&&(d[g]=l)}return b.result}},dispatch:function(a){a=m.event.fix(a);var b,c,e,f,g,h=[],i=d.call(arguments),j=(m._data(this,"events")||{})[a.type]||[],k=m.event.special[a.type]||{};if(i[0]=a,a.delegateTarget=this,!k.preDispatch||k.preDispatch.call(this,a)!==!1){h=m.event.handlers.call(this,a,j),b=0;while((f=h[b++])&&!a.isPropagationStopped()){a.currentTarget=f.elem,g=0;while((e=f.handlers[g++])&&!a.isImmediatePropagationStopped())(!a.namespace_re||a.namespace_re.test(e.namespace))&&(a.handleObj=e,a.data=e.data,c=((m.event.special[e.origType]||{}).handle||e.handler).apply(f.elem,i),void 0!==c&&(a.result=c)===!1&&(a.preventDefault(),a.stopPropagation()))}return k.postDispatch&&k.postDispatch.call(this,a),a.result}},handlers:function(a,b){var c,d,e,f,g=[],h=b.delegateCount,i=a.target;if(h&&i.nodeType&&(!a.button||"click"!==a.type))for(;i!=this;i=i.parentNode||this)if(1===i.nodeType&&(i.disabled!==!0||"click"!==a.type)){for(e=[],f=0;h>f;f++)d=b[f],c=d.selector+" ",void 0===e[c]&&(e[c]=d.needsContext?m(c,this).index(i)>=0:m.find(c,this,null,[i]).length),e[c]&&e.push(d);e.length&&g.push({elem:i,handlers:e})}return h<b.length&&g.push({elem:this,handlers:b.slice(h)}),g},fix:function(a){if(a[m.expando])return a;var b,c,d,e=a.type,f=a,g=this.fixHooks[e];g||(this.fixHooks[e]=g=Z.test(e)?this.mouseHooks:Y.test(e)?this.keyHooks:{}),d=g.props?this.props.concat(g.props):this.props,a=new m.Event(f),b=d.length;while(b--)c=d[b],a[c]=f[c];return a.target||(a.target=f.srcElement||y),3===a.target.nodeType&&(a.target=a.target.parentNode),a.metaKey=!!a.metaKey,g.filter?g.filter(a,f):a},props:"altKey bubbles cancelable ctrlKey currentTarget eventPhase metaKey relatedTarget shiftKey target timeStamp view which".split(" "),fixHooks:{},keyHooks:{props:"char charCode key keyCode".split(" "),filter:function(a,b){return null==a.which&&(a.which=null!=b.charCode?b.charCode:b.keyCode),a}},mouseHooks:{props:"button buttons clientX clientY fromElement offsetX offsetY pageX pageY screenX screenY toElement".split(" "),filter:function(a,b){var c,d,e,f=b.button,g=b.fromElement;return null==a.pageX&&null!=b.clientX&&(d=a.target.ownerDocument||y,e=d.documentElement,c=d.body,a.pageX=b.clientX+(e&&e.scrollLeft||c&&c.scrollLeft||0)-(e&&e.clientLeft||c&&c.clientLeft||0),a.pageY=b.clientY+(e&&e.scrollTop||c&&c.scrollTop||0)-(e&&e.clientTop||c&&c.clientTop||0)),!a.relatedTarget&&g&&(a.relatedTarget=g===a.target?b.toElement:g),a.which||void 0===f||(a.which=1&f?1:2&f?3:4&f?2:0),a}},special:{load:{noBubble:!0},focus:{trigger:function(){if(this!==cb()&&this.focus)try{return this.focus(),!1}catch(a){}},delegateType:"focusin"},blur:{trigger:function(){return this===cb()&&this.blur?(this.blur(),!1):void 0},delegateType:"focusout"},click:{trigger:function(){return m.nodeName(this,"input")&&"checkbox"===this.type&&this.click?(this.click(),!1):void 0},_default:function(a){return m.nodeName(a.target,"a")}},beforeunload:{postDispatch:function(a){void 0!==a.result&&a.originalEvent&&(a.originalEvent.returnValue=a.result)}}},simulate:function(a,b,c,d){var e=m.extend(new m.Event,c,{type:a,isSimulated:!0,originalEvent:{}});d?m.event.trigger(e,null,b):m.event.dispatch.call(b,e),e.isDefaultPrevented()&&c.preventDefault()}},m.removeEvent=y.removeEventListener?function(a,b,c){a.removeEventListener&&a.removeEventListener(b,c,!1)}:function(a,b,c){var d="on"+b;a.detachEvent&&(typeof a[d]===K&&(a[d]=null),a.detachEvent(d,c))},m.Event=function(a,b){return this instanceof m.Event?(a&&a.type?(this.originalEvent=a,this.type=a.type,this.isDefaultPrevented=a.defaultPrevented||void 0===a.defaultPrevented&&a.returnValue===!1?ab:bb):this.type=a,b&&m.extend(this,b),this.timeStamp=a&&a.timeStamp||m.now(),void(this[m.expando]=!0)):new m.Event(a,b)},m.Event.prototype={isDefaultPrevented:bb,isPropagationStopped:bb,isImmediatePropagationStopped:bb,preventDefault:function(){var a=this.originalEvent;this.isDefaultPrevented=ab,a&&(a.preventDefault?a.preventDefault():a.returnValue=!1)},stopPropagation:function(){var a=this.originalEvent;this.isPropagationStopped=ab,a&&(a.stopPropagation&&a.stopPropagation(),a.cancelBubble=!0)},stopImmediatePropagation:function(){var a=this.originalEvent;this.isImmediatePropagationStopped=ab,a&&a.stopImmediatePropagation&&a.stopImmediatePropagation(),this.stopPropagation()}},m.each({mouseenter:"mouseover",mouseleave:"mouseout",pointerenter:"pointerover",pointerleave:"pointerout"},function(a,b){m.event.special[a]={delegateType:b,bindType:b,handle:function(a){var c,d=this,e=a.relatedTarget,f=a.handleObj;return(!e||e!==d&&!m.contains(d,e))&&(a.type=f.origType,c=f.handler.apply(this,arguments),a.type=b),c}}}),k.submitBubbles||(m.event.special.submit={setup:function(){return m.nodeName(this,"form")?!1:void m.event.add(this,"click._submit keypress._submit",function(a){var b=a.target,c=m.nodeName(b,"input")||m.nodeName(b,"button")?b.form:void 0;c&&!m._data(c,"submitBubbles")&&(m.event.add(c,"submit._submit",function(a){a._submit_bubble=!0}),m._data(c,"submitBubbles",!0))})},postDispatch:function(a){a._submit_bubble&&(delete a._submit_bubble,this.parentNode&&!a.isTrigger&&m.event.simulate("submit",this.parentNode,a,!0))},teardown:function(){return m.nodeName(this,"form")?!1:void m.event.remove(this,"._submit")}}),k.changeBubbles||(m.event.special.change={setup:function(){return X.test(this.nodeName)?(("checkbox"===this.type||"radio"===this.type)&&(m.event.add(this,"propertychange._change",function(a){"checked"===a.originalEvent.propertyName&&(this._just_changed=!0)}),m.event.add(this,"click._change",function(a){this._just_changed&&!a.isTrigger&&(this._just_changed=!1),m.event.simulate("change",this,a,!0)})),!1):void m.event.add(this,"beforeactivate._change",function(a){var b=a.target;X.test(b.nodeName)&&!m._data(b,"changeBubbles")&&(m.event.add(b,"change._change",function(a){!this.parentNode||a.isSimulated||a.isTrigger||m.event.simulate("change",this.parentNode,a,!0)}),m._data(b,"changeBubbles",!0))})},handle:function(a){var b=a.target;return this!==b||a.isSimulated||a.isTrigger||"radio"!==b.type&&"checkbox"!==b.type?a.handleObj.handler.apply(this,arguments):void 0},teardown:function(){return m.event.remove(this,"._change"),!X.test(this.nodeName)}}),k.focusinBubbles||m.each({focus:"focusin",blur:"focusout"},function(a,b){var c=function(a){m.event.simulate(b,a.target,m.event.fix(a),!0)};m.event.special[b]={setup:function(){var d=this.ownerDocument||this,e=m._data(d,b);e||d.addEventListener(a,c,!0),m._data(d,b,(e||0)+1)},teardown:function(){var d=this.ownerDocument||this,e=m._data(d,b)-1;e?m._data(d,b,e):(d.removeEventListener(a,c,!0),m._removeData(d,b))}}}),m.fn.extend({on:function(a,b,c,d,e){var f,g;if("object"==typeof a){"string"!=typeof b&&(c=c||b,b=void 0);for(f in a)this.on(f,b,c,a[f],e);return this}if(null==c&&null==d?(d=b,c=b=void 0):null==d&&("string"==typeof b?(d=c,c=void 0):(d=c,c=b,b=void 0)),d===!1)d=bb;else if(!d)return this;return 1===e&&(g=d,d=function(a){return m().off(a),g.apply(this,arguments)},d.guid=g.guid||(g.guid=m.guid++)),this.each(function(){m.event.add(this,a,d,c,b)})},one:function(a,b,c,d){return this.on(a,b,c,d,1)},off:function(a,b,c){var d,e;if(a&&a.preventDefault&&a.handleObj)return d=a.handleObj,m(a.delegateTarget).off(d.namespace?d.origType+"."+d.namespace:d.origType,d.selector,d.handler),this;if("object"==typeof a){for(e in a)this.off(e,b,a[e]);return this}return(b===!1||"function"==typeof b)&&(c=b,b=void 0),c===!1&&(c=bb),this.each(function(){m.event.remove(this,a,c,b)})},trigger:function(a,b){return this.each(function(){m.event.trigger(a,b,this)})},triggerHandler:function(a,b){var c=this[0];return c?m.event.trigger(a,b,c,!0):void 0}});function db(a){var b=eb.split("|"),c=a.createDocumentFragment();if(c.createElement)while(b.length)c.createElement(b.pop());return c}var eb="abbr|article|aside|audio|bdi|canvas|data|datalist|details|figcaption|figure|footer|header|hgroup|mark|meter|nav|output|progress|section|summary|time|video",fb=/ jQuery\d+="(?:null|\d+)"/g,gb=new RegExp("<(?:"+eb+")[\\s/>]","i"),hb=/^\s+/,ib=/<(?!area|br|col|embed|hr|img|input|link|meta|param)(([\w:]+)[^>]*)\/>/gi,jb=/<([\w:]+)/,kb=/<tbody/i,lb=/<|&#?\w+;/,mb=/<(?:script|style|link)/i,nb=/checked\s*(?:[^=]|=\s*.checked.)/i,ob=/^$|\/(?:java|ecma)script/i,pb=/^true\/(.*)/,qb=/^\s*<!(?:\[CDATA\[|--)|(?:\]\]|--)>\s*$/g,rb={option:[1,"<select multiple='multiple'>","</select>"],legend:[1,"<fieldset>","</fieldset>"],area:[1,"<map>","</map>"],param:[1,"<object>","</object>"],thead:[1,"<table>","</table>"],tr:[2,"<table><tbody>","</tbody></table>"],col:[2,"<table><tbody></tbody><colgroup>","</colgroup></table>"],td:[3,"<table><tbody><tr>","</tr></tbody></table>"],_default:k.htmlSerialize?[0,"",""]:[1,"X<div>","</div>"]},sb=db(y),tb=sb.appendChild(y.createElement("div"));rb.optgroup=rb.option,rb.tbody=rb.tfoot=rb.colgroup=rb.caption=rb.thead,rb.th=rb.td;function ub(a,b){var c,d,e=0,f=typeof a.getElementsByTagName!==K?a.getElementsByTagName(b||"*"):typeof a.querySelectorAll!==K?a.querySelectorAll(b||"*"):void 0;if(!f)for(f=[],c=a.childNodes||a;null!=(d=c[e]);e++)!b||m.nodeName(d,b)?f.push(d):m.merge(f,ub(d,b));return void 0===b||b&&m.nodeName(a,b)?m.merge([a],f):f}function vb(a){W.test(a.type)&&(a.defaultChecked=a.checked)}function wb(a,b){return m.nodeName(a,"table")&&m.nodeName(11!==b.nodeType?b:b.firstChild,"tr")?a.getElementsByTagName("tbody")[0]||a.appendChild(a.ownerDocument.createElement("tbody")):a}function xb(a){return a.type=(null!==m.find.attr(a,"type"))+"/"+a.type,a}function yb(a){var b=pb.exec(a.type);return b?a.type=b[1]:a.removeAttribute("type"),a}function zb(a,b){for(var c,d=0;null!=(c=a[d]);d++)m._data(c,"globalEval",!b||m._data(b[d],"globalEval"))}function Ab(a,b){if(1===b.nodeType&&m.hasData(a)){var c,d,e,f=m._data(a),g=m._data(b,f),h=f.events;if(h){delete g.handle,g.events={};for(c in h)for(d=0,e=h[c].length;e>d;d++)m.event.add(b,c,h[c][d])}g.data&&(g.data=m.extend({},g.data))}}function Bb(a,b){var c,d,e;if(1===b.nodeType){if(c=b.nodeName.toLowerCase(),!k.noCloneEvent&&b[m.expando]){e=m._data(b);for(d in e.events)m.removeEvent(b,d,e.handle);b.removeAttribute(m.expando)}"script"===c&&b.text!==a.text?(xb(b).text=a.text,yb(b)):"object"===c?(b.parentNode&&(b.outerHTML=a.outerHTML),k.html5Clone&&a.innerHTML&&!m.trim(b.innerHTML)&&(b.innerHTML=a.innerHTML)):"input"===c&&W.test(a.type)?(b.defaultChecked=b.checked=a.checked,b.value!==a.value&&(b.value=a.value)):"option"===c?b.defaultSelected=b.selected=a.defaultSelected:("input"===c||"textarea"===c)&&(b.defaultValue=a.defaultValue)}}m.extend({clone:function(a,b,c){var d,e,f,g,h,i=m.contains(a.ownerDocument,a);if(k.html5Clone||m.isXMLDoc(a)||!gb.test("<"+a.nodeName+">")?f=a.cloneNode(!0):(tb.innerHTML=a.outerHTML,tb.removeChild(f=tb.firstChild)),!(k.noCloneEvent&&k.noCloneChecked||1!==a.nodeType&&11!==a.nodeType||m.isXMLDoc(a)))for(d=ub(f),h=ub(a),g=0;null!=(e=h[g]);++g)d[g]&&Bb(e,d[g]);if(b)if(c)for(h=h||ub(a),d=d||ub(f),g=0;null!=(e=h[g]);g++)Ab(e,d[g]);else Ab(a,f);return d=ub(f,"script"),d.length>0&&zb(d,!i&&ub(a,"script")),d=h=e=null,f},buildFragment:function(a,b,c,d){for(var e,f,g,h,i,j,l,n=a.length,o=db(b),p=[],q=0;n>q;q++)if(f=a[q],f||0===f)if("object"===m.type(f))m.merge(p,f.nodeType?[f]:f);else if(lb.test(f)){h=h||o.appendChild(b.createElement("div")),i=(jb.exec(f)||["",""])[1].toLowerCase(),l=rb[i]||rb._default,h.innerHTML=l[1]+f.replace(ib,"<$1></$2>")+l[2],e=l[0];while(e--)h=h.lastChild;if(!k.leadingWhitespace&&hb.test(f)&&p.push(b.createTextNode(hb.exec(f)[0])),!k.tbody){f="table"!==i||kb.test(f)?"<table>"!==l[1]||kb.test(f)?0:h:h.firstChild,e=f&&f.childNodes.length;while(e--)m.nodeName(j=f.childNodes[e],"tbody")&&!j.childNodes.length&&f.removeChild(j)}m.merge(p,h.childNodes),h.textContent="";while(h.firstChild)h.removeChild(h.firstChild);h=o.lastChild}else p.push(b.createTextNode(f));h&&o.removeChild(h),k.appendChecked||m.grep(ub(p,"input"),vb),q=0;while(f=p[q++])if((!d||-1===m.inArray(f,d))&&(g=m.contains(f.ownerDocument,f),h=ub(o.appendChild(f),"script"),g&&zb(h),c)){e=0;while(f=h[e++])ob.test(f.type||"")&&c.push(f)}return h=null,o},cleanData:function(a,b){for(var d,e,f,g,h=0,i=m.expando,j=m.cache,l=k.deleteExpando,n=m.event.special;null!=(d=a[h]);h++)if((b||m.acceptData(d))&&(f=d[i],g=f&&j[f])){if(g.events)for(e in g.events)n[e]?m.event.remove(d,e):m.removeEvent(d,e,g.handle);j[f]&&(delete j[f],l?delete d[i]:typeof d.removeAttribute!==K?d.removeAttribute(i):d[i]=null,c.push(f))}}}),m.fn.extend({text:function(a){return V(this,function(a){return void 0===a?m.text(this):this.empty().append((this[0]&&this[0].ownerDocument||y).createTextNode(a))},null,a,arguments.length)},append:function(){return this.domManip(arguments,function(a){if(1===this.nodeType||11===this.nodeType||9===this.nodeType){var b=wb(this,a);b.appendChild(a)}})},prepend:function(){return this.domManip(arguments,function(a){if(1===this.nodeType||11===this.nodeType||9===this.nodeType){var b=wb(this,a);b.insertBefore(a,b.firstChild)}})},before:function(){return this.domManip(arguments,function(a){this.parentNode&&this.parentNode.insertBefore(a,this)})},after:function(){return this.domManip(arguments,function(a){this.parentNode&&this.parentNode.insertBefore(a,this.nextSibling)})},remove:function(a,b){for(var c,d=a?m.filter(a,this):this,e=0;null!=(c=d[e]);e++)b||1!==c.nodeType||m.cleanData(ub(c)),c.parentNode&&(b&&m.contains(c.ownerDocument,c)&&zb(ub(c,"script")),c.parentNode.removeChild(c));return this},empty:function(){for(var a,b=0;null!=(a=this[b]);b++){1===a.nodeType&&m.cleanData(ub(a,!1));while(a.firstChild)a.removeChild(a.firstChild);a.options&&m.nodeName(a,"select")&&(a.options.length=0)}return this},clone:function(a,b){return a=null==a?!1:a,b=null==b?a:b,this.map(function(){return m.clone(this,a,b)})},html:function(a){return V(this,function(a){var b=this[0]||{},c=0,d=this.length;if(void 0===a)return 1===b.nodeType?b.innerHTML.replace(fb,""):void 0;if(!("string"!=typeof a||mb.test(a)||!k.htmlSerialize&&gb.test(a)||!k.leadingWhitespace&&hb.test(a)||rb[(jb.exec(a)||["",""])[1].toLowerCase()])){a=a.replace(ib,"<$1></$2>");try{for(;d>c;c++)b=this[c]||{},1===b.nodeType&&(m.cleanData(ub(b,!1)),b.innerHTML=a);b=0}catch(e){}}b&&this.empty().append(a)},null,a,arguments.length)},replaceWith:function(){var a=arguments[0];return this.domManip(arguments,function(b){a=this.parentNode,m.cleanData(ub(this)),a&&a.replaceChild(b,this)}),a&&(a.length||a.nodeType)?this:this.remove()},detach:function(a){return this.remove(a,!0)},domManip:function(a,b){a=e.apply([],a);var c,d,f,g,h,i,j=0,l=this.length,n=this,o=l-1,p=a[0],q=m.isFunction(p);if(q||l>1&&"string"==typeof p&&!k.checkClone&&nb.test(p))return this.each(function(c){var d=n.eq(c);q&&(a[0]=p.call(this,c,d.html())),d.domManip(a,b)});if(l&&(i=m.buildFragment(a,this[0].ownerDocument,!1,this),c=i.firstChild,1===i.childNodes.length&&(i=c),c)){for(g=m.map(ub(i,"script"),xb),f=g.length;l>j;j++)d=i,j!==o&&(d=m.clone(d,!0,!0),f&&m.merge(g,ub(d,"script"))),b.call(this[j],d,j);if(f)for(h=g[g.length-1].ownerDocument,m.map(g,yb),j=0;f>j;j++)d=g[j],ob.test(d.type||"")&&!m._data(d,"globalEval")&&m.contains(h,d)&&(d.src?m._evalUrl&&m._evalUrl(d.src):m.globalEval((d.text||d.textContent||d.innerHTML||"").replace(qb,"")));i=c=null}return this}}),m.each({appendTo:"append",prependTo:"prepend",insertBefore:"before",insertAfter:"after",replaceAll:"replaceWith"},function(a,b){m.fn[a]=function(a){for(var c,d=0,e=[],g=m(a),h=g.length-1;h>=d;d++)c=d===h?this:this.clone(!0),m(g[d])[b](c),f.apply(e,c.get());return this.pushStack(e)}});var Cb,Db={};function Eb(b,c){var d,e=m(c.createElement(b)).appendTo(c.body),f=a.getDefaultComputedStyle&&(d=a.getDefaultComputedStyle(e[0]))?d.display:m.css(e[0],"display");return e.detach(),f}function Fb(a){var b=y,c=Db[a];return c||(c=Eb(a,b),"none"!==c&&c||(Cb=(Cb||m("<iframe frameborder='0' width='0' height='0'/>")).appendTo(b.documentElement),b=(Cb[0].contentWindow||Cb[0].contentDocument).document,b.write(),b.close(),c=Eb(a,b),Cb.detach()),Db[a]=c),c}!function(){var a;k.shrinkWrapBlocks=function(){if(null!=a)return a;a=!1;var b,c,d;return c=y.getElementsByTagName("body")[0],c&&c.style?(b=y.createElement("div"),d=y.createElement("div"),d.style.cssText="position:absolute;border:0;width:0;height:0;top:0;left:-9999px",c.appendChild(d).appendChild(b),typeof b.style.zoom!==K&&(b.style.cssText="-webkit-box-sizing:content-box;-moz-box-sizing:content-box;box-sizing:content-box;display:block;margin:0;border:0;padding:1px;width:1px;zoom:1",b.appendChild(y.createElement("div")).style.width="5px",a=3!==b.offsetWidth),c.removeChild(d),a):void 0}}();var Gb=/^margin/,Hb=new RegExp("^("+S+")(?!px)[a-z%]+$","i"),Ib,Jb,Kb=/^(top|right|bottom|left)$/;a.getComputedStyle?(Ib=function(a){return a.ownerDocument.defaultView.getComputedStyle(a,null)},Jb=function(a,b,c){var d,e,f,g,h=a.style;return c=c||Ib(a),g=c?c.getPropertyValue(b)||c[b]:void 0,c&&(""!==g||m.contains(a.ownerDocument,a)||(g=m.style(a,b)),Hb.test(g)&&Gb.test(b)&&(d=h.width,e=h.minWidth,f=h.maxWidth,h.minWidth=h.maxWidth=h.width=g,g=c.width,h.width=d,h.minWidth=e,h.maxWidth=f)),void 0===g?g:g+""}):y.documentElement.currentStyle&&(Ib=function(a){return a.currentStyle},Jb=function(a,b,c){var d,e,f,g,h=a.style;return c=c||Ib(a),g=c?c[b]:void 0,null==g&&h&&h[b]&&(g=h[b]),Hb.test(g)&&!Kb.test(b)&&(d=h.left,e=a.runtimeStyle,f=e&&e.left,f&&(e.left=a.currentStyle.left),h.left="fontSize"===b?"1em":g,g=h.pixelLeft+"px",h.left=d,f&&(e.left=f)),void 0===g?g:g+""||"auto"});function Lb(a,b){return{get:function(){var c=a();if(null!=c)return c?void delete this.get:(this.get=b).apply(this,arguments)}}}!function(){var b,c,d,e,f,g,h;if(b=y.createElement("div"),b.innerHTML="  <link/><table></table><a href='/a'>a</a><input type='checkbox'/>",d=b.getElementsByTagName("a")[0],c=d&&d.style){c.cssText="float:left;opacity:.5",k.opacity="0.5"===c.opacity,k.cssFloat=!!c.cssFloat,b.style.backgroundClip="content-box",b.cloneNode(!0).style.backgroundClip="",k.clearCloneStyle="content-box"===b.style.backgroundClip,k.boxSizing=""===c.boxSizing||""===c.MozBoxSizing||""===c.WebkitBoxSizing,m.extend(k,{reliableHiddenOffsets:function(){return null==g&&i(),g},boxSizingReliable:function(){return null==f&&i(),f},pixelPosition:function(){return null==e&&i(),e},reliableMarginRight:function(){return null==h&&i(),h}});function i(){var b,c,d,i;c=y.getElementsByTagName("body")[0],c&&c.style&&(b=y.createElement("div"),d=y.createElement("div"),d.style.cssText="position:absolute;border:0;width:0;height:0;top:0;left:-9999px",c.appendChild(d).appendChild(b),b.style.cssText="-webkit-box-sizing:border-box;-moz-box-sizing:border-box;box-sizing:border-box;display:block;margin-top:1%;top:1%;border:1px;padding:1px;width:4px;position:absolute",e=f=!1,h=!0,a.getComputedStyle&&(e="1%"!==(a.getComputedStyle(b,null)||{}).top,f="4px"===(a.getComputedStyle(b,null)||{width:"4px"}).width,i=b.appendChild(y.createElement("div")),i.style.cssText=b.style.cssText="-webkit-box-sizing:content-box;-moz-box-sizing:content-box;box-sizing:content-box;display:block;margin:0;border:0;padding:0",i.style.marginRight=i.style.width="0",b.style.width="1px",h=!parseFloat((a.getComputedStyle(i,null)||{}).marginRight)),b.innerHTML="<table><tr><td></td><td>t</td></tr></table>",i=b.getElementsByTagName("td"),i[0].style.cssText="margin:0;border:0;padding:0;display:none",g=0===i[0].offsetHeight,g&&(i[0].style.display="",i[1].style.display="none",g=0===i[0].offsetHeight),c.removeChild(d))}}}(),m.swap=function(a,b,c,d){var e,f,g={};for(f in b)g[f]=a.style[f],a.style[f]=b[f];e=c.apply(a,d||[]);for(f in b)a.style[f]=g[f];return e};var Mb=/alpha\([^)]*\)/i,Nb=/opacity\s*=\s*([^)]*)/,Ob=/^(none|table(?!-c[ea]).+)/,Pb=new RegExp("^("+S+")(.*)$","i"),Qb=new RegExp("^([+-])=("+S+")","i"),Rb={position:"absolute",visibility:"hidden",display:"block"},Sb={letterSpacing:"0",fontWeight:"400"},Tb=["Webkit","O","Moz","ms"];function Ub(a,b){if(b in a)return b;var c=b.charAt(0).toUpperCase()+b.slice(1),d=b,e=Tb.length;while(e--)if(b=Tb[e]+c,b in a)return b;return d}function Vb(a,b){for(var c,d,e,f=[],g=0,h=a.length;h>g;g++)d=a[g],d.style&&(f[g]=m._data(d,"olddisplay"),c=d.style.display,b?(f[g]||"none"!==c||(d.style.display=""),""===d.style.display&&U(d)&&(f[g]=m._data(d,"olddisplay",Fb(d.nodeName)))):(e=U(d),(c&&"none"!==c||!e)&&m._data(d,"olddisplay",e?c:m.css(d,"display"))));for(g=0;h>g;g++)d=a[g],d.style&&(b&&"none"!==d.style.display&&""!==d.style.display||(d.style.display=b?f[g]||"":"none"));return a}function Wb(a,b,c){var d=Pb.exec(b);return d?Math.max(0,d[1]-(c||0))+(d[2]||"px"):b}function Xb(a,b,c,d,e){for(var f=c===(d?"border":"content")?4:"width"===b?1:0,g=0;4>f;f+=2)"margin"===c&&(g+=m.css(a,c+T[f],!0,e)),d?("content"===c&&(g-=m.css(a,"padding"+T[f],!0,e)),"margin"!==c&&(g-=m.css(a,"border"+T[f]+"Width",!0,e))):(g+=m.css(a,"padding"+T[f],!0,e),"padding"!==c&&(g+=m.css(a,"border"+T[f]+"Width",!0,e)));return g}function Yb(a,b,c){var d=!0,e="width"===b?a.offsetWidth:a.offsetHeight,f=Ib(a),g=k.boxSizing&&"border-box"===m.css(a,"boxSizing",!1,f);if(0>=e||null==e){if(e=Jb(a,b,f),(0>e||null==e)&&(e=a.style[b]),Hb.test(e))return e;d=g&&(k.boxSizingReliable()||e===a.style[b]),e=parseFloat(e)||0}return e+Xb(a,b,c||(g?"border":"content"),d,f)+"px"}m.extend({cssHooks:{opacity:{get:function(a,b){if(b){var c=Jb(a,"opacity");return""===c?"1":c}}}},cssNumber:{columnCount:!0,fillOpacity:!0,flexGrow:!0,flexShrink:!0,fontWeight:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,widows:!0,zIndex:!0,zoom:!0},cssProps:{"float":k.cssFloat?"cssFloat":"styleFloat"},style:function(a,b,c,d){if(a&&3!==a.nodeType&&8!==a.nodeType&&a.style){var e,f,g,h=m.camelCase(b),i=a.style;if(b=m.cssProps[h]||(m.cssProps[h]=Ub(i,h)),g=m.cssHooks[b]||m.cssHooks[h],void 0===c)return g&&"get"in g&&void 0!==(e=g.get(a,!1,d))?e:i[b];if(f=typeof c,"string"===f&&(e=Qb.exec(c))&&(c=(e[1]+1)*e[2]+parseFloat(m.css(a,b)),f="number"),null!=c&&c===c&&("number"!==f||m.cssNumber[h]||(c+="px"),k.clearCloneStyle||""!==c||0!==b.indexOf("background")||(i[b]="inherit"),!(g&&"set"in g&&void 0===(c=g.set(a,c,d)))))try{i[b]=c}catch(j){}}},css:function(a,b,c,d){var e,f,g,h=m.camelCase(b);return b=m.cssProps[h]||(m.cssProps[h]=Ub(a.style,h)),g=m.cssHooks[b]||m.cssHooks[h],g&&"get"in g&&(f=g.get(a,!0,c)),void 0===f&&(f=Jb(a,b,d)),"normal"===f&&b in Sb&&(f=Sb[b]),""===c||c?(e=parseFloat(f),c===!0||m.isNumeric(e)?e||0:f):f}}),m.each(["height","width"],function(a,b){m.cssHooks[b]={get:function(a,c,d){return c?Ob.test(m.css(a,"display"))&&0===a.offsetWidth?m.swap(a,Rb,function(){return Yb(a,b,d)}):Yb(a,b,d):void 0},set:function(a,c,d){var e=d&&Ib(a);return Wb(a,c,d?Xb(a,b,d,k.boxSizing&&"border-box"===m.css(a,"boxSizing",!1,e),e):0)}}}),k.opacity||(m.cssHooks.opacity={get:function(a,b){return Nb.test((b&&a.currentStyle?a.currentStyle.filter:a.style.filter)||"")?.01*parseFloat(RegExp.$1)+"":b?"1":""},set:function(a,b){var c=a.style,d=a.currentStyle,e=m.isNumeric(b)?"alpha(opacity="+100*b+")":"",f=d&&d.filter||c.filter||"";c.zoom=1,(b>=1||""===b)&&""===m.trim(f.replace(Mb,""))&&c.removeAttribute&&(c.removeAttribute("filter"),""===b||d&&!d.filter)||(c.filter=Mb.test(f)?f.replace(Mb,e):f+" "+e)}}),m.cssHooks.marginRight=Lb(k.reliableMarginRight,function(a,b){return b?m.swap(a,{display:"inline-block"},Jb,[a,"marginRight"]):void 0}),m.each({margin:"",padding:"",border:"Width"},function(a,b){m.cssHooks[a+b]={expand:function(c){for(var d=0,e={},f="string"==typeof c?c.split(" "):[c];4>d;d++)e[a+T[d]+b]=f[d]||f[d-2]||f[0];return e}},Gb.test(a)||(m.cssHooks[a+b].set=Wb)}),m.fn.extend({css:function(a,b){return V(this,function(a,b,c){var d,e,f={},g=0;if(m.isArray(b)){for(d=Ib(a),e=b.length;e>g;g++)f[b[g]]=m.css(a,b[g],!1,d);return f}return void 0!==c?m.style(a,b,c):m.css(a,b)},a,b,arguments.length>1)},show:function(){return Vb(this,!0)},hide:function(){return Vb(this)},toggle:function(a){return"boolean"==typeof a?a?this.show():this.hide():this.each(function(){U(this)?m(this).show():m(this).hide()})}});function Zb(a,b,c,d,e){return new Zb.prototype.init(a,b,c,d,e)}m.Tween=Zb,Zb.prototype={constructor:Zb,init:function(a,b,c,d,e,f){this.elem=a,this.prop=c,this.easing=e||"swing",this.options=b,this.start=this.now=this.cur(),this.end=d,this.unit=f||(m.cssNumber[c]?"":"px")
},cur:function(){var a=Zb.propHooks[this.prop];return a&&a.get?a.get(this):Zb.propHooks._default.get(this)},run:function(a){var b,c=Zb.propHooks[this.prop];return this.pos=b=this.options.duration?m.easing[this.easing](a,this.options.duration*a,0,1,this.options.duration):a,this.now=(this.end-this.start)*b+this.start,this.options.step&&this.options.step.call(this.elem,this.now,this),c&&c.set?c.set(this):Zb.propHooks._default.set(this),this}},Zb.prototype.init.prototype=Zb.prototype,Zb.propHooks={_default:{get:function(a){var b;return null==a.elem[a.prop]||a.elem.style&&null!=a.elem.style[a.prop]?(b=m.css(a.elem,a.prop,""),b&&"auto"!==b?b:0):a.elem[a.prop]},set:function(a){m.fx.step[a.prop]?m.fx.step[a.prop](a):a.elem.style&&(null!=a.elem.style[m.cssProps[a.prop]]||m.cssHooks[a.prop])?m.style(a.elem,a.prop,a.now+a.unit):a.elem[a.prop]=a.now}}},Zb.propHooks.scrollTop=Zb.propHooks.scrollLeft={set:function(a){a.elem.nodeType&&a.elem.parentNode&&(a.elem[a.prop]=a.now)}},m.easing={linear:function(a){return a},swing:function(a){return.5-Math.cos(a*Math.PI)/2}},m.fx=Zb.prototype.init,m.fx.step={};var $b,_b,ac=/^(?:toggle|show|hide)$/,bc=new RegExp("^(?:([+-])=|)("+S+")([a-z%]*)$","i"),cc=/queueHooks$/,dc=[ic],ec={"*":[function(a,b){var c=this.createTween(a,b),d=c.cur(),e=bc.exec(b),f=e&&e[3]||(m.cssNumber[a]?"":"px"),g=(m.cssNumber[a]||"px"!==f&&+d)&&bc.exec(m.css(c.elem,a)),h=1,i=20;if(g&&g[3]!==f){f=f||g[3],e=e||[],g=+d||1;do h=h||".5",g/=h,m.style(c.elem,a,g+f);while(h!==(h=c.cur()/d)&&1!==h&&--i)}return e&&(g=c.start=+g||+d||0,c.unit=f,c.end=e[1]?g+(e[1]+1)*e[2]:+e[2]),c}]};function fc(){return setTimeout(function(){$b=void 0}),$b=m.now()}function gc(a,b){var c,d={height:a},e=0;for(b=b?1:0;4>e;e+=2-b)c=T[e],d["margin"+c]=d["padding"+c]=a;return b&&(d.opacity=d.width=a),d}function hc(a,b,c){for(var d,e=(ec[b]||[]).concat(ec["*"]),f=0,g=e.length;g>f;f++)if(d=e[f].call(c,b,a))return d}function ic(a,b,c){var d,e,f,g,h,i,j,l,n=this,o={},p=a.style,q=a.nodeType&&U(a),r=m._data(a,"fxshow");c.queue||(h=m._queueHooks(a,"fx"),null==h.unqueued&&(h.unqueued=0,i=h.empty.fire,h.empty.fire=function(){h.unqueued||i()}),h.unqueued++,n.always(function(){n.always(function(){h.unqueued--,m.queue(a,"fx").length||h.empty.fire()})})),1===a.nodeType&&("height"in b||"width"in b)&&(c.overflow=[p.overflow,p.overflowX,p.overflowY],j=m.css(a,"display"),l="none"===j?m._data(a,"olddisplay")||Fb(a.nodeName):j,"inline"===l&&"none"===m.css(a,"float")&&(k.inlineBlockNeedsLayout&&"inline"!==Fb(a.nodeName)?p.zoom=1:p.display="inline-block")),c.overflow&&(p.overflow="hidden",k.shrinkWrapBlocks()||n.always(function(){p.overflow=c.overflow[0],p.overflowX=c.overflow[1],p.overflowY=c.overflow[2]}));for(d in b)if(e=b[d],ac.exec(e)){if(delete b[d],f=f||"toggle"===e,e===(q?"hide":"show")){if("show"!==e||!r||void 0===r[d])continue;q=!0}o[d]=r&&r[d]||m.style(a,d)}else j=void 0;if(m.isEmptyObject(o))"inline"===("none"===j?Fb(a.nodeName):j)&&(p.display=j);else{r?"hidden"in r&&(q=r.hidden):r=m._data(a,"fxshow",{}),f&&(r.hidden=!q),q?m(a).show():n.done(function(){m(a).hide()}),n.done(function(){var b;m._removeData(a,"fxshow");for(b in o)m.style(a,b,o[b])});for(d in o)g=hc(q?r[d]:0,d,n),d in r||(r[d]=g.start,q&&(g.end=g.start,g.start="width"===d||"height"===d?1:0))}}function jc(a,b){var c,d,e,f,g;for(c in a)if(d=m.camelCase(c),e=b[d],f=a[c],m.isArray(f)&&(e=f[1],f=a[c]=f[0]),c!==d&&(a[d]=f,delete a[c]),g=m.cssHooks[d],g&&"expand"in g){f=g.expand(f),delete a[d];for(c in f)c in a||(a[c]=f[c],b[c]=e)}else b[d]=e}function kc(a,b,c){var d,e,f=0,g=dc.length,h=m.Deferred().always(function(){delete i.elem}),i=function(){if(e)return!1;for(var b=$b||fc(),c=Math.max(0,j.startTime+j.duration-b),d=c/j.duration||0,f=1-d,g=0,i=j.tweens.length;i>g;g++)j.tweens[g].run(f);return h.notifyWith(a,[j,f,c]),1>f&&i?c:(h.resolveWith(a,[j]),!1)},j=h.promise({elem:a,props:m.extend({},b),opts:m.extend(!0,{specialEasing:{}},c),originalProperties:b,originalOptions:c,startTime:$b||fc(),duration:c.duration,tweens:[],createTween:function(b,c){var d=m.Tween(a,j.opts,b,c,j.opts.specialEasing[b]||j.opts.easing);return j.tweens.push(d),d},stop:function(b){var c=0,d=b?j.tweens.length:0;if(e)return this;for(e=!0;d>c;c++)j.tweens[c].run(1);return b?h.resolveWith(a,[j,b]):h.rejectWith(a,[j,b]),this}}),k=j.props;for(jc(k,j.opts.specialEasing);g>f;f++)if(d=dc[f].call(j,a,k,j.opts))return d;return m.map(k,hc,j),m.isFunction(j.opts.start)&&j.opts.start.call(a,j),m.fx.timer(m.extend(i,{elem:a,anim:j,queue:j.opts.queue})),j.progress(j.opts.progress).done(j.opts.done,j.opts.complete).fail(j.opts.fail).always(j.opts.always)}m.Animation=m.extend(kc,{tweener:function(a,b){m.isFunction(a)?(b=a,a=["*"]):a=a.split(" ");for(var c,d=0,e=a.length;e>d;d++)c=a[d],ec[c]=ec[c]||[],ec[c].unshift(b)},prefilter:function(a,b){b?dc.unshift(a):dc.push(a)}}),m.speed=function(a,b,c){var d=a&&"object"==typeof a?m.extend({},a):{complete:c||!c&&b||m.isFunction(a)&&a,duration:a,easing:c&&b||b&&!m.isFunction(b)&&b};return d.duration=m.fx.off?0:"number"==typeof d.duration?d.duration:d.duration in m.fx.speeds?m.fx.speeds[d.duration]:m.fx.speeds._default,(null==d.queue||d.queue===!0)&&(d.queue="fx"),d.old=d.complete,d.complete=function(){m.isFunction(d.old)&&d.old.call(this),d.queue&&m.dequeue(this,d.queue)},d},m.fn.extend({fadeTo:function(a,b,c,d){return this.filter(U).css("opacity",0).show().end().animate({opacity:b},a,c,d)},animate:function(a,b,c,d){var e=m.isEmptyObject(a),f=m.speed(b,c,d),g=function(){var b=kc(this,m.extend({},a),f);(e||m._data(this,"finish"))&&b.stop(!0)};return g.finish=g,e||f.queue===!1?this.each(g):this.queue(f.queue,g)},stop:function(a,b,c){var d=function(a){var b=a.stop;delete a.stop,b(c)};return"string"!=typeof a&&(c=b,b=a,a=void 0),b&&a!==!1&&this.queue(a||"fx",[]),this.each(function(){var b=!0,e=null!=a&&a+"queueHooks",f=m.timers,g=m._data(this);if(e)g[e]&&g[e].stop&&d(g[e]);else for(e in g)g[e]&&g[e].stop&&cc.test(e)&&d(g[e]);for(e=f.length;e--;)f[e].elem!==this||null!=a&&f[e].queue!==a||(f[e].anim.stop(c),b=!1,f.splice(e,1));(b||!c)&&m.dequeue(this,a)})},finish:function(a){return a!==!1&&(a=a||"fx"),this.each(function(){var b,c=m._data(this),d=c[a+"queue"],e=c[a+"queueHooks"],f=m.timers,g=d?d.length:0;for(c.finish=!0,m.queue(this,a,[]),e&&e.stop&&e.stop.call(this,!0),b=f.length;b--;)f[b].elem===this&&f[b].queue===a&&(f[b].anim.stop(!0),f.splice(b,1));for(b=0;g>b;b++)d[b]&&d[b].finish&&d[b].finish.call(this);delete c.finish})}}),m.each(["toggle","show","hide"],function(a,b){var c=m.fn[b];m.fn[b]=function(a,d,e){return null==a||"boolean"==typeof a?c.apply(this,arguments):this.animate(gc(b,!0),a,d,e)}}),m.each({slideDown:gc("show"),slideUp:gc("hide"),slideToggle:gc("toggle"),fadeIn:{opacity:"show"},fadeOut:{opacity:"hide"},fadeToggle:{opacity:"toggle"}},function(a,b){m.fn[a]=function(a,c,d){return this.animate(b,a,c,d)}}),m.timers=[],m.fx.tick=function(){var a,b=m.timers,c=0;for($b=m.now();c<b.length;c++)a=b[c],a()||b[c]!==a||b.splice(c--,1);b.length||m.fx.stop(),$b=void 0},m.fx.timer=function(a){m.timers.push(a),a()?m.fx.start():m.timers.pop()},m.fx.interval=13,m.fx.start=function(){_b||(_b=setInterval(m.fx.tick,m.fx.interval))},m.fx.stop=function(){clearInterval(_b),_b=null},m.fx.speeds={slow:600,fast:200,_default:400},m.fn.delay=function(a,b){return a=m.fx?m.fx.speeds[a]||a:a,b=b||"fx",this.queue(b,function(b,c){var d=setTimeout(b,a);c.stop=function(){clearTimeout(d)}})},function(){var a,b,c,d,e;b=y.createElement("div"),b.setAttribute("className","t"),b.innerHTML="  <link/><table></table><a href='/a'>a</a><input type='checkbox'/>",d=b.getElementsByTagName("a")[0],c=y.createElement("select"),e=c.appendChild(y.createElement("option")),a=b.getElementsByTagName("input")[0],d.style.cssText="top:1px",k.getSetAttribute="t"!==b.className,k.style=/top/.test(d.getAttribute("style")),k.hrefNormalized="/a"===d.getAttribute("href"),k.checkOn=!!a.value,k.optSelected=e.selected,k.enctype=!!y.createElement("form").enctype,c.disabled=!0,k.optDisabled=!e.disabled,a=y.createElement("input"),a.setAttribute("value",""),k.input=""===a.getAttribute("value"),a.value="t",a.setAttribute("type","radio"),k.radioValue="t"===a.value}();var lc=/\r/g;m.fn.extend({val:function(a){var b,c,d,e=this[0];{if(arguments.length)return d=m.isFunction(a),this.each(function(c){var e;1===this.nodeType&&(e=d?a.call(this,c,m(this).val()):a,null==e?e="":"number"==typeof e?e+="":m.isArray(e)&&(e=m.map(e,function(a){return null==a?"":a+""})),b=m.valHooks[this.type]||m.valHooks[this.nodeName.toLowerCase()],b&&"set"in b&&void 0!==b.set(this,e,"value")||(this.value=e))});if(e)return b=m.valHooks[e.type]||m.valHooks[e.nodeName.toLowerCase()],b&&"get"in b&&void 0!==(c=b.get(e,"value"))?c:(c=e.value,"string"==typeof c?c.replace(lc,""):null==c?"":c)}}}),m.extend({valHooks:{option:{get:function(a){var b=m.find.attr(a,"value");return null!=b?b:m.trim(m.text(a))}},select:{get:function(a){for(var b,c,d=a.options,e=a.selectedIndex,f="select-one"===a.type||0>e,g=f?null:[],h=f?e+1:d.length,i=0>e?h:f?e:0;h>i;i++)if(c=d[i],!(!c.selected&&i!==e||(k.optDisabled?c.disabled:null!==c.getAttribute("disabled"))||c.parentNode.disabled&&m.nodeName(c.parentNode,"optgroup"))){if(b=m(c).val(),f)return b;g.push(b)}return g},set:function(a,b){var c,d,e=a.options,f=m.makeArray(b),g=e.length;while(g--)if(d=e[g],m.inArray(m.valHooks.option.get(d),f)>=0)try{d.selected=c=!0}catch(h){d.scrollHeight}else d.selected=!1;return c||(a.selectedIndex=-1),e}}}}),m.each(["radio","checkbox"],function(){m.valHooks[this]={set:function(a,b){return m.isArray(b)?a.checked=m.inArray(m(a).val(),b)>=0:void 0}},k.checkOn||(m.valHooks[this].get=function(a){return null===a.getAttribute("value")?"on":a.value})});var mc,nc,oc=m.expr.attrHandle,pc=/^(?:checked|selected)$/i,qc=k.getSetAttribute,rc=k.input;m.fn.extend({attr:function(a,b){return V(this,m.attr,a,b,arguments.length>1)},removeAttr:function(a){return this.each(function(){m.removeAttr(this,a)})}}),m.extend({attr:function(a,b,c){var d,e,f=a.nodeType;if(a&&3!==f&&8!==f&&2!==f)return typeof a.getAttribute===K?m.prop(a,b,c):(1===f&&m.isXMLDoc(a)||(b=b.toLowerCase(),d=m.attrHooks[b]||(m.expr.match.bool.test(b)?nc:mc)),void 0===c?d&&"get"in d&&null!==(e=d.get(a,b))?e:(e=m.find.attr(a,b),null==e?void 0:e):null!==c?d&&"set"in d&&void 0!==(e=d.set(a,c,b))?e:(a.setAttribute(b,c+""),c):void m.removeAttr(a,b))},removeAttr:function(a,b){var c,d,e=0,f=b&&b.match(E);if(f&&1===a.nodeType)while(c=f[e++])d=m.propFix[c]||c,m.expr.match.bool.test(c)?rc&&qc||!pc.test(c)?a[d]=!1:a[m.camelCase("default-"+c)]=a[d]=!1:m.attr(a,c,""),a.removeAttribute(qc?c:d)},attrHooks:{type:{set:function(a,b){if(!k.radioValue&&"radio"===b&&m.nodeName(a,"input")){var c=a.value;return a.setAttribute("type",b),c&&(a.value=c),b}}}}}),nc={set:function(a,b,c){return b===!1?m.removeAttr(a,c):rc&&qc||!pc.test(c)?a.setAttribute(!qc&&m.propFix[c]||c,c):a[m.camelCase("default-"+c)]=a[c]=!0,c}},m.each(m.expr.match.bool.source.match(/\w+/g),function(a,b){var c=oc[b]||m.find.attr;oc[b]=rc&&qc||!pc.test(b)?function(a,b,d){var e,f;return d||(f=oc[b],oc[b]=e,e=null!=c(a,b,d)?b.toLowerCase():null,oc[b]=f),e}:function(a,b,c){return c?void 0:a[m.camelCase("default-"+b)]?b.toLowerCase():null}}),rc&&qc||(m.attrHooks.value={set:function(a,b,c){return m.nodeName(a,"input")?void(a.defaultValue=b):mc&&mc.set(a,b,c)}}),qc||(mc={set:function(a,b,c){var d=a.getAttributeNode(c);return d||a.setAttributeNode(d=a.ownerDocument.createAttribute(c)),d.value=b+="","value"===c||b===a.getAttribute(c)?b:void 0}},oc.id=oc.name=oc.coords=function(a,b,c){var d;return c?void 0:(d=a.getAttributeNode(b))&&""!==d.value?d.value:null},m.valHooks.button={get:function(a,b){var c=a.getAttributeNode(b);return c&&c.specified?c.value:void 0},set:mc.set},m.attrHooks.contenteditable={set:function(a,b,c){mc.set(a,""===b?!1:b,c)}},m.each(["width","height"],function(a,b){m.attrHooks[b]={set:function(a,c){return""===c?(a.setAttribute(b,"auto"),c):void 0}}})),k.style||(m.attrHooks.style={get:function(a){return a.style.cssText||void 0},set:function(a,b){return a.style.cssText=b+""}});var sc=/^(?:input|select|textarea|button|object)$/i,tc=/^(?:a|area)$/i;m.fn.extend({prop:function(a,b){return V(this,m.prop,a,b,arguments.length>1)},removeProp:function(a){return a=m.propFix[a]||a,this.each(function(){try{this[a]=void 0,delete this[a]}catch(b){}})}}),m.extend({propFix:{"for":"htmlFor","class":"className"},prop:function(a,b,c){var d,e,f,g=a.nodeType;if(a&&3!==g&&8!==g&&2!==g)return f=1!==g||!m.isXMLDoc(a),f&&(b=m.propFix[b]||b,e=m.propHooks[b]),void 0!==c?e&&"set"in e&&void 0!==(d=e.set(a,c,b))?d:a[b]=c:e&&"get"in e&&null!==(d=e.get(a,b))?d:a[b]},propHooks:{tabIndex:{get:function(a){var b=m.find.attr(a,"tabindex");return b?parseInt(b,10):sc.test(a.nodeName)||tc.test(a.nodeName)&&a.href?0:-1}}}}),k.hrefNormalized||m.each(["href","src"],function(a,b){m.propHooks[b]={get:function(a){return a.getAttribute(b,4)}}}),k.optSelected||(m.propHooks.selected={get:function(a){var b=a.parentNode;return b&&(b.selectedIndex,b.parentNode&&b.parentNode.selectedIndex),null}}),m.each(["tabIndex","readOnly","maxLength","cellSpacing","cellPadding","rowSpan","colSpan","useMap","frameBorder","contentEditable"],function(){m.propFix[this.toLowerCase()]=this}),k.enctype||(m.propFix.enctype="encoding");var uc=/[\t\r\n\f]/g;m.fn.extend({addClass:function(a){var b,c,d,e,f,g,h=0,i=this.length,j="string"==typeof a&&a;if(m.isFunction(a))return this.each(function(b){m(this).addClass(a.call(this,b,this.className))});if(j)for(b=(a||"").match(E)||[];i>h;h++)if(c=this[h],d=1===c.nodeType&&(c.className?(" "+c.className+" ").replace(uc," "):" ")){f=0;while(e=b[f++])d.indexOf(" "+e+" ")<0&&(d+=e+" ");g=m.trim(d),c.className!==g&&(c.className=g)}return this},removeClass:function(a){var b,c,d,e,f,g,h=0,i=this.length,j=0===arguments.length||"string"==typeof a&&a;if(m.isFunction(a))return this.each(function(b){m(this).removeClass(a.call(this,b,this.className))});if(j)for(b=(a||"").match(E)||[];i>h;h++)if(c=this[h],d=1===c.nodeType&&(c.className?(" "+c.className+" ").replace(uc," "):"")){f=0;while(e=b[f++])while(d.indexOf(" "+e+" ")>=0)d=d.replace(" "+e+" "," ");g=a?m.trim(d):"",c.className!==g&&(c.className=g)}return this},toggleClass:function(a,b){var c=typeof a;return"boolean"==typeof b&&"string"===c?b?this.addClass(a):this.removeClass(a):this.each(m.isFunction(a)?function(c){m(this).toggleClass(a.call(this,c,this.className,b),b)}:function(){if("string"===c){var b,d=0,e=m(this),f=a.match(E)||[];while(b=f[d++])e.hasClass(b)?e.removeClass(b):e.addClass(b)}else(c===K||"boolean"===c)&&(this.className&&m._data(this,"__className__",this.className),this.className=this.className||a===!1?"":m._data(this,"__className__")||"")})},hasClass:function(a){for(var b=" "+a+" ",c=0,d=this.length;d>c;c++)if(1===this[c].nodeType&&(" "+this[c].className+" ").replace(uc," ").indexOf(b)>=0)return!0;return!1}}),m.each("blur focus focusin focusout load resize scroll unload click dblclick mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave change select submit keydown keypress keyup error contextmenu".split(" "),function(a,b){m.fn[b]=function(a,c){return arguments.length>0?this.on(b,null,a,c):this.trigger(b)}}),m.fn.extend({hover:function(a,b){return this.mouseenter(a).mouseleave(b||a)},bind:function(a,b,c){return this.on(a,null,b,c)},unbind:function(a,b){return this.off(a,null,b)},delegate:function(a,b,c,d){return this.on(b,a,c,d)},undelegate:function(a,b,c){return 1===arguments.length?this.off(a,"**"):this.off(b,a||"**",c)}});var vc=m.now(),wc=/\?/,xc=/(,)|(\[|{)|(}|])|"(?:[^"\\\r\n]|\\["\\\/bfnrt]|\\u[\da-fA-F]{4})*"\s*:?|true|false|null|-?(?!0\d)\d+(?:\.\d+|)(?:[eE][+-]?\d+|)/g;m.parseJSON=function(b){if(a.JSON&&a.JSON.parse)return a.JSON.parse(b+"");var c,d=null,e=m.trim(b+"");return e&&!m.trim(e.replace(xc,function(a,b,e,f){return c&&b&&(d=0),0===d?a:(c=e||b,d+=!f-!e,"")}))?Function("return "+e)():m.error("Invalid JSON: "+b)},m.parseXML=function(b){var c,d;if(!b||"string"!=typeof b)return null;try{a.DOMParser?(d=new DOMParser,c=d.parseFromString(b,"text/xml")):(c=new ActiveXObject("Microsoft.XMLDOM"),c.async="false",c.loadXML(b))}catch(e){c=void 0}return c&&c.documentElement&&!c.getElementsByTagName("parsererror").length||m.error("Invalid XML: "+b),c};var yc,zc,Ac=/#.*$/,Bc=/([?&])_=[^&]*/,Cc=/^(.*?):[ \t]*([^\r\n]*)\r?$/gm,Dc=/^(?:about|app|app-storage|.+-extension|file|res|widget):$/,Ec=/^(?:GET|HEAD)$/,Fc=/^\/\//,Gc=/^([\w.+-]+:)(?:\/\/(?:[^\/?#]*@|)([^\/?#:]*)(?::(\d+)|)|)/,Hc={},Ic={},Jc="*/".concat("*");try{zc=location.href}catch(Kc){zc=y.createElement("a"),zc.href="",zc=zc.href}yc=Gc.exec(zc.toLowerCase())||[];function Lc(a){return function(b,c){"string"!=typeof b&&(c=b,b="*");var d,e=0,f=b.toLowerCase().match(E)||[];if(m.isFunction(c))while(d=f[e++])"+"===d.charAt(0)?(d=d.slice(1)||"*",(a[d]=a[d]||[]).unshift(c)):(a[d]=a[d]||[]).push(c)}}function Mc(a,b,c,d){var e={},f=a===Ic;function g(h){var i;return e[h]=!0,m.each(a[h]||[],function(a,h){var j=h(b,c,d);return"string"!=typeof j||f||e[j]?f?!(i=j):void 0:(b.dataTypes.unshift(j),g(j),!1)}),i}return g(b.dataTypes[0])||!e["*"]&&g("*")}function Nc(a,b){var c,d,e=m.ajaxSettings.flatOptions||{};for(d in b)void 0!==b[d]&&((e[d]?a:c||(c={}))[d]=b[d]);return c&&m.extend(!0,a,c),a}function Oc(a,b,c){var d,e,f,g,h=a.contents,i=a.dataTypes;while("*"===i[0])i.shift(),void 0===e&&(e=a.mimeType||b.getResponseHeader("Content-Type"));if(e)for(g in h)if(h[g]&&h[g].test(e)){i.unshift(g);break}if(i[0]in c)f=i[0];else{for(g in c){if(!i[0]||a.converters[g+" "+i[0]]){f=g;break}d||(d=g)}f=f||d}return f?(f!==i[0]&&i.unshift(f),c[f]):void 0}function Pc(a,b,c,d){var e,f,g,h,i,j={},k=a.dataTypes.slice();if(k[1])for(g in a.converters)j[g.toLowerCase()]=a.converters[g];f=k.shift();while(f)if(a.responseFields[f]&&(c[a.responseFields[f]]=b),!i&&d&&a.dataFilter&&(b=a.dataFilter(b,a.dataType)),i=f,f=k.shift())if("*"===f)f=i;else if("*"!==i&&i!==f){if(g=j[i+" "+f]||j["* "+f],!g)for(e in j)if(h=e.split(" "),h[1]===f&&(g=j[i+" "+h[0]]||j["* "+h[0]])){g===!0?g=j[e]:j[e]!==!0&&(f=h[0],k.unshift(h[1]));break}if(g!==!0)if(g&&a["throws"])b=g(b);else try{b=g(b)}catch(l){return{state:"parsererror",error:g?l:"No conversion from "+i+" to "+f}}}return{state:"success",data:b}}m.extend({active:0,lastModified:{},etag:{},ajaxSettings:{url:zc,type:"GET",isLocal:Dc.test(yc[1]),global:!0,processData:!0,async:!0,contentType:"application/x-www-form-urlencoded; charset=UTF-8",accepts:{"*":Jc,text:"text/plain",html:"text/html",xml:"application/xml, text/xml",json:"application/json, text/javascript"},contents:{xml:/xml/,html:/html/,json:/json/},responseFields:{xml:"responseXML",text:"responseText",json:"responseJSON"},converters:{"* text":String,"text html":!0,"text json":m.parseJSON,"text xml":m.parseXML},flatOptions:{url:!0,context:!0}},ajaxSetup:function(a,b){return b?Nc(Nc(a,m.ajaxSettings),b):Nc(m.ajaxSettings,a)},ajaxPrefilter:Lc(Hc),ajaxTransport:Lc(Ic),ajax:function(a,b){"object"==typeof a&&(b=a,a=void 0),b=b||{};var c,d,e,f,g,h,i,j,k=m.ajaxSetup({},b),l=k.context||k,n=k.context&&(l.nodeType||l.jquery)?m(l):m.event,o=m.Deferred(),p=m.Callbacks("once memory"),q=k.statusCode||{},r={},s={},t=0,u="canceled",v={readyState:0,getResponseHeader:function(a){var b;if(2===t){if(!j){j={};while(b=Cc.exec(f))j[b[1].toLowerCase()]=b[2]}b=j[a.toLowerCase()]}return null==b?null:b},getAllResponseHeaders:function(){return 2===t?f:null},setRequestHeader:function(a,b){var c=a.toLowerCase();return t||(a=s[c]=s[c]||a,r[a]=b),this},overrideMimeType:function(a){return t||(k.mimeType=a),this},statusCode:function(a){var b;if(a)if(2>t)for(b in a)q[b]=[q[b],a[b]];else v.always(a[v.status]);return this},abort:function(a){var b=a||u;return i&&i.abort(b),x(0,b),this}};if(o.promise(v).complete=p.add,v.success=v.done,v.error=v.fail,k.url=((a||k.url||zc)+"").replace(Ac,"").replace(Fc,yc[1]+"//"),k.type=b.method||b.type||k.method||k.type,k.dataTypes=m.trim(k.dataType||"*").toLowerCase().match(E)||[""],null==k.crossDomain&&(c=Gc.exec(k.url.toLowerCase()),k.crossDomain=!(!c||c[1]===yc[1]&&c[2]===yc[2]&&(c[3]||("http:"===c[1]?"80":"443"))===(yc[3]||("http:"===yc[1]?"80":"443")))),k.data&&k.processData&&"string"!=typeof k.data&&(k.data=m.param(k.data,k.traditional)),Mc(Hc,k,b,v),2===t)return v;h=k.global,h&&0===m.active++&&m.event.trigger("ajaxStart"),k.type=k.type.toUpperCase(),k.hasContent=!Ec.test(k.type),e=k.url,k.hasContent||(k.data&&(e=k.url+=(wc.test(e)?"&":"?")+k.data,delete k.data),k.cache===!1&&(k.url=Bc.test(e)?e.replace(Bc,"$1_="+vc++):e+(wc.test(e)?"&":"?")+"_="+vc++)),k.ifModified&&(m.lastModified[e]&&v.setRequestHeader("If-Modified-Since",m.lastModified[e]),m.etag[e]&&v.setRequestHeader("If-None-Match",m.etag[e])),(k.data&&k.hasContent&&k.contentType!==!1||b.contentType)&&v.setRequestHeader("Content-Type",k.contentType),v.setRequestHeader("Accept",k.dataTypes[0]&&k.accepts[k.dataTypes[0]]?k.accepts[k.dataTypes[0]]+("*"!==k.dataTypes[0]?", "+Jc+"; q=0.01":""):k.accepts["*"]);for(d in k.headers)v.setRequestHeader(d,k.headers[d]);if(k.beforeSend&&(k.beforeSend.call(l,v,k)===!1||2===t))return v.abort();u="abort";for(d in{success:1,error:1,complete:1})v[d](k[d]);if(i=Mc(Ic,k,b,v)){v.readyState=1,h&&n.trigger("ajaxSend",[v,k]),k.async&&k.timeout>0&&(g=setTimeout(function(){v.abort("timeout")},k.timeout));try{t=1,i.send(r,x)}catch(w){if(!(2>t))throw w;x(-1,w)}}else x(-1,"No Transport");function x(a,b,c,d){var j,r,s,u,w,x=b;2!==t&&(t=2,g&&clearTimeout(g),i=void 0,f=d||"",v.readyState=a>0?4:0,j=a>=200&&300>a||304===a,c&&(u=Oc(k,v,c)),u=Pc(k,u,v,j),j?(k.ifModified&&(w=v.getResponseHeader("Last-Modified"),w&&(m.lastModified[e]=w),w=v.getResponseHeader("etag"),w&&(m.etag[e]=w)),204===a||"HEAD"===k.type?x="nocontent":304===a?x="notmodified":(x=u.state,r=u.data,s=u.error,j=!s)):(s=x,(a||!x)&&(x="error",0>a&&(a=0))),v.status=a,v.statusText=(b||x)+"",j?o.resolveWith(l,[r,x,v]):o.rejectWith(l,[v,x,s]),v.statusCode(q),q=void 0,h&&n.trigger(j?"ajaxSuccess":"ajaxError",[v,k,j?r:s]),p.fireWith(l,[v,x]),h&&(n.trigger("ajaxComplete",[v,k]),--m.active||m.event.trigger("ajaxStop")))}return v},getJSON:function(a,b,c){return m.get(a,b,c,"json")},getScript:function(a,b){return m.get(a,void 0,b,"script")}}),m.each(["get","post"],function(a,b){m[b]=function(a,c,d,e){return m.isFunction(c)&&(e=e||d,d=c,c=void 0),m.ajax({url:a,type:b,dataType:e,data:c,success:d})}}),m.each(["ajaxStart","ajaxStop","ajaxComplete","ajaxError","ajaxSuccess","ajaxSend"],function(a,b){m.fn[b]=function(a){return this.on(b,a)}}),m._evalUrl=function(a){return m.ajax({url:a,type:"GET",dataType:"script",async:!1,global:!1,"throws":!0})},m.fn.extend({wrapAll:function(a){if(m.isFunction(a))return this.each(function(b){m(this).wrapAll(a.call(this,b))});if(this[0]){var b=m(a,this[0].ownerDocument).eq(0).clone(!0);this[0].parentNode&&b.insertBefore(this[0]),b.map(function(){var a=this;while(a.firstChild&&1===a.firstChild.nodeType)a=a.firstChild;return a}).append(this)}return this},wrapInner:function(a){return this.each(m.isFunction(a)?function(b){m(this).wrapInner(a.call(this,b))}:function(){var b=m(this),c=b.contents();c.length?c.wrapAll(a):b.append(a)})},wrap:function(a){var b=m.isFunction(a);return this.each(function(c){m(this).wrapAll(b?a.call(this,c):a)})},unwrap:function(){return this.parent().each(function(){m.nodeName(this,"body")||m(this).replaceWith(this.childNodes)}).end()}}),m.expr.filters.hidden=function(a){return a.offsetWidth<=0&&a.offsetHeight<=0||!k.reliableHiddenOffsets()&&"none"===(a.style&&a.style.display||m.css(a,"display"))},m.expr.filters.visible=function(a){return!m.expr.filters.hidden(a)};var Qc=/%20/g,Rc=/\[\]$/,Sc=/\r?\n/g,Tc=/^(?:submit|button|image|reset|file)$/i,Uc=/^(?:input|select|textarea|keygen)/i;function Vc(a,b,c,d){var e;if(m.isArray(b))m.each(b,function(b,e){c||Rc.test(a)?d(a,e):Vc(a+"["+("object"==typeof e?b:"")+"]",e,c,d)});else if(c||"object"!==m.type(b))d(a,b);else for(e in b)Vc(a+"["+e+"]",b[e],c,d)}m.param=function(a,b){var c,d=[],e=function(a,b){b=m.isFunction(b)?b():null==b?"":b,d[d.length]=encodeURIComponent(a)+"="+encodeURIComponent(b)};if(void 0===b&&(b=m.ajaxSettings&&m.ajaxSettings.traditional),m.isArray(a)||a.jquery&&!m.isPlainObject(a))m.each(a,function(){e(this.name,this.value)});else for(c in a)Vc(c,a[c],b,e);return d.join("&").replace(Qc,"+")},m.fn.extend({serialize:function(){return m.param(this.serializeArray())},serializeArray:function(){return this.map(function(){var a=m.prop(this,"elements");return a?m.makeArray(a):this}).filter(function(){var a=this.type;return this.name&&!m(this).is(":disabled")&&Uc.test(this.nodeName)&&!Tc.test(a)&&(this.checked||!W.test(a))}).map(function(a,b){var c=m(this).val();return null==c?null:m.isArray(c)?m.map(c,function(a){return{name:b.name,value:a.replace(Sc,"\r\n")}}):{name:b.name,value:c.replace(Sc,"\r\n")}}).get()}}),m.ajaxSettings.xhr=void 0!==a.ActiveXObject?function(){return!this.isLocal&&/^(get|post|head|put|delete|options)$/i.test(this.type)&&Zc()||$c()}:Zc;var Wc=0,Xc={},Yc=m.ajaxSettings.xhr();a.ActiveXObject&&m(a).on("unload",function(){for(var a in Xc)Xc[a](void 0,!0)}),k.cors=!!Yc&&"withCredentials"in Yc,Yc=k.ajax=!!Yc,Yc&&m.ajaxTransport(function(a){if(!a.crossDomain||k.cors){var b;return{send:function(c,d){var e,f=a.xhr(),g=++Wc;if(f.open(a.type,a.url,a.async,a.username,a.password),a.xhrFields)for(e in a.xhrFields)f[e]=a.xhrFields[e];a.mimeType&&f.overrideMimeType&&f.overrideMimeType(a.mimeType),a.crossDomain||c["X-Requested-With"]||(c["X-Requested-With"]="XMLHttpRequest");for(e in c)void 0!==c[e]&&f.setRequestHeader(e,c[e]+"");f.send(a.hasContent&&a.data||null),b=function(c,e){var h,i,j;if(b&&(e||4===f.readyState))if(delete Xc[g],b=void 0,f.onreadystatechange=m.noop,e)4!==f.readyState&&f.abort();else{j={},h=f.status,"string"==typeof f.responseText&&(j.text=f.responseText);try{i=f.statusText}catch(k){i=""}h||!a.isLocal||a.crossDomain?1223===h&&(h=204):h=j.text?200:404}j&&d(h,i,j,f.getAllResponseHeaders())},a.async?4===f.readyState?setTimeout(b):f.onreadystatechange=Xc[g]=b:b()},abort:function(){b&&b(void 0,!0)}}}});function Zc(){try{return new a.XMLHttpRequest}catch(b){}}function $c(){try{return new a.ActiveXObject("Microsoft.XMLHTTP")}catch(b){}}m.ajaxSetup({accepts:{script:"text/javascript, application/javascript, application/ecmascript, application/x-ecmascript"},contents:{script:/(?:java|ecma)script/},converters:{"text script":function(a){return m.globalEval(a),a}}}),m.ajaxPrefilter("script",function(a){void 0===a.cache&&(a.cache=!1),a.crossDomain&&(a.type="GET",a.global=!1)}),m.ajaxTransport("script",function(a){if(a.crossDomain){var b,c=y.head||m("head")[0]||y.documentElement;return{send:function(d,e){b=y.createElement("script"),b.async=!0,a.scriptCharset&&(b.charset=a.scriptCharset),b.src=a.url,b.onload=b.onreadystatechange=function(a,c){(c||!b.readyState||/loaded|complete/.test(b.readyState))&&(b.onload=b.onreadystatechange=null,b.parentNode&&b.parentNode.removeChild(b),b=null,c||e(200,"success"))},c.insertBefore(b,c.firstChild)},abort:function(){b&&b.onload(void 0,!0)}}}});var _c=[],ad=/(=)\?(?=&|$)|\?\?/;m.ajaxSetup({jsonp:"callback",jsonpCallback:function(){var a=_c.pop()||m.expando+"_"+vc++;return this[a]=!0,a}}),m.ajaxPrefilter("json jsonp",function(b,c,d){var e,f,g,h=b.jsonp!==!1&&(ad.test(b.url)?"url":"string"==typeof b.data&&!(b.contentType||"").indexOf("application/x-www-form-urlencoded")&&ad.test(b.data)&&"data");return h||"jsonp"===b.dataTypes[0]?(e=b.jsonpCallback=m.isFunction(b.jsonpCallback)?b.jsonpCallback():b.jsonpCallback,h?b[h]=b[h].replace(ad,"$1"+e):b.jsonp!==!1&&(b.url+=(wc.test(b.url)?"&":"?")+b.jsonp+"="+e),b.converters["script json"]=function(){return g||m.error(e+" was not called"),g[0]},b.dataTypes[0]="json",f=a[e],a[e]=function(){g=arguments},d.always(function(){a[e]=f,b[e]&&(b.jsonpCallback=c.jsonpCallback,_c.push(e)),g&&m.isFunction(f)&&f(g[0]),g=f=void 0}),"script"):void 0}),m.parseHTML=function(a,b,c){if(!a||"string"!=typeof a)return null;"boolean"==typeof b&&(c=b,b=!1),b=b||y;var d=u.exec(a),e=!c&&[];return d?[b.createElement(d[1])]:(d=m.buildFragment([a],b,e),e&&e.length&&m(e).remove(),m.merge([],d.childNodes))};var bd=m.fn.load;m.fn.load=function(a,b,c){if("string"!=typeof a&&bd)return bd.apply(this,arguments);var d,e,f,g=this,h=a.indexOf(" ");return h>=0&&(d=m.trim(a.slice(h,a.length)),a=a.slice(0,h)),m.isFunction(b)?(c=b,b=void 0):b&&"object"==typeof b&&(f="POST"),g.length>0&&m.ajax({url:a,type:f,dataType:"html",data:b}).done(function(a){e=arguments,g.html(d?m("<div>").append(m.parseHTML(a)).find(d):a)}).complete(c&&function(a,b){g.each(c,e||[a.responseText,b,a])}),this},m.expr.filters.animated=function(a){return m.grep(m.timers,function(b){return a===b.elem}).length};var cd=a.document.documentElement;function dd(a){return m.isWindow(a)?a:9===a.nodeType?a.defaultView||a.parentWindow:!1}m.offset={setOffset:function(a,b,c){var d,e,f,g,h,i,j,k=m.css(a,"position"),l=m(a),n={};"static"===k&&(a.style.position="relative"),h=l.offset(),f=m.css(a,"top"),i=m.css(a,"left"),j=("absolute"===k||"fixed"===k)&&m.inArray("auto",[f,i])>-1,j?(d=l.position(),g=d.top,e=d.left):(g=parseFloat(f)||0,e=parseFloat(i)||0),m.isFunction(b)&&(b=b.call(a,c,h)),null!=b.top&&(n.top=b.top-h.top+g),null!=b.left&&(n.left=b.left-h.left+e),"using"in b?b.using.call(a,n):l.css(n)}},m.fn.extend({offset:function(a){if(arguments.length)return void 0===a?this:this.each(function(b){m.offset.setOffset(this,a,b)});var b,c,d={top:0,left:0},e=this[0],f=e&&e.ownerDocument;if(f)return b=f.documentElement,m.contains(b,e)?(typeof e.getBoundingClientRect!==K&&(d=e.getBoundingClientRect()),c=dd(f),{top:d.top+(c.pageYOffset||b.scrollTop)-(b.clientTop||0),left:d.left+(c.pageXOffset||b.scrollLeft)-(b.clientLeft||0)}):d},position:function(){if(this[0]){var a,b,c={top:0,left:0},d=this[0];return"fixed"===m.css(d,"position")?b=d.getBoundingClientRect():(a=this.offsetParent(),b=this.offset(),m.nodeName(a[0],"html")||(c=a.offset()),c.top+=m.css(a[0],"borderTopWidth",!0),c.left+=m.css(a[0],"borderLeftWidth",!0)),{top:b.top-c.top-m.css(d,"marginTop",!0),left:b.left-c.left-m.css(d,"marginLeft",!0)}}},offsetParent:function(){return this.map(function(){var a=this.offsetParent||cd;while(a&&!m.nodeName(a,"html")&&"static"===m.css(a,"position"))a=a.offsetParent;return a||cd})}}),m.each({scrollLeft:"pageXOffset",scrollTop:"pageYOffset"},function(a,b){var c=/Y/.test(b);m.fn[a]=function(d){return V(this,function(a,d,e){var f=dd(a);return void 0===e?f?b in f?f[b]:f.document.documentElement[d]:a[d]:void(f?f.scrollTo(c?m(f).scrollLeft():e,c?e:m(f).scrollTop()):a[d]=e)},a,d,arguments.length,null)}}),m.each(["top","left"],function(a,b){m.cssHooks[b]=Lb(k.pixelPosition,function(a,c){return c?(c=Jb(a,b),Hb.test(c)?m(a).position()[b]+"px":c):void 0})}),m.each({Height:"height",Width:"width"},function(a,b){m.each({padding:"inner"+a,content:b,"":"outer"+a},function(c,d){m.fn[d]=function(d,e){var f=arguments.length&&(c||"boolean"!=typeof d),g=c||(d===!0||e===!0?"margin":"border");return V(this,function(b,c,d){var e;return m.isWindow(b)?b.document.documentElement["client"+a]:9===b.nodeType?(e=b.documentElement,Math.max(b.body["scroll"+a],e["scroll"+a],b.body["offset"+a],e["offset"+a],e["client"+a])):void 0===d?m.css(b,c,g):m.style(b,c,d,g)},b,f?d:void 0,f,null)}})}),m.fn.size=function(){return this.length},m.fn.andSelf=m.fn.addBack,"function"==typeof define&&define.amd&&define("jquery",[],function(){return m});var ed=a.jQuery,fd=a.$;return m.noConflict=function(b){return a.$===m&&(a.$=fd),b&&a.jQuery===m&&(a.jQuery=ed),m},typeof b===K&&(a.jQuery=a.$=m),m});

================================================================================
END: D:\QiEOS\apps\web\public\builtbyrays_public\builtbyrays.com\public\js\jquery.1.11.1.js
================================================================================


================================================================================
FILE: D:\QiEOS\apps\web\public\builtbyrays_public\builtbyrays.com\src\App.css
================================================================================

@media screen and (max-width: 400px) {
  #features {
    padding: 20px;
    width: 111%;
  }
  #about,
  #services,
  #testimonials,
  #team,
  #contact,
  #footer {
    width: 111%;
  }

  #portfolio {
    width: 110%;
  }
}


================================================================================
END: D:\QiEOS\apps\web\public\builtbyrays_public\builtbyrays.com\src\App.css
================================================================================


================================================================================
FILE: D:\QiEOS\apps\web\public\builtbyrays_public\builtbyrays.com\src\App.jsx
================================================================================

import React, { useState, useEffect } from "react";
import { Navigation } from "./components/navigation";
import { Header } from "./components/header";
import { Features } from "./components/features";
import { About } from "./components/about";
import { Services } from "./components/services";
import { Gallery } from "./components/gallery";
import { Testimonials } from "./components/testimonials";
import { Team } from "./components/Team";
import { Contact } from "./components/contact";
import JsonData from "./data/data.json";
import SmoothScroll from "smooth-scroll";
import "./App.css";

export const scroll = new SmoothScroll('a[href*="#"]', {
  speed: 1000,
  speedAsDuration: true,
});

const App = () => {
  const [landingPageData, setLandingPageData] = useState({});
  useEffect(() => {
    setLandingPageData(JsonData);
  }, []);

  return (
    <div>
      <Navigation />
      <Header data={landingPageData.Header} />
      <Features data={landingPageData.Features} />
      <About data={landingPageData.About} />
      <Services data={landingPageData.Services} />
      <Gallery data={landingPageData.Gallery} />
      <Testimonials data={landingPageData.Testimonials} />
      <Team data={landingPageData.Team} />
      <Contact data={landingPageData.Contact} />
    </div>
  );
};

export default App;


================================================================================
END: D:\QiEOS\apps\web\public\builtbyrays_public\builtbyrays.com\src\App.jsx
================================================================================


================================================================================
FILE: D:\QiEOS\apps\web\public\builtbyrays_public\builtbyrays.com\src\index.css
================================================================================

body {
  margin: 0;
  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen',
    'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue',
    sans-serif;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

code {
  font-family: source-code-pro, Menlo, Monaco, Consolas, 'Courier New',
    monospace;
}


================================================================================
END: D:\QiEOS\apps\web\public\builtbyrays_public\builtbyrays.com\src\index.css
================================================================================


================================================================================
FILE: D:\QiEOS\apps\web\public\builtbyrays_public\builtbyrays.com\src\index.js
================================================================================

import React from 'react';
import ReactDOM from 'react-dom';
import './index.css';
import App from './App';
import * as serviceWorker from './serviceWorker';

ReactDOM.render(
  <React.StrictMode>
    <App />
  </React.StrictMode>,
  document.getElementById('root')
);

// If you want your app to work offline and load faster, you can change
// unregister() to register() below. Note this comes with some pitfalls.
// Learn more about service workers: https://bit.ly/CRA-PWA
serviceWorker.unregister();


================================================================================
END: D:\QiEOS\apps\web\public\builtbyrays_public\builtbyrays.com\src\index.js
================================================================================


================================================================================
FILE: D:\QiEOS\apps\web\public\builtbyrays_public\builtbyrays.com\src\serviceWorker.js
================================================================================

// This optional code is used to register a service worker.
// register() is not called by default.

// This lets the app load faster on subsequent visits in production, and gives
// it offline capabilities. However, it also means that developers (and users)
// will only see deployed updates on subsequent visits to a page, after all the
// existing tabs open on the page have been closed, since previously cached
// resources are updated in the background.

// To learn more about the benefits of this model and instructions on how to
// opt-in, read https://bit.ly/CRA-PWA

const isLocalhost = Boolean(
  window.location.hostname === 'localhost' ||
    // [::1] is the IPv6 localhost address.
    window.location.hostname === '[::1]' ||
    // 127.0.0.0/8 are considered localhost for IPv4.
    window.location.hostname.match(
      /^127(?:\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/
    )
);

export function register(config) {
  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {
    // The URL constructor is available in all browsers that support SW.
    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);
    if (publicUrl.origin !== window.location.origin) {
      // Our service worker won't work if PUBLIC_URL is on a different origin
      // from what our page is served on. This might happen if a CDN is used to
      // serve assets; see https://github.com/facebook/create-react-app/issues/2374
      return;
    }

    window.addEventListener('load', () => {
      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;

      if (isLocalhost) {
        // This is running on localhost. Let's check if a service worker still exists or not.
        checkValidServiceWorker(swUrl, config);

        // Add some additional logging to localhost, pointing developers to the
        // service worker/PWA documentation.
        navigator.serviceWorker.ready.then(() => {
          console.log(
            'This web app is being served cache-first by a service ' +
              'worker. To learn more, visit https://bit.ly/CRA-PWA'
          );
        });
      } else {
        // Is not localhost. Just register service worker
        registerValidSW(swUrl, config);
      }
    });
  }
}

function registerValidSW(swUrl, config) {
  navigator.serviceWorker
    .register(swUrl)
    .then(registration => {
      registration.onupdatefound = () => {
        const installingWorker = registration.installing;
        if (installingWorker == null) {
          return;
        }
        installingWorker.onstatechange = () => {
          if (installingWorker.state === 'installed') {
            if (navigator.serviceWorker.controller) {
              // At this point, the updated precached content has been fetched,
              // but the previous service worker will still serve the older
              // content until all client tabs are closed.
              console.log(
                'New content is available and will be used when all ' +
                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'
              );

              // Execute callback
              if (config && config.onUpdate) {
                config.onUpdate(registration);
              }
            } else {
              // At this point, everything has been precached.
              // It's the perfect time to display a
              // "Content is cached for offline use." message.
              console.log('Content is cached for offline use.');

              // Execute callback
              if (config && config.onSuccess) {
                config.onSuccess(registration);
              }
            }
          }
        };
      };
    })
    .catch(error => {
      console.error('Error during service worker registration:', error);
    });
}

function checkValidServiceWorker(swUrl, config) {
  // Check if the service worker can be found. If it can't reload the page.
  fetch(swUrl, {
    headers: { 'Service-Worker': 'script' },
  })
    .then(response => {
      // Ensure service worker exists, and that we really are getting a JS file.
      const contentType = response.headers.get('content-type');
      if (
        response.status === 404 ||
        (contentType != null && contentType.indexOf('javascript') === -1)
      ) {
        // No service worker found. Probably a different app. Reload the page.
        navigator.serviceWorker.ready.then(registration => {
          registration.unregister().then(() => {
            window.location.reload();
          });
        });
      } else {
        // Service worker found. Proceed as normal.
        registerValidSW(swUrl, config);
      }
    })
    .catch(() => {
      console.log(
        'No internet connection found. App is running in offline mode.'
      );
    });
}

export function unregister() {
  if ('serviceWorker' in navigator) {
    navigator.serviceWorker.ready
      .then(registration => {
        registration.unregister();
      })
      .catch(error => {
        console.error(error.message);
      });
  }
}


================================================================================
END: D:\QiEOS\apps\web\public\builtbyrays_public\builtbyrays.com\src\serviceWorker.js
================================================================================


================================================================================
FILE: D:\QiEOS\apps\web\public\builtbyrays_public\builtbyrays.com\src\setupTests.js
================================================================================

// jest-dom adds custom jest matchers for asserting on DOM nodes.
// allows you to do things like:
// expect(element).toHaveTextContent(/react/i)
// learn more: https://github.com/testing-library/jest-dom
import '@testing-library/jest-dom/extend-expect';


================================================================================
END: D:\QiEOS\apps\web\public\builtbyrays_public\builtbyrays.com\src\setupTests.js
================================================================================


================================================================================
FILE: D:\QiEOS\apps\web\public\builtbyrays_public\builtbyrays.com\src\components\about.jsx
================================================================================

import React from "react";

export const About = (props) => {
  return (
    <div id="about">
      <div className="container">
        <div className="row">
          <div className="col-xs-12 col-md-6">
            {" "}
            <img src="img/about.jpg" className="img-responsive" alt="" />{" "}
          </div>
          <div className="col-xs-12 col-md-6">
            <div className="about-text">
              <h2>About Us</h2>
              <p>{props.data ? props.data.paragraph : "loading..."}</p>
              <h3>Why Choose Us?</h3>
              <div className="list-style">
                <div className="col-lg-6 col-sm-6 col-xs-12">
                  <ul>
                    {props.data
                      ? props.data.Why.map((d, i) => (
                          <li key={`${d}-${i}`}>{d}</li>
                        ))
                      : "loading"}
                  </ul>
                </div>
                <div className="col-lg-6 col-sm-6 col-xs-12">
                  <ul>
                    {props.data
                      ? props.data.Why2.map((d, i) => (
                          <li key={`${d}-${i}`}> {d}</li>
                        ))
                      : "loading"}
                  </ul>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  );
};


================================================================================
END: D:\QiEOS\apps\web\public\builtbyrays_public\builtbyrays.com\src\components\about.jsx
================================================================================


================================================================================
FILE: D:\QiEOS\apps\web\public\builtbyrays_public\builtbyrays.com\src\components\contact.jsx
================================================================================

import { useState } from "react";
import emailjs from "emailjs-com";
import React from "react";

const initialState = {
  name: "",
  email: "",
  message: "",
};
export const Contact = (props) => {
  const [{ name, email, message }, setState] = useState(initialState);

  const handleChange = (e) => {
    const { name, value } = e.target;
    setState((prevState) => ({ ...prevState, [name]: value }));
  };
  const clearState = () => setState({ ...initialState });
  
  
  const handleSubmit = (e) => {
    e.preventDefault();
    console.log(name, email, message);
    
    {/* replace below with your own Service ID, Template ID and Public Key from your EmailJS account */ }
    
    emailjs
      .sendForm("YOUR_SERVICE_ID", "YOUR_TEMPLATE_ID", e.target, "YOUR_PUBLIC_KEY")
      .then(
        (result) => {
          console.log(result.text);
          clearState();
        },
        (error) => {
          console.log(error.text);
        }
      );
  };
  return (
    <div>
      <div id="contact">
        <div className="container">
          <div className="col-md-8">
            <div className="row">
              <div className="section-title">
                <h2>Get In Touch</h2>
                <p>
                  Please fill out the form below to send us an email and we will
                  get back to you as soon as possible.
                </p>
              </div>
              <form name="sentMessage" validate onSubmit={handleSubmit}>
                <div className="row">
                  <div className="col-md-6">
                    <div className="form-group">
                      <input
                        type="text"
                        id="name"
                        name="name"
                        className="form-control"
                        placeholder="Name"
                        required
                        onChange={handleChange}
                      />
                      <p className="help-block text-danger"></p>
                    </div>
                  </div>
                  <div className="col-md-6">
                    <div className="form-group">
                      <input
                        type="email"
                        id="email"
                        name="email"
                        className="form-control"
                        placeholder="Email"
                        required
                        onChange={handleChange}
                      />
                      <p className="help-block text-danger"></p>
                    </div>
                  </div>
                </div>
                <div className="form-group">
                  <textarea
                    name="message"
                    id="message"
                    className="form-control"
                    rows="4"
                    placeholder="Message"
                    required
                    onChange={handleChange}
                  ></textarea>
                  <p className="help-block text-danger"></p>
                </div>
                <div id="success"></div>
                <button type="submit" className="btn btn-custom btn-lg">
                  Send Message
                </button>
              </form>
            </div>
          </div>
          <div className="col-md-3 col-md-offset-1 contact-info">
            <div className="contact-item">
              <h3>Contact Info</h3>
              <p>
                <span>
                  <i className="fa fa-map-marker"></i> Address
                </span>
                {props.data ? props.data.address : "loading"}
              </p>
            </div>
            <div className="contact-item">
              <p>
                <span>
                  <i className="fa fa-phone"></i> Phone
                </span>{" "}
                {props.data ? props.data.phone : "loading"}
              </p>
            </div>
            <div className="contact-item">
              <p>
                <span>
                  <i className="fa fa-envelope-o"></i> Email
                </span>{" "}
                {props.data ? props.data.email : "loading"}
              </p>
            </div>
          </div>
          <div className="col-md-12">
            <div className="row">
              <div className="social">
                <ul>
                  <li>
                    <a href={props.data ? props.data.facebook : "/"}>
                      <i className="fa fa-facebook"></i>
                    </a>
                  </li>
                  <li>
                    <a href={props.data ? props.data.twitter : "/"}>
                      <i className="fa fa-twitter"></i>
                    </a>
                  </li>
                  <li>
                    <a href={props.data ? props.data.youtube : "/"}>
                      <i className="fa fa-youtube"></i>
                    </a>
                  </li>
                </ul>
              </div>
            </div>
          </div>
        </div>
      </div>
      <div id="footer">
        <div className="container text-center">
          <p>
            &copy; 2023 Issaaf Kattan React Land Page Template. Design by{" "}
            <a href="http://www.templatewire.com" rel="nofollow">
              TemplateWire
            </a>
          </p>
        </div>
      </div>
    </div>
  );
};


================================================================================
END: D:\QiEOS\apps\web\public\builtbyrays_public\builtbyrays.com\src\components\contact.jsx
================================================================================


================================================================================
FILE: D:\QiEOS\apps\web\public\builtbyrays_public\builtbyrays.com\src\components\features.jsx
================================================================================

import React from "react";

export const Features = (props) => {
  return (
    <div id="features" className="text-center">
      <div className="container">
        <div className="col-md-10 col-md-offset-1 section-title">
          <h2>Features</h2>
        </div>
        <div className="row">
          {props.data
            ? props.data.map((d, i) => (
                <div key={`${d.title}-${i}`} className="col-xs-6 col-md-3">
                  {" "}
                  <i className={d.icon}></i>
                  <h3>{d.title}</h3>
                  <p>{d.text}</p>
                </div>
              ))
            : "Loading..."}
        </div>
      </div>
    </div>
  );
};


================================================================================
END: D:\QiEOS\apps\web\public\builtbyrays_public\builtbyrays.com\src\components\features.jsx
================================================================================


================================================================================
FILE: D:\QiEOS\apps\web\public\builtbyrays_public\builtbyrays.com\src\components\gallery.jsx
================================================================================

import { Image } from "./image";
import React from "react";

export const Gallery = (props) => {
  return (
    <div id="portfolio" className="text-center">
      <div className="container">
        <div className="section-title">
          <h2>Gallery</h2>
          <p>
            Lorem ipsum dolor sit amet, consectetur adipiscing elit duis sed
            dapibus leonec.
          </p>
        </div>
        <div className="row">
          <div className="portfolio-items">
            {props.data
              ? props.data.map((d, i) => (
                  <div
                    key={`${d.title}-${i}`}
                    className="col-sm-6 col-md-4 col-lg-4"
                  >
                    <Image
                      title={d.title}
                      largeImage={d.largeImage}
                      smallImage={d.smallImage}
                    />
                  </div>
                ))
              : "Loading..."}
          </div>
        </div>
      </div>
    </div>
  );
};


================================================================================
END: D:\QiEOS\apps\web\public\builtbyrays_public\builtbyrays.com\src\components\gallery.jsx
================================================================================


================================================================================
FILE: D:\QiEOS\apps\web\public\builtbyrays_public\builtbyrays.com\src\components\header.jsx
================================================================================

import React from "react";

export const Header = (props) => {
  return (
    <header id="header">
      <div className="intro">
        <div className="overlay">
          <div className="container">
            <div className="row">
              <div className="col-md-8 col-md-offset-2 intro-text">
                <h1>
                  {props.data ? props.data.title : "Loading"}
                  <span></span>
                </h1>
                <p>{props.data ? props.data.paragraph : "Loading"}</p>
                <a
                  href="#features"
                  className="btn btn-custom btn-lg page-scroll"
                >
                  Learn More
                </a>{" "}
              </div>
            </div>
          </div>
        </div>
      </div>
    </header>
  );
};


================================================================================
END: D:\QiEOS\apps\web\public\builtbyrays_public\builtbyrays.com\src\components\header.jsx
================================================================================


================================================================================
FILE: D:\QiEOS\apps\web\public\builtbyrays_public\builtbyrays.com\src\components\image.jsx
================================================================================

import React from "react";

export const Image = ({ title, largeImage, smallImage }) => {
  return (
    <div className="portfolio-item">
      <div className="hover-bg">
        {" "}
        <a href={largeImage} title={title} data-lightbox-gallery="gallery1">
          <div className="hover-text">
            <h4>{title}</h4>
          </div>
          <img src={smallImage} className="img-responsive" alt={title} />{" "}
        </a>{" "}
      </div>
    </div>
  );
};


================================================================================
END: D:\QiEOS\apps\web\public\builtbyrays_public\builtbyrays.com\src\components\image.jsx
================================================================================


================================================================================
FILE: D:\QiEOS\apps\web\public\builtbyrays_public\builtbyrays.com\src\components\navigation.jsx
================================================================================

import React from "react";

export const Navigation = (props) => {
  return (
    <nav id="menu" className="navbar navbar-default navbar-fixed-top">
      <div className="container">
        <div className="navbar-header">
          <button
            type="button"
            className="navbar-toggle collapsed"
            data-toggle="collapse"
            data-target="#bs-example-navbar-collapse-1"
          >
            {" "}
            <span className="sr-only">Toggle navigation</span>{" "}
            <span className="icon-bar"></span>{" "}
            <span className="icon-bar"></span>{" "}
            <span className="icon-bar"></span>{" "}
          </button>
          <a className="navbar-brand page-scroll" href="#page-top">
            React Landing Page
          </a>{" "}
        </div>

        <div
          className="collapse navbar-collapse"
          id="bs-example-navbar-collapse-1"
        >
          <ul className="nav navbar-nav navbar-right">
            <li>
              <a href="#features" className="page-scroll">
                Features
              </a>
            </li>
            <li>
              <a href="#about" className="page-scroll">
                About
              </a>
            </li>
            <li>
              <a href="#services" className="page-scroll">
                Services
              </a>
            </li>
            <li>
              <a href="#portfolio" className="page-scroll">
                Gallery
              </a>
            </li>
            <li>
              <a href="#testimonials" className="page-scroll">
                Testimonials
              </a>
            </li>
            <li>
              <a href="#team" className="page-scroll">
                Team
              </a>
            </li>
            <li>
              <a href="#contact" className="page-scroll">
                Contact
              </a>
            </li>
          </ul>
        </div>
      </div>
    </nav>
  );
};


================================================================================
END: D:\QiEOS\apps\web\public\builtbyrays_public\builtbyrays.com\src\components\navigation.jsx
================================================================================


================================================================================
FILE: D:\QiEOS\apps\web\public\builtbyrays_public\builtbyrays.com\src\components\services.jsx
================================================================================

import React from "react";

export const Services = (props) => {
  return (
    <div id="services" className="text-center">
      <div className="container">
        <div className="section-title">
          <h2>Our Services</h2>
          <p>
            Lorem ipsum dolor sit amet, consectetur adipiscing elit duis sed
            dapibus leonec.
          </p>
        </div>
        <div className="row">
          {props.data
            ? props.data.map((d, i) => (
                <div key={`${d.name}-${i}`} className="col-md-4">
                  {" "}
                  <i className={d.icon}></i>
                  <div className="service-desc">
                    <h3>{d.name}</h3>
                    <p>{d.text}</p>
                  </div>
                </div>
              ))
            : "loading"}
        </div>
      </div>
    </div>
  );
};


================================================================================
END: D:\QiEOS\apps\web\public\builtbyrays_public\builtbyrays.com\src\components\services.jsx
================================================================================


================================================================================
FILE: D:\QiEOS\apps\web\public\builtbyrays_public\builtbyrays.com\src\components\Team.jsx
================================================================================

import React from "react";

export const Team = (props) => {
  return (
    <div id="team" className="text-center">
      <div className="container">
        <div className="col-md-8 col-md-offset-2 section-title">
          <h2>Meet the Team</h2>
          <p>
            Lorem ipsum dolor sit amet, consectetur adipiscing elit duis sed
            dapibus leonec.
          </p>
        </div>
        <div id="row">
          {props.data
            ? props.data.map((d, i) => (
                <div key={`${d.name}-${i}`} className="col-md-3 col-sm-6 team">
                  <div className="thumbnail">
                    {" "}
                    <img src={d.img} alt="..." className="team-img" />
                    <div className="caption">
                      <h4>{d.name}</h4>
                      <p>{d.job}</p>
                    </div>
                  </div>
                </div>
              ))
            : "loading"}
        </div>
      </div>
    </div>
  );
};


================================================================================
END: D:\QiEOS\apps\web\public\builtbyrays_public\builtbyrays.com\src\components\Team.jsx
================================================================================


================================================================================
FILE: D:\QiEOS\apps\web\public\builtbyrays_public\builtbyrays.com\src\components\testimonials.jsx
================================================================================

import React from "react";

export const Testimonials = (props) => {
  return (
    <div id="testimonials">
      <div className="container">
        <div className="section-title text-center">
          <h2>What our clients say</h2>
        </div>
        <div className="row">
          {props.data
            ? props.data.map((d, i) => (
                <div key={`${d.name}-${i}`} className="col-md-4">
                  <div className="testimonial">
                    <div className="testimonial-image">
                      {" "}
                      <img src={d.img} alt="" />{" "}
                    </div>
                    <div className="testimonial-content">
                      <p>"{d.text}"</p>
                      <div className="testimonial-meta"> - {d.name} </div>
                    </div>
                  </div>
                </div>
              ))
            : "loading"}
        </div>
      </div>
    </div>
  );
};


================================================================================
END: D:\QiEOS\apps\web\public\builtbyrays_public\builtbyrays.com\src\components\testimonials.jsx
================================================================================


================================================================================
FILE: D:\QiEOS\apps\web\public\builtbyrays_public\builtbyrays.com\src\data\data.json
================================================================================

{
  "Header": {
    "title": "We are a Landing Page",
    "paragraph": "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis sed dapibus leo nec ornare diam sed commodo nibh ante facilisis bibendum."
  },
  "About": {
    "paragraph": "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.",
    "Why": [
      "Lorem ipsum dolor",
      "Tempor incididunt",
      "Lorem ipsum dolor",
      "Incididunt ut labore"
    ],
    "Why2": [
      "Aliquip ex ea commodo",
      "Lorem ipsum dolor",
      "Exercitation ullamco",
      "Lorem ipsum dolor"
    ]
  },
  "Gallery": [
    {
      "title": "Project Title",
      "largeImage": "img/portfolio/01-large.jpg",
      "smallImage": "img/portfolio/01-small.jpg"
    },
    {
      "title": "Project Title",
      "largeImage": "img/portfolio/02-large.jpg",
      "smallImage": "img/portfolio/02-small.jpg"
    },
    {
      "title": "Project Title",
      "largeImage": "img/portfolio/03-large.jpg",
      "smallImage": "img/portfolio/03-small.jpg"
    },
    {
      "title": "Project Title",
      "largeImage": "img/portfolio/04-large.jpg",
      "smallImage": "img/portfolio/04-small.jpg"
    },
    {
      "title": "Project Title",
      "largeImage": "img/portfolio/05-large.jpg",
      "smallImage": "img/portfolio/05-small.jpg"
    },
    {
      "title": "Project Title",
      "largeImage": "img/portfolio/06-large.jpg",
      "smallImage": "img/portfolio/06-small.jpg"
    },
    {
      "title": "Project Title",
      "largeImage": "img/portfolio/07-large.jpg",
      "smallImage": "img/portfolio/07-small.jpg"
    },
    {
      "title": "Project Title",
      "largeImage": "img/portfolio/08-large.jpg",
      "smallImage": "img/portfolio/08-small.jpg"
    },
    {
      "title": "Project Title",
      "largeImage": "img/portfolio/09-large.jpg",
      "smallImage": "img/portfolio/09-small.jpg"
    }
  ],
  "Services": [
    {
      "icon": "fa fa-wordpress",
      "name": "Lorem ipsum dolor",
      "text": "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis sed dapibus leo nec ornare diam sedasd commodo nibh ante facilisis bibendum dolor feugiat at."
    },
    {
      "icon": "fa fa-cart-arrow-down",
      "name": "Consectetur adipiscing",
      "text": "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis sed dapibus leo nec ornare diam sedasd commodo nibh ante facilisis bibendum dolor feugiat at."
    },
    {
      "icon": "fa fa-cloud-download",
      "name": "Lorem ipsum dolor",
      "text": "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis sed dapibus leo nec ornare diam sedasd commodo nibh ante facilisis bibendum dolor feugiat at."
    },
    {
      "icon": "fa fa-language",
      "name": "Consectetur adipiscing",
      "text": "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis sed dapibus leo nec ornare diam sedasd commodo nibh ante facilisis bibendum dolor feugiat at."
    },
    {
      "icon": "fa fa-plane",
      "name": "Lorem ipsum dolor",
      "text": "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis sed dapibus leo nec ornare diam sedasd commodo nibh ante facilisis bibendum dolor feugiat at."
    },
    {
      "icon": "fa fa-pie-chart",
      "name": "Consectetur adipiscing",
      "text": "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis sed dapibus leo nec ornare diam sedasd commodo nibh ante facilisis bibendum dolor feugiat at."
    }
  ],
  "Testimonials": [
    {
      "img": "img/testimonials/01.jpg",
      "text": "\"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis sed dapibus leo nec ornare diam sedasd commodo nibh ante facilisis bibendum dolor feugiat at.\"",
      "name": "John Doe"
    },
    {
      "img": "img/testimonials/02.jpg",
      "text": "\"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis sed dapibus leo nec ornare diam sedasd commodo nibh ante facilisis bibendum dolor feugiat at.\"",
      "name": "Johnathan Doe"
    },
    {
      "img": "img/testimonials/03.jpg",
      "text": "\"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis sed dapibus leo nec ornare diam sedasd commodo nibh ante facilisis bibendum dolor feugiat at.\"",
      "name": "John Doe"
    },
    {
      "img": "img/testimonials/04.jpg",
      "text": "\"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis sed dapibus leo nec ornare diam sedasd commodo nibh ante facilisis bibendum dolor feugiat at.\"",
      "name": "Johnathan Doe"
    },
    {
      "img": "img/testimonials/05.jpg",
      "text": "\"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis sed dapibus leo nec ornare diam sedasd commodo nibh ante facilisis bibendum dolor feugiat at.\"",
      "name": "John Doe"
    },
    {
      "img": "img/testimonials/06.jpg",
      "text": "\"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis sed dapibus leo nec ornare diam sedasd commodo nibh ante facilisis bibendum dolor feugiat at.\"",
      "name": "Johnathan Doe"
    }
  ],
  "Team": [
    {
      "img": "img/team/01.jpg",
      "name": "John Doe",
      "job": "Director"
    },
    {
      "img": "img/team/02.jpg",
      "name": "Mike Doe",
      "job": "Senior Designer"
    },
    {
      "img": "img/team/03.jpg",
      "name": "Jane Doe",
      "job": "Senior Designer"
    },
    {
      "img": "img/team/04.jpg",
      "name": "Karen Doe",
      "job": "Project Manager"
    }
  ],
  "Contact": {
    "address": "4321 California St, San Francisco, CA 12345 ",
    "phone": "+1 123 456 1234",
    "email": "info@company.com",
    "facebook": "fb.com",
    "twitter": "twitter.com",
    "youtube": "youtube.com"
  },
  "Features": [
    {
      "icon": "fa fa-comments-o",
      "title": "Lorem ipsum",
      "text": "Lorem ipsum dolor sit amet placerat facilisis felis mi in tempus eleifend pellentesque natoque etiam."
    },
    {
      "icon": "fa fa-bullhorn",
      "title": "Lorem ipsum",
      "text": "Lorem ipsum dolor sit amet placerat facilisis felis mi in tempus eleifend pellentesque natoque etiam."
    },
    {
      "icon": "fa fa-group",
      "title": "Lorem ipsum",
      "text": "Lorem ipsum dolor sit amet placerat facilisis felis mi in tempus eleifend pellentesque natoque etiam."
    },
    {
      "icon": "fa fa-magic",
      "title": "Lorem ipsum",
      "text": "Lorem ipsum dolor sit amet placerat facilisis felis mi in tempus eleifend pellentesque natoque etiam."
    }
  ]
}


================================================================================
END: D:\QiEOS\apps\web\public\builtbyrays_public\builtbyrays.com\src\data\data.json
================================================================================


================================================================================
FILE: D:\QiEOS\apps\web\public\builtbyrays_public\snapshots\snapshot_timestamp.txt
================================================================================

﻿2025-09-08_20-05-13


================================================================================
END: D:\QiEOS\apps\web\public\builtbyrays_public\snapshots\snapshot_timestamp.txt
================================================================================


================================================================================
FILE: D:\QiEOS\apps\web\public\builtbyrays_public\v2\react-landing-page-template-2021\CODE_OF_CONDUCT.md
================================================================================

# Contributor Covenant Code of Conduct

## Our Pledge

We as members, contributors, and leaders pledge to make participation in our
community a harassment-free experience for everyone, regardless of age, body
size, visible or invisible disability, ethnicity, sex characteristics, gender
identity and expression, level of experience, education, socio-economic status,
nationality, personal appearance, race, religion, or sexual identity
and orientation.

We pledge to act and interact in ways that contribute to an open, welcoming,
diverse, inclusive, and healthy community.

## Our Standards

Examples of behavior that contributes to a positive environment for our
community include:

* Demonstrating empathy and kindness toward other people
* Being respectful of differing opinions, viewpoints, and experiences
* Giving and gracefully accepting constructive feedback
* Accepting responsibility and apologizing to those affected by our mistakes,
  and learning from the experience
* Focusing on what is best not just for us as individuals, but for the
  overall community

Examples of unacceptable behavior include:

* The use of sexualized language or imagery, and sexual attention or
  advances of any kind
* Trolling, insulting or derogatory comments, and personal or political attacks
* Public or private harassment
* Publishing others' private information, such as a physical or email
  address, without their explicit permission
* Other conduct which could reasonably be considered inappropriate in a
  professional setting

## Enforcement Responsibilities

Community leaders are responsible for clarifying and enforcing our standards of
acceptable behavior and will take appropriate and fair corrective action in
response to any behavior that they deem inappropriate, threatening, offensive,
or harmful.

Community leaders have the right and responsibility to remove, edit, or reject
comments, commits, code, wiki edits, issues, and other contributions that are
not aligned to this Code of Conduct, and will communicate reasons for moderation
decisions when appropriate.

## Scope

This Code of Conduct applies within all community spaces, and also applies when
an individual is officially representing the community in public spaces.
Examples of representing our community include using an official e-mail address,
posting via an official social media account, or acting as an appointed
representative at an online or offline event.

## Enforcement

Instances of abusive, harassing, or otherwise unacceptable behavior may be
reported to the community leaders responsible for enforcement at
.
All complaints will be reviewed and investigated promptly and fairly.

All community leaders are obligated to respect the privacy and security of the
reporter of any incident.

## Enforcement Guidelines

Community leaders will follow these Community Impact Guidelines in determining
the consequences for any action they deem in violation of this Code of Conduct:

### 1. Correction

**Community Impact**: Use of inappropriate language or other behavior deemed
unprofessional or unwelcome in the community.

**Consequence**: A private, written warning from community leaders, providing
clarity around the nature of the violation and an explanation of why the
behavior was inappropriate. A public apology may be requested.

### 2. Warning

**Community Impact**: A violation through a single incident or series
of actions.

**Consequence**: A warning with consequences for continued behavior. No
interaction with the people involved, including unsolicited interaction with
those enforcing the Code of Conduct, for a specified period of time. This
includes avoiding interactions in community spaces as well as external channels
like social media. Violating these terms may lead to a temporary or
permanent ban.

### 3. Temporary Ban

**Community Impact**: A serious violation of community standards, including
sustained inappropriate behavior.

**Consequence**: A temporary ban from any sort of interaction or public
communication with the community for a specified period of time. No public or
private interaction with the people involved, including unsolicited interaction
with those enforcing the Code of Conduct, is allowed during this period.
Violating these terms may lead to a permanent ban.

### 4. Permanent Ban

**Community Impact**: Demonstrating a pattern of violation of community
standards, including sustained inappropriate behavior,  harassment of an
individual, or aggression toward or disparagement of classes of individuals.

**Consequence**: A permanent ban from any sort of public interaction within
the community.

## Attribution

This Code of Conduct is adapted from the [Contributor Covenant][homepage],
version 2.0, available at
https://www.contributor-covenant.org/version/2/0/code_of_conduct.html.

Community Impact Guidelines were inspired by [Mozilla's code of conduct
enforcement ladder](https://github.com/mozilla/diversity).

[homepage]: https://www.contributor-covenant.org

For answers to common questions about this code of conduct, see the FAQ at
https://www.contributor-covenant.org/faq. Translations are available at
https://www.contributor-covenant.org/translations.


================================================================================
END: D:\QiEOS\apps\web\public\builtbyrays_public\v2\react-landing-page-template-2021\CODE_OF_CONDUCT.md
================================================================================


================================================================================
FILE: D:\QiEOS\apps\web\public\builtbyrays_public\v2\react-landing-page-template-2021\lint-staged.config.js
================================================================================

module.exports = {
  '*.{js,jsx,ts,tsx}': ['eslint --fix', 'eslint'],
  '**/*.ts?(x)': () => 'npm run build-types',
  '*.json': ['prettier --write'],
};


================================================================================
END: D:\QiEOS\apps\web\public\builtbyrays_public\v2\react-landing-page-template-2021\lint-staged.config.js
================================================================================


================================================================================
FILE: D:\QiEOS\apps\web\public\builtbyrays_public\v2\react-landing-page-template-2021\netlify.toml
================================================================================

[build]
  publish = "out"
  command = "npm run build-prod"


================================================================================
END: D:\QiEOS\apps\web\public\builtbyrays_public\v2\react-landing-page-template-2021\netlify.toml
================================================================================


================================================================================
FILE: D:\QiEOS\apps\web\public\builtbyrays_public\v2\react-landing-page-template-2021\next-env.d.ts
================================================================================

/// <reference types="next" />
/// <reference types="next/types/global" />
/// <reference types="next/image-types/global" />

// NOTE: This file should not be edited
// see https://nextjs.org/docs/basic-features/typescript for more information.


================================================================================
END: D:\QiEOS\apps\web\public\builtbyrays_public\v2\react-landing-page-template-2021\next-env.d.ts
================================================================================


================================================================================
FILE: D:\QiEOS\apps\web\public\builtbyrays_public\v2\react-landing-page-template-2021\next.config.js
================================================================================

/* eslint-disable import/no-extraneous-dependencies */
const withBundleAnalyzer = require('@next/bundle-analyzer')({
  enabled: process.env.ANALYZE === 'true',
});

module.exports = withBundleAnalyzer({
  poweredByHeader: false,
  trailingSlash: true,
  basePath: '',
  // The starter code load resources from `public` folder with `router.basePath` in React components.
  // So, the source code is "basePath-ready".
  // You can remove `basePath` if you don't need it.
  reactStrictMode: true,
});


================================================================================
END: D:\QiEOS\apps\web\public\builtbyrays_public\v2\react-landing-page-template-2021\next.config.js
================================================================================


================================================================================
FILE: D:\QiEOS\apps\web\public\builtbyrays_public\v2\react-landing-page-template-2021\package.json
================================================================================

{
  "name": "react-landing-page-2021",
  "version": "1.0.0",
  "scripts": {
    "dev": "next dev",
    "build": "next build",
    "start": "next start",
    "build-stats": "cross-env ANALYZE=true npm run build",
    "export": "next export",
    "build-prod": "run-s clean build export",
    "clean": "rimraf .next out",
    "lint": "next lint",
    "build-types": "tsc --noEmit --pretty",
    "prepare": "husky install"
  },
  "dependencies": {
    "@headlessui/react": "^1.4.1",
    "@heroicons/react": "^1.0.5",
    "framer-motion": "^5.0.0",
    "next": "^12.0.0",
    "next-seo": "^4.28.1",
    "react": "^17.0.2",
    "react-dom": "^17.0.2",
    "react-scroll": "^1.8.4",
    "smooth-scroll": "^16.1.3",
    "styled-jsx-plugin-postcss": "^4.0.1"
  },
  "devDependencies": {
    "@next/bundle-analyzer": "^12.0.0",
    "@types/node": "^16.11.6",
    "@types/react": "^17.0.33",
    "@typescript-eslint/eslint-plugin": "^4.32.0",
    "@typescript-eslint/parser": "^4.32.0",
    "autoprefixer": "^10.3.7",
    "cross-env": "^7.0.3",
    "eslint": "^7.32.0",
    "eslint-config-airbnb-base": "^14.2.1",
    "eslint-config-airbnb-typescript": "^14.0.1",
    "eslint-config-next": "^12.0.0",
    "eslint-config-prettier": "^8.3.0",
    "eslint-plugin-import": "^2.25.2",
    "eslint-plugin-jsx-a11y": "^6.4.1",
    "eslint-plugin-prettier": "^4.0.0",
    "eslint-plugin-react": "^7.26.1",
    "eslint-plugin-react-hooks": "^4.2.0",
    "eslint-plugin-unused-imports": "^1.1.5",
    "husky": "^7.0.4",
    "lint-staged": "^11.2.5",
    "npm-run-all": "^4.1.5",
    "postcss": "^8.3.11",
    "prettier": "^2.4.1",
    "rimraf": "^3.0.2",
    "tailwindcss": "^2.2.17",
    "typescript": "^4.4.4"
  },
  "license": "ISC",
  "description": "v2",
  "main": "index.js",
  "repository": "https://github.com/issaafalkattan/react-landing-page-template-2021.git",
  "author": "Q <crice4485@gmail.com>"
}


================================================================================
END: D:\QiEOS\apps\web\public\builtbyrays_public\v2\react-landing-page-template-2021\package.json
================================================================================


================================================================================
FILE: D:\QiEOS\apps\web\public\builtbyrays_public\v2\react-landing-page-template-2021\postcss.config.js
================================================================================

// Please do not use the array form (like ['tailwindcss', 'postcss-preset-env'])
// it will create an unexpected error: Invalid PostCSS Plugin found: [0]

module.exports = {
  plugins: { tailwindcss: {}, autoprefixer: {} },
};


================================================================================
END: D:\QiEOS\apps\web\public\builtbyrays_public\v2\react-landing-page-template-2021\postcss.config.js
================================================================================


================================================================================
FILE: D:\QiEOS\apps\web\public\builtbyrays_public\v2\react-landing-page-template-2021\README.md
================================================================================

# React.js landing page template v2

## <a href="https://react-landing-page-template-2021.vercel.app/"> LIVE DEMO</a>

<img src="public/assets/gifs/demo.gif" width="100%" height="auto" />

### Description

This is a React.js/Next.js based landing page plug-n-play template, ideal for startups/companies/service providers wanting to showcase their vision in a single page sleek and modern landing page.

### Features

- 📱  Responsive design
- 🔥 [Next.js](https://nextjs.org) for Static Site Generator

- 🎨 Integrate with [Tailwind CSS](https://tailwindcss.com) (w/ JIT mode)

- 💅 PostCSS for processing Tailwind CSS and integrated to `styled-jsx`

- 🎉 Type checking [TypeScript](https://www.typescriptlang.org)

- 🗂 VSCode configuration: Debug, Settings, Tasks and extension for PostCSS, ESLint, Prettier, TypeScript

- 🤖 SEO metadata, JSON-LD and Open Graph tags with Next SEO

- 🖱️ One click deployment with Vercel or Netlify (or manual deployment to any hosting services)

Built-in feature from Next.js:

- ☕ Minify HTML & CSS
- 💨 Live reload
- ✅ Cache busting

### Make it your own

#### 1. Clone repo

```
git clone https://github.com/issaafalkattan/react-landing-page-template-2021.git
cd react-landing-page-template-2021
yarn
```

Then, you can run locally in development mode with live reload:

```
yarn dev
```

Open <http://localhost:3000> with your favorite browser to see your project.

#### 2. Add your own content

 1. **Content**: change the configuration in the ```src/config/index.json``` file to change the content of the landing page to match your use ```src/config/index.json```  folder and .
 2. **Images**:  add any images/icons..etc to the ```public/assets/images```  folder and update their reference source in ```src/config/index.json```.
 3. **Theme**:  to change the theme, update the ```tailwind.config.js```  file to match the theme of your branding. [Tutorial](https://tailwindcss.com/docs/configuration).

#### 3. Deploy to production

[![Deploy with Vercel](https://vercel.com/button)](https://vercel.com/new/clone?repository-url=https%3A%2F%2Fgithub.com%2Fissaafalkattan%2Freact-landing-page-template-2021)

##### Deploy manually

You can see the results locally in production mode with:

  ```
yarn build
yarn start
```

The generated HTML and CSS files are minified (built-in feature from Next js). It will also removed unused CSS from [Tailwind CSS](https://tailwindcss.com).

You can create an optimised production build with:

```
yarn build-prod
```

### Contributions

Everyone is welcome to contribute to this project. Feel free to open an issue if you have question or found a bug.

### License

Licensed under the MIT License, Copyright © 2021
  

## Liked this template? <a href="https://www.buymeacoffee.com/issaaf">Buy me a coffee ☕️</a>




---

### Looking for v1? <a href="https://github.com/issaafalkattan/React-Landing-Page-Template">V1</a>


================================================================================
END: D:\QiEOS\apps\web\public\builtbyrays_public\v2\react-landing-page-template-2021\README.md
================================================================================


================================================================================
FILE: D:\QiEOS\apps\web\public\builtbyrays_public\v2\react-landing-page-template-2021\tailwind.config.js
================================================================================

module.exports = {
  mode: 'jit',
  purge: ['./src/**/*.{js,ts,jsx,tsx}'],
  darkMode: false,
  theme: {
    fontSize: {
      xs: '0.75rem',
      sm: '0.875rem',
      base: '1rem',
      lg: '1.125rem',
      xl: '1.25rem',
      '2xl': '1.5rem',
      '3xl': '1.875rem',
      '4xl': '2.25rem',
      '5xl': '3rem',
      '6xl': '4rem',
    },
    extend: {
      colors: {
        primary: '#ec4755',
        secondary: '#a12c34',
        tertiary: '#99a0a3',
        border: '#1a2e35',
        background: '#ffffff',
      },
      animation: {
        vote: 'vote 1s ease-in-out',
      },
      keyframes: {
        vote: {
          '0%, 100%': {
            transform: 'rotate(0deg)',
          },
          '25%': {
            transform: 'rotate(-30deg)',
          },
          '75%': {
            transform: 'rotate(30deg)',
          },
        },
      },
    },
  },
  variants: {},
  plugins: [],
};


================================================================================
END: D:\QiEOS\apps\web\public\builtbyrays_public\v2\react-landing-page-template-2021\tailwind.config.js
================================================================================


================================================================================
FILE: D:\QiEOS\apps\web\public\builtbyrays_public\v2\react-landing-page-template-2021\tsconfig.json
================================================================================

{
  "compilerOptions": {
    "lib": ["dom", "dom.iterable", "esnext"],
    "module": "esnext",
    "moduleResolution": "node",
    "resolveJsonModule": true,
    "removeComments": true,
    "preserveConstEnums": true,
    "strict": true,
    "alwaysStrict": true,
    "strictNullChecks": true,
    "noUncheckedIndexedAccess": true,

    "noImplicitAny": true,
    "noImplicitReturns": true,
    "noImplicitThis": true,
    "noUnusedLocals": true,
    "noUnusedParameters": true,
    "allowUnreachableCode": false,
    "noFallthroughCasesInSwitch": true,

    "target": "es5",
    "outDir": "out",
    "declaration": true,
    "sourceMap": true,

    "esModuleInterop": true,
    "allowSyntheticDefaultImports": true,
    "allowJs": false,
    "skipLibCheck": true,
    "forceConsistentCasingInFileNames": true,

    "jsx": "preserve",
    "noEmit": true,
    "isolatedModules": true,
    "incremental": true
  },
  "exclude": ["./out/**/*", "./node_modules/**/*"],
  "include": ["next-env.d.ts", "**/*.ts", "**/*.tsx"]
}


================================================================================
END: D:\QiEOS\apps\web\public\builtbyrays_public\v2\react-landing-page-template-2021\tsconfig.json
================================================================================


================================================================================
FILE: D:\QiEOS\apps\web\public\builtbyrays_public\v2\react-landing-page-template-2021\src\interfaces.d.ts
================================================================================

declare module 'react-scroll';


================================================================================
END: D:\QiEOS\apps\web\public\builtbyrays_public\v2\react-landing-page-template-2021\src\interfaces.d.ts
================================================================================


================================================================================
FILE: D:\QiEOS\apps\web\public\builtbyrays_public\v2\react-landing-page-template-2021\src\components\About.tsx
================================================================================

import React from 'react';

import config from '../config/index.json';

const About = () => {
  const { company, about } = config;
  const { logo, name: companyName } = company;
  const { socialMedia, sections } = about;

  return (
    <div
      id="about"
      className="mx-auto container xl:px-20 lg:px-12 sm:px-6 px-4 py-12"
    >
      <div className="flex flex-col items-center justify-center">
        <div>
          <img src={logo} alt={companyName} className="w-16 h-16" />
        </div>
        <div className="flex flex-wrap sm:gap-10 gap-8 items-center justify-center mt-4 h-12">
          {sections.map((section, index) => (
            <a
              key={`${section.name}-${index}`}
              href={section.href}
              className="hover:text-primary text-base cursor-pointer leading-4 text-gray-800 dark:text-gray-400 dark:hover:text-white"
            >
              {section.name}
            </a>
          ))}
        </div>
        <div className="flex items-center gap-x-8 mt-6 h-8">
          <a
            aria-label="github"
            href={socialMedia.github}
            target="_blank"
            rel="noreferrer"
          >
            <svg
              className="fill-current text-gray-800 dark:text-white hover:text-primary"
              xmlns="http://www.w3.org/2000/svg"
              width="24"
              height="24"
              viewBox="0 0 24 24"
            >
              <path d="M12 0c-6.626 0-12 5.373-12 12 0 5.302 3.438 9.8 8.207 11.387.599.111.793-.261.793-.577v-2.234c-3.338.726-4.033-1.416-4.033-1.416-.546-1.387-1.333-1.756-1.333-1.756-1.089-.745.083-.729.083-.729 1.205.084 1.839 1.237 1.839 1.237 1.07 1.834 2.807 1.304 3.492.997.107-.775.418-1.305.762-1.604-2.665-.305-5.467-1.334-5.467-5.931 0-1.311.469-2.381 1.236-3.221-.124-.303-.535-1.524.117-3.176 0 0 1.008-.322 3.301 1.23.957-.266 1.983-.399 3.003-.404 1.02.005 2.047.138 3.006.404 2.291-1.552 3.297-1.23 3.297-1.23.653 1.653.242 2.874.118 3.176.77.84 1.235 1.911 1.235 3.221 0 4.609-2.807 5.624-5.479 5.921.43.372.823 1.102.823 2.222v3.293c0 .319.192.694.801.576 4.765-1.589 8.199-6.086 8.199-11.386 0-6.627-5.373-12-12-12z" />
            </svg>
          </a>
          <a
            aria-label="linkedin"
            href={socialMedia.linkedin}
            target="_blank"
            rel="noreferrer"
          >
            <svg
              className="fill-current text-gray-800 dark:text-white hover:text-primary"
              xmlns="http://www.w3.org/2000/svg"
              width="24"
              height="24"
              viewBox="0 0 24 24"
            >
              <path d="M19 0h-14c-2.761 0-5 2.239-5 5v14c0 2.761 2.239 5 5 5h14c2.762 0 5-2.239 5-5v-14c0-2.761-2.238-5-5-5zm-11 19h-3v-11h3v11zm-1.5-12.268c-.966 0-1.75-.79-1.75-1.764s.784-1.764 1.75-1.764 1.75.79 1.75 1.764-.783 1.764-1.75 1.764zm13.5 12.268h-3v-5.604c0-3.368-4-3.113-4 0v5.604h-3v-11h3v1.765c1.396-2.586 7-2.777 7 2.476v6.759z" />
            </svg>
          </a>
          <a
            aria-label="twitter"
            href={socialMedia.twitter}
            target="_blank"
            rel="noreferrer"
          >
            <svg
              className="fill-current text-gray-800 dark:text-white hover:text-primary"
              xmlns="http://www.w3.org/2000/svg"
              width="24"
              height="24"
              viewBox="0 0 24 24"
            >
              <path d="M12 0c-6.627 0-12 5.373-12 12s5.373 12 12 12 12-5.373 12-12-5.373-12-12-12zm6.066 9.645c.183 4.04-2.83 8.544-8.164 8.544-1.622 0-3.131-.476-4.402-1.291 1.524.18 3.045-.244 4.252-1.189-1.256-.023-2.317-.854-2.684-1.995.451.086.895.061 1.298-.049-1.381-.278-2.335-1.522-2.304-2.853.388.215.83.344 1.301.359-1.279-.855-1.641-2.544-.889-3.835 1.416 1.738 3.533 2.881 5.92 3.001-.419-1.796.944-3.527 2.799-3.527.825 0 1.572.349 2.096.907.654-.128 1.27-.368 1.824-.697-.215.671-.67 1.233-1.263 1.589.581-.07 1.135-.224 1.649-.453-.384.578-.87 1.084-1.433 1.489z" />
            </svg>
          </a>
        </div>
        <div className="flex items-center mt-6">
          <p className="mt-6 text-xs lg:text-sm leading-none text-gray-900 dark:text-gray-50">
            &copy; {new Date().getFullYear()} designed by{' '}
            <a href="https://github.com/issaafalkattan" rel="nofollow">
              Issaaf Kattan
            </a>
          </p>
        </div>
      </div>
    </div>
  );
};
export default About;


================================================================================
END: D:\QiEOS\apps\web\public\builtbyrays_public\v2\react-landing-page-template-2021\src\components\About.tsx
================================================================================


================================================================================
FILE: D:\QiEOS\apps\web\public\builtbyrays_public\v2\react-landing-page-template-2021\src\components\Analytics.tsx
================================================================================

import React, { useEffect } from 'react';

import { useRouter } from 'next/router';
import Script from 'next/script';

import { GA_ADS_ID } from '../lib/googleAds';
import * as gtag from '../lib/gtag';

const App = () => {
  const router = useRouter();
  useEffect(() => {
    const handleRouteChange = (url: string) => {
      gtag.pageview(url);
    };
    router.events.on('routeChangeComplete', handleRouteChange);
    return () => {
      router.events.off('routeChangeComplete', handleRouteChange);
    };
  }, [router.events]);

  return (
    <>
      {/* Global Site Tag (gtag.js) - Google Analytics */}
      <Script
        strategy="afterInteractive"
        src={`https://www.googletagmanager.com/gtag/js?id=${gtag.GA_TRACKING_ID}`}
      />
      <Script
        id="gtag-init"
        strategy="afterInteractive"
        dangerouslySetInnerHTML={{
          __html: `
            window.dataLayer = window.dataLayer || [];
            function gtag(){dataLayer.push(arguments);}
            gtag('js', new Date());
            gtag('config', '${gtag.GA_TRACKING_ID}', {
              page_path: window.location.pathname,
            });
          `,
        }}
      />
      <Script async src={GA_ADS_ID} crossOrigin="anonymous" />
    </>
  );
};

export default App;


================================================================================
END: D:\QiEOS\apps\web\public\builtbyrays_public\v2\react-landing-page-template-2021\src\components\Analytics.tsx
================================================================================


================================================================================
FILE: D:\QiEOS\apps\web\public\builtbyrays_public\v2\react-landing-page-template-2021\src\components\Canvas.tsx
================================================================================

import { useRef, FC, useEffect, useState } from 'react';

import { CanvasContext } from '../hooks/useCanvas';
import useResponsiveSize from '../hooks/useResponsiveSize';
import Wave from './Wave';

const Canvas: FC = () => {
  const canvasRef = useRef<HTMLCanvasElement>(null);
  const { width } = useResponsiveSize();
  const [context, setContext] = useState<
    CanvasRenderingContext2D | undefined
  >();

  useEffect(() => {
    const ctx = canvasRef?.current?.getContext('2d');
    if (ctx) setContext(ctx);
  }, []);

  return (
    <>
      <CanvasContext.Provider value={{ context }}>
        <canvas id="canvas" ref={canvasRef} width={width} height={220}></canvas>
        <Wave />
      </CanvasContext.Provider>
    </>
  );
};

export default Canvas;


================================================================================
END: D:\QiEOS\apps\web\public\builtbyrays_public\v2\react-landing-page-template-2021\src\components\Canvas.tsx
================================================================================


================================================================================
FILE: D:\QiEOS\apps\web\public\builtbyrays_public\v2\react-landing-page-template-2021\src\components\Divider.tsx
================================================================================

import React from 'react';

type DividerProps = {
  width?: string;
};
const Divider = ({ width = 'w-64' }: DividerProps) => {
  return (
    <div className={`w-full mb-4`}>
      <div
        className={`h-1 mx-auto bg-primary ${width} opacity-25 my-0 py-0 rounded-t mb-10`}
      ></div>
    </div>
  );
};

export default Divider;


================================================================================
END: D:\QiEOS\apps\web\public\builtbyrays_public\v2\react-landing-page-template-2021\src\components\Divider.tsx
================================================================================


================================================================================
FILE: D:\QiEOS\apps\web\public\builtbyrays_public\v2\react-landing-page-template-2021\src\components\Features.tsx
================================================================================

import React from 'react';

import config from '../config/index.json';

const Features = () => {
  const { features } = config;
  const { title, subtitle, description, items: featuresList } = features;
  return (
    <div className={`py-12 bg-background`} id="features">
      <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
        <div className="lg:text-center">
          <h2
            className={`text-base text-primary font-semibold tracking-wide uppercase`}
          >
            {title}
          </h2>
          <p className="mt-2 text-3xl leading-8 font-extrabold tracking-tight text-gray-900 sm:text-4xl">
            {subtitle}
          </p>
          <p className="mt-4 max-w-2xl text-xl text-gray-500 lg:mx-auto">
            {description}
          </p>
        </div>

        <div className="mt-10">
          <dl className="space-y-10 md:space-y-0 md:grid md:grid-cols-2 md:gap-x-8 md:gap-y-10">
            {featuresList.map((feature) => (
              <div key={feature.name} className="relative">
                <dt>
                  <div
                    className={`absolute flex items-center justify-center h-12 w-12 rounded-md bg-background text-tertiary border-primary border-4`}
                  >
                    <img
                      className={`inline-block h-6 w-6 rounded-full`}
                      src={feature.icon}
                      alt={feature.name}
                    />
                  </div>
                  <p className="ml-16 text-lg leading-6 font-medium text-gray-900">
                    {feature.name}
                  </p>
                </dt>
                <dd className="mt-2 ml-16 text-base text-gray-500">
                  {feature.description}
                </dd>
              </div>
            ))}
          </dl>
        </div>
      </div>
    </div>
  );
};

export default Features;


================================================================================
END: D:\QiEOS\apps\web\public\builtbyrays_public\v2\react-landing-page-template-2021\src\components\Features.tsx
================================================================================


================================================================================
FILE: D:\QiEOS\apps\web\public\builtbyrays_public\v2\react-landing-page-template-2021\src\components\Header.tsx
================================================================================

import React, { Fragment } from 'react';

import { Popover, Transition } from '@headlessui/react';
import { MenuIcon, XIcon } from '@heroicons/react/outline';
import { Link } from 'react-scroll';

import config from '../config/index.json';

const Menu = () => {
  const { navigation, company, callToAction } = config;
  const { name: companyName, logo } = company;

  return (
    <>
      <svg
        className={`hidden lg:block absolute right-0 inset-y-0 h-full w-48 text-background transform translate-x-1/2`}
        fill="currentColor"
        viewBox="0 0 100 100"
        preserveAspectRatio="none"
        aria-hidden="true"
      >
        <polygon points="50,0 100,0 50,100 0,100" />
      </svg>

      <Popover>
        <div className="relative pt-6 px-4 sm:px-6 lg:px-8">
          <nav
            className="relative flex items-center justify-between sm:h-10 lg:justify-start"
            aria-label="Global"
          >
            <div className="flex items-center flex-grow flex-shrink-0 lg:flex-grow-0">
              <div className="flex items-center justify-between w-full md:w-auto">
                <a href="#">
                  <span className="sr-only">{companyName}</span>
                  <img alt="logo" className="h-16 w-auto sm:h-16" src={logo} />
                </a>
                <div className="-mr-2 flex items-center md:hidden">
                  <Popover.Button
                    className={`bg-background rounded-md p-2 inline-flex items-center justify-center text-gray-400 hover:text-gray-500 hover:bg-gray-100 focus:outline-none focus:ring-2 focus:ring-inset focus:ring-secondary`}
                  >
                    <span className="sr-only">Open main menu</span>
                    <MenuIcon className="h-6 w-6" aria-hidden="true" />
                  </Popover.Button>
                </div>
              </div>
            </div>
            <div className="hidden md:block md:ml-10 md:pr-4 md:space-x-8">
              {navigation.map((item) => (
                <Link
                  spy={true}
                  active="active"
                  smooth={true}
                  duration={1000}
                  key={item.name}
                  to={item.href}
                  className="font-medium text-gray-500 hover:text-gray-900"
                >
                  {item.name}
                </Link>
              ))}
              <a
                href="#"
                className={`font-medium text-primary hover:text-secondary`}
              >
                Call to action
              </a>
            </div>
          </nav>
        </div>

        <Transition
          as={Fragment}
          enter="duration-150 ease-out"
          enterFrom="opacity-0 scale-95"
          enterTo="opacity-100 scale-100"
          leave="duration-100 ease-in"
          leaveFrom="opacity-100 scale-100"
          leaveTo="opacity-0 scale-95"
        >
          <Popover.Panel
            focus
            className="absolute z-10 top-0 inset-x-0 p-2 transition transform origin-top-right md:hidden"
          >
            <div
              className={`rounded-lg shadow-md bg-background ring-1 ring-black ring-opacity-5 overflow-hidden`}
            >
              <div className="px-5 pt-4 flex items-center justify-between">
                <div>
                  <img className="h-8 w-auto" src={logo} alt="" />
                </div>
                <div className="-mr-2">
                  <Popover.Button
                    className={`bg-background rounded-md p-2 inline-flex items-center justify-center text-gray-400 hover:text-gray-500 hover:bg-gray-100 focus:outline-none focus:ring-2 focus:ring-inset focus:ring-secondary`}
                  >
                    <span className="sr-only">Close main menu</span>
                    <XIcon className="h-6 w-6" aria-hidden="true" />
                  </Popover.Button>
                </div>
              </div>
              <div className="px-2 pt-2 pb-3 space-y-1">
                {navigation.map((item) => (
                  <Link
                    spy={true}
                    active="active"
                    smooth={true}
                    duration={1000}
                    key={item.name}
                    to={item.href}
                    className="block px-3 py-2 rounded-md text-base font-medium text-gray-700 hover:text-gray-900 hover:bg-gray-50"
                  >
                    {item.name}
                  </Link>
                ))}
              </div>
              <a
                href={callToAction.href}
                className={`block w-full px-5 py-3 text-center font-medium text-primary bg-gray-50 hover:bg-gray-100`}
              >
                {callToAction.text}
              </a>
            </div>
          </Popover.Panel>
        </Transition>
      </Popover>
    </>
  );
};

export default Menu;


================================================================================
END: D:\QiEOS\apps\web\public\builtbyrays_public\v2\react-landing-page-template-2021\src\components\Header.tsx
================================================================================


================================================================================
FILE: D:\QiEOS\apps\web\public\builtbyrays_public\v2\react-landing-page-template-2021\src\components\LazyShow.tsx
================================================================================

import React, { MutableRefObject, useEffect, useRef, useState } from 'react';

import { motion, useAnimation } from 'framer-motion';

function useOnScreen(
  ref: MutableRefObject<HTMLDivElement | null>,
  rootMargin = '0px'
) {
  const [isIntersecting, setIntersecting] = useState(false);

  useEffect(() => {
    let currentRef: any = null;
    const observer = new IntersectionObserver(
      ([entry]) => {
        if (entry?.isIntersecting) setIntersecting(entry?.isIntersecting);
      },
      {
        rootMargin,
      }
    );
    if (ref && ref?.current) {
      currentRef = ref.current;
      observer.observe(currentRef);
    }
    return () => {
      observer.unobserve(currentRef);
    };
  }, [ref, rootMargin]); // Empty array ensures that effect is only run on mount and unmount

  return isIntersecting;
}

const LazyShow = ({ children }: { children: React.ReactChild }) => {
  const controls = useAnimation();
  const rootRef = useRef<HTMLDivElement>(null);
  const onScreen = useOnScreen(rootRef);
  useEffect(() => {
    if (onScreen) {
      controls.start({
        x: 0,
        opacity: 1,
        transition: {
          duration: 0.5,
          ease: 'easeOut',
        },
      });
    }
  }, [onScreen, controls]);
  return (
    <motion.div
      className="lazy-div"
      ref={rootRef}
      initial={{ opacity: 0, x: -50 }}
      animate={controls}
    >
      {children}
    </motion.div>
  );
};

export default LazyShow;


================================================================================
END: D:\QiEOS\apps\web\public\builtbyrays_public\v2\react-landing-page-template-2021\src\components\LazyShow.tsx
================================================================================


================================================================================
FILE: D:\QiEOS\apps\web\public\builtbyrays_public\v2\react-landing-page-template-2021\src\components\MainHero.tsx
================================================================================

import React from 'react';

import config from '../config/index.json';

const MainHero = () => {
  const { mainHero } = config;
  return (
    <main className="mt-10 mx-auto max-w-7xl px-4 sm:mt-12 sm:px-6 md:mt-16 lg:mt-20 lg:px-8 xl:mt-28">
      <div className="sm:text-center lg:text-left">
        <h1 className="text-4xl tracking-tight font-extrabold text-gray-900 sm:text-5xl md:text-6xl">
          <span className="block xl:inline">{mainHero.title}</span>{' '}
          <span className={`block text-primary xl:inline`}>
            {mainHero.subtitle}
          </span>
        </h1>
        <p className="mt-3 text-base text-gray-500 sm:mt-5 sm:text-lg sm:max-w-xl sm:mx-auto md:mt-5 md:text-xl lg:mx-0">
          {mainHero.description}
        </p>
        <div className="mt-5 sm:mt-8 sm:flex sm:justify-center lg:justify-start">
          <div className="rounded-md shadow">
            <a
              href={mainHero.primaryAction.href}
              className={`w-full flex items-center justify-center px-8 py-3 border border-transparent text-base font-medium rounded-md text-background bg-primary hover:bg-border hover:text-primary md:py-4 md:text-lg md:px-10`}
            >
              {mainHero.primaryAction.text}
            </a>
          </div>
          <div className="mt-3 sm:mt-0 sm:ml-3">
            <a
              href={mainHero.secondaryAction.href}
              className={`w-full flex items-center justify-center px-8 py-3 border border-transparent text-base font-medium rounded-md border-primary text-secondary bg-background hover:bg-border hover:text-primary md:py-4 md:text-lg md:px-10`}
            >
              {mainHero.secondaryAction.text}
            </a>
          </div>
        </div>
      </div>
    </main>
  );
};

export default MainHero;


================================================================================
END: D:\QiEOS\apps\web\public\builtbyrays_public\v2\react-landing-page-template-2021\src\components\MainHero.tsx
================================================================================


================================================================================
FILE: D:\QiEOS\apps\web\public\builtbyrays_public\v2\react-landing-page-template-2021\src\components\MainHeroImage.tsx
================================================================================

import React from 'react';

import config from '../config/index.json';

const MainHeroImage = () => {
  const { mainHero } = config;
  return (
    <div className="lg:absolute lg:inset-y-0 lg:right-0 lg:w-1/2">
      <img
        className="h-56 w-full object-cover sm:h-72 md:h-96 lg:w-full lg:h-full"
        src={mainHero.img}
        alt="happy team image"
      />
    </div>
  );
};

export default MainHeroImage;


================================================================================
END: D:\QiEOS\apps\web\public\builtbyrays_public\v2\react-landing-page-template-2021\src\components\MainHeroImage.tsx
================================================================================


================================================================================
FILE: D:\QiEOS\apps\web\public\builtbyrays_public\v2\react-landing-page-template-2021\src\components\Pricing.tsx
================================================================================

import React from 'react';

import config from '../config/index.json';

const Pricing = () => {
  const { pricing } = config;
  const { items, title } = pricing;
  const [firstPlan, secondPlan, thirdPlan] = items;

  return (
    <section className={`bg-background py-8`} id="pricing">
      <div className={`container mx-auto px-2 pt-4 pb-12 text-primary`}>
        <h1
          className={`w-full my-2 text-5xl font-bold leading-tight text-center text-primary`}
        >
          {title}
        </h1>
        <div className={`w-full mb-4`}>
          <div
            className={`h-1 mx-auto bg-primary w-64 opacity-25 my-0 py-0 rounded-t`}
          ></div>
        </div>
        <div
          className={`flex flex-col sm:flex-row justify-center pt-12 my-12 sm:my-4`}
        >
          <div
            className={`flex flex-col w-5/6 lg:w-1/4 mx-auto lg:mx-0 rounded-none lg:rounded-l-lg bg-background mt-4`}
          >
            <div
              className={`flex-1 bg-background text-gray-600 rounded-t rounded-b-none overflow-hidden shadow`}
            >
              <div className={`p-8 text-3xl font-bold text-center border-b-4`}>
                {firstPlan?.name}
              </div>
              <ul className={`w-full text-center text-sm`}>
                {firstPlan?.features.map((feature) => (
                  <li
                    className={`border-b py-4`}
                    key={`${firstPlan.name}-${feature}`}
                  >
                    {feature}
                  </li>
                ))}
              </ul>
            </div>
            <div
              className={`flex-none mt-auto bg-background rounded-b rounded-t-none overflow-hidden shadow p-6`}
            >
              <div
                className={`w-full pt-6 text-3xl text-gray-600 font-bold text-center`}
              >
                {firstPlan?.price}
                <span className={`text-base`}> {firstPlan?.priceDetails}</span>
              </div>
            </div>
          </div>
          <div
            className={`flex flex-col w-5/6 lg:w-1/3 mx-auto lg:mx-0 rounded-lg bg-background mt-4 sm:-mt-6 shadow-lg z-10`}
          >
            <div
              className={`flex-1 bg-background rounded-t rounded-b-none overflow-hidden shadow`}
            >
              <div className={`w-full p-8 text-3xl font-bold text-center`}>
                {secondPlan?.name}
              </div>
              <div
                className={`h-1 w-full bg-primary my-0 py-0 rounded-t`}
              ></div>
              <ul className={`w-full text-center text-base font-bold`}>
                {secondPlan?.features.map((feature) => (
                  <li
                    className={`border-b py-4`}
                    key={`${secondPlan?.name}-${feature}`}
                  >
                    {feature}
                  </li>
                ))}
              </ul>
            </div>
            <div
              className={`flex-none mt-auto bg-background rounded-b rounded-t-none overflow-hidden shadow p-6`}
            >
              <div className={`w-full pt-6 text-4xl font-bold text-center`}>
                {secondPlan?.price}
                <span className={`text-base`}> {secondPlan?.priceDetails}</span>
              </div>
            </div>
          </div>
          <div
            className={`flex flex-col w-5/6 lg:w-1/4 mx-auto lg:mx-0 rounded-none lg:rounded-l-lg bg-primary mt-4`}
          >
            <div
              className={`flex-1 bg-background text-gray-600 rounded-t rounded-b-none overflow-hidden shadow`}
            >
              <div className={`p-8 text-3xl font-bold text-center border-b-4`}>
                {thirdPlan?.name}
              </div>
              <ul className={`w-full text-center text-sm`}>
                {thirdPlan?.features.map((feature) => (
                  <li
                    className={`border-b py-4`}
                    key={`${thirdPlan?.name}-${feature}`}
                  >
                    {feature}
                  </li>
                ))}
              </ul>
            </div>
            <div
              className={`flex-none mt-auto bg-background rounded-b rounded-t-none overflow-hidden shadow p-6`}
            >
              <div
                className={`w-full pt-6 text-3xl text-gray-600 font-bold text-center`}
              >
                {thirdPlan?.price}
                <span className={`text-base`}> {thirdPlan?.priceDetails}</span>
              </div>
            </div>
          </div>
        </div>
      </div>
    </section>
  );
};

export default Pricing;


================================================================================
END: D:\QiEOS\apps\web\public\builtbyrays_public\v2\react-landing-page-template-2021\src\components\Pricing.tsx
================================================================================


================================================================================
FILE: D:\QiEOS\apps\web\public\builtbyrays_public\v2\react-landing-page-template-2021\src\components\Product.tsx
================================================================================

import React from 'react';

import config from '../config/index.json';
import Divider from './Divider';

const Product = () => {
  const { product } = config;
  const [firstItem, secondItem] = product.items;

  return (
    <section className={`bg-background py-8`} id="product">
      <div className={`container max-w-5xl mx-auto m-8`}>
        <h1
          className={`w-full my-2 text-5xl font-bold leading-tight text-center text-primary`}
        >
          {product.title.split(' ').map((word, index) => (
            <span
              key={index}
              className={index % 2 ? 'text-primary' : 'text-border'}
            >
              {word}{' '}
            </span>
          ))}
        </h1>
        <Divider />
        <div className={`flex flex-wrap`}>
          <div className={`w-5/6 sm:w-1/2 p-6 mt-20`}>
            <h3
              className={`text-3xl text-gray-800 font-bold leading-none mb-3`}
            >
              {firstItem?.title}
            </h3>
            <p className={`text-gray-600`}>{firstItem?.description}</p>
          </div>
          <div className={`w-full sm:w-1/2 p-6`}>
            <img
              className="h-6/6"
              src={firstItem?.img}
              alt={firstItem?.title}
            />
          </div>
        </div>
        <div className={`flex flex-wrap flex-col-reverse sm:flex-row`}>
          <div className={`w-full sm:w-1/2 p-6`}>
            <img
              className="h-6/6"
              src={secondItem?.img}
              alt={secondItem?.title}
            />
          </div>
          <div className={`w-full sm:w-1/2 p-6 mt-20`}>
            <div className={`align-middle`}>
              <h3
                className={`text-3xl text-gray-800 font-bold leading-none mb-3`}
              >
                {secondItem?.title}
              </h3>
              <p className={`text-gray-600 mb-8`}>{secondItem?.description}</p>
            </div>
          </div>
        </div>
      </div>
    </section>
  );
};

export default Product;


================================================================================
END: D:\QiEOS\apps\web\public\builtbyrays_public\v2\react-landing-page-template-2021\src\components\Product.tsx
================================================================================


================================================================================
FILE: D:\QiEOS\apps\web\public\builtbyrays_public\v2\react-landing-page-template-2021\src\components\Wave.tsx
================================================================================

import { FC } from 'react';

import { useCanvasContext } from '../hooks/useCanvas';
import useResponsiveSize from '../hooks/useResponsiveSize';
import WaveObj from '../utils/wave';

const Wave: FC = () => {
  const { context } = useCanvasContext();
  const { width } = useResponsiveSize();
  const height = 600;
  let frequency = 0.013;
  const waves = {
    frontWave: new WaveObj([0.0211, 0.028, 0.015], 'rgb(236, 71, 85, 0.1)'),
    backWave: new WaveObj([0.0122, 0.018, 0.005], 'rgb(249, 168, 168, 0.1)'),
  };

  const render = () => {
    context?.clearRect(0, 0, width, height);
    Object.entries(waves).forEach(([, wave]) => {
      wave.draw(context!, width, height, frequency);
    });
    frequency += 0.013;
    requestAnimationFrame(render);
  };
  if (context) render();
  return null;
};

export default Wave;


================================================================================
END: D:\QiEOS\apps\web\public\builtbyrays_public\v2\react-landing-page-template-2021\src\components\Wave.tsx
================================================================================


================================================================================
FILE: D:\QiEOS\apps\web\public\builtbyrays_public\v2\react-landing-page-template-2021\src\config\index.json
================================================================================

{
  "company": {
    "name": "React landing page 2021",
    "logo": "/assets/images/logo.png"
  },
  "navigation": [
    {
      "name": "Product",
      "href": "product"
    },
    {
      "name": "Features",
      "href": "features"
    },

    {
      "name": "Pricing",
      "href": "pricing"
    },
    {
      "name": "About",
      "href": "about"
    }
  ],
  "callToAction": {
    "text": "Get started",
    "href": "#"
  },
  "mainHero": {
    "title": "Use me as your",
    "subtitle": "landing page.",
    "description": "It is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout. The point of using Lorem Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using 'Content here, content here', making it look like readable English.",
    "img": "/assets/images/happyTeam.jpeg",
    "primaryAction": {
      "text": "Get started",
      "href": "#"
    },
    "secondaryAction": {
      "text": "Email us",
      "href": "mailto:issaafakattan@gmail.com?subject=I like react landing page!"
    }
  },
  "product": {
    "title": "React landing page 2021",
    "items": [
      {
        "title": "A plug n play template",
        "description": "Just edit the config.json file with details about your company and voila your beautiful state of the art landing page is ready to go live! Remember to also update your assets, add any images you want to show to /assets/images and link them in the config.json",
        "img": "/assets/images/product1.jpg"
      },
      {
        "title": "Make it your own!",
        "description": "Play around with the theme.ts file and configure the color palette to match the branding of your company! If you're feeling wild, maybe change some tailwind css as well!",
        "img": "/assets/images/product2.jpg"
      }
    ]
  },
  "features": {
    "title": "Latest & greatest ",
    "subtitle": "All the best technologies out there!",
    "description": "It is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout. The point of using Lorem Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using 'Content here, content here', making it look like readable English.",
    "items": [
      {
        "name": "React.js",
        "description": "React is a free and open-source front-end JavaScript library for building user interfaces or UI components.",
        "icon": "/assets/images/react.png"
      },
      {
        "name": "Tailwind",
        "description": "Tailwind CSS is a highly customizable, low-level CSS framework for quickly creating beautiful designs without any annoying opinionated stylesheet nonsense.",
        "icon": "/assets/images/tailwindcss.svg"
      },
      {
        "name": "Next.js",
        "description": "Next.js is a framework for server-rendered React applications using Next.js.",
        "icon": "/assets/images/nextjs.svg"
      },
      {
        "name": "Typescript",
        "description": "TypeScript is a programming language developed and maintained by Microsoft.",
        "icon": "/assets/images/ts.png"
      }
    ]
  },
  "pricing": {
    "title": "Pricing",
    "items": [
      {
        "name": "Free",
        "price": "$0",
        "priceDetails": "for one user",
        "features": [
          "1 user",
          "Basic Support",
          "1 GB of storage",
          "Email support"
        ]
      },
      {
        "name": "Pro",
        "price": "$15",
        "priceDetails": "per user",

        "features": [
          "5 users",
          "Priority Support",
          "10 GB of storage",
          "Phone and Email support"
        ]
      },
      {
        "name": "Enterprise",
        "price": "$29",
        "priceDetails": "per user",
        "features": [
          "50 users",
          "24/7 Support",
          "100 GB of storage",
          "Phone and Email support"
        ]
      }
    ]
  },
  "about": {
    "sections": [
      {
        "name": "Something",
        "href": "#",
        "content": "It is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout. The point of using Lorem Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using 'Content here, content here', making it look like readable English."
      },
      {
        "name": "Something",
        "href": "#",
        "content": "It is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout. The point of using Lorem Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using 'Content here, content here', making it look like readable English."
      },
      {
        "name": "Something",
        "href": "#",
        "content": "It is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout. The point of using Lorem Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using 'Content here, content here', making it look like readable English."
      },
      {
        "name": "Something",
        "href": "#",
        "content": "It is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout. The point of using Lorem Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using 'Content here, content here', making it look like readable English."
      }
    ],
    "socialMedia": {
      "github": "https://github.com/issaafalkattan",
      "twitter": "https://twitter.com/issaafkattan",
      "linkedin": "https://www.linkedin.com/in/issaaf-kattan/"
    }
  }
}


================================================================================
END: D:\QiEOS\apps\web\public\builtbyrays_public\v2\react-landing-page-template-2021\src\config\index.json
================================================================================


================================================================================
FILE: D:\QiEOS\apps\web\public\builtbyrays_public\v2\react-landing-page-template-2021\src\hooks\useCanvas.ts
================================================================================

import { createContext, useContext } from 'react';

export const CanvasContext = createContext<{
  context: CanvasRenderingContext2D | undefined;
}>({
  context: undefined,
});

export const useCanvasContext = () => {
  return useContext(CanvasContext);
};


================================================================================
END: D:\QiEOS\apps\web\public\builtbyrays_public\v2\react-landing-page-template-2021\src\hooks\useCanvas.ts
================================================================================


================================================================================
FILE: D:\QiEOS\apps\web\public\builtbyrays_public\v2\react-landing-page-template-2021\src\hooks\useResponsiveSize.ts
================================================================================

import { useCallback, useEffect, useState } from 'react';

const useResponsiveSize = () => {
  const [width, setWidth] = useState(0);
  const [height, setHeight] = useState(0);

  const setSizes = useCallback(() => {
    setWidth(window.innerWidth);
    setHeight(window.innerHeight);
  }, [setWidth, setHeight]);

  useEffect(() => {
    window.addEventListener('resize', setSizes);
    setSizes();
  }, [setSizes]);

  return { width, height };
};

export default useResponsiveSize;


================================================================================
END: D:\QiEOS\apps\web\public\builtbyrays_public\v2\react-landing-page-template-2021\src\hooks\useResponsiveSize.ts
================================================================================


================================================================================
FILE: D:\QiEOS\apps\web\public\builtbyrays_public\v2\react-landing-page-template-2021\src\lib\googleAds.ts
================================================================================

export const GA_ADS_ID = process.env.NEXT_PUBLIC_GOOGLE_ADS_ID;


================================================================================
END: D:\QiEOS\apps\web\public\builtbyrays_public\v2\react-landing-page-template-2021\src\lib\googleAds.ts
================================================================================


================================================================================
FILE: D:\QiEOS\apps\web\public\builtbyrays_public\v2\react-landing-page-template-2021\src\lib\gtag.ts
================================================================================

export const GA_TRACKING_ID = process.env.NEXT_PUBLIC_GOOGLE_ANALYTICS;

declare global {
  interface Window {
    gtag: any;
  }
}

// https://developers.google.com/analytics/devguides/collection/gtagjs/pages
export const pageview = (url: string) => {
  window.gtag('config', GA_TRACKING_ID, {
    page_path: url,
  });
};

// https://developers.google.com/analytics/devguides/collection/gtagjs/events
export const event = ({
  action,
  category,
  label,
  value,
}: {
  action: any;
  category: any;
  label: any;
  value: any;
}) => {
  window.gtag('event', action, {
    event_category: category,
    event_label: label,
    value,
  });
};


================================================================================
END: D:\QiEOS\apps\web\public\builtbyrays_public\v2\react-landing-page-template-2021\src\lib\gtag.ts
================================================================================


================================================================================
FILE: D:\QiEOS\apps\web\public\builtbyrays_public\v2\react-landing-page-template-2021\src\pages\_app.tsx
================================================================================

import { AppProps } from 'next/app';

import '../styles/main.css';

const MyApp = ({ Component, pageProps }: AppProps) => (
  <Component {...pageProps} />
);

export default MyApp;


================================================================================
END: D:\QiEOS\apps\web\public\builtbyrays_public\v2\react-landing-page-template-2021\src\pages\_app.tsx
================================================================================


================================================================================
FILE: D:\QiEOS\apps\web\public\builtbyrays_public\v2\react-landing-page-template-2021\src\pages\_document.tsx
================================================================================

import Document, { Html, Head, Main, NextScript } from 'next/document';

import { AppConfig } from '../utils/AppConfig';

// Need to create a custom _document because i18n support is not compatible with `next export`.
class MyDocument extends Document {
  render() {
    return (
      <Html lang={AppConfig.locale}>
        <Head />
        <body>
          <Main />
          <NextScript />
        </body>
      </Html>
    );
  }
}

export default MyDocument;


================================================================================
END: D:\QiEOS\apps\web\public\builtbyrays_public\v2\react-landing-page-template-2021\src\pages\_document.tsx
================================================================================


================================================================================
FILE: D:\QiEOS\apps\web\public\builtbyrays_public\v2\react-landing-page-template-2021\src\pages\index.tsx
================================================================================

import React from 'react';

import About from '../components/About';
import Analytics from '../components/Analytics';
import Canvas from '../components/Canvas';
import Features from '../components/Features';
import Header from '../components/Header';
import LazyShow from '../components/LazyShow';
import MainHero from '../components/MainHero';
import MainHeroImage from '../components/MainHeroImage';
import Pricing from '../components/Pricing';
import Product from '../components/Product';

const App = () => {
  return (
    <div className={`bg-background grid gap-y-16 overflow-hidden`}>
      <div className={`relative bg-background`}>
        <div className="max-w-7xl mx-auto">
          <div
            className={`relative z-10 pb-8 bg-background sm:pb-16 md:pb-20 lg:max-w-2xl lg:w-full lg:pb-28 xl:pb-32`}
          >
            <Header />
            <MainHero />
          </div>
        </div>
        <MainHeroImage />
      </div>
      <Canvas />
      <LazyShow>
        <>
          <Product />
          <Canvas />
        </>
      </LazyShow>
      <LazyShow>
        <>
          <Features />
          <Canvas />
        </>
      </LazyShow>
      <LazyShow>
        <Pricing />
      </LazyShow>
      <LazyShow>
        <>
          <Canvas />
          <About />
        </>
      </LazyShow>
      <Analytics />
    </div>
  );
};

export default App;


================================================================================
END: D:\QiEOS\apps\web\public\builtbyrays_public\v2\react-landing-page-template-2021\src\pages\index.tsx
================================================================================


================================================================================
FILE: D:\QiEOS\apps\web\public\builtbyrays_public\v2\react-landing-page-template-2021\src\styles\main.css
================================================================================

@tailwind base;
@tailwind components;
@tailwind utilities;


:root {
  --color-primary: #ec4755;
  --color-secondary: #a12c34;
  --color-tertiaty: #99a0a3;
}

a { 
  @apply text-red-700;
}

a:hover {
  @apply border-b-2 border-red-700;
}



.content p {
  @apply my-6;
}

.content ul {
  @apply my-6;
}


================================================================================
END: D:\QiEOS\apps\web\public\builtbyrays_public\v2\react-landing-page-template-2021\src\styles\main.css
================================================================================


================================================================================
FILE: D:\QiEOS\apps\web\public\builtbyrays_public\v2\react-landing-page-template-2021\src\utils\AppConfig.ts
================================================================================

export const AppConfig = {
  site_name: 'React landing page',
  title: 'React landing page template 2021',
  description: 'Production ready plug n play landing page!',
  locale: 'en',
};


================================================================================
END: D:\QiEOS\apps\web\public\builtbyrays_public\v2\react-landing-page-template-2021\src\utils\AppConfig.ts
================================================================================


================================================================================
FILE: D:\QiEOS\apps\web\public\builtbyrays_public\v2\react-landing-page-template-2021\src\utils\utils.ts
================================================================================

export const chunkArr = <T>(arr: Array<T>, chunkSize: number) => {
  const chunked = [];
  for (let i = 0; i < arr.length; i += chunkSize) {
    chunked.push(arr.slice(i, i + chunkSize));
  }
  return chunked;
};


================================================================================
END: D:\QiEOS\apps\web\public\builtbyrays_public\v2\react-landing-page-template-2021\src\utils\utils.ts
================================================================================


================================================================================
FILE: D:\QiEOS\apps\web\public\builtbyrays_public\v2\react-landing-page-template-2021\src\utils\wave.ts
================================================================================

/* eslint-disable no-plusplus */
class Wave {
  private waveLength: number[];

  private color: string;

  constructor(waveLength: number[], color: string) {
    this.waveLength = waveLength;
    this.color = color;
  }

  public draw = (
    context: CanvasRenderingContext2D,
    width: number,
    height: number,
    frequency: number
  ): void => {
    context.beginPath();
    context.moveTo(0, height);
    if (this.waveLength.length < 3) {
      return;
    }
    for (let i = 0; i < width; i++) {
      const wave1 = Math.sin(i * (this?.waveLength[0] ?? 0) - frequency);
      const wave2 = Math.sin(i * (this.waveLength[1] ?? 0) - frequency);
      const wave3 = Math.sin(i * (this.waveLength[2] ?? 0) - frequency);

      context.lineTo(i * 2.5, height - 400 + wave1 * wave2 * wave3 * 200);
    }
    context.lineTo(width, height);
    context.fillStyle = this.color;
    context.fill();
    context.closePath();
  };
}

export default Wave;


================================================================================
END: D:\QiEOS\apps\web\public\builtbyrays_public\v2\react-landing-page-template-2021\src\utils\wave.ts
================================================================================


================================================================================
FILE: D:\QiEOS\apps\web\public\builtbyrays_public\v3\package.json
================================================================================

{
  "dependencies": {
    "next": "^15.5.2"
  }
}


================================================================================
END: D:\QiEOS\apps\web\public\builtbyrays_public\v3\package.json
================================================================================


================================================================================
FILE: D:\QiEOS\apps\web\public\builtbyrays_public\v3\tailwind-landing-page-template\CHANGELOG.md
================================================================================

# CHANGELOG.md

## [4.0.0] - 2025-02-04

- Updgrade to Tailwind v4
- Update dependencies

## [3.1.0] - 2024-12-08

- Update dependencies + Upgrade to Next.js 15

## [3.0.2] - 2024-08-23

- Remove unneeded scroll handler

## [3.0.1] - 2024-06-20

- Minor styling changes + Prettify code

## [3.0.0] - 2024-06-18

- Redesign the entire template

## [2.4.0] - 2023-12-08

Update to Next.js 14
Update dependencies

## [2.3.2] - 2023-10-04

Update Twitter icon
Update dependencies

## [2.3.0] - 2023-06-20

Fix issue with Google Fonts

## [2.2.1] - 2023-06-13

Fix minor issue

## [2.2.0] - 2023-05-31

Update dependencies and fix some issues

## [2.1.0] - 2023-05-07

Modal video improvements

## [2.0.0] - 2023-03-31

Conversion to Next.js

## [1.3.3] - 2023-03-28

- Fix video

## [1.3.2] - 2023-03-28

- Add self-hosted video

## [1.3.1] - 2023-02-13

- Update dependencies

## [1.3.0] - 2022-07-15

- Update dependencies
- Update React to v18
- Replace Sass with CSS files

## [1.1.0] - 2022-01-27

- Replace CRA (Create React App) with Vite
- Remove Craco
- Update dependencies

## [1.0.1] - 2020-10-19

Fix issue with testimonail image on mobile

## [1.0.0] - 2020-10-15

First release


================================================================================
END: D:\QiEOS\apps\web\public\builtbyrays_public\v3\tailwind-landing-page-template\CHANGELOG.md
================================================================================


================================================================================
FILE: D:\QiEOS\apps\web\public\builtbyrays_public\v3\tailwind-landing-page-template\next-env.d.ts
================================================================================

/// <reference types="next" />
/// <reference types="next/image-types/global" />
/// <reference path="./.next/types/routes.d.ts" />

// NOTE: This file should not be edited
// see https://nextjs.org/docs/app/api-reference/config/typescript for more information.


================================================================================
END: D:\QiEOS\apps\web\public\builtbyrays_public\v3\tailwind-landing-page-template\next-env.d.ts
================================================================================


================================================================================
FILE: D:\QiEOS\apps\web\public\builtbyrays_public\v3\tailwind-landing-page-template\next.config.js
================================================================================

/** @type {import('next').NextConfig} */
const nextConfig = {};

module.exports = nextConfig;


================================================================================
END: D:\QiEOS\apps\web\public\builtbyrays_public\v3\tailwind-landing-page-template\next.config.js
================================================================================


================================================================================
FILE: D:\QiEOS\apps\web\public\builtbyrays_public\v3\tailwind-landing-page-template\package.json
================================================================================

{
  "name": "simple-next",
  "version": "0.1.0",
  "private": true,
  "scripts": {
    "dev": "next dev --turbopack",
    "build": "next build",
    "start": "next start",
    "lint": "next lint"
  },
  "dependencies": {
    "@headlessui/react": "^2.2.0",
    "@types/react-dom": "19.0.3",
    "aos": "3.0.0-beta.6",
    "next": "15.1.6",
    "prettier-plugin-tailwindcss": "^0.6.11",
    "react": "19.0.0",
    "react-dom": "19.0.0"
  },
  "devDependencies": {
    "@tailwindcss/forms": "^0.5.10",
    "@tailwindcss/postcss": "^4.0.3",
    "@types/aos": "^3.0.7",
    "@types/node": "^22.13.0",
    "@types/react": "19.0.8",
    "postcss": "^8.5.1",
    "tailwindcss": "^4.0.3",
    "typescript": "^5.7.3"
  },
  "overrides": {
    "@types/react": "19.0.1",
    "@types/react-dom": "19.0.1"
  }
}


================================================================================
END: D:\QiEOS\apps\web\public\builtbyrays_public\v3\tailwind-landing-page-template\package.json
================================================================================


================================================================================
FILE: D:\QiEOS\apps\web\public\builtbyrays_public\v3\tailwind-landing-page-template\postcss.config.js
================================================================================

module.exports = {
  plugins: {
    '@tailwindcss/postcss': {},
  },
};


================================================================================
END: D:\QiEOS\apps\web\public\builtbyrays_public\v3\tailwind-landing-page-template\postcss.config.js
================================================================================


================================================================================
FILE: D:\QiEOS\apps\web\public\builtbyrays_public\v3\tailwind-landing-page-template\README.md
================================================================================

# Free Tailwind landing page template

![Simple TailwindCSS template preview](https://github.com/cruip/tailwind-landing-page-template/assets/2683512/f9a98fab-a1bc-4fb5-8572-4de0b6bd932a)

**Simple Light** is a free landing page template built on top of **TailwindCSS** and fully coded in **React** / **Next.js**. Simple light is designed to provide all the basic components a developer need to create a landing page for SaaS products, online services, and more.

**UPDATE 2025-02-04** Added Tailwind v4 support!

Use it for whatever you want, and be sure to reach us out on X if you build anything cool/useful with it.
Created and maintained with ❤️ by [Cruip.com](https://cruip.com/).

_Version 1.3.3 built with Tailwind CSS and React + Vite is available [here](https://github.com/cruip/tailwind-landing-page-template/releases/tag/1.3.3)._

## Live demo

Check the live demo here 👉️ [https://simple.cruip.com/](https://simple.cruip.com/)

## Simple Pro

[![Simple Pro](https://github.com/cruip/tailwind-landing-page-template/assets/2683512/992be2ba-3de7-4838-be41-12e85686c193)](https://cruip.com/)

## Design files

If you need the design files, you can download them from Figma's Community 👉 https://bit.ly/3HOZMpf

## Usage

This is a [Next.js](https://nextjs.org/) project bootstrapped with [`create-next-app`](https://github.com/vercel/next.js/tree/canary/packages/create-next-app).

### Getting Started

First, run the development server:

```bash
npm run dev
# or
yarn dev
# or
pnpm dev
```

Open [http://localhost:3000](http://localhost:3000) with your browser to see the result.

You can start editing the page by modifying `app/page.tsx`. The page auto-updates as you edit the file.

[API routes](https://nextjs.org/docs/api-routes/introduction) can be accessed on [http://localhost:3000/api/hello](http://localhost:3000/api/hello). This endpoint can be edited in `pages/api/hello.ts`.

The `pages/api` directory is mapped to `/api/*`. Files in this directory are treated as [API routes](https://nextjs.org/docs/api-routes/introduction) instead of React pages.

This project uses [`next/font`](https://nextjs.org/docs/basic-features/font-optimization) to automatically optimize and load Inter, a custom Google Font.

### Learn More

To learn more about Next.js, take a look at the following resources:

- [Next.js Documentation](https://nextjs.org/docs) - learn about Next.js features and API.
- [Learn Next.js](https://nextjs.org/learn) - an interactive Next.js tutorial.

You can check out [the Next.js GitHub repository](https://github.com/vercel/next.js/) - your feedback and contributions are welcome!

### Deploy on Vercel

The easiest way to deploy your Next.js app is to use the [Vercel Platform](https://vercel.com/new?utm_medium=default-template&filter=next.js&utm_source=create-next-app&utm_campaign=create-next-app-readme) from the creators of Next.js.

Check out our [Next.js deployment documentation](https://nextjs.org/docs/deployment) for more details.

### Support notes

This template has been developed with the App Router (`app`) and React Server Components. If you’re unfamiliar with these beta features, you can find more information about them on the Next.js beta documentation page. So, please note that any request dealing with React (e.g. extra features, customisations, et cetera) is to be considered out of the support scope.

For more information about what support covers, please see our (FAQs)[https://cruip.com/faq/].

## Credits

- [Nucleo](https://nucleoapp.com/)

## Terms and License

- Released under the [GPL](https://www.gnu.org/licenses/gpl-3.0.html).
- Copyright 2024 [Cruip](https://cruip.com/).
- Use it for personal and commercial projects, but please don’t republish, redistribute, or resell the template.
- Attribution is not required, although it is really appreciated.

## About Us

We're an Italian developer/designer duo creating high-quality design/code resources for developers, makers, and startups.

## Stay in the loop

If you would like to know when we release new resources, you can follow [@pacovitiello](https://x.com/pacovitiello) and [@DavidePacilio](https://x.com/DavidePacilio) on X, or you can subscribe to our [newsletter](https://cruip.com/newsletter/).



================================================================================
END: D:\QiEOS\apps\web\public\builtbyrays_public\v3\tailwind-landing-page-template\README.md
================================================================================


================================================================================
FILE: D:\QiEOS\apps\web\public\builtbyrays_public\v3\tailwind-landing-page-template\tsconfig.json
================================================================================

{
  "compilerOptions": {
    "target": "es5",
    "lib": ["dom", "dom.iterable", "esnext"],
    "allowJs": true,
    "skipLibCheck": true,
    "strict": true,
    "forceConsistentCasingInFileNames": true,
    "noEmit": true,
    "esModuleInterop": true,
    "module": "esnext",
    "moduleResolution": "node",
    "resolveJsonModule": true,
    "isolatedModules": true,
    "jsx": "preserve",
    "incremental": true,
    "plugins": [
      {
        "name": "next"
      }
    ],
    "paths": {
      "@/*": ["./*"]
    }
  },
  "include": ["next-env.d.ts", "**/*.ts", "**/*.tsx", ".next/types/**/*.ts"],
  "exclude": ["node_modules"]
}


================================================================================
END: D:\QiEOS\apps\web\public\builtbyrays_public\v3\tailwind-landing-page-template\tsconfig.json
================================================================================


================================================================================
FILE: D:\QiEOS\apps\web\public\builtbyrays_public\v3\tailwind-landing-page-template\app\layout.tsx
================================================================================

import "./css/style.css";

import { Inter } from "next/font/google";

const inter = Inter({
  subsets: ["latin"],
  variable: "--font-inter",
  display: "swap",
});

export const metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

export default function RootLayout({
  children,
}: {
  children: React.ReactNode;
}) {
  return (
    <html lang="en" className="scroll-smooth">
      <body
        className={`${inter.variable} bg-gray-50 font-inter tracking-tight text-gray-900 antialiased`}
      >
        <div className="flex min-h-screen flex-col overflow-hidden supports-[overflow:clip]:overflow-clip">
          {children}
        </div>
      </body>
    </html>
  );
}


================================================================================
END: D:\QiEOS\apps\web\public\builtbyrays_public\v3\tailwind-landing-page-template\app\layout.tsx
================================================================================


================================================================================
FILE: D:\QiEOS\apps\web\public\builtbyrays_public\v3\tailwind-landing-page-template\app\(auth)\layout.tsx
================================================================================

import Image from "next/image";
import Logo from "@/components/ui/logo";
import AuthBg from "@/public/images/auth-bg.svg";

export default function AuthLayout({
  children,
}: {
  children: React.ReactNode;
}) {
  return (
    <>
      <header className="absolute z-30 w-full">
        <div className="mx-auto max-w-6xl px-4 sm:px-6">
          <div className="flex h-16 items-center justify-between md:h-20">
            {/* Site branding */}
            <div className="mr-4 shrink-0">
              <Logo />
            </div>
          </div>
        </div>
      </header>

      <main className="relative flex grow">
        <div
          className="pointer-events-none absolute bottom-0 left-0 -translate-x-1/3"
          aria-hidden="true"
        >
          <div className="h-80 w-80 rounded-full bg-linear-to-tr from-blue-500 opacity-70 blur-[160px]"></div>
        </div>

        {/* Content */}
        <div className="w-full">
          <div className="flex h-full flex-col justify-center before:min-h-[4rem] before:flex-1 after:flex-1 md:before:min-h-[5rem]">
            <div className="px-4 sm:px-6">
              <div className="mx-auto w-full max-w-sm">
                <div className="py-16 md:py-20">{children}</div>
              </div>
            </div>
          </div>
        </div>

        <>
          {/* Right side */}
          <div className="relative my-6 mr-6 hidden w-[572px] shrink-0 overflow-hidden rounded-2xl lg:block">
            {/* Background */}
            <div
              className="pointer-events-none absolute left-1/2 top-1/2 -z-10 -ml-24 -translate-x-1/2 -translate-y-1/2 bg-blue-50"
              aria-hidden="true"
            >
              <Image
                src={AuthBg}
                className="max-w-none"
                width={1285}
                height={1684}
                alt="Auth bg"
              />
            </div>
            {/* Illustration */}
            <div className="absolute left-32 top-1/2 w-[500px] -translate-y-1/2">
              <div className="aspect-video w-full rounded-2xl bg-gray-900 px-5 py-3 shadow-xl transition duration-300">
                <div className="relative mb-8 flex items-center justify-between before:block before:h-[9px] before:w-[41px] before:bg-[length:16px_9px] before:[background-image:radial-gradient(circle_at_4.5px_4.5px,var(--color-gray-600)_4.5px,transparent_0)] after:w-[41px]">
                  <span className="text-[13px] font-medium text-white">
                    cruip.com
                  </span>
                </div>
                <div className="font-mono text-sm text-gray-500 transition duration-300 [&_span]:opacity-0">
                  <span className="animate-[code-1_10s_infinite] text-gray-200">
                    npm login
                  </span>{" "}
                  <span className="animate-[code-2_10s_infinite]">
                    --registry=https://npm.pkg.github.com
                  </span>
                  <br />
                  <span className="animate-[code-3_10s_infinite]">
                    --scope=@phanatic
                  </span>{" "}
                  <span className="animate-[code-4_10s_infinite]">
                    Successfully logged-in.
                  </span>
                  <br />
                  <br />
                  <span className="animate-[code-5_10s_infinite] text-gray-200">
                    npm publish
                  </span>
                  <br />
                  <span className="animate-[code-6_10s_infinite]">
                    Package published.
                  </span>
                </div>
              </div>
            </div>
          </div>
        </>
      </main>
    </>
  );
}


================================================================================
END: D:\QiEOS\apps\web\public\builtbyrays_public\v3\tailwind-landing-page-template\app\(auth)\layout.tsx
================================================================================


================================================================================
FILE: D:\QiEOS\apps\web\public\builtbyrays_public\v3\tailwind-landing-page-template\app\(auth)\reset-password\page.tsx
================================================================================

export const metadata = {
  title: "Reset Password - Simple",
  description: "Page description",
};

export default function ResetPassword() {
  return (
    <>
      <div className="mb-10">
        <h1 className="text-4xl font-bold">Reset password</h1>
      </div>

      {/* Form */}
      <form>
        <div className="space-y-4">
          <div>
            <label
              className="mb-1 block text-sm font-medium text-gray-700"
              htmlFor="email"
            >
              Email
            </label>
            <input
              id="email"
              className="form-input w-full py-2"
              type="email"
              placeholder="corybarker@email.com"
              required
            />
          </div>
        </div>
        <div className="mt-6">
          <button className="btn w-full bg-linear-to-t from-blue-600 to-blue-500 bg-[length:100%_100%] bg-[bottom] text-white shadow-sm hover:bg-[length:100%_150%]">
            Reset Password
          </button>
        </div>
      </form>
    </>
  );
}


================================================================================
END: D:\QiEOS\apps\web\public\builtbyrays_public\v3\tailwind-landing-page-template\app\(auth)\reset-password\page.tsx
================================================================================


================================================================================
FILE: D:\QiEOS\apps\web\public\builtbyrays_public\v3\tailwind-landing-page-template\app\(auth)\signin\page.tsx
================================================================================

export const metadata = {
  title: "Sign In - Simple",
  description: "Page description",
};

import Link from "next/link";

export default function SignIn() {
  return (
    <>
      <>
        <div className="mb-10">
          <h1 className="text-4xl font-bold">Sign in to your account</h1>
        </div>
        {/* Form */}
        <form>
          <div className="space-y-4">
            <div>
              <label
                className="mb-1 block text-sm font-medium text-gray-700"
                htmlFor="email"
              >
                Email
              </label>
              <input
                id="email"
                className="form-input w-full py-2"
                type="email"
                placeholder="corybarker@email.com"
                required
              />
            </div>
            <div>
              <label
                className="mb-1 block text-sm font-medium text-gray-700"
                htmlFor="password"
              >
                Password
              </label>
              <input
                id="password"
                className="form-input w-full py-2"
                type="password"
                autoComplete="on"
                placeholder="••••••••"
                required
              />
            </div>
          </div>
          <div className="mt-6">
            <button className="btn w-full bg-linear-to-t from-blue-600 to-blue-500 bg-[length:100%_100%] bg-[bottom] text-white shadow-sm hover:bg-[length:100%_150%]">
              Sign In
            </button>
          </div>
        </form>
        {/* Bottom link */}
        <div className="mt-6 text-center">
          <Link
            className="text-sm text-gray-700 underline hover:no-underline"
            href="/reset-password"
          >
            Forgot password
          </Link>
        </div>
      </>
    </>
  );
}


================================================================================
END: D:\QiEOS\apps\web\public\builtbyrays_public\v3\tailwind-landing-page-template\app\(auth)\signin\page.tsx
================================================================================


================================================================================
FILE: D:\QiEOS\apps\web\public\builtbyrays_public\v3\tailwind-landing-page-template\app\(auth)\signup\page.tsx
================================================================================

export const metadata = {
  title: "Sign Up - Simple",
  description: "Page description",
};

export default function SignUp() {
  return (
    <>
      <div className="mb-10">
        <h1 className="text-4xl font-bold">Create your account</h1>
      </div>

      {/* Form */}
      <form>
        <div className="space-y-4">
          <div>
            <label
              className="mb-1 block text-sm font-medium text-gray-700"
              htmlFor="name"
            >
              Full name
            </label>
            <input
              id="name"
              className="form-input w-full py-2"
              type="text"
              placeholder="Corey Barker"
              required
            />
          </div>
          <div>
            <label
              className="mb-1 block text-sm font-medium text-gray-700"
              htmlFor="email"
            >
              Email
            </label>
            <input
              id="email"
              className="form-input w-full py-2"
              type="email"
              placeholder="corybarker@email.com"
              required
            />
          </div>
          <div>
            <label
              className="mb-1 block text-sm font-medium text-gray-700"
              htmlFor="phone"
            >
              Phone
            </label>
            <input
              id="phone"
              className="form-input w-full py-2"
              type="text"
              placeholder="(+750) 932-8907"
              required
            />
          </div>
          <div>
            <label
              className="mb-1 block text-sm font-medium text-gray-700"
              htmlFor="password"
            >
              Password
            </label>
            <input
              id="password"
              className="form-input w-full py-2"
              type="password"
              autoComplete="on"
              placeholder="••••••••"
              required
            />
          </div>
        </div>
        <div className="mt-6 space-y-3">
          <button className="btn w-full bg-linear-to-t from-blue-600 to-blue-500 bg-[length:100%_100%] bg-[bottom] text-white shadow-sm hover:bg-[length:100%_150%]">
            Register
          </button>
          <div className="text-center text-sm italic text-gray-400">Or</div>
          <button className="btn w-full bg-linear-to-t from-gray-900 to-gray-700 bg-[length:100%_100%] bg-[bottom] text-white shadow-sm hover:bg-[length:100%_150%]">
            Continue with GitHub
          </button>
        </div>
      </form>

      {/* Bottom link */}
      <div className="mt-6 text-center">
        <p className="text-sm text-gray-500">
          By signing up, you agree to the{" "}
          <a
            className="whitespace-nowrap font-medium text-gray-700 underline hover:no-underline"
            href="#0"
          >
            Terms of Service
          </a>{" "}
          and{" "}
          <a
            className="whitespace-nowrap font-medium text-gray-700 underline hover:no-underline"
            href="#0"
          >
            Privacy Policy
          </a>
          .
        </p>
      </div>
    </>
  );
}


================================================================================
END: D:\QiEOS\apps\web\public\builtbyrays_public\v3\tailwind-landing-page-template\app\(auth)\signup\page.tsx
================================================================================


================================================================================
FILE: D:\QiEOS\apps\web\public\builtbyrays_public\v3\tailwind-landing-page-template\app\(default)\layout.tsx
================================================================================

"use client";

import { useEffect } from "react";

import AOS from "aos";
import "aos/dist/aos.css";

import Header from "@/components/ui/header";
import Footer from "@/components/ui/footer";

export default function DefaultLayout({
  children,
}: {
  children: React.ReactNode;
}) {
  useEffect(() => {
    AOS.init({
      once: true,
      disable: "phone",
      duration: 700,
      easing: "ease-out-cubic",
    });
  });

  return (
    <>
      <Header />

      <main className="grow">{children}</main>

      <Footer border={true} />
    </>
  );
}


================================================================================
END: D:\QiEOS\apps\web\public\builtbyrays_public\v3\tailwind-landing-page-template\app\(default)\layout.tsx
================================================================================


================================================================================
FILE: D:\QiEOS\apps\web\public\builtbyrays_public\v3\tailwind-landing-page-template\app\(default)\page.tsx
================================================================================

export const metadata = {
  title: "Home - Simple",
  description: "Page description",
};

import Hero from "@/components/hero-home";
import BusinessCategories from "@/components/business-categories";
import FeaturesPlanet from "@/components/features-planet";
import LargeTestimonial from "@/components/large-testimonial";
import Cta from "@/components/cta";

export default function Home() {
  return (
    <>
      <Hero />
      <BusinessCategories />
      <FeaturesPlanet />
      <LargeTestimonial />
      <Cta />
    </>
  );
}


================================================================================
END: D:\QiEOS\apps\web\public\builtbyrays_public\v3\tailwind-landing-page-template\app\(default)\page.tsx
================================================================================


================================================================================
FILE: D:\QiEOS\apps\web\public\builtbyrays_public\v3\tailwind-landing-page-template\app\api\hello\route.ts
================================================================================

export async function GET(request: Request) {
  return new Response("Hello, Next.js!");
}


================================================================================
END: D:\QiEOS\apps\web\public\builtbyrays_public\v3\tailwind-landing-page-template\app\api\hello\route.ts
================================================================================


================================================================================
FILE: D:\QiEOS\apps\web\public\builtbyrays_public\v3\tailwind-landing-page-template\app\css\style.css
================================================================================

@import 'tailwindcss';

/* Additional styles */
@import './additional-styles/utility-patterns.css' layer(components);
@import './additional-styles/theme.css';

@plugin "@tailwindcss/forms" {
  strategy: base;
}

@theme {
  --font-inter: Inter, sans-serif;
  --font-mono: Roboto Mono, monospace;

  --text-xs: 0.75rem;
  --text-xs--line-height: 1.5;
  --text-sm: 0.875rem;
  --text-sm--line-height: 1.5715;
  --text-base: 1rem;
  --text-base--line-height: 1.5;
  --text-base--letter-spacing: -0.017em;
  --text-lg: 1.125rem;
  --text-lg--line-height: 1.5;
  --text-lg--letter-spacing: -0.017em;
  --text-xl: 1.25rem;
  --text-xl--line-height: 1.5;
  --text-xl--letter-spacing: -0.017em;
  --text-2xl: 1.5rem;
  --text-2xl--line-height: 1.415;
  --text-2xl--letter-spacing: -0.037em;
  --text-3xl: 1.875rem;
  --text-3xl--line-height: 1.3333;
  --text-3xl--letter-spacing: -0.037em;
  --text-4xl: 2.25rem;
  --text-4xl--line-height: 1.2777;
  --text-4xl--letter-spacing: -0.037em;
  --text-5xl: 3rem;
  --text-5xl--line-height: 1;
  --text-5xl--letter-spacing: -0.037em;
  --text-6xl: 4rem;
  --text-6xl--line-height: 1;
  --text-6xl--letter-spacing: -0.037em;
  --text-7xl: 4.5rem;
  --text-7xl--line-height: 1;
  --text-7xl--letter-spacing: -0.037em;

  --animate-code-1: code-1;
  --animate-code-2: code-2;
  --animate-code-3: code-3;
  --animate-code-4: code-4;
  --animate-code-5: code-5;
  --animate-code-6: code-6;
  --animate-breath: breath;
  --animate-float: float;
  --animate-line: line;
  --animate-infinite-scroll: infinite-scroll;  

  @keyframes code-1 {
    0% {
      opacity: 0;
    }
    2.5% {
      opacity: 1;
    }
    97.5% {
      opacity: 1;
    }
    100% {
      opacity: 0;
    }
  }
  @keyframes code-2 {
    16.2% {
      opacity: 0;
    }
    18.75% {
      opacity: 1;
    }
    97.5% {
      opacity: 1;
    }
    100% {
      opacity: 0;
    }
  }
  @keyframes code-3 {
    32.5% {
      opacity: 0;
    }
    35% {
      opacity: 1;
    }
    97.5% {
      opacity: 1;
    }
    100% {
      opacity: 0;
    }
  }
  @keyframes code-4 {
    48.75% {
      opacity: 0;
    }
    51.25% {
      opacity: 1;
    }
    97.5% {
      opacity: 1;
    }
    100% {
      opacity: 0;
    }
  }
  @keyframes code-5 {
    65% {
      opacity: 0;
    }
    72.5% {
      opacity: 1;
    }
    97.5% {
      opacity: 1;
    }
    100% {
      opacity: 0;
    }
  }
  @keyframes code-6 {
    81.25% {
      opacity: 0;
    }
    83.75% {
      opacity: 1;
    }
    97.5% {
      opacity: 1;
    }
    100% {
      opacity: 0;
    }
  }
  @keyframes breath {
    0%,
    100% {
      transform: scale(0.95);
    }
    50% {
      transform: scale(1.1);
    }
  }
  @keyframes float {
    0%,
    100% {
      transform: translateY(0);
    }
    50% {
      transform: translateY(-5%);
    }
  }
  @keyframes line {
    0%,
    100% {
      left: 0;
      opacity: 0;
    }
    50% {
      left: 100%;
      transform: translateX(-100%);
    }
    10%,
    40%,
    60%,
    90% {
      opacity: 0;
    }
    25%,
    75% {
      opacity: 1;
    }
  }
  @keyframes infinite-scroll {
    from {
      transform: translateX(0);
    }
    to {
      transform: translateX(-100%);
    }
  }
}

/*
  The default border color has changed to `currentColor` in Tailwind CSS v4,
  so we've added these compatibility styles to make sure everything still
  looks the same as it did with Tailwind CSS v3.

  If we ever want to remove these styles, we need to add an explicit border
  color utility to any element that depends on these defaults.
*/
@layer base {
  *,
  ::after,
  ::before,
  ::backdrop,
  ::file-selector-button {
    border-color: var(--color-gray-200, currentColor);
  }
}

================================================================================
END: D:\QiEOS\apps\web\public\builtbyrays_public\v3\tailwind-landing-page-template\app\css\style.css
================================================================================


================================================================================
FILE: D:\QiEOS\apps\web\public\builtbyrays_public\v3\tailwind-landing-page-template\app\css\additional-styles\custom-fonts.css
================================================================================



================================================================================
END: D:\QiEOS\apps\web\public\builtbyrays_public\v3\tailwind-landing-page-template\app\css\additional-styles\custom-fonts.css
================================================================================


================================================================================
FILE: D:\QiEOS\apps\web\public\builtbyrays_public\v3\tailwind-landing-page-template\app\css\additional-styles\theme.css
================================================================================

/* Scrollspy links */
[data-scrollspy-link].scrollspy-active {
  @apply text-blue-500 font-medium;
}

/* Custom AOS animations */
[data-aos="zoom-y-out"] {
transform: scaleX(1.03);
opacity: 0;
transition-property: transform, opacity;
}

@media screen {
  html:not(.no-js) body [data-aos=fade-up] {
      -webkit-transform: translate3d(0, 10px, 0);
      transform: translate3d(0, 10px, 0);
  }

  html:not(.no-js) body [data-aos=fade-down] {
      -webkit-transform: translate3d(0, -10px, 0);
      transform: translate3d(0, -10px, 0);
  }

  html:not(.no-js) body [data-aos=fade-right] {
      -webkit-transform: translate3d(-10px, 0, 0);
      transform: translate3d(-10px, 0, 0);
  }

  html:not(.no-js) body [data-aos=fade-left] {
      -webkit-transform: translate3d(10px, 0, 0);
      transform: translate3d(10px, 0, 0);
  }

  html:not(.no-js) body [data-aos=fade-up-right] {
      -webkit-transform: translate3d(-10px, 10px, 0);
      transform: translate3d(-10px, 10px, 0);
  }

  html:not(.no-js) body [data-aos=fade-up-left] {
      -webkit-transform: translate3d(10px, 10px, 0);
      transform: translate3d(10px, 10px, 0);
  }

  html:not(.no-js) body [data-aos=fade-down-right] {
      -webkit-transform: translate3d(-10px, -10px, 0);
      transform: translate3d(-10px, -10px, 0);
  }

  html:not(.no-js) body [data-aos=fade-down-left] {
      -webkit-transform: translate3d(10px, -10px, 0);
      transform: translate3d(10px, -10px, 0);
  }

  html:not(.no-js) body [data-aos=zoom-in-up] {
      -webkit-transform: translate3d(0, 10px, 0) scale(.6);
      transform: translate3d(0, 10px, 0) scale(.6);
  }

  html:not(.no-js) body [data-aos=zoom-in-down] {
      -webkit-transform: translate3d(0, -10px, 0) scale(.6);
      transform: translate3d(0, -10px, 0) scale(.6);
  }

  html:not(.no-js) body [data-aos=zoom-in-right] {
      -webkit-transform: translate3d(-10px, 0, 0) scale(.6);
      transform: translate3d(-10px, 0, 0) scale(.6);
  }

  html:not(.no-js) body [data-aos=zoom-in-left] {
      -webkit-transform: translate3d(10px, 0, 0) scale(.6);
      transform: translate3d(10px, 0, 0) scale(.6);
  }

  html:not(.no-js) body [data-aos=zoom-out-up] {
      -webkit-transform: translate3d(0, 10px, 0) scale(1.2);
      transform: translate3d(0, 10px, 0) scale(1.2);
  }

  html:not(.no-js) body [data-aos=zoom-out-down] {
      -webkit-transform: translate3d(0, -10px, 0) scale(1.2);
      transform: translate3d(0, -10px, 0) scale(1.2);
  }

  html:not(.no-js) body [data-aos=zoom-out-right] {
      -webkit-transform: translate3d(-10px, 0, 0) scale(1.2);
      transform: translate3d(-10px, 0, 0) scale(1.2);
  }

  html:not(.no-js) body [data-aos=zoom-out-left] {
      -webkit-transform: translate3d(10px, 0, 0) scale(1.2);
      transform: translate3d(10px, 0, 0) scale(1.2);
  }
}

================================================================================
END: D:\QiEOS\apps\web\public\builtbyrays_public\v3\tailwind-landing-page-template\app\css\additional-styles\theme.css
================================================================================


================================================================================
FILE: D:\QiEOS\apps\web\public\builtbyrays_public\v3\tailwind-landing-page-template\app\css\additional-styles\utility-patterns.css
================================================================================

/* Buttons */
.btn,
.btn-sm {
    @apply text-sm font-medium inline-flex items-center justify-center rounded-lg whitespace-nowrap transition-all;
}

.btn {
    @apply px-4 py-[11px] shadow-lg;
}

.btn-sm {
    @apply px-3 py-[5px] shadow-sm;
}

/* Forms */
input[type="search"]::-webkit-search-decoration,
input[type="search"]::-webkit-search-cancel-button,
input[type="search"]::-webkit-search-results-button,
input[type="search"]::-webkit-search-results-decoration {
  -webkit-appearance: none;
}

.form-input,
.form-textarea,
.form-multiselect,
.form-select,
.form-checkbox,
.form-radio {
    @apply border border-gray-200 shadow-xs rounded-lg focus:ring-0 focus:ring-offset-0;
}

.form-input,
.form-textarea,
.form-multiselect,
.form-select {
    @apply bg-white text-sm py-2.5 px-4 focus:border-blue-300;
}

.form-input,
.form-textarea {
    @apply placeholder-gray-400;
}

.form-select {
    @apply pr-10;
}

.form-checkbox,
.form-radio {
    @apply text-gray-800 checked:bg-blue-500 checked:border-transparent focus-visible:not-checked:border-blue-300;
}

.form-checkbox {
    @apply rounded-xs;
}

================================================================================
END: D:\QiEOS\apps\web\public\builtbyrays_public\v3\tailwind-landing-page-template\app\css\additional-styles\utility-patterns.css
================================================================================


================================================================================
FILE: D:\QiEOS\apps\web\public\builtbyrays_public\v3\tailwind-landing-page-template\components\accordion.tsx
================================================================================

"use client";

import { useState } from "react";

type AccordionpProps = {
  children: React.ReactNode;
  title: string;
  id: string;
  active?: boolean;
};

export default function Accordion({
  children,
  title,
  id,
  active = false,
}: AccordionpProps) {
  const [accordionOpen, setAccordionOpen] = useState<boolean>(active);

  return (
    <div className="relative rounded-lg bg-white/70 shadow-sm shadow-black/[0.03] before:pointer-events-none before:absolute before:inset-0 before:rounded-[inherit] before:border before:border-transparent before:[background:linear-gradient(var(--color-gray-100),var(--color-gray-200))_border-box] before:[mask-composite:exclude_!important] before:[mask:linear-gradient(white_0_0)_padding-box,_linear-gradient(white_0_0)]">
      <h2>
        <button
          className="flex w-full items-center justify-between px-4 py-3 text-left font-semibold"
          onClick={(e) => {
            e.preventDefault();
            setAccordionOpen((prevState) => !prevState);
          }}
          aria-expanded={accordionOpen}
          aria-controls={`accordion-text-${id}`}
        >
          <span>{title}</span>
          <span className="ml-8 flex h-5 w-5 shrink-0 items-center justify-center rounded-full bg-white shadow-xs">
            <svg
              className={`origin-center transform fill-gray-400 transition duration-200 ease-out ${accordionOpen && "rotate-180!"}`}
              xmlns="http://www.w3.org/2000/svg"
              width={10}
              height={6}
              fill="none"
            >
              <path
                d="m2 .586 3 3 3-3L9.414 2 5.707 5.707a1 1 0 0 1-1.414 0L.586 2 2 .586Z"
                clipRule="evenodd"
              />
            </svg>
          </span>
        </button>
      </h2>
      <div
        id={`accordion-text-${id}`}
        role="region"
        aria-labelledby={`accordion-title-${id}`}
        className={`grid overflow-hidden text-sm text-gray-600 transition-all duration-300 ease-in-out ${accordionOpen ? "grid-rows-[1fr] opacity-100" : "grid-rows-[0fr] opacity-0"}`}
      >
        <div className="overflow-hidden">
          <p className="px-4 pb-3">{children}</p>
        </div>
      </div>
    </div>
  );
}


================================================================================
END: D:\QiEOS\apps\web\public\builtbyrays_public\v3\tailwind-landing-page-template\components\accordion.tsx
================================================================================


================================================================================
FILE: D:\QiEOS\apps\web\public\builtbyrays_public\v3\tailwind-landing-page-template\components\banner.tsx
================================================================================

"use client";

import { useState } from "react";

export default function Banner() {
  const [bannerOpen, setBannerOpen] = useState<boolean>(true);

  return (
    <>
      {bannerOpen && (
        <div className="fixed bottom-0 right-0 z-50 w-full md:bottom-8 md:right-12 md:w-auto">
          <div className="flex justify-between bg-slate-800 p-3 text-sm text-slate-50 shadow-lg md:rounded-sm">
            <div className="inline-flex text-slate-500">
              <a
                className="font-medium text-slate-50 hover:underline"
                href="https://github.com/cruip/tailwind-landing-page-template"
                target="_blank"
                rel="noreferrer"
              >
                Download<span className="hidden sm:inline"> on GitHub</span>
              </a>{" "}
              <span className="px-1.5 italic">or</span>{" "}
              <a
                className="font-medium text-emerald-400 hover:underline"
                href="https://cruip.com/simple/"
                target="_blank"
                rel="noreferrer"
              >
                Check Premium Version
              </a>
            </div>
            <button
              className="ml-3 border-l border-gray-700 pl-2 text-slate-500 hover:text-slate-400"
              onClick={() => setBannerOpen(false)}
            >
              <span className="sr-only">Close</span>
              <svg
                className="h-4 w-4 shrink-0 fill-current"
                viewBox="0 0 16 16"
              >
                <path d="M12.72 3.293a1 1 0 00-1.415 0L8.012 6.586 4.72 3.293a1 1 0 00-1.414 1.414L6.598 8l-3.293 3.293a1 1 0 101.414 1.414l3.293-3.293 3.293 3.293a1 1 0 001.414-1.414L9.426 8l3.293-3.293a1 1 0 000-1.414z" />
              </svg>
            </button>
          </div>
        </div>
      )}
    </>
  );
}


================================================================================
END: D:\QiEOS\apps\web\public\builtbyrays_public\v3\tailwind-landing-page-template\components\banner.tsx
================================================================================


================================================================================
FILE: D:\QiEOS\apps\web\public\builtbyrays_public\v3\tailwind-landing-page-template\components\business-categories.tsx
================================================================================

import Image from "next/image";
import Logo01 from "@/public/images/logo-01.svg";
import Logo02 from "@/public/images/logo-02.svg";
import Logo03 from "@/public/images/logo-03.svg";
import Logo04 from "@/public/images/logo-04.svg";
import Logo05 from "@/public/images/logo-05.svg";
import Logo06 from "@/public/images/logo-06.svg";
import Logo07 from "@/public/images/logo-07.svg";
import Logo08 from "@/public/images/logo-08.svg";
import Logo09 from "@/public/images/logo-09.svg";

export default function BusinessCategories() {
  return (
    <section>
      <div className="mx-auto max-w-6xl px-4 sm:px-6">
        <div className="pb-12 md:pb-20">
          {/* Tab panels */}
          <div className="relative flex h-[324px] items-center justify-center">
            {/* Small blue dots */}
            <div className="absolute -z-10">
              <svg
                className="fill-blue-500"
                xmlns="http://www.w3.org/2000/svg"
                width={164}
                height={41}
                viewBox="0 0 164 41"
                fill="none"
              >
                <circle cx={1} cy={8} r={1} fillOpacity="0.24" />
                <circle cx={1} cy={1} r={1} fillOpacity="0.16" />
                <circle cx={1} cy={15} r={1} />
                <circle cx={1} cy={26} r={1} fillOpacity="0.64" />
                <circle cx={1} cy={33} r={1} fillOpacity="0.24" />
                <circle cx={8} cy={8} r={1} />
                <circle cx={8} cy={15} r={1} />
                <circle cx={8} cy={26} r={1} fillOpacity="0.24" />
                <circle cx={15} cy={15} r={1} fillOpacity="0.64" />
                <circle cx={15} cy={26} r={1} fillOpacity="0.16" />
                <circle cx={8} cy={33} r={1} />
                <circle cx={1} cy={40} r={1} />
                <circle
                  cx={1}
                  cy={1}
                  r={1}
                  transform="matrix(-1 0 0 1 164 7)"
                  fillOpacity="0.24"
                />
                <circle
                  cx={1}
                  cy={1}
                  r={1}
                  transform="matrix(-1 0 0 1 164 0)"
                  fillOpacity="0.16"
                />
                <circle
                  cx={1}
                  cy={1}
                  r={1}
                  transform="matrix(-1 0 0 1 164 14)"
                />
                <circle
                  cx={1}
                  cy={1}
                  r={1}
                  transform="matrix(-1 0 0 1 164 25)"
                  fillOpacity="0.64"
                />
                <circle
                  cx={1}
                  cy={1}
                  r={1}
                  transform="matrix(-1 0 0 1 164 32)"
                  fillOpacity="0.24"
                />
                <circle
                  cx={1}
                  cy={1}
                  r={1}
                  transform="matrix(-1 0 0 1 157 7)"
                />
                <circle
                  cx={1}
                  cy={1}
                  r={1}
                  transform="matrix(-1 0 0 1 157 14)"
                />
                <circle
                  cx={1}
                  cy={1}
                  r={1}
                  transform="matrix(-1 0 0 1 157 25)"
                  fillOpacity="0.24"
                />
                <circle
                  cx={1}
                  cy={1}
                  r={1}
                  transform="matrix(-1 0 0 1 150 14)"
                  fillOpacity="0.64"
                />
                <circle
                  cx={1}
                  cy={1}
                  r={1}
                  transform="matrix(-1 0 0 1 150 25)"
                  fillOpacity="0.16"
                />
                <circle
                  cx={1}
                  cy={1}
                  r={1}
                  transform="matrix(-1 0 0 1 157 32)"
                />
                <circle
                  cx={1}
                  cy={1}
                  r={1}
                  transform="matrix(-1 0 0 1 164 39)"
                />
              </svg>
            </div>
            {/* Blue glow */}
            <div className="absolute -z-10">
              <svg
                xmlns="http://www.w3.org/2000/svg"
                width={432}
                height={160}
                viewBox="0 0 432 160"
                fill="none"
              >
                <g opacity="0.6" filter="url(#filter0_f_2044_9)">
                  <path
                    className="fill-blue-500"
                    fillRule="evenodd"
                    clipRule="evenodd"
                    d="M80 112C62.3269 112 48 97.6731 48 80C48 62.3269 62.3269 48 80 48C97.6731 48 171 62.3269 171 80C171 97.6731 97.6731 112 80 112ZM352 112C369.673 112 384 97.6731 384 80C384 62.3269 369.673 48 352 48C334.327 48 261 62.3269 261 80C261 97.6731 334.327 112 352 112Z"
                  />
                </g>
                <defs>
                  <filter
                    id="filter0_f_2044_9"
                    x={0}
                    y={0}
                    width={432}
                    height={160}
                    filterUnits="userSpaceOnUse"
                    colorInterpolationFilters="sRGB"
                  >
                    <feFlood floodOpacity={0} result="BackgroundImageFix" />
                    <feBlend
                      mode="normal"
                      in="SourceGraphic"
                      in2="BackgroundImageFix"
                      result="shape"
                    />
                    <feGaussianBlur
                      stdDeviation={32}
                      result="effect1_foregroundBlur_2044_9"
                    />
                  </filter>
                </defs>
              </svg>
            </div>
            {/* Horizontal lines */}
            <div className="absolute inset-x-0 top-0 -z-10 h-px bg-linear-to-r from-transparent via-gray-200 to-transparent mix-blend-multiply"></div>
            <div className="absolute inset-x-0 bottom-0 -z-10 h-px bg-linear-to-r from-transparent via-gray-200 to-transparent mix-blend-multiply"></div>
            <div className="absolute inset-x-[200px] top-1/2 -z-10 h-px bg-linear-to-r from-transparent via-blue-500/60 to-transparent mix-blend-multiply"></div>
            <div className="absolute inset-x-0 top-1/2 -z-10 h-px -translate-y-[82px] bg-linear-to-r from-transparent via-gray-200 to-transparent mix-blend-multiply before:absolute before:inset-y-0 before:w-24 before:animate-[line_10s_ease-in-out_infinite_both] before:bg-linear-to-r before:via-blue-500"></div>
            <div className="absolute inset-x-0 top-1/2 -z-10 h-px translate-y-[82px] bg-linear-to-r from-transparent via-gray-200 to-transparent mix-blend-multiply before:absolute before:inset-y-0 before:w-24 before:animate-[line_10s_ease-in-out_infinite_5s_both] before:bg-linear-to-r before:via-blue-500"></div>
            {/* Diagonal lines */}
            <div className="absolute inset-x-[300px] top-1/2 -z-10 h-px rotate-[20deg] bg-linear-to-r from-transparent via-gray-200 to-transparent mix-blend-multiply"></div>
            <div className="absolute inset-x-[300px] top-1/2 -z-10 h-px -rotate-[20deg] bg-linear-to-r from-transparent via-gray-200 to-transparent mix-blend-multiply"></div>
            {/* Vertical lines */}
            <div className="absolute inset-y-0 left-1/2 -z-10 w-px -translate-x-[216px] bg-linear-to-b from-gray-200 to-transparent mix-blend-multiply"></div>
            <div className="absolute inset-y-0 left-1/2 -z-10 w-px translate-x-[216px] bg-linear-to-t from-gray-200 to-transparent mix-blend-multiply"></div>
            {/* Logos */}
            <div className="absolute before:absolute before:-inset-3 before:animate-[spin_3s_linear_infinite] before:rounded-full before:border before:border-transparent before:[mask-composite:exclude_!important] before:[mask:linear-gradient(white_0_0)_padding-box,_linear-gradient(white_0_0)] before:[background:conic-gradient(from_180deg,transparent,var(--color-blue-500))_border-box]">
              <div className="animate-[breath_8s_ease-in-out_infinite_both]">
                <div className="flex h-24 w-24 items-center justify-center rounded-full bg-white shadow-lg shadow-black/[0.03] before:absolute before:inset-0 before:m-[8.334%] before:rounded-[inherit] before:border before:border-gray-700/5 before:bg-gray-200/60 before:[mask-image:linear-gradient(to_bottom,black,transparent)]">
                  <Image
                    className="relative"
                    src={Logo01}
                    width={32}
                    height={32}
                    alt="Logo 01"
                  />
                </div>
              </div>
            </div>

            <div className="relative flex flex-col">
              <article className="flex h-full w-full items-center justify-center focus-visible:outline-hidden focus-visible:ring-3 focus-visible:ring-indigo-300">
                <div className="absolute -translate-x-[136px]">
                  <div className="animate-[breath_7s_ease-in-out_3s_infinite_both]">
                    <div className="flex h-16 w-16 items-center justify-center rounded-full bg-white shadow-lg shadow-black/[0.03] before:absolute before:inset-0 before:m-[8.334%] before:rounded-[inherit] before:border before:border-gray-700/5 before:bg-gray-200/60 before:[mask-image:linear-gradient(to_bottom,black,transparent)]">
                      <Image
                        className="relative"
                        src={Logo02}
                        width={23}
                        height={22}
                        alt="Logo 02"
                      />
                    </div>
                  </div>
                </div>
                <div className="absolute translate-x-[136px]">
                  <div className="animate-[breath_7s_ease-in-out_3.5s_infinite_both]">
                    <div className="flex h-16 w-16 items-center justify-center rounded-full bg-white shadow-lg shadow-black/[0.03] before:absolute before:inset-0 before:m-[8.334%] before:rounded-[inherit] before:border before:border-gray-700/5 before:bg-gray-200/60 before:[mask-image:linear-gradient(to_bottom,black,transparent)]">
                      <Image
                        className="relative"
                        src={Logo03}
                        width={22}
                        height={22}
                        alt="Logo 03"
                      />
                    </div>
                  </div>
                </div>
                <div className="absolute -translate-x-[216px] -translate-y-[82px]">
                  <div className="animate-[breath_6s_ease-in-out_3.5s_infinite_both]">
                    <div className="flex h-20 w-20 items-center justify-center rounded-full bg-white shadow-lg shadow-black/[0.03] before:absolute before:inset-0 before:m-[8.334%] before:rounded-[inherit] before:border before:border-gray-700/5 before:bg-gray-200/60 before:[mask-image:linear-gradient(to_bottom,black,transparent)]">
                      <Image
                        className="relative"
                        src={Logo04}
                        width={24}
                        height={22}
                        alt="Logo 04"
                      />
                    </div>
                  </div>
                </div>
                <div className="absolute -translate-y-[82px] translate-x-[216px]">
                  <div className="animate-[breath_6s_ease-in-out_1.5s_infinite_both]">
                    <div className="flex h-20 w-20 items-center justify-center rounded-full bg-white shadow-lg shadow-black/[0.03] before:absolute before:inset-0 before:m-[8.334%] before:rounded-[inherit] before:border before:border-gray-700/5 before:bg-gray-200/60 before:[mask-image:linear-gradient(to_bottom,black,transparent)]">
                      <Image
                        className="relative"
                        src={Logo05}
                        width={25}
                        height={25}
                        alt="Logo 05"
                      />
                    </div>
                  </div>
                </div>
                <div className="absolute translate-x-[216px] translate-y-[82px]">
                  <div className="animate-[breath_6s_ease-in-out_2s_infinite_both]">
                    <div className="flex h-20 w-20 items-center justify-center rounded-full bg-white shadow-lg shadow-black/[0.03] before:absolute before:inset-0 before:m-[8.334%] before:rounded-[inherit] before:border before:border-gray-700/5 before:bg-gray-200/60 before:[mask-image:linear-gradient(to_bottom,black,transparent)]">
                      <Image
                        className="relative"
                        src={Logo06}
                        width={20}
                        height={18}
                        alt="Logo 06"
                      />
                    </div>
                  </div>
                </div>
                <div className="absolute -translate-x-[216px] translate-y-[82px]">
                  <div className="animate-[breath_6s_ease-in-out_2.5s_infinite_both]">
                    <div className="flex h-20 w-20 items-center justify-center rounded-full bg-white shadow-lg shadow-black/[0.03] before:absolute before:inset-0 before:m-[8.334%] before:rounded-[inherit] before:border before:border-gray-700/5 before:bg-gray-200/60 before:[mask-image:linear-gradient(to_bottom,black,transparent)]">
                      <Image
                        className="relative"
                        src={Logo07}
                        width={25}
                        height={25}
                        alt="Logo 07"
                      />
                    </div>
                  </div>
                </div>
                <div className="absolute -translate-x-[292px] opacity-40">
                  <div className="animate-[breath_6s_ease-in-out_2s_infinite_both]">
                    <div className="flex h-12 w-12 items-center justify-center rounded-full border border-gray-200/60 bg-white shadow-lg">
                      <Image
                        className="relative"
                        src={Logo08}
                        width={20}
                        height={20}
                        alt="Logo 08"
                      />
                    </div>
                  </div>
                </div>
                <div className="absolute translate-x-[292px] opacity-40">
                  <div className="animate-[breath_6s_ease-in-out_4s_infinite_both]">
                    <div className="flex h-12 w-12 items-center justify-center rounded-full border border-gray-200/60 bg-white shadow-lg">
                      <Image
                        className="relative"
                        src={Logo09}
                        width={21}
                        height={13}
                        alt="Logo 09"
                      />
                    </div>
                  </div>
                </div>
              </article>
            </div>
          </div>
        </div>
      </div>
    </section>
  );
}


================================================================================
END: D:\QiEOS\apps\web\public\builtbyrays_public\v3\tailwind-landing-page-template\components\business-categories.tsx
================================================================================


================================================================================
FILE: D:\QiEOS\apps\web\public\builtbyrays_public\v3\tailwind-landing-page-template\components\cta.tsx
================================================================================

import Image from "next/image";
import Stripes from "@/public/images/stripes-dark.svg";

export default function Cta() {
  return (
    <section>
      <div className="mx-auto max-w-6xl px-4 sm:px-6">
        <div
          className="relative overflow-hidden rounded-2xl text-center shadow-xl before:pointer-events-none before:absolute before:inset-0 before:-z-10 before:rounded-2xl before:bg-gray-900"
          data-aos="zoom-y-out"
        >
          {/* Glow */}
          <div
            className="absolute bottom-0 left-1/2 -z-10 -translate-x-1/2 translate-y-1/2"
            aria-hidden="true"
          >
            <div className="h-56 w-[480px] rounded-full border-[20px] border-blue-500 blur-3xl" />
          </div>
          {/* Stripes illustration */}
          <div
            className="pointer-events-none absolute left-1/2 top-0 -z-10 -translate-x-1/2 transform"
            aria-hidden="true"
          >
            <Image
              className="max-w-none"
              src={Stripes}
              width={768}
              height={432}
              alt="Stripes"
            />
          </div>
          <div className="px-4 py-12 md:px-12 md:py-20">
            <h2 className="mb-6 border-y text-3xl font-bold text-gray-200 [border-image:linear-gradient(to_right,transparent,--theme(--color-slate-700/.7),transparent)1] md:mb-12 md:text-4xl">
              Create your next project with Simple
            </h2>
            <div className="mx-auto max-w-xs sm:flex sm:max-w-none sm:justify-center">
              <a
                className="btn group mb-4 w-full bg-linear-to-t from-blue-600 to-blue-500 bg-[length:100%_100%] bg-[bottom] text-white shadow-sm hover:bg-[length:100%_150%] sm:mb-0 sm:w-auto"
                href="#0"
              >
                <span className="relative inline-flex items-center">
                  Start Free Trial{" "}
                  <span className="ml-1 tracking-normal text-blue-300 transition-transform group-hover:translate-x-0.5">
                    -&gt;
                  </span>
                </span>
              </a>
            </div>
          </div>
        </div>
      </div>
    </section>
  );
}


================================================================================
END: D:\QiEOS\apps\web\public\builtbyrays_public\v3\tailwind-landing-page-template\components\cta.tsx
================================================================================


================================================================================
FILE: D:\QiEOS\apps\web\public\builtbyrays_public\v3\tailwind-landing-page-template\components\features-planet.tsx
================================================================================

import Image from "next/image";
import PlanetImg from "@/public/images/planet.png";
import PlanetOverlayImg from "@/public/images/planet-overlay.svg";
import PlanetTagImg01 from "@/public/images/planet-tag-01.png";
import PlanetTagImg02 from "@/public/images/planet-tag-02.png";
import PlanetTagImg03 from "@/public/images/planet-tag-03.png";
import PlanetTagImg04 from "@/public/images/planet-tag-04.png";

export default function FeaturesPlanet() {
  return (
    <section className="relative before:absolute before:inset-0 before:-z-20 before:bg-gray-900">
      <div className="mx-auto max-w-6xl px-4 sm:px-6">
        <div className="py-12 md:py-20">
          {/* Section header */}
          <div className="mx-auto max-w-3xl pb-16 text-center md:pb-20">
            <h2 className="text-3xl font-bold text-gray-200 md:text-4xl">
              Simple helps your teams work more efficiently together
            </h2>
          </div>
          {/* Planet */}
          <div className="pb-16 md:pb-20" data-aos="zoom-y-out">
            <div className="text-center">
              <div className="relative inline-flex rounded-full before:absolute before:inset-0 before:-z-10 before:scale-[.85] before:animate-[pulse_4s_cubic-bezier(.4,0,.6,1)_infinite] before:bg-linear-to-b before:from-blue-900 before:to-sky-700/50 before:blur-3xl after:absolute after:inset-0 after:rounded-[inherit] after:[background:radial-gradient(closest-side,var(--color-blue-500),transparent)]">
                <Image
                  className="rounded-full bg-gray-900"
                  src={PlanetImg}
                  width={400}
                  height={400}
                  alt="Planet"
                />
                <div className="pointer-events-none" aria-hidden="true">
                  <Image
                    className="absolute -right-64 -top-20 z-10 max-w-none"
                    src={PlanetOverlayImg}
                    width={789}
                    height={755}
                    alt="Planet decoration"
                  />
                  <div>
                    <Image
                      className="absolute -left-28 top-16 z-10 animate-[float_4s_ease-in-out_infinite_both] opacity-80 transition-opacity duration-500"
                      src={PlanetTagImg01}
                      width={253}
                      height={56}
                      alt="Tag 01"
                    />
                    <Image
                      className="absolute left-56 top-7 z-10 animate-[float_4s_ease-in-out_infinite_1s_both] opacity-30 transition-opacity duration-500"
                      src={PlanetTagImg02}
                      width={241}
                      height={56}
                      alt="Tag 02"
                    />
                    <Image
                      className="absolute -left-20 bottom-24 z-10 animate-[float_4s_ease-in-out_infinite_2s_both] opacity-25 transition-opacity duration-500"
                      src={PlanetTagImg03}
                      width={243}
                      height={56}
                      alt="Tag 03"
                    />
                    <Image
                      className="absolute bottom-32 left-64 z-10 animate-[float_4s_ease-in-out_infinite_3s_both] opacity-80 transition-opacity duration-500"
                      src={PlanetTagImg04}
                      width={251}
                      height={56}
                      alt="Tag 04"
                    />
                  </div>
                </div>
              </div>
            </div>
          </div>
          {/* Grid */}
          <div className="grid overflow-hidden sm:grid-cols-2 lg:grid-cols-3 *:relative *:p-6 *:before:absolute *:before:bg-gray-800 *:before:[block-size:100vh] *:before:[inline-size:1px] *:before:[inset-block-start:0] *:before:[inset-inline-start:-1px] *:after:absolute *:after:bg-gray-800 *:after:[block-size:1px] *:after:[inline-size:100vw] *:after:[inset-block-start:-1px] *:after:[inset-inline-start:0] md:*:p-10">
            <article>
              <h3 className="mb-2 flex items-center space-x-2 font-medium text-gray-200">
                <svg
                  className="fill-blue-500"
                  xmlns="http://www.w3.org/2000/svg"
                  width={16}
                  height={16}
                >
                  <path d="M2 4a2 2 0 0 1 2-2h8a2 2 0 0 1 2 2v8a2 2 0 0 1-2 2H4a2 2 0 0 1-2-2V4Zm2-4a4 4 0 0 0-4 4v8a4 4 0 0 0 4 4h8a4 4 0 0 0 4-4V4a4 4 0 0 0-4-4H4Zm1 10a1 1 0 1 0 0 2h6a1 1 0 1 0 0-2H5Z" />
                </svg>
                <span>Instant Analytics</span>
              </h3>
              <p className="text-[15px] text-gray-400">
                Collect essential insights about how visitors are using your
                site with in-depth page view metrics like pages, referring
                sites, and more.
              </p>
            </article>
            <article>
              <h3 className="mb-2 flex items-center space-x-2 font-medium text-gray-200">
                <svg
                  className="fill-blue-500"
                  xmlns="http://www.w3.org/2000/svg"
                  width={16}
                  height={16}
                >
                  <path d="M14.29 2.614a1 1 0 0 0-1.58-1.228L6.407 9.492l-3.199-3.2a1 1 0 1 0-1.414 1.415l4 4a1 1 0 0 0 1.496-.093l7-9ZM1 14a1 1 0 1 0 0 2h14a1 1 0 1 0 0-2H1Z" />
                </svg>
                <span>Metadata</span>
              </h3>
              <p className="text-[15px] text-gray-400">
                Collect essential insights about how visitors are using your
                site with in-depth page view metrics like pages, referring
                sites, and more.
              </p>
            </article>
            <article>
              <h3 className="mb-2 flex items-center space-x-2 font-medium text-gray-200">
                <svg
                  className="fill-blue-500"
                  xmlns="http://www.w3.org/2000/svg"
                  width={16}
                  height={16}
                >
                  <path
                    d="M2.248 6.285a1 1 0 0 1-1.916-.57A8.014 8.014 0 0 1 5.715.332a1 1 0 0 1 .57 1.916 6.014 6.014 0 0 0-4.037 4.037Z"
                    opacity=".3"
                  />
                  <path d="M8 11a3 3 0 1 1 0-6 3 3 0 0 1 0 6Zm0-2a1 1 0 1 0 0-2 1 1 0 0 0 0 2Zm1.715-6.752a1 1 0 0 1 .57-1.916 8.014 8.014 0 0 1 5.383 5.383 1 1 0 1 1-1.916.57 6.014 6.014 0 0 0-4.037-4.037Zm4.037 7.467a1 1 0 1 1 1.916.57 8.014 8.014 0 0 1-5.383 5.383 1 1 0 1 1-.57-1.916 6.014 6.014 0 0 0 4.037-4.037Zm-7.467 4.037a1 1 0 1 1-.57 1.916 8.014 8.014 0 0 1-5.383-5.383 1 1 0 1 1 1.916-.57 6.014 6.014 0 0 0 4.037 4.037Z" />
                </svg>
                <span>SEO &amp; Performance</span>
              </h3>
              <p className="text-[15px] text-gray-400">
                Collect essential insights about how visitors are using your
                site with in-depth page view metrics like pages, referring
                sites, and more.
              </p>
            </article>
            <article>
              <h3 className="mb-2 flex items-center space-x-2 font-medium text-gray-200">
                <svg
                  className="fill-blue-500"
                  xmlns="http://www.w3.org/2000/svg"
                  width={16}
                  height={16}
                >
                  <path d="M8 0a1 1 0 0 1 1 1v14a1 1 0 1 1-2 0V1a1 1 0 0 1 1-1Zm6 3a1 1 0 0 0-1 1v8a1 1 0 0 0 1 1h1a1 1 0 1 1 0 2h-1a3 3 0 0 1-3-3V4a3 3 0 0 1 3-3h1a1 1 0 1 1 0 2h-1ZM1 1a1 1 0 0 0 0 2h1a1 1 0 0 1 1 1v8a1 1 0 0 1-1 1H1a1 1 0 1 0 0 2h1a3 3 0 0 0 3-3V4a3 3 0 0 0-3-3H1Z" />
                </svg>
                <span>Custom Code</span>
              </h3>
              <p className="text-[15px] text-gray-400">
                Collect essential insights about how visitors are using your
                site with in-depth page view metrics like pages, referring
                sites, and more.
              </p>
            </article>
            <article>
              <h3 className="mb-2 flex items-center space-x-2 font-medium text-gray-200">
                <svg
                  className="fill-blue-500"
                  xmlns="http://www.w3.org/2000/svg"
                  width={16}
                  height={16}
                >
                  <path d="M10.284.33a1 1 0 1 0-.574 1.917 6.049 6.049 0 0 1 2.417 1.395A1 1 0 0 0 13.5 2.188 8.034 8.034 0 0 0 10.284.33ZM6.288 2.248A1 1 0 0 0 5.718.33 8.036 8.036 0 0 0 2.5 2.187a1 1 0 0 0 1.372 1.455 6.036 6.036 0 0 1 2.415-1.395ZM1.42 5.401a1 1 0 0 1 .742 1.204 6.025 6.025 0 0 0 0 2.79 1 1 0 0 1-1.946.462 8.026 8.026 0 0 1 0-3.714A1 1 0 0 1 1.421 5.4Zm2.452 6.957A1 1 0 0 0 2.5 13.812a8.036 8.036 0 0 0 3.216 1.857 1 1 0 0 0 .574-1.916 6.044 6.044 0 0 1-2.417-1.395Zm9.668.04a1 1 0 0 1-.041 1.414 8.033 8.033 0 0 1-3.217 1.857 1 1 0 1 1-.571-1.917 6.035 6.035 0 0 0 2.415-1.395 1 1 0 0 1 1.414.042Zm2.242-6.255a1 1 0 1 0-1.946.462 6.03 6.03 0 0 1 0 2.79 1 1 0 1 0 1.946.462 8.022 8.022 0 0 0 0-3.714Z" />
                </svg>
                <span>Localization</span>
              </h3>
              <p className="text-[15px] text-gray-400">
                Collect essential insights about how visitors are using your
                site with in-depth page view metrics like pages, referring
                sites, and more.
              </p>
            </article>
            <article>
              <h3 className="mb-2 flex items-center space-x-2 font-medium text-gray-200">
                <svg
                  className="fill-blue-500"
                  xmlns="http://www.w3.org/2000/svg"
                  width={16}
                  height={16}
                >
                  <path d="M9 1a1 1 0 1 0-2 0v6a1 1 0 0 0 2 0V1ZM4.572 3.08a1 1 0 0 0-1.144-1.64A7.987 7.987 0 0 0 0 8a8 8 0 0 0 16 0c0-2.72-1.36-5.117-3.428-6.56a1 1 0 1 0-1.144 1.64A5.987 5.987 0 0 1 14 8 6 6 0 1 1 2 8a5.987 5.987 0 0 1 2.572-4.92Z" />
                </svg>
                <span>Canonical URL</span>
              </h3>
              <p className="text-[15px] text-gray-400">
                Collect essential insights about how visitors are using your
                site with in-depth page view metrics like pages, referring
                sites, and more.
              </p>
            </article>
          </div>
        </div>
      </div>
    </section>
  );
}


================================================================================
END: D:\QiEOS\apps\web\public\builtbyrays_public\v3\tailwind-landing-page-template\components\features-planet.tsx
================================================================================


================================================================================
FILE: D:\QiEOS\apps\web\public\builtbyrays_public\v3\tailwind-landing-page-template\components\hero-home.tsx
================================================================================

import Image from "next/image";
import PageIllustration from "@/components/page-illustration";
import Avatar01 from "@/public/images/avatar-01.jpg";
import Avatar02 from "@/public/images/avatar-02.jpg";
import Avatar03 from "@/public/images/avatar-03.jpg";
import Avatar04 from "@/public/images/avatar-04.jpg";
import Avatar05 from "@/public/images/avatar-05.jpg";
import Avatar06 from "@/public/images/avatar-06.jpg";

export default function HeroHome() {
  return (
    <section className="relative">
      <PageIllustration />
      <div className="mx-auto max-w-6xl px-4 sm:px-6">
        {/* Hero content */}
        <div className="pb-12 pt-32 md:pb-20 md:pt-40">
          {/* Section header */}
          <div className="pb-12 text-center md:pb-16">
            <div
              className="mb-6 border-y [border-image:linear-gradient(to_right,transparent,--theme(--color-slate-300/.8),transparent)1]"
              data-aos="zoom-y-out"
            >
              <div className="-mx-0.5 flex justify-center -space-x-3">
                <Image
                  className="box-content rounded-full border-2 border-gray-50"
                  src={Avatar01}
                  width={32}
                  height={32}
                  alt="Avatar 01"
                />
                <Image
                  className="box-content rounded-full border-2 border-gray-50"
                  src={Avatar02}
                  width={32}
                  height={32}
                  alt="Avatar 01"
                />
                <Image
                  className="box-content rounded-full border-2 border-gray-50"
                  src={Avatar03}
                  width={32}
                  height={32}
                  alt="Avatar 02"
                />
                <Image
                  className="box-content rounded-full border-2 border-gray-50"
                  src={Avatar04}
                  width={32}
                  height={32}
                  alt="Avatar 03"
                />
                <Image
                  className="box-content rounded-full border-2 border-gray-50"
                  src={Avatar05}
                  width={32}
                  height={32}
                  alt="Avatar 04"
                />
                <Image
                  className="box-content rounded-full border-2 border-gray-50"
                  src={Avatar06}
                  width={32}
                  height={32}
                  alt="Avatar 05"
                />
              </div>
            </div>
            <h1
              className="mb-6 border-y text-5xl font-bold [border-image:linear-gradient(to_right,transparent,--theme(--color-slate-300/.8),transparent)1] md:text-6xl"
              data-aos="zoom-y-out"
              data-aos-delay={150}
            >
              The website builder you're <br className="max-lg:hidden" />
              looking for
            </h1>
            <div className="mx-auto max-w-3xl">
              <p
                className="mb-8 text-lg text-gray-700"
                data-aos="zoom-y-out"
                data-aos-delay={300}
              >
                Simple is a modern website builder powered by AI that changes
                how companies create user interfaces together.
              </p>
              <div className="relative before:absolute before:inset-0 before:border-y before:[border-image:linear-gradient(to_right,transparent,--theme(--color-slate-300/.8),transparent)1]">
                <div
                  className="mx-auto max-w-xs sm:flex sm:max-w-none sm:justify-center"
                  data-aos="zoom-y-out"
                  data-aos-delay={450}
                >
                  <a
                    className="btn group mb-4 w-full bg-linear-to-t from-blue-600 to-blue-500 bg-[length:100%_100%] bg-[bottom] text-white shadow-sm hover:bg-[length:100%_150%] sm:mb-0 sm:w-auto"
                    href="#0"
                  >
                    <span className="relative inline-flex items-center">
                      Start Free Trial{" "}
                      <span className="ml-1 tracking-normal text-blue-300 transition-transform group-hover:translate-x-0.5">
                        -&gt;
                      </span>
                    </span>
                  </a>
                  <a
                    className="btn w-full bg-white text-gray-800 shadow-sm hover:bg-gray-50 sm:ml-4 sm:w-auto"
                    href="#0"
                  >
                    Learn More
                  </a>
                </div>
              </div>
            </div>
          </div>
          {/* Hero image */}
          <div
            className="mx-auto max-w-3xl"
            data-aos="zoom-y-out"
            data-aos-delay={600}
          >
            <div className="relative aspect-video rounded-2xl bg-gray-900 px-5 py-3 shadow-xl before:pointer-events-none before:absolute before:-inset-5 before:border-y before:[border-image:linear-gradient(to_right,transparent,--theme(--color-slate-300/.8),transparent)1] after:absolute after:-inset-5 after:-z-10 after:border-x after:[border-image:linear-gradient(to_bottom,transparent,--theme(--color-slate-300/.8),transparent)1]">
              <div className="relative mb-8 flex items-center justify-between before:block before:h-[9px] before:w-[41px] before:bg-[length:16px_9px] before:[background-image:radial-gradient(circle_at_4.5px_4.5px,var(--color-gray-600)_4.5px,transparent_0)] after:w-[41px]">
                <span className="text-[13px] font-medium text-white">
                  cruip.com
                </span>
              </div>
              <div className="font-mono text-gray-500 [&_span]:opacity-0">
                <span className="animate-[code-1_10s_infinite] text-gray-200">
                  npm login
                </span>{" "}
                <span className="animate-[code-2_10s_infinite]">
                  --registry=https://npm.pkg.github.com
                </span>
                <br />
                <span className="animate-[code-3_10s_infinite]">
                  --scope=@phanatic
                </span>{" "}
                <span className="animate-[code-4_10s_infinite]">
                  Successfully logged-in.
                </span>
                <br />
                <br />
                <span className="animate-[code-5_10s_infinite] text-gray-200">
                  npm publish
                </span>
                <br />
                <span className="animate-[code-6_10s_infinite]">
                  Package published.
                </span>
              </div>
            </div>
          </div>
        </div>
      </div>
    </section>
  );
}


================================================================================
END: D:\QiEOS\apps\web\public\builtbyrays_public\v3\tailwind-landing-page-template\components\hero-home.tsx
================================================================================


================================================================================
FILE: D:\QiEOS\apps\web\public\builtbyrays_public\v3\tailwind-landing-page-template\components\large-testimonial.tsx
================================================================================

import Image from "next/image";
import TestimonialImg from "@/public/images/large-testimonial.jpg";

export default function LargeTestimonial() {
  return (
    <section>
      <div className="mx-auto max-w-2xl px-4 sm:px-6">
        <div className="py-12 md:py-20">
          <div className="space-y-3 text-center">
            <div className="relative inline-flex">
              <svg
                className="absolute -left-6 -top-2 -z-10"
                width={40}
                height={49}
                viewBox="0 0 40 49"
                fill="none"
                xmlns="http://www.w3.org/2000/svg"
              >
                <path
                  d="M22.7976 -0.000136375L39.9352 23.4746L33.4178 31.7234L13.7686 11.4275L22.7976 -0.000136375ZM9.34947 17.0206L26.4871 40.4953L19.9697 48.7441L0.320491 28.4482L9.34947 17.0206Z"
                  fill="#D1D5DB"
                />
              </svg>
              <Image
                className="rounded-full"
                src={TestimonialImg}
                width={48}
                height={48}
                alt="Large testimonial"
              />
            </div>
            <p className="text-2xl font-bold text-gray-900">
              “Simple has simplified my life in more ways than one. From
              managing my sites to{" "}
              <em className="italic text-gray-500">keeping track of tasks</em>,
              it's become my go-to tool for everything.”
            </p>
            <div className="text-sm font-medium text-gray-500">
              <span className="text-gray-700">Mary Sullivan</span>{" "}
              <span className="text-gray-400">/</span>{" "}
              <a className="text-blue-500" href="#0">
                CTO at Microsoft
              </a>
            </div>
          </div>
        </div>
      </div>
    </section>
  );
}


================================================================================
END: D:\QiEOS\apps\web\public\builtbyrays_public\v3\tailwind-landing-page-template\components\large-testimonial.tsx
================================================================================


================================================================================
FILE: D:\QiEOS\apps\web\public\builtbyrays_public\v3\tailwind-landing-page-template\components\page-illustration.tsx
================================================================================

import Image from "next/image";

import Stripes from "@/public/images/stripes.svg";

export default function PageIllustration() {
  return (
    <>
      {/* Stripes illustration */}
      <div
        className="pointer-events-none absolute left-1/2 top-0 -z-10 -translate-x-1/2 transform"
        aria-hidden="true"
      >
        <Image
          className="max-w-none"
          src={Stripes}
          width={768}
          alt="Stripes"
          priority
        />
      </div>
      {/* Circles */}
      <div
        className="pointer-events-none absolute -top-32 left-1/2 ml-[580px] -translate-x-1/2"
        aria-hidden="true"
      >
        <div className="h-80 w-80 rounded-full bg-linear-to-tr from-blue-500 opacity-50 blur-[160px]" />
      </div>
      <div
        className="pointer-events-none absolute left-1/2 top-[420px] ml-[380px] -translate-x-1/2"
        aria-hidden="true"
      >
        <div className="h-80 w-80 rounded-full bg-linear-to-tr from-blue-500 to-gray-900 opacity-50 blur-[160px]" />
      </div>
      <div
        className="pointer-events-none absolute left-1/2 top-[640px] -ml-[300px] -translate-x-1/2"
        aria-hidden="true"
      >
        <div className="h-80 w-80 rounded-full bg-linear-to-tr from-blue-500 to-gray-900 opacity-50 blur-[160px]" />
      </div>
    </>
  );
}


================================================================================
END: D:\QiEOS\apps\web\public\builtbyrays_public\v3\tailwind-landing-page-template\components\page-illustration.tsx
================================================================================


================================================================================
FILE: D:\QiEOS\apps\web\public\builtbyrays_public\v3\tailwind-landing-page-template\components\ui\footer.tsx
================================================================================

import Link from "next/link";
import Logo from "./logo";

export default function Footer({ border = false }: { border?: boolean }) {
  return (
    <footer>
      <div className="mx-auto max-w-6xl px-4 sm:px-6">
        {/* Top area: Blocks */}
        <div
          className={`grid gap-10 py-8 sm:grid-cols-12 md:py-12 ${border ? "border-t [border-image:linear-gradient(to_right,transparent,var(--color-slate-200),transparent)1]" : ""}`}
        >
          {/* 1st block */}
          <div className="space-y-2 sm:col-span-12 lg:col-span-4">
            <div>
              <Logo />
            </div>
            <div className="text-sm text-gray-600">
              &copy; Cruip.com - All rights reserved.
            </div>
          </div>

          {/* 2nd block */}
          <div className="space-y-2 sm:col-span-6 md:col-span-3 lg:col-span-2">
            <h3 className="text-sm font-medium">Product</h3>
            <ul className="space-y-2 text-sm">
              <li>
                <Link
                  className="text-gray-600 transition hover:text-gray-900"
                  href="#0"
                >
                  Features
                </Link>
              </li>
              <li>
                <Link
                  className="text-gray-600 transition hover:text-gray-900"
                  href="#0"
                >
                  Integrations
                </Link>
              </li>
              <li>
                <Link
                  className="text-gray-600 transition hover:text-gray-900"
                  href="#0"
                >
                  Pricing & Plans
                </Link>
              </li>
              <li>
                <Link
                  className="text-gray-600 transition hover:text-gray-900"
                  href="#0"
                >
                  Changelog
                </Link>
              </li>
              <li>
                <Link
                  className="text-gray-600 transition hover:text-gray-900"
                  href="#0"
                >
                  Our method
                </Link>
              </li>
            </ul>
          </div>

          {/* 3rd block */}
          <div className="space-y-2 sm:col-span-6 md:col-span-3 lg:col-span-2">
            <h3 className="text-sm font-medium">Company</h3>
            <ul className="space-y-2 text-sm">
              <li>
                <Link
                  className="text-gray-600 transition hover:text-gray-900"
                  href="#0"
                >
                  About us
                </Link>
              </li>
              <li>
                <Link
                  className="text-gray-600 transition hover:text-gray-900"
                  href="#0"
                >
                  Diversity & Inclusion
                </Link>
              </li>
              <li>
                <Link
                  className="text-gray-600 transition hover:text-gray-900"
                  href="#0"
                >
                  Blog
                </Link>
              </li>
              <li>
                <Link
                  className="text-gray-600 transition hover:text-gray-900"
                  href="#0"
                >
                  Careers
                </Link>
              </li>
              <li>
                <Link
                  className="text-gray-600 transition hover:text-gray-900"
                  href="#0"
                >
                  Financial statements
                </Link>
              </li>
            </ul>
          </div>

          {/* 4th block */}
          <div className="space-y-2 sm:col-span-6 md:col-span-3 lg:col-span-2">
            <h3 className="text-sm font-medium">Resources</h3>
            <ul className="space-y-2 text-sm">
              <li>
                <Link
                  className="text-gray-600 transition hover:text-gray-900"
                  href="#0"
                >
                  Community
                </Link>
              </li>
              <li>
                <Link
                  className="text-gray-600 transition hover:text-gray-900"
                  href="#0"
                >
                  Terms of service
                </Link>
              </li>
              <li>
                <Link
                  className="text-gray-600 transition hover:text-gray-900"
                  href="#0"
                >
                  Report a vulnerability
                </Link>
              </li>
            </ul>
          </div>

          {/* 5th block */}
          <div className="space-y-2 sm:col-span-6 md:col-span-3 lg:col-span-2">
            <h3 className="text-sm font-medium">Social</h3>
            <ul className="flex gap-1">
              <li>
                <Link
                  className="flex items-center justify-center text-blue-500 transition hover:text-blue-600"
                  href="#0"
                  aria-label="Twitter"
                >
                  <svg
                    className="h-8 w-8 fill-current"
                    viewBox="0 0 32 32"
                    xmlns="http://www.w3.org/2000/svg"
                  >
                    <path d="m13.063 9 3.495 4.475L20.601 9h2.454l-5.359 5.931L24 23h-4.938l-3.866-4.893L10.771 23H8.316l5.735-6.342L8 9h5.063Zm-.74 1.347h-1.457l8.875 11.232h1.36l-8.778-11.232Z"></path>
                  </svg>
                </Link>
              </li>
              <li>
                <Link
                  className="flex items-center justify-center text-blue-500 transition hover:text-blue-600"
                  href="#0"
                  aria-label="Medium"
                >
                  <svg
                    className="h-8 w-8 fill-current"
                    viewBox="0 0 32 32"
                    xmlns="http://www.w3.org/2000/svg"
                  >
                    <path d="M23 8H9a1 1 0 0 0-1 1v14a1 1 0 0 0 1 1h14a1 1 0 0 0 1-1V9a1 1 0 0 0-1-1Zm-1.708 3.791-.858.823a.251.251 0 0 0-.1.241V18.9a.251.251 0 0 0 .1.241l.838.823v.181h-4.215v-.181l.868-.843c.085-.085.085-.11.085-.241v-4.887l-2.41 6.131h-.329l-2.81-6.13V18.1a.567.567 0 0 0 .156.472l1.129 1.37v.181h-3.2v-.181l1.129-1.37a.547.547 0 0 0 .146-.472v-4.749a.416.416 0 0 0-.138-.351l-1-1.209v-.181H13.8l2.4 5.283 2.122-5.283h2.971l-.001.181Z"></path>
                  </svg>
                </Link>
              </li>
              <li>
                <Link
                  className="flex items-center justify-center text-blue-500 transition hover:text-blue-600"
                  href="#0"
                  aria-label="Github"
                >
                  <svg
                    className="h-8 w-8 fill-current"
                    viewBox="0 0 32 32"
                    xmlns="http://www.w3.org/2000/svg"
                  >
                    <path d="M16 8.2c-4.4 0-8 3.6-8 8 0 3.5 2.3 6.5 5.5 7.6.4.1.5-.2.5-.4V22c-2.2.5-2.7-1-2.7-1-.4-.9-.9-1.2-.9-1.2-.7-.5.1-.5.1-.5.8.1 1.2.8 1.2.8.7 1.3 1.9.9 2.3.7.1-.5.3-.9.5-1.1-1.8-.2-3.6-.9-3.6-4 0-.9.3-1.6.8-2.1-.1-.2-.4-1 .1-2.1 0 0 .7-.2 2.2.8.6-.2 1.3-.3 2-.3s1.4.1 2 .3c1.5-1 2.2-.8 2.2-.8.4 1.1.2 1.9.1 2.1.5.6.8 1.3.8 2.1 0 3.1-1.9 3.7-3.7 3.9.3.4.6.9.6 1.6v2.2c0 .2.1.5.6.4 3.2-1.1 5.5-4.1 5.5-7.6-.1-4.4-3.7-8-8.1-8z"></path>
                  </svg>
                </Link>
              </li>
            </ul>
          </div>
        </div>
      </div>

      {/* Big text */}
      <div className="relative -mt-16 h-60 w-full" aria-hidden="true">
        <div className="pointer-events-none absolute left-1/2 -z-10 -translate-x-1/2 text-center text-[348px] font-bold leading-none before:bg-linear-to-b before:from-gray-200 before:to-gray-100/30 before:to-80% before:bg-clip-text before:text-transparent before:content-['Simple'] after:absolute after:inset-0 after:bg-gray-300/70 after:bg-clip-text after:text-transparent after:mix-blend-darken after:content-['Simple'] after:[text-shadow:0_1px_0_white]"></div>
        {/* Glow */}
        <div
          className="absolute bottom-0 left-1/2 -translate-x-1/2 translate-y-2/3"
          aria-hidden="true"
        >
          <div className="h-56 w-56 rounded-full border-[20px] border-blue-700 blur-[80px]"></div>
        </div>
      </div>
    </footer>
  );
}


================================================================================
END: D:\QiEOS\apps\web\public\builtbyrays_public\v3\tailwind-landing-page-template\components\ui\footer.tsx
================================================================================


================================================================================
FILE: D:\QiEOS\apps\web\public\builtbyrays_public\v3\tailwind-landing-page-template\components\ui\header.tsx
================================================================================

import Link from "next/link";
import Logo from "./logo";

export default function Header() {
  return (
    <header className="fixed top-2 z-30 w-full md:top-6">
      <div className="mx-auto max-w-6xl px-4 sm:px-6">
        <div className="relative flex h-14 items-center justify-between gap-3 rounded-2xl bg-white/90 px-3 shadow-lg shadow-black/[0.03] backdrop-blur-xs before:pointer-events-none before:absolute before:inset-0 before:rounded-[inherit] before:border before:border-transparent before:[background:linear-gradient(var(--color-gray-100),var(--color-gray-200))_border-box] before:[mask-composite:exclude_!important] before:[mask:linear-gradient(white_0_0)_padding-box,_linear-gradient(white_0_0)]">
          {/* Site branding */}
          <div className="flex flex-1 items-center">
            <Logo />
          </div>

          {/* Desktop sign in links */}
          <ul className="flex flex-1 items-center justify-end gap-3">
            <li>
              <Link
                href="/signin"
                className="btn-sm bg-white text-gray-800 shadow-sm hover:bg-gray-50"
              >
                Login
              </Link>
            </li>
            <li>
              <Link
                href="/signup"
                className="btn-sm bg-gray-800 text-gray-200 shadow-sm hover:bg-gray-900"
              >
                Register
              </Link>
            </li>
          </ul>
        </div>
      </div>
    </header>
  );
}


================================================================================
END: D:\QiEOS\apps\web\public\builtbyrays_public\v3\tailwind-landing-page-template\components\ui\header.tsx
================================================================================


================================================================================
FILE: D:\QiEOS\apps\web\public\builtbyrays_public\v3\tailwind-landing-page-template\components\ui\logo.tsx
================================================================================

import Link from "next/link";

export default function Logo() {
  return (
    <Link href="/" className="inline-flex" aria-label="Cruip">
      <svg xmlns="http://www.w3.org/2000/svg" width="28" height="28">
        <path
          className="fill-blue-500"
          fillRule="evenodd"
          d="M15.052 0c6.914.513 12.434 6.033 12.947 12.947h-5.015a7.932 7.932 0 0 1-7.932-7.932V0Zm-2.105 22.985V28C6.033 27.487.513 21.967 0 15.053h5.015a7.932 7.932 0 0 1 7.932 7.932Z"
          clipRule="evenodd"
        />
        <path
          className="fill-blue-300"
          fillRule="evenodd"
          d="M0 12.947C.513 6.033 6.033.513 12.947 0v5.015a7.932 7.932 0 0 1-7.932 7.932H0Zm22.984 2.106h5.015C27.486 21.967 21.966 27.487 15.052 28v-5.015a7.932 7.932 0 0 1 7.932-7.932Z"
          clipRule="evenodd"
        />
      </svg>
    </Link>
  );
}


================================================================================
END: D:\QiEOS\apps\web\public\builtbyrays_public\v3\tailwind-landing-page-template\components\ui\logo.tsx
================================================================================


================================================================================
FILE: D:\QiEOS\apps\web\public\empowerqnow\code_extractor.py
================================================================================

import os
from datetime import datetime

def should_ignore_directory(dir_name):
    """Check if directory should be ignored."""
    ignore_dirs = ['dist', 'node_modules']
    return dir_name.lower() in [d.lower() for d in ignore_dirs]

def get_file_extension(file_name):
    """Get file extension for determining if it's a code file."""
    return os.path.splitext(file_name)[1].lower()

def is_code_file(file_name):
    """Check if file is likely a code file based on extension."""
    # Files to explicitly ignore
    ignore_files = ['package-lock.json']
    if file_name in ignore_files:
        return False
    
    code_extensions = {
        '.py', '.js', '.jsx', '.ts', '.tsx', '.html', '.css', '.scss', '.sass',
        '.json', '.xml', '.yaml', '.yml', '.md', '.txt', '.sh', '.bat', '.ps1',
        '.vue', '.php', '.java', '.cpp', '.c', '.h', '.hpp', '.cs', '.rb',
        '.go', '.rs', '.swift', '.kt', '.scala', '.r', '.sql', '.pl', '.lua',
        '.config.js'  # Include config.js files
    }
    
    # Check for exact extension match
    if get_file_extension(file_name) in code_extensions:
        return True
    
    # Special check for .config.js files
    if file_name.endswith('.config.js'):
        return True
    
    return False

def print_directory_tree(root_dir, output_file, current_depth=0, prefix=''):
    """Recursively prints the directory tree structure and writes to output file."""
    
    try:
        # Get the list of items in the directory
        items = os.listdir(root_dir)
    except PermissionError:
        message = prefix + "└── [Permission Denied]"
        print(message)
        output_file.write(message + "\n")
        return
    except FileNotFoundError:
        message = prefix + "└── [Directory Not Found]"
        print(message)
        output_file.write(message + "\n")
        return

    # Sort items: directories first, then files
    items = sorted(items, key=lambda s: s.lower())
    directories = [item for item in items if os.path.isdir(os.path.join(root_dir, item))]
    files = [item for item in items if not os.path.isdir(os.path.join(root_dir, item))]

    # Filter out ignored directories and hidden files/directories
    directories = [item for item in directories if not should_ignore_directory(item) and not item.startswith('.')]
    files = [item for item in files if not item.startswith('.')]

    # Combine directories and files
    items = directories + files

    for index, item in enumerate(items):
        path = os.path.join(root_dir, item)
        
        # Determine tree connector style
        if index == len(items) - 1:
            connector = '└── '
            extension = '    '
        else:
            connector = '├── '
            extension = '│   '

        # Print and write to file
        message = prefix + connector + item
        print(message)
        output_file.write(message + "\n")

        # Recurse into directories (excluding ignored ones)
        if os.path.isdir(path):
            print_directory_tree(path, output_file, current_depth + 1, prefix + extension)

def extract_file_content(file_path, output_file):
    """Extract and write file content with header."""
    try:
        # Create header
        header = f"\n{'='*80}\n"
        header += f"FILE: {file_path}\n"
        header += f"TYPE: {get_file_extension(file_path)}\n"
        header += f"{'='*80}\n\n"
        
        print(header)
        output_file.write(header)
        
        # Read and write file content
        with open(file_path, 'r', encoding='utf-8', errors='ignore') as f:
            content = f.read()
            print(content)
            output_file.write(content)
            
        # Add footer
        footer = f"\n\n{'='*80}\nEND OF FILE: {file_path}\n{'='*80}\n\n"
        print(footer)
        output_file.write(footer)
        
    except Exception as e:
        error_msg = f"\nERROR READING FILE {file_path}: {str(e)}\n"
        print(error_msg)
        output_file.write(error_msg)

def scan_and_extract_files(root_dir, output_file):
    """Scan directory tree and extract content from all code files."""
    print(f"\n{'='*80}")
    print("STARTING FILE CONTENT EXTRACTION")
    print(f"{'='*80}\n")
    output_file.write(f"\n{'='*80}\n")
    output_file.write("STARTING FILE CONTENT EXTRACTION\n")
    output_file.write(f"{'='*80}\n\n")
    
    file_count = 0
    
    for root, dirs, files in os.walk(root_dir):
        # Filter out ignored directories from traversal
        dirs[:] = [d for d in dirs if not should_ignore_directory(d) and not d.startswith('.')]
        
        # Filter out hidden files and sort for consistent order
        files = [f for f in files if not f.startswith('.')]
        files = sorted(files, key=lambda s: s.lower())
        
        for file_name in files:
            file_path = os.path.join(root, file_name)
            
            # Only process code files
            if is_code_file(file_name):
                extract_file_content(file_path, output_file)
                file_count += 1
    
    return file_count

def main():
    """Main function to run the code extraction."""
    # Get the project root (current working directory)
    root_dir = os.getcwd()
    
    # Create output file in root directory
    timestamp = datetime.now().strftime("%Y-%m-%d_%H-%M-%S")
    output_filename = f"code_extraction_{timestamp}.txt"
    output_path = os.path.join(root_dir, output_filename)
    
    print(f"Starting code extraction from: {root_dir}")
    print(f"Output will be saved to: {output_path}")
    print(f"Ignoring directories: dist, node_modules")
    print(f"Ignoring files: package-lock.json")
    print(f"{'='*80}\n")
    
    with open(output_path, 'w', encoding='utf-8') as output_file:
        # Write header information
        header_info = f"CODE EXTRACTION REPORT\n"
        header_info += f"Generated: {datetime.now().strftime('%Y-%m-%d %H:%M:%S')}\n"
        header_info += f"Root Directory: {root_dir}\n"
        header_info += f"Ignored Directories: dist, node_modules\n"
        header_info += f"Ignored Files: package-lock.json\n"
        header_info += f"{'='*80}\n\n"
        
        print(header_info)
        output_file.write(header_info)
        
        # Print directory tree
        print("DIRECTORY TREE STRUCTURE:")
        print("-" * 40)
        output_file.write("DIRECTORY TREE STRUCTURE:\n")
        output_file.write("-" * 40 + "\n")
        
        print_directory_tree(root_dir, output_file)
        
        # Extract file contents
        file_count = scan_and_extract_files(root_dir, output_file)
        
        # Write footer
        footer = f"\n{'='*80}\n"
        footer += f"EXTRACTION COMPLETE\n"
        footer += f"Total files processed: {file_count}\n"
        footer += f"Output saved to: {output_path}\n"
        footer += f"{'='*80}\n"
        
        print(footer)
        output_file.write(footer)
    
    print(f"\nCode extraction completed successfully!")
    print(f"Output saved to: {output_path}")

if __name__ == "__main__":
    main()


================================================================================
END: D:\QiEOS\apps\web\public\empowerqnow\code_extractor.py
================================================================================


================================================================================
FILE: D:\QiEOS\apps\web\public\empowerqnow\directory_mapper.py
================================================================================

import os
import argparse
from datetime import datetime

def print_directory_tree(root_dir, show_files=True, max_depth=None, current_depth=0, prefix='', log_file=None, include_hidden=True, exclude_dirs=None):
    """
    Recursively prints the directory tree structure up to the specified depth and writes to a log file.
    """
    if exclude_dirs is None:
        exclude_dirs = [
            'venv', '__pycache__', 'data', 'logs',
            '.git', '.vscode', '.idea', '.pytest_cache',
            '.venv', '.DS_Store', '.env', '.env.local',
            '.env.development.local', '.env.test.local',
            '.env.production.local', 'Empty_Folders',
            '.docusaurus', '.docusaurus-plugin-content-docs-current',
            # Node / frontend bloat
            'node_modules', '.node_modules',
            # Tools/programs we don't want
            'mpc-hc', 'losslesscut', 'OCR', 'pdf-main', 'my-pdf-main',
            # Tests (ignore any folder containing these patterns)
            'test', 'tests', '__tests__',
            # Plugins and cache
            'plugins', '.local'
        ]

    if max_depth is not None and current_depth >= max_depth:
        return

    try:
        # Get the list of items in the directory
        items = os.listdir(root_dir)
    except PermissionError:
        message = prefix + "└── [Permission Denied]"
        print(message)
        if log_file:
            log_file.write(message + "\n")
        return
    except FileNotFoundError:
        message = prefix + "└── [Directory Not Found]"
        print(message)
        if log_file:
            log_file.write(message + "\n")
        return

    # Sort items: directories first, then files
    items = sorted(items, key=lambda s: s.lower())
    directories = [item for item in items if os.path.isdir(os.path.join(root_dir, item))]
    files = [item for item in items if not os.path.isdir(os.path.join(root_dir, item))]

    # Exclude directories that match or contain any exclude pattern
    directories = [
        item for item in directories
        if not any(ex.lower() in item.lower() for ex in exclude_dirs)
    ]

    # Show files or just folders
    items = directories if not show_files else directories + files

    for index, item in enumerate(items):
        if not include_hidden and item.startswith('.'):
            continue

        path = os.path.join(root_dir, item)
        # Determine tree connector style
        if index == len(items) - 1:
            connector = '└── '
            extension = '    '
        else:
            connector = '├── '
            extension = '│   '

        # Print and log
        message = prefix + connector + item
        print(message)
        if log_file:
            log_file.write(message + "\n")

        # Recurse into directories
        if os.path.isdir(path):
            print_directory_tree(path, show_files, max_depth, current_depth + 1,
                                 prefix + extension, log_file, include_hidden, exclude_dirs)

def create_log_file(filename_prefix, suffix=""):
    """Creates a timestamped log file in Downloads."""
    downloads_dir = os.path.join(os.path.expanduser("~"), "Downloads")

    sanitized_prefix = "".join(c for c in filename_prefix if c.isalnum() or c in (' ', '_', '-')).strip()
    if not sanitized_prefix:
        sanitized_prefix = "log"

    timestamp = datetime.now().strftime("%Y-%m-%d_%H-%M-%S")
    base_log_file_name = f"{sanitized_prefix}_{timestamp}{suffix}"
    log_file_name = f"{base_log_file_name}.txt"
    log_file_path = os.path.join(downloads_dir, log_file_name)

    counter = 1
    while os.path.exists(log_file_path):
        log_file_name = f"{base_log_file_name}_{counter}.txt"
        log_file_path = os.path.join(downloads_dir, log_file_name)
        counter += 1

    return open(log_file_path, "w", encoding="utf-8")

def main():
    """Main orchestrator for generating directory tree."""
    try:
        # Set default path to project root (current working directory)
        root_dir = os.getcwd()
        
        # Default settings: show both files and folders, no depth limit
        show_files = True
        max_depth = None

        log_file_tree = create_log_file(os.path.basename(root_dir), "_tree")
        print(f"Log file created: {log_file_tree.name}")
        print(f"Resolved path: {root_dir}")
        log_file_tree.write(f"Resolved path: {root_dir}\n")

        print_directory_tree(root_dir, show_files, max_depth, log_file=log_file_tree)
        log_file_tree.close()
        print(f"Directory structure logged in: {log_file_tree.name}")

    except Exception as e:
        print(f"An unexpected error occurred in main: {e}")

if __name__ == "__main__":
    main()


================================================================================
END: D:\QiEOS\apps\web\public\empowerqnow\directory_mapper.py
================================================================================


================================================================================
FILE: D:\QiEOS\apps\web\public\empowerqnow\index.html
================================================================================

<!DOCTYPE html>
<html lang="en" class="scroll-smooth">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">

    <!-- SEO Meta Tags -->
    <title>EmpowerQNow | Integration Over Illusion</title>
    <meta name="description" content="Unapologetic truth for those seeking self-integration, shadow work, and authenticity over comfort.">
    <meta name="keywords" content="personal empowerment, spirituality, shadow work, authenticity, self-integration, truth, spiritual growth">

    <!-- Open Graph for Social Media Sharing -->
    <meta property="og:title" content="EmpowerQNow | Integration Over Illusion">
    <meta property="og:description" content="Shadow work and unapologetic truth for those done with love-and-light clichés.">
    <meta property="og:image" content="https://placehold.co/1200x630/4338ca/ffffff?text=EmpowerQNow">
    <meta property="og:url" content="https://www.empowerqnow.com">
    <meta property="og:type" content="website">

    <!-- Favicon -->
    <link rel="icon" type="image/svg+xml" href="data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 100 100'%3E%3Ctext x='50%25' y='50%25' style='font-size: 60px; font-family: sans-serif; fill: %23ffffff; text-anchor: middle; dominant-baseline: middle;'%3EE%3C/text%3E%3C/svg%3E">

    <!-- Tailwind CSS CDN -->
    <script src="https://cdn.tailwindcss.com"></script>

    <!-- Google Font: Inter for clean typography -->
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;700;800&display=swap" rel="stylesheet">

    <!-- Custom CSS for subtle animations and glassmorphism -->
    <style>
        :root {
            --bg-start: #0f172a;
            --bg-end: #0c0b13;
        }

        body {
            font-family: 'Inter', sans-serif;
            background: linear-gradient(135deg, var(--bg-start), var(--bg-end));
            color: #e2e8f0;
            overflow-x: hidden;
        }

        .glass-panel {
            background-color: rgba(255, 255, 255, 0.05);
            border: 1px solid rgba(255, 255, 255, 0.1);
            backdrop-filter: blur(10px);
            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
            transition: transform 0.3s ease-in-out, box-shadow 0.3s ease-in-out;
            will-change: transform;
        }

        .glass-panel:hover {
            transform: translateY(-5px);
            box-shadow: 0 8px 12px rgba(0, 0, 0, 0.2);
        }

        .gradient-text {
            background-clip: text;
            -webkit-background-clip: text;
            color: transparent;
            background-image: linear-gradient(45deg, #a78bfa, #818cf8, #3b82f6);
        }

        .btn-gradient {
            background-image: linear-gradient(45deg, #a78bfa, #818cf8);
            box-shadow: 0 4px 10px rgba(79, 70, 229, 0.4);
            transition: transform 0.2s ease-in-out, box-shadow 0.2s ease-in-out;
            will-change: transform;
        }

        .btn-gradient:hover {
            transform: translateY(-2px);
            box-shadow: 0 6px 15px rgba(79, 70, 229, 0.6);
        }
    </style>
</head>

<body class="bg-gray-950 text-gray-200">

    <!-- Main Container -->
    <div class="container mx-auto px-4 py-8 max-w-7xl">

        <!-- Section 1: Hero/Header -->
        <header id="hero" class="flex flex-col items-center text-center py-20 md:py-32">
            <div class="mb-6 md:mb-8">
                <span class="text-3xl font-bold gradient-text">EmpowerQNow</span>
            </div>
            <h1 class="text-5xl md:text-7xl font-extrabold leading-tight tracking-tight mb-4 gradient-text">
                Integration Over Illusion.
            </h1>
            <p class="text-xl md:text-2xl font-normal max-w-3xl mb-8 text-gray-400">
                Shadow work and unapologetic truth for those done with love-and-light clichés.
            </p>
            <div class="flex flex-col sm:flex-row space-y-4 sm:space-y-0 sm:space-x-4">
                <a href="#featured-posts" class="btn-gradient text-white font-bold py-3 px-8 rounded-full shadow-lg">
                    Read the Blog
                </a>
                <a href="#community" class="glass-panel text-gray-200 font-bold py-3 px-8 rounded-full border-2 border-indigo-400/50">
                    Subscribe for Weekly Shadow Notes
                </a>
            </div>
        </header>

        <!-- Section 2: About -->
        <section id="about" class="py-16 md:py-24">
            <div class="glass-panel rounded-3xl p-8 md:p-12 max-w-5xl mx-auto text-center">
                <h2 class="text-3xl md:text-4xl font-bold mb-4 gradient-text">The Unfinished Story.</h2>
                <p class="text-md md:text-lg mb-4 text-gray-300">
                    I'm done with the curated, polished self-help gurus. This space isn't about manifesting a new car or finding your perfect soulmate. It's about getting brutally honest with the parts of yourself you've been avoiding. The rage, the grief, the shame—all of it. Because real power isn't about ignoring your shadows, it's about integrating them. It’s about becoming whole, not just happy.
                </p>
                <p class="text-md md:text-lg text-gray-300">
                    This is a rebellion against the spiritual bypass. A call to step into your full, messy, glorious humanity. Welcome to the work.
                </p>
            </div>
        </section>

        <!-- Section 3: What You'll Find -->
        <section id="what-youll-find" class="py-16 md:py-24">
            <div class="text-center mb-12">
                <h2 class="text-3xl md:text-4xl font-bold gradient-text">What You'll Find Here.</h2>
            </div>
            <div class="grid md:grid-cols-3 gap-8">
                <div class="glass-panel p-6 rounded-2xl flex flex-col items-start text-left">
                    <h3 class="text-2xl font-bold mb-2">The Truth Bombs</h3>
                    <p class="text-gray-300">
                        Short, raw, and impactful insights. These are the uncomfortable truths disguised as spiritual platitudes.
                    </p>
                </div>
                <div class="glass-panel p-6 rounded-2xl flex flex-col items-start text-left">
                    <h3 class="text-2xl font-bold mb-2">The Mirror</h3>
                    <p class="text-gray-300">
                        Provocative long-form essays that hold a mirror up to our collective and individual illusions.
                    </p>
                </div>
                <div class="glass-panel p-6 rounded-2xl flex flex-col items-start text-left">
                    <h3 class="text-2xl font-bold mb-2">Weekly Shadow Notes</h3>
                    <p class="text-gray-300">
                        Deeper, more intimate notes on my own integration journey, delivered straight to your inbox.
                    </p>
                </div>
            </div>
        </section>

        <!-- Section 4: Featured Post Teasers -->
        <section id="featured-posts" class="py-16 md:py-24">
            <div class="text-center mb-12">
                <h2 class="text-3xl md:text-4xl font-bold gradient-text">Featured Posts.</h2>
            </div>
            <div class="grid md:grid-cols-3 gap-8">
                <div class="glass-panel p-6 rounded-2xl flex flex-col items-start">
                    <h3 class="text-2xl font-bold mb-2">The Tyranny of Positive Thinking</h3>
                    <p class="text-gray-400 mb-4">
                        Is your positivity just another form of avoidance? We explore the hidden cost of "good vibes only."
                    </p>
                    <a href="#" class="text-indigo-400 font-medium hover:text-indigo-300 transition-colors duration-200">Read more &rarr;</a>
                </div>
                <div class="glass-panel p-6 rounded-2xl flex flex-col items-start">
                    <h3 class="text-2xl font-bold mb-2">Finding God in the Dirt</h3>
                    <p class="text-gray-400 mb-4">
                        A raw look at what happens when your spiritual practice crumbles and you're left with nothing but the mess.
                    </p>
                    <a href="#" class="text-indigo-400 font-medium hover:text-indigo-300 transition-colors duration-200">Read more &rarr;</a>
                </div>
                <div class="glass-panel p-6 rounded-2xl flex flex-col items-start">
                    <h3 class="text-2xl font-bold mb-2">When Your Boundaries Become Your Prison</h3>
                    <p class="text-gray-400 mb-4">
                        Healthy boundaries are a tool, but when do they become a wall that isolates you from true connection?
                    </p>
                    <a href="#" class="text-indigo-400 font-medium hover:text-indigo-300 transition-colors duration-200">Read more &rarr;</a>
                </div>
            </div>
        </section>

        <!-- Section 5: Community Call -->
        <section id="community" class="py-16 md:py-24 text-center">
            <div class="max-w-3xl mx-auto">
                <h2 class="text-3xl md:text-4xl font-bold mb-4 gradient-text">Join the Coven.</h2>
                <p class="text-xl text-gray-400 mb-8">
                    Want more raw integration work? Subscribe here for weekly shadow notes delivered straight to your inbox.
                </p>
                <form class="flex flex-col sm:flex-row justify-center items-center space-y-4 sm:space-y-0 sm:space-x-4">
                    <input type="email" placeholder="Enter your email address" class="w-full sm:w-80 px-5 py-3 rounded-full bg-white/5 border border-indigo-400/50 text-white placeholder-gray-500 focus:outline-none focus:ring-2 focus:ring-indigo-400">
                    <button type="submit" class="btn-gradient text-white font-bold py-3 px-8 rounded-full shadow-lg w-full sm:w-auto">
                        Subscribe
                    </button>
                </form>
            </div>
        </section>

        <!-- Section 6: Footer -->
        <footer class="py-8 text-center text-gray-500 border-t border-gray-800">
            <div class="flex justify-center space-x-6 mb-4">
                <!-- X/Twitter Icon -->
                <a href="#" aria-label="X/Twitter">
                    <svg class="w-6 h-6 fill-current hover:text-white transition-colors duration-200" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
                        <path d="M18.901 1.14197H21.571L14.919 9.68497L22.463 23.001H15.986L10.709 15.656L5.342 23.001H2.671L9.78 13.541L2.094 1.14197H8.761L13.793 8.35097L18.901 1.14197ZM17.155 20.941L18.513 19.34L7.009 3.00397H5.651L17.155 20.941Z" />
                    </svg>
                </a>
                <!-- Instagram Icon -->
                <a href="#" aria-label="Instagram">
                    <svg class="w-6 h-6 fill-current hover:text-white transition-colors duration-200" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
                        <path d="M12 2.163c3.204 0 3.584.012 4.85.07c3.252.148 4.654 1.637 4.885 4.886.058 1.265.07 1.645.07 4.85s-.012 3.584-.07 4.85c-.148 3.252-1.637 4.654-4.886 4.885-1.265.058-1.645.07-4.85.07s-3.584-.012-4.85-.07c-3.252-.148-4.654-1.637-4.885-4.886-.058-1.265-.07-1.645-.07-4.85s.012-3.584.07-4.85c.148-3.252 1.637-4.654 4.886-4.885 1.265-.058 1.645-.07 4.85-.07zm0-2.163c-3.259 0-3.667.014-4.947.072-4.358.211-6.429 2.306-6.638 6.638-.058 1.28-.071 1.688-.071 4.947s.013 3.668.071 4.948c.209 4.332 2.28 6.429 6.638 6.638 1.28.058 1.688.071 4.947.071s3.668-.013 4.948-.071c4.332-.209 6.429-2.28 6.638-6.638.058-1.28.071-1.688.071-4.947s-.013-3.667-.071-4.947c-.209-4.358-2.306-6.429-6.638-6.638-1.28-.058-1.688-.071-4.947-.071zm0 5.838c-3.403 0-6.162 2.759-6.162 6.162s2.759 6.162 6.162 6.162 6.162-2.759 6.162-6.162-2.759-6.162-6.162-6.162zm0 10.162c-2.209 0-4-1.791-4-4s1.791-4 4-4 4 1.791 4 4-1.791 4-4 4zm6.406-11.845c-.796 0-1.441.645-1.441 1.44s.645 1.44 1.441 1.44c.795 0 1.439-.645 1.439-1.44s-.644-1.44-1.439-1.44z" />
                    </svg>
                </a>
                <!-- LinkedIn Icon -->
                <a href="#" aria-label="LinkedIn">
                    <svg class="w-6 h-6 fill-current hover:text-white transition-colors duration-200" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
                        <path d="M19 0h-14c-2.761 0-5 2.239-5 5v14c0 2.761 2.239 5 5 5h14c2.762 0 5-2.239 5-5v-14c0-2.761-2.238-5-5-5zm-11 19h-3v-11h3v11zm-1.5-12.268c-.966 0-1.75-.79-1.75-1.765s.784-1.765 1.75-1.765 1.75.79 1.75 1.765-.783 1.765-1.75 1.765zm13.5 12.268h-3v-5.604c0-3.368-4-3.113-4 0v5.604h-3v-11h3v1.765c1.396-2.586 7-2.777 7 2.476v6.759z" />
                    </svg>
                </a>
            </div>
            <p class="text-xs">&copy; 2025 EmpowerQNow. All Rights Reserved.</p>
        </footer>

    </div>

</body>

</html>


================================================================================
END: D:\QiEOS\apps\web\public\empowerqnow\index.html
================================================================================


================================================================================
FILE: D:\QiEOS\apps\web\public\kb\getting-started.md
================================================================================

# Getting Started
Welcome to QiEOS.


================================================================================
END: D:\QiEOS\apps\web\public\kb\getting-started.md
================================================================================


================================================================================
FILE: D:\QiEOS\apps\web\public\kb\index.json
================================================================================

[]


================================================================================
END: D:\QiEOS\apps\web\public\kb\index.json
================================================================================


================================================================================
FILE: D:\QiEOS\apps\web\src\App.tsx
================================================================================

import React from "react";
import {
  BrowserRouter as Router,
  Routes,
  Route,
  Navigate,
} from "react-router-dom";
import { AuthProvider } from "./context/AuthContext";
import { ProtectedRoute } from "./components/ProtectedRoute";
import { Login } from "./routes/auth/Login";
import { AuthCallback } from "./routes/auth/Callback";
import { TaskList } from "./modules/tasks/List";
import { CreateTask } from "./modules/tasks/CreateTask";
import { ClientDashboard } from "./routes/client/Dashboard";
import { Files } from "./routes/client/Files";
import { KnowledgeBase } from "./routes/client/KnowledgeBase";
import { Profile } from "./routes/client/Profile";
import { PublicKBPage } from "./routes/public/PublicKB";
import { LetterWizard } from "./routes/public/LetterWizard";

// New pages
import HomePage from "./pages/index";
import AboutPage from "./pages/about";
import ServicesPage from "./pages/services";
import ContactPage from "./pages/contact";
import NotFoundPage from "./pages/404";
import TermsPage from "./pages/terms";
import PrivacyPage from "./pages/privacy";

// Layout components
import { Nav } from "./components/Nav";
import { Footer } from "./components/Footer";

// Admin pages
import { DashboardPage } from "./routes/admin/dashboard";
import { ProjectsPage } from "./routes/admin/projects";
import { ProjectDetailsPage } from "./routes/admin/projects/details";
import { TasksPage } from "./routes/admin/tasks";
import { TenantsPage } from "./routes/admin/tenants";
import { CrmPage } from "./routes/admin/crm";
import { BillingPage } from "./routes/admin/billing-desk";
import { AuditorPage } from "./routes/admin/auditor";

function App() {
  return (
    <AuthProvider>
      <Router>
        <div className="min-h-screen bg-background">
          <Nav />
          <main>
            <Routes>
              {/* Marketing routes */}
              <Route path="/" element={<HomePage />} />
              <Route path="/about" element={<AboutPage />} />
              <Route path="/services" element={<ServicesPage />} />
              <Route path="/contact" element={<ContactPage />} />
              <Route path="/letter-wizard" element={<LetterWizard />} />
              <Route path="/terms" element={<TermsPage />} />
              <Route path="/privacy" element={<PrivacyPage />} />

              {/* App routes */}
              <Route path="/kb" element={<PublicKBPage />} />
              <Route path="/auth/login" element={<Login />} />
              <Route path="/auth/callback" element={<AuthCallback />} />

              {/* Protected routes */}
              <Route
                path="/client/tasks"
                element={
                  <ProtectedRoute requiredFeature="tasks">
                    <TaskList />
                  </ProtectedRoute>
                }
              />
              <Route
                path="/client/tasks/new"
                element={
                  <ProtectedRoute requiredFeature="tasks">
                    <CreateTask />
                  </ProtectedRoute>
                }
              />
              <Route
                path="/client/files"
                element={
                  <ProtectedRoute>
                    <Files />
                  </ProtectedRoute>
                }
              />
              <Route
                path="/client/kb"
                element={
                  <ProtectedRoute>
                    <KnowledgeBase />
                  </ProtectedRoute>
                }
              />
              <Route
                path="/client/profile"
                element={
                  <ProtectedRoute>
                    <Profile />
                  </ProtectedRoute>
                }
              />
              <Route
                path="/client"
                element={
                  <ProtectedRoute>
                    <ClientDashboard />
                  </ProtectedRoute>
                }
              />
              <Route
                path="/client/*"
                element={
                  <ProtectedRoute>
                    <div>Client Portal - Coming Soon</div>
                  </ProtectedRoute>
                }
              />

              <Route
                path="/internal/*"
                element={
                  <ProtectedRoute requiredRole="internal">
                    <div>Internal Portal - Coming Soon</div>
                  </ProtectedRoute>
                }
              />

              <Route
                path="/admin/*"
                element={
                  <ProtectedRoute requiredRole="admin">
                    <Routes>
                      <Route path="dashboard" element={<DashboardPage />} />
                      <Route path="projects" element={<ProjectsPage />} />
                      <Route
                        path="projects/:id"
                        element={<ProjectDetailsPage />}
                      />
                      <Route path="tasks" element={<TasksPage />} />
                      <Route path="tenants" element={<TenantsPage />} />
                      <Route path="crm" element={<CrmPage />} />
                      <Route path="billing" element={<BillingPage />} />
                      <Route path="auditor" element={<AuditorPage />} />
                      <Route
                        path="/"
                        element={<Navigate to="dashboard" replace />}
                      />
                    </Routes>
                  </ProtectedRoute>
                }
              />

              {/* Catch all */}
              <Route path="*" element={<NotFoundPage />} />
            </Routes>
          </main>
          <Footer />
        </div>
      </Router>
    </AuthProvider>
  );
}

export default App;


================================================================================
END: D:\QiEOS\apps\web\src\App.tsx
================================================================================


================================================================================
FILE: D:\QiEOS\apps\web\src\main.tsx
================================================================================

import React from 'react'
import ReactDOM from 'react-dom/client'
import App from './App'
import './styles/index.css'

ReactDOM.createRoot(document.getElementById('root')!).render(
  <React.StrictMode>
    <App />
  </React.StrictMode>
)


================================================================================
END: D:\QiEOS\apps\web\src\main.tsx
================================================================================


================================================================================
FILE: D:\QiEOS\apps\web\src\vite-env.d.ts
================================================================================

﻿/// <reference types="vite/client" />


================================================================================
END: D:\QiEOS\apps\web\src\vite-env.d.ts
================================================================================


================================================================================
FILE: D:\QiEOS\apps\web\src\components\ClientSidebar.tsx
================================================================================

import React, { useState } from "react";
import { Link, useLocation } from "react-router-dom";
import { cn } from "@qieos/ui";

interface SidebarItem {
  href: string;
  title: string;
  icon: React.ReactNode;
  feature?: string; // Optional feature flag
}

interface ClientSidebarProps {
  className?: string;
  items: SidebarItem[];
}

export function ClientSidebar({ className, items }: ClientSidebarProps) {
  const location = useLocation();
  const [isSidebarOpen, setIsSidebarOpen] = useState(false);
  
  const toggleSidebar = () => {
    setIsSidebarOpen(!isSidebarOpen);
  };
  
  const closeSidebar = () => {
    setIsSidebarOpen(false);
  };

  return (
    <>
      <button
        onClick={toggleSidebar}
        className="lg:hidden fixed top-2 left-4 z-50 p-2.5 rounded-md bg-gray-100 dark:bg-gray-900 text-gray-800 dark:text-gray-200"
        aria-label="Toggle sidebar"
        title="Toggle sidebar"
      >
        <svg
          xmlns="http://www.w3.org/2000/svg"
          fill="none"
          viewBox="0 0 24 24"
          strokeWidth="1.5"
          stroke="currentColor"
          className="w-6 h-6"
        >
          <path
            strokeLinecap="round"
            strokeLinejoin="round"
            d="M3.75 5.25h16.5m-16.5 6h16.5m-16.5 6h16.5"
          />
        </svg>
      </button>
      
      <aside
        className={cn(
          "flex space-x-2 lg:flex-col lg:space-x-0 lg:space-y-1 h-[85vh] py-3 overflow-hidden transition-all lg:-translate-x-0 bg-white border border-slate-200 rounded-xl flex-col justify-between px-4 lg:transition-none ease-linear md:sticky fixed top-[60px] mt-6 z-50",
          isSidebarOpen ? "translate-x-0" : "-translate-x-[110%]",
          className
        )}
      >
        <div className="min-h-max py-2 border-b border-b-gray-100 dark:border-b-gray-900">
          <Link
            to="/client"
            className="flex items-center gap-x-3 font-semibold text-gray-800 dark:text-gray-200"
          >
            <span className="p-2.5 rounded-md bg-gray-100 dark:bg-gray-900 text-gray-800 dark:text-gray-200">
              <svg
                xmlns="http://www.w3.org/2000/svg"
                fill="none"
                viewBox="0 0 24 24"
                strokeWidth="1.5"
                stroke="currentColor"
                className="w-6 h-6"
              >
                <path
                  strokeLinecap="round"
                  strokeLinejoin="round"
                  d="M2.25 8.25h19.5M2.25 9h19.5m-16.5 5.25h6m-6 2.25h3m-3.75 3h15a2.25 2.25 0 002.25-2.25V6.75A2.25 2.25 0 0019.5 4.5h-15a2.25 2.25 0 00-2.25 2.25v10.5A2.25 2.25 0 004.5 19.5z"
                />
              </svg>
            </span>
            QiEOS Portal
          </Link>
        </div>
        
        <nav className="flex-1 pt-6">
          <ul className="text-gray-700 dark:text-gray-300 space-y-3">
            {items.map((item) => (
              <li
                className={cn(
                  location.pathname === item.href
                    ? "before:bg-[#00aeef]"
                    : "hover:bg-transparent hover:bg-slate-100",
                  "relative before:absolute before:-left-4 before:w-1.5 before:h-4/5 before:rounded-r-md before:top-1/2 before:-translate-y-1/2 "
                )}
                key={item.href}
              >
                <Link
                  to={item.href}
                  className={cn(
                    location.pathname === item.href
                      ? "text-[#00aeef] bg-gray-50 dark:bg-gray-900/80"
                      : "hover:bg-transparent hover:bg-slate-100",
                    "justify-start flex items-center px-4 py-2.5 gap-x-3 rounded-md"
                  )}
                  onClick={closeSidebar}
                >
                  {item.icon}
                  {item.title}
                </Link>
              </li>
            ))}
          </ul>
        </nav>
      </aside>
    </>
  );
}


================================================================================
END: D:\QiEOS\apps\web\src\components\ClientSidebar.tsx
================================================================================


================================================================================
FILE: D:\QiEOS\apps\web\src\components\Footer.tsx
================================================================================

import React from "react";
import { Link } from "react-router-dom";

const Footer = () => {
  return (
    <footer className="bg-background/80 backdrop-blur-md print:hidden mt-16 border-t border-border/50">
      <div className="container mx-auto py-8 px-4">
        <div className="flex flex-col md:flex-row justify-between items-center text-center md:text-left space-y-4 md:space-y-0">
          <div>
            <div className="flex items-center space-x-2 mb-2">
              <img
                src="https://res.cloudinary.com/dp5b5fymz/image/upload/v1755927329/qibird.svg"
                alt="QiAlly Logo"
                className="w-6 h-6"
              />
              <h3 className="text-xl font-bold">QiAlly</h3>
            </div>
            <p className="text-muted-foreground max-w-sm">
              Your ally in business, providing expert services in tax, HR, tech,
              and automation.
            </p>
          </div>
          <div className="flex flex-col sm:flex-row items-center space-y-2 sm:space-y-0 sm:space-x-8">
            <div className="flex space-x-8">
              <Link
                to="/terms"
                className="text-muted-foreground hover:text-primary"
              >
                Terms
              </Link>
              <Link
                to="/privacy"
                className="text-muted-foreground hover:text-primary"
              >
                Privacy
              </Link>
            </div>
            <div className="text-muted-foreground">
              © {new Date().getFullYear()} QiAlly
            </div>
          </div>
        </div>
      </div>
    </footer>
  );
};

export { Footer };


================================================================================
END: D:\QiEOS\apps\web\src\components\Footer.tsx
================================================================================


================================================================================
FILE: D:\QiEOS\apps\web\src\components\Header.tsx
================================================================================

import React, { useState } from "react";
import { Link, NavLink } from "react-router-dom";
import { useTheme } from "../hooks/useTheme";
import { Sun, Moon } from "lucide-react";

const Header = () => {
  const [isOpen, setIsOpen] = useState(false);
  const [theme, toggleTheme] = useTheme();

  const navLinks = [
    { to: "/", text: "Home" },
    { to: "/about", text: "About" },
    { to: "/services", text: "Services" },
    { to: "/contact", text: "Contact" },
  ];

  return (
    <header className="sticky top-0 bg-background/80 backdrop-blur-md z-50 shadow-sm border-b border-border/50">
      <div className="container mx-auto px-4">
        <div className="flex justify-between items-center py-4">
          <Link
            to="/"
            className="flex items-center space-x-2 text-2xl font-bold"
          >
            <img
              src="https://res.cloudinary.com/dp5b5fymz/image/upload/v1755927329/qibird.svg"
              alt="QiAlly Logo"
              className="w-8 h-8"
            />
            <span>QiAlly</span>
          </Link>

          <nav className="hidden md:flex items-center space-x-8">
            {navLinks.map((link) => (
              <NavLink
                key={link.to}
                to={link.to}
                className={({ isActive }) =>
                  `text-lg hover:text-primary ${
                    isActive ? "text-primary font-semibold" : ""
                  }`
                }
              >
                {link.text}
              </NavLink>
            ))}
          </nav>

          <div className="flex items-center space-x-4">
            <a
              href="https://portal.qially.com/auth/login"
              className="bg-primary text-primary-foreground hover:bg-primary/90 px-4 py-2 rounded-md text-sm font-medium transition-colors"
            >
              Login
            </a>
            <button
              onClick={toggleTheme}
              className="p-2 rounded-full hover:bg-accent"
              aria-label={`Switch to ${
                theme === "light" ? "dark" : "light"
              } mode`}
              title={`Switch to ${theme === "light" ? "dark" : "light"} mode`}
            >
              {theme === "light" ? (
                <Moon className="h-5 w-5" />
              ) : (
                <Sun className="h-5 w-5" />
              )}
            </button>

            <div className="md:hidden ml-4">
              <button
                onClick={() => setIsOpen(!isOpen)}
                aria-label="Open menu"
                title="Open menu"
              >
                <svg
                  className="w-6 h-6"
                  fill="none"
                  stroke="currentColor"
                  viewBox="0 0 24 24"
                  xmlns="http://www.w3.org/2000/svg"
                >
                  <path
                    strokeLinecap="round"
                    strokeLinejoin="round"
                    strokeWidth={2}
                    d="M4 6h16M4 12h16m-7 6h7"
                  />
                </svg>
              </button>
            </div>
          </div>
        </div>
      </div>

      {/* Mobile Menu */}
      {isOpen && (
        <nav className="md:hidden px-4 pt-2 pb-4 space-y-2 border-t border-border/50">
          {navLinks.map((link) => (
            <NavLink
              key={link.to}
              to={link.to}
              onClick={() => setIsOpen(false)}
              className={({ isActive }) =>
                `block text-lg py-2 px-4 rounded-md hover:bg-accent ${
                  isActive ? "bg-accent font-semibold text-primary" : ""
                }`
              }
            >
              {link.text}
            </NavLink>
          ))}
          <a
            href="https://portal.qially.com/auth/login"
            onClick={() => setIsOpen(false)}
            className="block bg-primary text-primary-foreground hover:bg-primary/90 px-4 py-2 rounded-md text-center font-medium mt-4"
          >
            Login
          </a>
        </nav>
      )}
    </header>
  );
};

export { Header };


================================================================================
END: D:\QiEOS\apps\web\src\components\Header.tsx
================================================================================


================================================================================
FILE: D:\QiEOS\apps\web\src\components\MarketingLayout.tsx
================================================================================

import React from "react";
import { Outlet } from "react-router-dom";
import { Header } from "./Header";
import { Footer } from "./Footer";

const MarketingLayout = () => {
  return (
    <div className="flex flex-col min-h-screen bg-background print:bg-white relative">
      <div className="absolute top-0 left-0 w-full h-full bg-gradient-to-br from-primary/10 via-secondary/10 to-background dark:from-primary/5 dark:via-secondary/5 -z-10" />
      <Header />
      <main className="flex-grow">
        <Outlet />
      </main>
      <Footer />
    </div>
  );
};

export { MarketingLayout };


================================================================================
END: D:\QiEOS\apps\web\src\components\MarketingLayout.tsx
================================================================================


================================================================================
FILE: D:\QiEOS\apps\web\src\components\ProtectedRoute.tsx
================================================================================

import React from "react";
import { Navigate, useLocation } from "react-router-dom";
import { useAuth } from "../hooks/useAuth";

interface ProtectedRouteProps {
  children: React.ReactNode;
  requiredRole?: string;
  requiredFeature?: string;
  requiredCompany?: string;
}

export function ProtectedRoute({
  children,
  requiredRole,
  requiredFeature,
  requiredCompany,
}: ProtectedRouteProps) {
  const { user, claims, loading } = useAuth();
  const location = useLocation();

  if (loading) {
    return (
      <div className="min-h-screen flex items-center justify-center">
        <div className="text-lg">Loading...</div>
      </div>
    );
  }

  if (!user || !claims) {
    return <Navigate to="/auth/login" state={{ from: location }} replace />;
  }

  // Check role requirement
  if (requiredRole && claims.role !== requiredRole) {
    return <Navigate to="/unauthorized" replace />;
  }

  // Check feature requirement
  if (requiredFeature && !claims.features?.[requiredFeature]) {
    return <Navigate to="/unauthorized" replace />;
  }

  // Check company access requirement
  if (requiredCompany && !claims.company_ids?.includes(requiredCompany)) {
    return <Navigate to="/unauthorized" replace />;
  }

  return <>{children}</>;
}


================================================================================
END: D:\QiEOS\apps\web\src\components\ProtectedRoute.tsx
================================================================================


================================================================================
FILE: D:\QiEOS\apps\web\src\components\admin\layout\header.tsx
================================================================================

import { Menu, X } from "lucide-react";
import { Button } from "../ui/button";

interface HeaderProps {
  isSidebarOpen: boolean;
  onMenuToggle: () => void;
}

export function Header({ isSidebarOpen, onMenuToggle }: HeaderProps) {
  return (
    <header className="glass border-b border-white/10 px-4 py-3">
      <div className="flex items-center justify-between">
        <div className="flex items-center gap-4">
          <Button
            variant="ghost"
            size="icon"
            onClick={onMenuToggle}
            className="text-white hover:bg-white/10"
          >
            {isSidebarOpen ? (
              <X className="h-5 w-5" />
            ) : (
              <Menu className="h-5 w-5" />
            )}
          </Button>
          <div className="flex items-center space-x-2">
            <img
              src="https://res.cloudinary.com/dp5b5fymz/image/upload/v1755927329/qibird.svg"
              alt="QiAlly Logo"
              className="w-6 h-6"
            />
            <h1 className="text-xl font-semibold text-white">QiPortals</h1>
          </div>
        </div>

        <div className="flex items-center gap-2">
          <Button
            variant="ghost"
            size="sm"
            className="text-white hover:bg-white/10"
          >
            Dashboard
          </Button>
          <Button
            variant="ghost"
            size="sm"
            className="text-white hover:bg-white/10"
          >
            Settings
          </Button>
        </div>
      </div>
    </header>
  );
}


================================================================================
END: D:\QiEOS\apps\web\src\components\admin\layout\header.tsx
================================================================================


================================================================================
FILE: D:\QiEOS\apps\web\src\components\admin\layout\MainLayout.tsx
================================================================================

import React from "react";
import { Header } from "./header";
import { Sidebar } from "./sidebar";

interface MainLayoutProps {
  children: React.ReactNode;
}

export const MainLayout: React.FC<MainLayoutProps> = ({ children }) => {
  return (
    <div className="flex h-screen bg-gray-100">
      <Sidebar />
      <div className="flex-1 flex flex-col overflow-hidden">
        <Header isSidebarOpen={true} onMenuToggle={() => {}} />
        <main className="flex-1 overflow-x-hidden overflow-y-auto bg-gray-200 p-6">
          {children}
        </main>
      </div>
    </div>
  );
};


================================================================================
END: D:\QiEOS\apps\web\src\components\admin\layout\MainLayout.tsx
================================================================================


================================================================================
FILE: D:\QiEOS\apps\web\src\components\admin\layout\sidebar.tsx
================================================================================

import React from "react";
import { NavLink } from "react-router-dom";
import {
  FiGrid,
  FiBriefcase,
  FiCheckSquare,
  FiUsers,
  FiBarChart2,
  FiDollarSign,
  FiShield,
} from "react-icons/fi";

const navigation = [
  { name: "Dashboard", href: "/admin/dashboard", icon: FiGrid },
  { name: "Projects", href: "/admin/projects", icon: FiBriefcase },
  { name: "Tasks", href: "/admin/tasks", icon: FiCheckSquare },
  { name: "Tenants", href: "/admin/tenants", icon: FiUsers },
  { name: "CRM", href: "/admin/crm", icon: FiBarChart2 },
  { name: "Billing", href: "/admin/billing", icon: FiDollarSign },
  { name: "Auditor", href: "/admin/auditor", icon: FiShield },
];

export const Sidebar: React.FC = () => {
  return (
    <div className="w-64 bg-gray-800 text-white flex flex-col">
      <div className="p-4 border-b border-gray-700">
        <h2 className="text-2xl font-bold">QiEOS Admin</h2>
      </div>
      <nav className="flex-1 p-4">
        <ul className="space-y-2">
          {navigation.map((item) => (
            <li key={item.name}>
              <NavLink
                to={item.href}
                className={({ isActive }) =>
                  `flex items-center px-3 py-2 rounded-md text-sm font-medium ${
                    isActive ? "bg-gray-900" : "hover:bg-gray-700"
                  }`
                }
              >
                <item.icon className="mr-3 h-6 w-6" />
                {item.name}
              </NavLink>
            </li>
          ))}
        </ul>
      </nav>
    </div>
  );
};


================================================================================
END: D:\QiEOS\apps\web\src\components\admin\layout\sidebar.tsx
================================================================================


================================================================================
FILE: D:\QiEOS\apps\web\src\components\admin\lib\utils.ts
================================================================================

import { clsx } from "clsx";
import { twMerge } from "tailwind-merge";

export function cn(...inputs: any[]) {
  return twMerge(clsx(inputs));
}


================================================================================
END: D:\QiEOS\apps\web\src\components\admin\lib\utils.ts
================================================================================


================================================================================
FILE: D:\QiEOS\apps\web\src\components\admin\ui\button.tsx
================================================================================

import * as React from "react";
import { Slot } from "@radix-ui/react-slot";
import { cva, type VariantProps } from "class-variance-authority";

import { cn } from "../lib/utils";

const buttonVariants = cva(
  "inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium transition-colors focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0",
  {
    variants: {
      variant: {
        default:
          "bg-primary text-primary-foreground shadow hover:bg-primary/90",
        destructive:
          "bg-destructive text-destructive-foreground shadow-sm hover:bg-destructive/90",
        outline:
          "border border-input bg-background shadow-sm hover:bg-accent hover:text-accent-foreground",
        secondary:
          "bg-secondary text-secondary-foreground shadow-sm hover:bg-secondary/80",
        ghost: "hover:bg-accent hover:text-accent-foreground",
        link: "text-primary underline-offset-4 hover:underline",
        glass: "glass-button text-white border-white/30 hover:bg-white/30",
      },
      size: {
        default: "h-9 px-4 py-2",
        sm: "h-8 rounded-md px-3 text-xs",
        lg: "h-10 rounded-md px-8",
        icon: "h-9 w-9",
      },
    },
    defaultVariants: {
      variant: "default",
      size: "default",
    },
  }
);

export interface ButtonProps
  extends React.ButtonHTMLAttributes<HTMLButtonElement>,
    VariantProps<typeof buttonVariants> {
  asChild?: boolean;
}

const Button = React.forwardRef<HTMLButtonElement, ButtonProps>(
  ({ className, variant, size, asChild = false, ...props }, ref) => {
    const Comp = asChild ? Slot : "button";
    return (
      <Comp
        className={cn(buttonVariants({ variant, size, className }))}
        ref={ref}
        {...props}
      />
    );
  }
);
Button.displayName = "Button";

export { Button, buttonVariants };


================================================================================
END: D:\QiEOS\apps\web\src\components\admin\ui\button.tsx
================================================================================


================================================================================
FILE: D:\QiEOS\apps\web\src\components\admin\ui\card.tsx
================================================================================

import * as React from "react";

import { cn } from "../lib/utils";

const Card = React.forwardRef<
  HTMLDivElement,
  React.HTMLAttributes<HTMLDivElement>
>(({ className, ...props }, ref) => (
  <div
    ref={ref}
    className={cn(
      "rounded-xl border bg-card text-card-foreground shadow",
      className
    )}
    {...props}
  />
));
Card.displayName = "Card";

const CardHeader = React.forwardRef<
  HTMLDivElement,
  React.HTMLAttributes<HTMLDivElement>
>(({ className, ...props }, ref) => (
  <div
    ref={ref}
    className={cn("flex flex-col space-y-1.5 p-6", className)}
    {...props}
  />
));
CardHeader.displayName = "CardHeader";

const CardTitle = React.forwardRef<
  HTMLDivElement,
  React.HTMLAttributes<HTMLDivElement>
>(({ className, ...props }, ref) => (
  <div
    ref={ref}
    className={cn("font-semibold leading-none tracking-tight", className)}
    {...props}
  />
));
CardTitle.displayName = "CardTitle";

const CardDescription = React.forwardRef<
  HTMLDivElement,
  React.HTMLAttributes<HTMLDivElement>
>(({ className, ...props }, ref) => (
  <div
    ref={ref}
    className={cn("text-sm text-muted-foreground", className)}
    {...props}
  />
));
CardDescription.displayName = "CardDescription";

const CardContent = React.forwardRef<
  HTMLDivElement,
  React.HTMLAttributes<HTMLDivElement>
>(({ className, ...props }, ref) => (
  <div ref={ref} className={cn("p-6 pt-0", className)} {...props} />
));
CardContent.displayName = "CardContent";

const CardFooter = React.forwardRef<
  HTMLDivElement,
  React.HTMLAttributes<HTMLDivElement>
>(({ className, ...props }, ref) => (
  <div
    ref={ref}
    className={cn("flex items-center p-6 pt-0", className)}
    {...props}
  />
));
CardFooter.displayName = "CardFooter";

export {
  Card,
  CardHeader,
  CardFooter,
  CardTitle,
  CardDescription,
  CardContent,
};


================================================================================
END: D:\QiEOS\apps\web\src\components\admin\ui\card.tsx
================================================================================


================================================================================
FILE: D:\QiEOS\apps\web\src\context\AuthContext.tsx
================================================================================

import React, { createContext, useContext, useEffect, useState } from "react";
import { User, Session } from "@supabase/supabase-js";
import { supabase, api } from "../lib/supabaseClient";

export interface Claims {
  user_id: string;
  email: string;
  role: "admin" | "internal" | "external" | "public";
  org_id: string;
  company_ids: string[];
  department: string;
  features: Record<string, boolean>;
  client_slug?: string;
}

interface AuthContextType {
  user: User | null;
  session: Session | null;
  claims: Claims | null;
  loading: boolean;
  signIn: (email: string, password: string) => Promise<void>;
  signInWithMagicLink: (email: string) => Promise<void>;
  signOut: () => Promise<void>;
  refreshClaims: () => Promise<void>;
}

const AuthContext = createContext<AuthContextType | undefined>(undefined);

export function AuthProvider({ children }: { children: React.ReactNode }) {
  const [user, setUser] = useState<User | null>(null);
  const [session, setSession] = useState<Session | null>(null);
  const [claims, setClaims] = useState<Claims | null>(null);
  const [loading, setLoading] = useState(true);

  // Get enriched claims from Worker
  const refreshClaims = async () => {
    if (!session?.access_token) {
      setClaims(null);
      return;
    }

    try {
      const response = await api.post("/auth/session", {
        token: session.access_token,
      });

      if (response.success) {
        setClaims(response.claims);
      } else {
        setClaims(null);
      }
    } catch (error) {
      console.error("Failed to get claims:", error);
      setClaims(null);
    }
  };

  // Sign in with email and password
  const signIn = async (email: string, password: string) => {
    const { error } = await supabase.auth.signInWithPassword({
      email,
      password,
    });

    if (error) {
      throw error;
    }
  };

  // Send magic link to email
  const signInWithMagicLink = async (email: string, clientSlug?: string) => {
    // Determine redirect URL based on client slug
    let emailRedirectTo: string;
    if (clientSlug) {
      emailRedirectTo = `https://${clientSlug}.qially.com/auth/callback`;
    } else {
      emailRedirectTo = "https://portal.qially.com/auth/callback";
    }

    const { error } = await supabase.auth.signInWithOtp({
      email,
      options: {
        emailRedirectTo,
        shouldCreateUser: true,
      },
    });
    if (error) throw error;
  };

  // Sign out
  const signOut = async () => {
    await supabase.auth.signOut();
  };

  // Initialize auth state
  useEffect(() => {
    // Get initial session
    supabase.auth.getSession().then(({ data: { session } }) => {
      setSession(session);
      setUser(session?.user ?? null);
      setLoading(false);
    });

    // Listen for auth changes
    const {
      data: { subscription },
    } = supabase.auth.onAuthStateChange(async (event, session) => {
      setSession(session);
      setUser(session?.user ?? null);

      if (session) {
        await refreshClaims();
      } else {
        setClaims(null);
      }
    });

    return () => subscription.unsubscribe();
  }, []);

  // Refresh claims when session changes
  useEffect(() => {
    if (session) {
      refreshClaims();
    }
  }, [session]);

  const value = {
    user,
    session,
    claims,
    loading,
    signIn,
    signInWithMagicLink,
    signOut,
    refreshClaims,
  };

  return <AuthContext.Provider value={value}>{children}</AuthContext.Provider>;
}

export function useAuth() {
  const context = useContext(AuthContext);
  if (context === undefined) {
    throw new Error("useAuth must be used within an AuthProvider");
  }
  return context;
}


================================================================================
END: D:\QiEOS\apps\web\src\context\AuthContext.tsx
================================================================================


================================================================================
FILE: D:\QiEOS\apps\web\src\hooks\useAuth.ts
================================================================================

import { useAuth as useAuthContext } from '../context/AuthContext'

// Re-export the auth hook for convenience
export { useAuthContext as useAuth }

// Helper hook to check if user has specific feature
export function useFeature(feature: string): boolean {
  const { claims } = useAuthContext()
  return claims?.features?.[feature] ?? false
}

// Helper hook to check if user has specific role
export function useRole(role: string): boolean {
  const { claims } = useAuthContext()
  return claims?.role === role
}

// Helper hook to check if user can access company
export function useCompanyAccess(companyId: string): boolean {
  const { claims } = useAuthContext()
  return claims?.company_ids?.includes(companyId) ?? false
}


================================================================================
END: D:\QiEOS\apps\web\src\hooks\useAuth.ts
================================================================================


================================================================================
FILE: D:\QiEOS\apps\web\src\hooks\useTheme.ts
================================================================================

import { useState, useEffect } from "react";

type Theme = "light" | "dark";

export function useTheme(): [Theme, () => void] {
  const [theme, setTheme] = useState<Theme>(() => {
    // Check localStorage first
    const savedTheme = localStorage.getItem("theme") as Theme;
    if (savedTheme) {
      return savedTheme;
    }

    // Check system preference
    if (window.matchMedia("(prefers-color-scheme: dark)").matches) {
      return "dark";
    }

    return "light";
  });

  useEffect(() => {
    const root = window.document.documentElement;

    if (theme === "dark") {
      root.classList.add("dark");
    } else {
      root.classList.remove("dark");
    }

    localStorage.setItem("theme", theme);
  }, [theme]);

  const toggleTheme = () => {
    setTheme((prev) => (prev === "light" ? "dark" : "light"));
  };

  return [theme, toggleTheme];
}


================================================================================
END: D:\QiEOS\apps\web\src\hooks\useTheme.ts
================================================================================


================================================================================
FILE: D:\QiEOS\apps\web\src\lib\supabaseClient.ts
================================================================================

import { createClient } from "@supabase/supabase-js";

// Public Supabase client for client-side auth
const supabaseUrl = import.meta.env.VITE_SUPABASE_URL
const supabaseKey = import.meta.env.VITE_SUPABASE_ANON_KEY

if (!supabaseUrl || !supabaseKey) {
  console.warn('Missing Supabase environment variables. Please check your environment configuration.')
}

export const supabase = createClient(supabaseUrl, supabaseKey, {
  auth: {
    autoRefreshToken: true,
    persistSession: true,
    detectSessionInUrl: true
  }
})

// API client for Worker endpoints
export const api = {
  async request(endpoint: string, options: RequestInit = {}) {
    const token = await supabase.auth.getSession();

    const response = await fetch(`${import.meta.env.VITE_API_URL}${endpoint}`, {
      ...options,
      headers: {
        "Content-Type": "application/json",
        ...(token.data.session?.access_token && {
          Authorization: `Bearer ${token.data.session.access_token}`,
        }),
        ...options.headers,
      },
    });

    if (!response.ok) {
      const error = await response
        .json()
        .catch(() => ({ error: "Request failed" }));
      throw new Error(error.error || "Request failed");
    }

    return response.json();
  },

  get(endpoint: string) {
    return this.request(endpoint, { method: "GET" });
  },

  post(endpoint: string, data?: any) {
    return this.request(endpoint, {
      method: "POST",
      body: data ? JSON.stringify(data) : undefined,
    });
  },

  patch(endpoint: string, data?: any) {
    return this.request(endpoint, {
      method: "PATCH",
      body: data ? JSON.stringify(data) : undefined,
    });
  },

  delete(endpoint: string) {
    return this.request(endpoint, { method: "DELETE" });
  },
};


================================================================================
END: D:\QiEOS\apps\web\src\lib\supabaseClient.ts
================================================================================


================================================================================
FILE: D:\QiEOS\apps\web\src\lib\utils.ts
================================================================================

import { type ClassValue, clsx } from "clsx"
import { twMerge } from "tailwind-merge"

export function cn(...inputs: ClassValue[]) {
  return twMerge(clsx(inputs))
}


================================================================================
END: D:\QiEOS\apps\web\src\lib\utils.ts
================================================================================


================================================================================
FILE: D:\QiEOS\apps\web\src\modules\files\FileList.tsx
================================================================================

import React, { useState, useEffect } from "react";
import { api } from "../../lib/supabaseClient";
import { useAuth } from "../../hooks/useAuth";

interface File {
  id: string;
  key: string;
  filename: string;
  content_type: string;
  size: number;
  uploaded_at: string;
  company_id?: string;
  download_url: string;
}

export function FileList() {
  const [files, setFiles] = useState<File[]>([]);
  const [loading, setLoading] = useState(true);
  const [error, setError] = useState("");
  const { claims } = useAuth();

  useEffect(() => {
    fetchFiles();
  }, []);

  const fetchFiles = async () => {
    try {
      setLoading(true);
      const response = await api.get("/files");
      if (response.success) {
        setFiles(response.files);
      } else {
        setError("Failed to fetch files");
      }
    } catch (err: any) {
      setError(err.message || "Failed to fetch files");
    } finally {
      setLoading(false);
    }
  };

  const downloadFile = async (file: File) => {
    try {
      const response = await api.get(`/files/download/${file.id}`);
      if (response.success) {
        // Create a temporary link to download the file
        const link = document.createElement("a");
        link.href = response.download_url;
        link.download = file.filename;
        document.body.appendChild(link);
        link.click();
        document.body.removeChild(link);
      }
    } catch (err: any) {
      setError(err.message || "Failed to download file");
    }
  };

  const deleteFile = async (fileId: string) => {
    if (!confirm("Are you sure you want to delete this file?")) return;

    try {
      const response = await api.delete(`/files/${fileId}`);
      if (response.success) {
        setFiles(files.filter((file) => file.id !== fileId));
      }
    } catch (err: any) {
      setError(err.message || "Failed to delete file");
    }
  };

  const formatFileSize = (bytes: number) => {
    if (bytes === 0) return "0 Bytes";
    const k = 1024;
    const sizes = ["Bytes", "KB", "MB", "GB"];
    const i = Math.floor(Math.log(bytes) / Math.log(k));
    return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + " " + sizes[i];
  };

  const getFileIcon = (contentType: string) => {
    if (contentType.startsWith("image/")) {
      return "🖼️";
    } else if (contentType.startsWith("video/")) {
      return "🎥";
    } else if (contentType.startsWith("audio/")) {
      return "🎵";
    } else if (contentType.includes("pdf")) {
      return "📄";
    } else if (
      contentType.includes("word") ||
      contentType.includes("document")
    ) {
      return "📝";
    } else if (contentType.includes("sheet") || contentType.includes("excel")) {
      return "📊";
    } else if (contentType.includes("zip") || contentType.includes("archive")) {
      return "📦";
    } else {
      return "📁";
    }
  };

  if (loading) {
    return (
      <div className="flex items-center justify-center p-8">
        <div className="text-lg">Loading files...</div>
      </div>
    );
  }

  if (error) {
    return (
      <div className="bg-red-50 border border-red-200 rounded-md p-4">
        <div className="text-red-800">{error}</div>
        <button
          onClick={fetchFiles}
          className="mt-2 text-red-600 hover:text-red-800 underline"
        >
          Try again
        </button>
      </div>
    );
  }

  return (
    <div className="space-y-4">
      <div className="flex justify-between items-center">
        <h2 className="text-2xl font-bold text-gray-900">Files</h2>
        <button
          onClick={fetchFiles}
          className="text-indigo-600 hover:text-indigo-800"
        >
          Refresh
        </button>
      </div>

      {files.length === 0 ? (
        <div className="text-center py-8 text-gray-500">
          No files found. Upload your first file to get started.
        </div>
      ) : (
        <div className="bg-white shadow overflow-hidden sm:rounded-md">
          <ul className="divide-y divide-gray-200">
            {files.map((file) => (
              <li key={file.id} className="px-6 py-4">
                <div className="flex items-center justify-between">
                  <div className="flex items-center space-x-3">
                    <span className="text-2xl">
                      {getFileIcon(file.content_type)}
                    </span>
                    <div>
                      <p className="text-sm font-medium text-gray-900">
                        {file.filename}
                      </p>
                      <p className="text-sm text-gray-500">
                        {formatFileSize(file.size)} •{" "}
                        {new Date(file.uploaded_at).toLocaleDateString()}
                      </p>
                    </div>
                  </div>
                  <div className="flex items-center space-x-2">
                    <button
                      onClick={() => downloadFile(file)}
                      className="text-indigo-600 hover:text-indigo-800 text-sm"
                    >
                      Download
                    </button>
                    <button
                      onClick={() => deleteFile(file.id)}
                      className="text-red-600 hover:text-red-800 text-sm"
                    >
                      Delete
                    </button>
                  </div>
                </div>
              </li>
            ))}
          </ul>
        </div>
      )}
    </div>
  );
}


================================================================================
END: D:\QiEOS\apps\web\src\modules\files\FileList.tsx
================================================================================


================================================================================
FILE: D:\QiEOS\apps\web\src\modules\files\FileUpload.module.css
================================================================================

.progressBar {
  width: 100%;
  background-color: #e5e7eb;
  border-radius: 9999px;
  height: 0.5rem;
}

.progressFill {
  background-color: #4f46e5;
  height: 0.5rem;
  border-radius: 9999px;
  transition: all 0.3s;
  width: var(--progress, 0%);
}


================================================================================
END: D:\QiEOS\apps\web\src\modules\files\FileUpload.module.css
================================================================================


================================================================================
FILE: D:\QiEOS\apps\web\src\modules\files\FileUpload.tsx
================================================================================

import React, { useState, useRef } from "react";
import { api } from "../../lib/supabaseClient";
import { useAuth } from "../../hooks/useAuth";
import styles from "./FileUpload.module.css";

interface FileUploadProps {
  onUploadComplete?: (file: any) => void;
  companyId?: string;
}

export function FileUpload({ onUploadComplete, companyId }: FileUploadProps) {
  const [uploading, setUploading] = useState(false);
  const [progress, setProgress] = useState(0);
  const [error, setError] = useState("");
  const fileInputRef = useRef<HTMLInputElement>(null);
  const { claims } = useAuth();

  const handleFileSelect = async (
    event: React.ChangeEvent<HTMLInputElement>
  ) => {
    const file = event.target.files?.[0];
    if (!file) return;

    await uploadFile(file);
  };

  const uploadFile = async (file: File) => {
    setUploading(true);
    setProgress(0);
    setError("");

    try {
      // Step 1: Get signed upload URL
      const signResponse = await api.post("/files/sign-upload", {
        filename: file.name,
        content_type: file.type,
        size: file.size,
        company_id: companyId,
      });

      if (!signResponse.success) {
        throw new Error("Failed to get upload URL");
      }

      // Step 2: Upload file to R2
      const uploadResponse = await fetch(signResponse.signed_url, {
        method: "PUT",
        body: file,
        headers: {
          "Content-Type": file.type,
        },
      });

      if (!uploadResponse.ok) {
        throw new Error("Failed to upload file");
      }

      // Step 3: Complete upload and save metadata
      const completeResponse = await api.post("/files/complete", {
        key: signResponse.key,
        filename: file.name,
        content_type: file.type,
        size: file.size,
        company_id: companyId,
      });

      if (!completeResponse.success) {
        throw new Error("Failed to save file metadata");
      }

      setProgress(100);
      onUploadComplete?.(completeResponse.file);

      // Reset file input
      if (fileInputRef.current) {
        fileInputRef.current.value = "";
      }
    } catch (err: any) {
      setError(err.message || "Upload failed");
    } finally {
      setUploading(false);
      setTimeout(() => setProgress(0), 2000);
    }
  };

  const handleDrop = (event: React.DragEvent) => {
    event.preventDefault();
    const file = event.dataTransfer.files[0];
    if (file) {
      uploadFile(file);
    }
  };

  const handleDragOver = (event: React.DragEvent) => {
    event.preventDefault();
  };

  return (
    <div className="space-y-4">
      <div
        className="border-2 border-dashed border-gray-300 rounded-lg p-6 text-center hover:border-gray-400 transition-colors"
        onDrop={handleDrop}
        onDragOver={handleDragOver}
      >
        <input
          ref={fileInputRef}
          type="file"
          onChange={handleFileSelect}
          className="hidden"
          accept="*/*"
        />

        <div className="space-y-2">
          <svg
            className="mx-auto h-12 w-12 text-gray-400"
            stroke="currentColor"
            fill="none"
            viewBox="0 0 48 48"
          >
            <path
              d="M28 8H12a4 4 0 00-4 4v20m32-12v8m0 0v8a4 4 0 01-4 4H12a4 4 0 01-4-4v-4m32-4l-3.172-3.172a4 4 0 00-5.656 0L28 28M8 32l9.172-9.172a4 4 0 015.656 0L28 28m0 0l4 4m4-24h8m-4-4v8m-12 4h.02"
              strokeWidth={2}
              strokeLinecap="round"
              strokeLinejoin="round"
            />
          </svg>

          <div className="text-sm text-gray-600">
            <button
              type="button"
              onClick={() => fileInputRef.current?.click()}
              className="font-medium text-indigo-600 hover:text-indigo-500"
            >
              Click to upload
            </button>{" "}
            or drag and drop
          </div>

          <p className="text-xs text-gray-500">Any file type up to 10MB</p>
        </div>
      </div>

      {uploading && (
        <div className="space-y-2">
          <div className="flex justify-between text-sm text-gray-600">
            <span>Uploading...</span>
            <span>{progress}%</span>
          </div>
          <div className={styles.progressBar}>
            <div
              className={styles.progressFill}
              style={{ '--progress': `${progress}%` } as React.CSSProperties}
            />
          </div>
        </div>
      )}

      {error && (
        <div className="bg-red-50 border border-red-200 rounded-md p-4">
          <div className="text-red-800 text-sm">{error}</div>
        </div>
      )}
    </div>
  );
}


================================================================================
END: D:\QiEOS\apps\web\src\modules\files\FileUpload.tsx
================================================================================


================================================================================
FILE: D:\QiEOS\apps\web\src\modules\kb\PrivateKB.tsx
================================================================================

import React, { useState, useEffect } from "react";
import { api } from "../../lib/supabaseClient";
import { useAuth } from "../../hooks/useAuth";

interface Article {
  id: string;
  title: string;
  content: string;
  slug: string;
  created_at: string;
  updated_at: string;
  collection_id?: string;
  company_id?: string;
  kb_collections?: {
    id: string;
    name: string;
    path: string;
  };
}

interface Collection {
  id: string;
  name: string;
  description?: string;
  path: string;
  parent_id?: string;
  company_id?: string;
  created_at: string;
  updated_at: string;
}

export function PrivateKB() {
  const [articles, setArticles] = useState<Article[]>([]);
  const [collections, setCollections] = useState<Collection[]>([]);
  const [selectedArticle, setSelectedArticle] = useState<Article | null>(null);
  const [loading, setLoading] = useState(true);
  const [error, setError] = useState("");
  const { claims } = useAuth();

  useEffect(() => {
    fetchData();
  }, []);

  const fetchData = async () => {
    try {
      setLoading(true);
      const [articlesResponse, collectionsResponse] = await Promise.all([
        api.get("/kb/private"),
        api.get("/kb/collections"),
      ]);

      if (articlesResponse.success) {
        setArticles(articlesResponse.articles);
      }
      if (collectionsResponse.success) {
        setCollections(collectionsResponse.collections);
      }
    } catch (err: any) {
      setError(err.message || "Failed to fetch knowledge base");
    } finally {
      setLoading(false);
    }
  };

  const openArticle = async (articleId: string) => {
    try {
      const response = await api.get(`/kb/article/${articleId}`);
      if (response.success) {
        setSelectedArticle(response.article);
      }
    } catch (err: any) {
      setError(err.message || "Failed to load article");
    }
  };

  const formatMarkdown = (content: string): string => {
    return content
      .replace(/^# (.*$)/gim, "<h1>$1</h1>")
      .replace(/^## (.*$)/gim, "<h2>$1</h2>")
      .replace(/^### (.*$)/gim, "<h3>$1</h3>")
      .replace(/^\* (.*$)/gim, "<li>$1</li>")
      .replace(/^(\d+)\. (.*$)/gim, "<li>$1. $2</li>")
      .replace(/\n\n/g, "</p><p>")
      .replace(/^(?!<[h|l])/gm, "<p>")
      .replace(/(?<!>)$/gm, "</p>")
      .replace(/<p><\/p>/g, "")
      .replace(/<p>(<[h|l])/g, "$1")
      .replace(/(<\/[h|l][^>]*>)<\/p>/g, "$1");
  };

  if (loading) {
    return (
      <div className="flex items-center justify-center p-8">
        <div className="text-lg">Loading knowledge base...</div>
      </div>
    );
  }

  if (error) {
    return (
      <div className="bg-red-50 border border-red-200 rounded-md p-4">
        <div className="text-red-800">{error}</div>
        <button
          onClick={fetchData}
          className="mt-2 text-red-600 hover:text-red-800 underline"
        >
          Try again
        </button>
      </div>
    );
  }

  return (
    <div className="max-w-6xl mx-auto p-6">
      <div className="mb-8">
        <h1 className="text-3xl font-bold text-gray-900">
          Private Knowledge Base
        </h1>
        <p className="text-gray-600 mt-2">
          Access your organization's private documentation
        </p>
      </div>

      <div className="grid grid-cols-1 lg:grid-cols-3 gap-6">
        {/* Sidebar */}
        <div className="lg:col-span-1">
          <div className="bg-white rounded-lg shadow p-4">
            <h2 className="text-lg font-semibold text-gray-900 mb-4">
              Collections
            </h2>
            {collections.length > 0 ? (
              <div className="space-y-2">
                {collections.map((collection) => (
                  <div key={collection.id} className="text-sm text-gray-600">
                    {collection.name}
                  </div>
                ))}
              </div>
            ) : (
              <p className="text-sm text-gray-500">No collections found</p>
            )}

            <h2 className="text-lg font-semibold text-gray-900 mb-4 mt-6">
              Articles
            </h2>
            {articles.length > 0 ? (
              <div className="space-y-2">
                {articles.map((article) => (
                  <button
                    key={article.id}
                    onClick={() => openArticle(article.id)}
                    className="block w-full text-left text-sm text-indigo-600 hover:text-indigo-800 hover:underline"
                  >
                    {article.title}
                  </button>
                ))}
              </div>
            ) : (
              <p className="text-sm text-gray-500">No articles found</p>
            )}
          </div>
        </div>

        {/* Main content */}
        <div className="lg:col-span-2">
          {selectedArticle ? (
            <div className="bg-white rounded-lg shadow p-6">
              <h2 className="text-2xl font-bold text-gray-900 mb-4">
                {selectedArticle.title}
              </h2>
              <div className="text-gray-600 text-sm mb-6">
                Last updated:{" "}
                {new Date(selectedArticle.updated_at).toLocaleDateString()}
                {selectedArticle.kb_collections && (
                  <span className="ml-4">
                    Collection: {selectedArticle.kb_collections.name}
                  </span>
                )}
              </div>
              <div className="prose max-w-none">
                <div
                  dangerouslySetInnerHTML={{
                    __html: formatMarkdown(selectedArticle.content),
                  }}
                />
              </div>
            </div>
          ) : (
            <div className="bg-white rounded-lg shadow p-6">
              <div className="text-center py-8 text-gray-500">
                <svg
                  className="mx-auto h-12 w-12 text-gray-400 mb-4"
                  fill="none"
                  stroke="currentColor"
                  viewBox="0 0 24 24"
                >
                  <path
                    strokeLinecap="round"
                    strokeLinejoin="round"
                    strokeWidth={2}
                    d="M12 6.253v13m0-13C10.832 5.477 9.246 5 7.5 5S4.168 5.477 3 6.253v13C4.168 18.477 5.754 18 7.5 18s3.332.477 4.5 1.253m0-13C13.168 5.477 14.754 5 16.5 5c1.746 0 3.332.477 4.5 1.253v13C19.832 18.477 18.246 18 16.5 18c-1.746 0-3.332.477-4.5 1.253"
                  />
                </svg>
                <h3 className="text-lg font-medium text-gray-900 mb-2">
                  Select an Article
                </h3>
                <p>Choose an article from the sidebar to view its content</p>
              </div>
            </div>
          )}
        </div>
      </div>
    </div>
  );
}


================================================================================
END: D:\QiEOS\apps\web\src\modules\kb\PrivateKB.tsx
================================================================================


================================================================================
FILE: D:\QiEOS\apps\web\src\modules\kb\PublicKB.tsx
================================================================================

import React, { useState, useEffect } from "react";
import { api } from "../../lib/supabaseClient";

interface Article {
  id: string;
  title: string;
  content: string;
  slug: string;
  created_at: string;
  updated_at: string;
}

export function PublicKB() {
  const [articles, setArticles] = useState<Article[]>([]);
  const [loading, setLoading] = useState(true);
  const [error, setError] = useState("");

  useEffect(() => {
    fetchArticles();
  }, []);

  const fetchArticles = async () => {
    try {
      setLoading(true);
      const response = await api.get("/kb/public");
      if (response.success) {
        setArticles(response.articles);
      } else {
        setError("Failed to fetch articles");
      }
    } catch (err: any) {
      setError(err.message || "Failed to fetch articles");
    } finally {
      setLoading(false);
    }
  };

  if (loading) {
    return (
      <div className="flex items-center justify-center p-8">
        <div className="text-lg">Loading knowledge base...</div>
      </div>
    );
  }

  if (error) {
    return (
      <div className="bg-red-50 border border-red-200 rounded-md p-4">
        <div className="text-red-800">{error}</div>
        <button
          onClick={fetchArticles}
          className="mt-2 text-red-600 hover:text-red-800 underline"
        >
          Try again
        </button>
      </div>
    );
  }

  return (
    <div className="max-w-4xl mx-auto p-6">
      <div className="mb-8">
        <h1 className="text-3xl font-bold text-gray-900">Knowledge Base</h1>
        <p className="text-gray-600 mt-2">
          Browse our public documentation and guides
        </p>
      </div>

      {articles.length === 0 ? (
        <div className="text-center py-8 text-gray-500">No articles found.</div>
      ) : (
        <div className="space-y-6">
          {articles.map((article) => (
            <div key={article.id} className="bg-white rounded-lg shadow p-6">
              <h2 className="text-xl font-semibold text-gray-900 mb-2">
                {article.title}
              </h2>
              <div className="text-gray-600 text-sm mb-4">
                Last updated:{" "}
                {new Date(article.updated_at).toLocaleDateString()}
              </div>
              <div className="prose max-w-none">
                <div
                  dangerouslySetInnerHTML={{
                    __html: formatMarkdown(article.content),
                  }}
                />
              </div>
            </div>
          ))}
        </div>
      )}
    </div>
  );
}

// Simple markdown formatter for MVP
function formatMarkdown(content: string): string {
  return content
    .replace(/^# (.*$)/gim, "<h1>$1</h1>")
    .replace(/^## (.*$)/gim, "<h2>$1</h2>")
    .replace(/^### (.*$)/gim, "<h3>$1</h3>")
    .replace(/^\* (.*$)/gim, "<li>$1</li>")
    .replace(/^(\d+)\. (.*$)/gim, "<li>$1. $2</li>")
    .replace(/\n\n/g, "</p><p>")
    .replace(/^(?!<[h|l])/gm, "<p>")
    .replace(/(?<!>)$/gm, "</p>")
    .replace(/<p><\/p>/g, "")
    .replace(/<p>(<[h|l])/g, "$1")
    .replace(/(<\/[h|l][^>]*>)<\/p>/g, "$1");
}


================================================================================
END: D:\QiEOS\apps\web\src\modules\kb\PublicKB.tsx
================================================================================


================================================================================
FILE: D:\QiEOS\apps\web\src\modules\tasks\CreateTask.tsx
================================================================================

import React, { useState, useEffect } from "react";
import { useNavigate } from "react-router-dom";
import { api } from "../../lib/supabaseClient";
import { useAuth } from "../../hooks/useAuth";

interface Project {
  id: string;
  name: string;
  company_id?: string;
}

export function CreateTask() {
  const [title, setTitle] = useState("");
  const [description, setDescription] = useState("");
  const [priority, setPriority] = useState<"low" | "medium" | "high">("medium");
  const [dueDate, setDueDate] = useState("");
  const [projectId, setProjectId] = useState("");
  const [companyId, setCompanyId] = useState("");
  const [projects, setProjects] = useState<Project[]>([]);
  const [loading, setLoading] = useState(false);
  const [error, setError] = useState("");

  const { claims } = useAuth();
  const navigate = useNavigate();

  useEffect(() => {
    fetchProjects();
  }, []);

  const fetchProjects = async () => {
    try {
      // This would be a separate endpoint to fetch projects
      // For now, we'll just set an empty array
      setProjects([]);
    } catch (err) {
      console.error("Failed to fetch projects:", err);
    }
  };

  const handleSubmit = async (e: React.FormEvent) => {
    e.preventDefault();
    setLoading(true);
    setError("");

    try {
      const taskData: any = {
        title,
        description: description || undefined,
        priority,
        due_date: dueDate || undefined,
        project_id: projectId || undefined,
        company_id: companyId || undefined,
      };

      const response = await api.post("/tasks", taskData);

      if (response.success) {
        navigate("/client/tasks");
      } else {
        setError("Failed to create task");
      }
    } catch (err: any) {
      setError(err.message || "Failed to create task");
    } finally {
      setLoading(false);
    }
  };

  return (
    <div className="max-w-2xl mx-auto p-6">
      <div className="mb-6">
        <h1 className="text-3xl font-bold text-gray-900">Create New Task</h1>
        <p className="text-gray-600 mt-2">
          Add a new task to your organization
        </p>
      </div>

      <form onSubmit={handleSubmit} className="space-y-6">
        <div>
          <label
            htmlFor="title"
            className="block text-sm font-medium text-gray-700"
          >
            Title *
          </label>
          <input
            type="text"
            id="title"
            value={title}
            onChange={(e) => setTitle(e.target.value)}
            required
            className="mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500"
            placeholder="Enter task title"
          />
        </div>

        <div>
          <label
            htmlFor="description"
            className="block text-sm font-medium text-gray-700"
          >
            Description
          </label>
          <textarea
            id="description"
            value={description}
            onChange={(e) => setDescription(e.target.value)}
            rows={4}
            className="mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500"
            placeholder="Enter task description"
          />
        </div>

        <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
          <div>
            <label
              htmlFor="priority"
              className="block text-sm font-medium text-gray-700"
            >
              Priority
            </label>
            <select
              id="priority"
              value={priority}
              onChange={(e) =>
                setPriority(e.target.value as "low" | "medium" | "high")
              }
              className="mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500"
            >
              <option value="low">Low</option>
              <option value="medium">Medium</option>
              <option value="high">High</option>
            </select>
          </div>

          <div>
            <label
              htmlFor="dueDate"
              className="block text-sm font-medium text-gray-700"
            >
              Due Date
            </label>
            <input
              type="datetime-local"
              id="dueDate"
              value={dueDate}
              onChange={(e) => setDueDate(e.target.value)}
              className="mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500"
            />
          </div>
        </div>

        {claims?.role === "admin" && (
          <div>
            <label
              htmlFor="companyId"
              className="block text-sm font-medium text-gray-700"
            >
              Company (Optional)
            </label>
            <input
              type="text"
              id="companyId"
              value={companyId}
              onChange={(e) => setCompanyId(e.target.value)}
              className="mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500"
              placeholder="Company ID (optional)"
            />
          </div>
        )}

        {error && (
          <div className="bg-red-50 border border-red-200 rounded-md p-4">
            <div className="text-red-800">{error}</div>
          </div>
        )}

        <div className="flex justify-end space-x-3">
          <button
            type="button"
            onClick={() => navigate("/client/tasks")}
            className="px-4 py-2 border border-gray-300 rounded-md text-gray-700 hover:bg-gray-50"
          >
            Cancel
          </button>
          <button
            type="submit"
            disabled={loading || !title.trim()}
            className="px-4 py-2 bg-indigo-600 text-white rounded-md hover:bg-indigo-700 disabled:opacity-50"
          >
            {loading ? "Creating..." : "Create Task"}
          </button>
        </div>
      </form>
    </div>
  );
}


================================================================================
END: D:\QiEOS\apps\web\src\modules\tasks\CreateTask.tsx
================================================================================


================================================================================
FILE: D:\QiEOS\apps\web\src\modules\tasks\List.tsx
================================================================================

import React, { useState, useEffect } from "react";
import { api } from "../../lib/supabaseClient";
import { useAuth } from "../../hooks/useAuth";

interface Task {
  id: string;
  title: string;
  description?: string;
  status: "todo" | "in_progress" | "done";
  priority: "low" | "medium" | "high";
  due_date?: string;
  created_at: string;
  company_id?: string;
  project_id?: string;
  projects?: {
    id: string;
    name: string;
  };
}

export function TaskList() {
  const [tasks, setTasks] = useState<Task[]>([]);
  const [loading, setLoading] = useState(true);
  const [error, setError] = useState("");
  const { claims } = useAuth();

  useEffect(() => {
    fetchTasks();
  }, []);

  const fetchTasks = async () => {
    try {
      setLoading(true);
      const response = await api.get("/tasks");
      if (response.success) {
        setTasks(response.tasks);
      } else {
        setError("Failed to fetch tasks");
      }
    } catch (err: any) {
      setError(err.message || "Failed to fetch tasks");
    } finally {
      setLoading(false);
    }
  };

  const updateTaskStatus = async (taskId: string, status: Task["status"]) => {
    try {
      const response = await api.patch(`/tasks/${taskId}`, { status });
      if (response.success) {
        setTasks(
          tasks.map((task) => (task.id === taskId ? { ...task, status } : task))
        );
      }
    } catch (err: any) {
      setError(err.message || "Failed to update task");
    }
  };

  const deleteTask = async (taskId: string) => {
    if (!confirm("Are you sure you want to delete this task?")) return;

    try {
      const response = await api.delete(`/tasks/${taskId}`);
      if (response.success) {
        setTasks(tasks.filter((task) => task.id !== taskId));
      }
    } catch (err: any) {
      setError(err.message || "Failed to delete task");
    }
  };

  const getPriorityColor = (priority: string) => {
    switch (priority) {
      case "high":
        return "text-red-600 bg-red-100";
      case "medium":
        return "text-yellow-600 bg-yellow-100";
      case "low":
        return "text-green-600 bg-green-100";
      default:
        return "text-gray-600 bg-gray-100";
    }
  };

  const getStatusColor = (status: string) => {
    switch (status) {
      case "done":
        return "text-green-600 bg-green-100";
      case "in_progress":
        return "text-blue-600 bg-blue-100";
      case "todo":
        return "text-gray-600 bg-gray-100";
      default:
        return "text-gray-600 bg-gray-100";
    }
  };

  if (loading) {
    return (
      <div className="flex items-center justify-center p-8">
        <div className="text-lg">Loading tasks...</div>
      </div>
    );
  }

  if (error) {
    return (
      <div className="bg-red-50 border border-red-200 rounded-md p-4">
        <div className="text-red-800">{error}</div>
        <button
          onClick={fetchTasks}
          className="mt-2 text-red-600 hover:text-red-800 underline"
        >
          Try again
        </button>
      </div>
    );
  }

  return (
    <div className="space-y-4">
      <div className="flex justify-between items-center">
        <h2 className="text-2xl font-bold text-gray-900">Tasks</h2>
        <button
          onClick={() => (window.location.href = "/client/tasks/new")}
          className="bg-indigo-600 text-white px-4 py-2 rounded-md hover:bg-indigo-700"
        >
          New Task
        </button>
      </div>

      {tasks.length === 0 ? (
        <div className="text-center py-8 text-gray-500">
          No tasks found. Create your first task to get started.
        </div>
      ) : (
        <div className="space-y-3">
          {tasks.map((task) => (
            <div
              key={task.id}
              className="bg-white border border-gray-200 rounded-lg p-4"
            >
              <div className="flex justify-between items-start">
                <div className="flex-1">
                  <h3 className="text-lg font-medium text-gray-900">
                    {task.title}
                  </h3>
                  {task.description && (
                    <p className="text-gray-600 mt-1">{task.description}</p>
                  )}
                  {task.projects && (
                    <p className="text-sm text-indigo-600 mt-1">
                      Project: {task.projects.name}
                    </p>
                  )}
                  {task.due_date && (
                    <p className="text-sm text-gray-500 mt-1">
                      Due: {new Date(task.due_date).toLocaleDateString()}
                    </p>
                  )}
                </div>
                <div className="flex items-center space-x-2 ml-4">
                  <span
                    className={`px-2 py-1 rounded-full text-xs font-medium ${getPriorityColor(
                      task.priority
                    )}`}
                  >
                    {task.priority}
                  </span>
                  <select
                    value={task.status}
                    onChange={(e) =>
                      updateTaskStatus(
                        task.id,
                        e.target.value as Task["status"]
                      )
                    }
                    title="Update task status"
                    aria-label="Update task status"
                    className={`px-2 py-1 rounded-full text-xs font-medium border-0 ${getStatusColor(
                      task.status
                    )}`}
                  >
                    <option value="todo">Todo</option>
                    <option value="in_progress">In Progress</option>
                    <option value="done">Done</option>
                  </select>
                  <button
                    onClick={() => deleteTask(task.id)}
                    className="text-red-600 hover:text-red-800 text-sm"
                  >
                    Delete
                  </button>
                </div>
              </div>
            </div>
          ))}
        </div>
      )}
    </div>
  );
}


================================================================================
END: D:\QiEOS\apps\web\src\modules\tasks\List.tsx
================================================================================


================================================================================
FILE: D:\QiEOS\apps\web\src\routes\admin\auditor\index.tsx
================================================================================

import React from "react";
import { MainLayout } from "../../../components/admin/layout/MainLayout";
import { Card } from "@qieos/ui";

export const AuditorPage: React.FC = () => {
  return (
    <MainLayout>
      <Card title="Auditor">
        <p>Audit logs and reports coming soon.</p>
      </Card>
    </MainLayout>
  );
};


================================================================================
END: D:\QiEOS\apps\web\src\routes\admin\auditor\index.tsx
================================================================================


================================================================================
FILE: D:\QiEOS\apps\web\src\routes\admin\billing-desk\index.tsx
================================================================================

import React from "react";
import { MainLayout } from "../../../components/admin/layout/MainLayout";
import { Card, Button } from "@qieos/ui";
import { FiPlus, FiDownload } from "react-icons/fi";

export const BillingPage: React.FC = () => {
  return (
    <MainLayout>
      <Card title="Billing Desk">
        <div className="flex items-center justify-between mb-4">
          <h2 className="text-xl font-semibold">Invoices</h2>
          <div className="space-x-2">
            <Button>
              <FiPlus className="mr-2" /> New Invoice
            </Button>
            <Button variant="secondary">
              <FiDownload className="mr-2" /> Export
            </Button>
          </div>
        </div>
        <p>Billing features coming soon.</p>
      </Card>
    </MainLayout>
  );
};


================================================================================
END: D:\QiEOS\apps\web\src\routes\admin\billing-desk\index.tsx
================================================================================


================================================================================
FILE: D:\QiEOS\apps\web\src\routes\admin\crm\index.tsx
================================================================================

import React from "react";
import { MainLayout } from "../../../components/admin/layout/MainLayout";
import { Card, Button } from "@qieos/ui";
import { FiPlus } from "react-icons/fi";

export const CrmPage: React.FC = () => {
  return (
    <MainLayout>
      <Card title="CRM">
        <div className="flex items-center justify-between mb-4">
          <h2 className="text-xl font-semibold">CRM</h2>
          <Button>
            <FiPlus className="mr-2" /> New Contact
          </Button>
        </div>
        <p>CRM board coming soon.</p>
      </Card>
    </MainLayout>
  );
};


================================================================================
END: D:\QiEOS\apps\web\src\routes\admin\crm\index.tsx
================================================================================


================================================================================
FILE: D:\QiEOS\apps\web\src\routes\admin\dashboard\index.tsx
================================================================================

import React from "react";
import { MainLayout } from "../../../components/admin/layout/MainLayout";
import { Card } from "@qieos/ui";

export const DashboardPage: React.FC = () => {
  return (
    <MainLayout>
      <Card title="Dashboard">
        <p>Welcome to the admin dashboard!</p>
      </Card>
    </MainLayout>
  );
};


================================================================================
END: D:\QiEOS\apps\web\src\routes\admin\dashboard\index.tsx
================================================================================


================================================================================
FILE: D:\QiEOS\apps\web\src\routes\admin\projects\details.tsx
================================================================================

import React from "react";
import { MainLayout } from "../../../components/admin/layout/MainLayout";
import { Card, Button } from "@qieos/ui";
import { FiEdit, FiPlus } from "react-icons/fi";

export const ProjectDetailsPage: React.FC = () => {
  return (
    <MainLayout>
      <Card title="Project Details">
        <div className="flex items-center justify-between mb-4">
          <h2 className="text-xl font-semibold">Sample Project</h2>
          <div className="space-x-2">
            <Button variant="secondary">
              <FiEdit className="mr-2" /> Edit
            </Button>
            <Button>
              <FiPlus className="mr-2" /> New Task
            </Button>
          </div>
        </div>
        <p>Details coming soon.</p>
      </Card>
    </MainLayout>
  );
};


================================================================================
END: D:\QiEOS\apps\web\src\routes\admin\projects\details.tsx
================================================================================


================================================================================
FILE: D:\QiEOS\apps\web\src\routes\admin\projects\index.tsx
================================================================================

import React from "react";
import { MainLayout } from "../../../components/admin/layout/MainLayout";
import { Card, Button } from "@qieos/ui";
import { FiPlus, FiEye } from "react-icons/fi";

export const ProjectsPage: React.FC = () => {
  return (
    <MainLayout>
      <Card title="Projects">
        <div className="flex items-center justify-between mb-4">
          <h2 className="text-xl font-semibold">Projects</h2>
          <Button>
            <FiPlus className="mr-2" /> New Project
          </Button>
        </div>
        <p>Project list coming soon.</p>
      </Card>
    </MainLayout>
  );
};


================================================================================
END: D:\QiEOS\apps\web\src\routes\admin\projects\index.tsx
================================================================================


================================================================================
FILE: D:\QiEOS\apps\web\src\routes\admin\routes\auditor\index.tsx
================================================================================

import React from "react";
import { MainLayout } from "../../../../components/admin/layout/MainLayout";
import { Card } from "@qieos/ui";
import { Button } from "@qieos/ui";

export const AuditorPage: React.FC = () => {
  return (
    <MainLayout>
      <Card title="Auditor">
        <div className="flex items-center justify-between mb-4">
          <h2 className="text-xl font-semibold">Audit Logs</h2>
          <Button>Export</Button>
        </div>
        <p>Audit logs and reports coming soon.</p>
      </Card>
    </MainLayout>
  );
};


================================================================================
END: D:\QiEOS\apps\web\src\routes\admin\routes\auditor\index.tsx
================================================================================


================================================================================
FILE: D:\QiEOS\apps\web\src\routes\admin\routes\billing-desk\index.tsx
================================================================================

import React from "react";
import { MainLayout } from "../../../../components/admin/layout/MainLayout";
import { Card } from "@qieos/ui";
import { Button } from "@qieos/ui";
import { FiPlus, FiDownload } from "react-icons/fi";

const invoices = [
  {
    id: "INV-001",
    client: "Acme Corporation",
    amount: "$2,500.00",
    status: "Paid",
    date: "2025-08-15",
  },
  {
    id: "INV-002",
    client: "Stark Industries",
    amount: "$10,000.00",
    status: "Paid",
    date: "2025-08-20",
  },
  {
    id: "INV-003",
    client: "Wayne Enterprises",
    amount: "$1,500.00",
    status: "Pending",
    date: "2025-09-01",
  },
  {
    id: "INV-004",
    client: "Acme Corporation",
    amount: "$2,500.00",
    status: "Pending",
    date: "2025-09-15",
  },
];

export const BillingPage: React.FC = () => {
  return (
    <MainLayout>
      <div className="flex justify-between items-center mb-6">
        <h1 className="text-3xl font-bold">Billing</h1>
        <Button>
          <FiPlus className="mr-2" />
          New Invoice
        </Button>
      </div>

      <div className="grid grid-cols-1 md:grid-cols-3 gap-6 mb-6">
        <Card>
          <div className="p-4">
            <h2 className="text-xl font-semibold">Monthly Recurring Revenue</h2>
            <p className="text-3xl font-bold">$12,500</p>
          </div>
        </Card>
        <Card>
          <div className="p-4">
            <h2 className="text-xl font-semibold">Overdue Invoices</h2>
            <p className="text-3xl font-bold">2</p>
          </div>
        </Card>
        <Card>
          <div className="p-4">
            <h2 className="text-xl font-semibold">Active Subscriptions</h2>
            <p className="text-3xl font-bold">12</p>
          </div>
        </Card>
      </div>

      <h2 className="text-2xl font-bold mb-4">Recent Invoices</h2>
      <Card>
        <table className="w-full text-left">
          <thead>
            <tr className="border-b">
              <th className="p-4">Invoice ID</th>
              <th className="p-4">Client</th>
              <th className="p-4">Amount</th>
              <th className="p-4">Status</th>
              <th className="p-4">Date</th>
              <th className="p-4">Actions</th>
            </tr>
          </thead>
          <tbody>
            {invoices.map((invoice) => (
              <tr
                key={invoice.id}
                className="border-b last:border-b-0 hover:bg-gray-50"
              >
                <td className="p-4 font-medium">{invoice.id}</td>
                <td className="p-4">{invoice.client}</td>
                <td className="p-4">{invoice.amount}</td>
                <td className="p-4">{invoice.status}</td>
                <td className="p-4 text-gray-600">{invoice.date}</td>
                <td className="p-4">
                  <Button variant="outline" size="sm">
                    <FiDownload className="mr-2" />
                    Download
                  </Button>
                </td>
              </tr>
            ))}
          </tbody>
        </table>
      </Card>
    </MainLayout>
  );
};


================================================================================
END: D:\QiEOS\apps\web\src\routes\admin\routes\billing-desk\index.tsx
================================================================================


================================================================================
FILE: D:\QiEOS\apps\web\src\routes\admin\routes\crm\index.tsx
================================================================================

import React, { useState } from "react";
import { MainLayout } from "../../../../components/admin/layout/MainLayout";
import {
  DragDropContext,
  Droppable,
  Draggable,
  DropResult,
} from "react-beautiful-dnd";
import { Card } from "@qieos/ui";
import { Button } from "@qieos/ui";
import { FiPlus } from "react-icons/fi";

const initialData = {
  columns: {
    "column-1": {
      id: "column-1",
      title: "Lead In",
      dealIds: ["deal-1", "deal-2"],
    },
    "column-2": {
      id: "column-2",
      title: "Contact Made",
      dealIds: ["deal-3"],
    },
    "column-3": {
      id: "column-3",
      title: "Proposal Made",
      dealIds: ["deal-4"],
    },
    "column-4": {
      id: "column-4",
      title: "Won",
      dealIds: [],
    },
  } as Record<string, { id: string; title: string; dealIds: string[] }>,
  deals: {
    "deal-1": { id: "deal-1", content: "Acme Corp - Website Redesign" },
    "deal-2": { id: "deal-2", content: "Stark Industries - API Integration" },
    "deal-3": { id: "deal-3", content: "Wayne Enterprises - Mobile App" },
    "deal-4": { id: "deal-4", content: "Cyberdyne - AI Consulting" },
  } as Record<string, { id: string; content: string }>,
  columnOrder: ["column-1", "column-2", "column-3", "column-4"],
};

export const CrmPage: React.FC = () => {
  const [data, setData] = useState(initialData);

  const onDragEnd = (_result: DropResult) => {
    // TODO: Implement drag and drop
  };

  return (
    <MainLayout>
      <div className="flex justify-between items-center mb-6">
        <h1 className="text-3xl font-bold">Deals Pipeline</h1>
        <Button>
          <FiPlus className="mr-2" />
          New Deal
        </Button>
      </div>
      <DragDropContext onDragEnd={onDragEnd}>
        <div className="grid grid-cols-4 gap-6">
          {data.columnOrder.map((columnId) => {
            const column = data.columns[columnId];
            const deals = column.dealIds.map(
              (dealId: string) => data.deals[dealId]
            );

            return (
              <div key={column.id} className="bg-gray-100 rounded-lg p-4">
                <h2 className="text-xl font-semibold mb-4">{column.title}</h2>
                <Droppable droppableId={column.id}>
                  {(provided) => (
                    <div
                      ref={provided.innerRef}
                      {...provided.droppableProps}
                      className="min-h-[500px]"
                    >
                      {deals.map((deal: any, index: number) => (
                        <Draggable
                          key={deal.id}
                          draggableId={deal.id}
                          index={index}
                        >
                          {(provided) => (
                            <div
                              ref={provided.innerRef}
                              {...provided.draggableProps}
                              {...provided.dragHandleProps}
                              className="mb-4"
                            >
                              <Card>
                                <div className="p-4">{deal.content}</div>
                              </Card>
                            </div>
                          )}
                        </Draggable>
                      ))}
                      {provided.placeholder}
                    </div>
                  )}
                </Droppable>
              </div>
            );
          })}
        </div>
      </DragDropContext>
    </MainLayout>
  );
};


================================================================================
END: D:\QiEOS\apps\web\src\routes\admin\routes\crm\index.tsx
================================================================================


================================================================================
FILE: D:\QiEOS\apps\web\src\routes\admin\routes\dashboard\index.tsx
================================================================================

import React from "react";
import { MainLayout } from "../../../../components/admin/layout/MainLayout";
import { Card } from "@qieos/ui";

export const DashboardPage: React.FC = () => {
  return (
    <MainLayout>
      <h1 className="text-3xl font-bold mb-6">Dashboard</h1>
      <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6">
        <Card>
          <div className="p-4">
            <h2 className="text-xl font-semibold">Total Users</h2>
            <p className="text-3xl font-bold">1,234</p>
          </div>
        </Card>
        <Card>
          <div className="p-4">
            <h2 className="text-xl font-semibold">Revenue</h2>
            <p className="text-3xl font-bold">$56,789</p>
          </div>
        </Card>
        <Card>
          <div className="p-4">
            <h2 className="text-xl font-semibold">New Signups</h2>
            <p className="text-3xl font-bold">123</p>
          </div>
        </Card>
        <Card>
          <div className="p-4">
            <h2 className="text-xl font-semibold">Open Tickets</h2>
            <p className="text-3xl font-bold">45</p>
          </div>
        </Card>
      </div>
    </MainLayout>
  );
};


================================================================================
END: D:\QiEOS\apps\web\src\routes\admin\routes\dashboard\index.tsx
================================================================================


================================================================================
FILE: D:\QiEOS\apps\web\src\routes\admin\routes\projects\details.tsx
================================================================================

import React from "react";
import { MainLayout } from "../../../../components/admin/layout/MainLayout";
import { Card } from "@qieos/ui";
import { Button } from "@qieos/ui";
import { FiEdit, FiPlus } from "react-icons/fi";

const project = {
  name: "QiEOS Platform",
  description: "The core platform for managing clients, projects, and billing.",
  team: "Core",
  status: "In Progress",
  tasks: [
    { id: 1, title: "Develop authentication flow", status: "Completed" },
    { id: 2, title: "Fix login button bug", status: "In Progress" },
    { id: 3, title: "Design database schema", status: "Pending" },
  ],
  activity: [
    {
      id: 1,
      user: "John Smith",
      action: "completed task: Develop authentication flow",
      time: "2 hours ago",
    },
    {
      id: 2,
      user: "Jane Doe",
      action: "added a new comment",
      time: "1 day ago",
    },
    { id: 3, user: "Admin", action: "created the project", time: "1 week ago" },
  ],
};

export const ProjectDetailsPage: React.FC = () => {
  return (
    <MainLayout>
      <div className="flex justify-between items-center mb-6">
        <div>
          <h1 className="text-3xl font-bold">{project.name}</h1>
          <p className="text-gray-600">{project.description}</p>
        </div>
        <Button>
          <FiEdit className="mr-2" />
          Edit Project
        </Button>
      </div>

      <div className="grid grid-cols-3 gap-6">
        <div className="col-span-2">
          <Card>
            <div className="p-4 border-b flex justify-between items-center">
              <h2 className="text-xl font-semibold">Tasks</h2>
              <Button size="sm">
                <FiPlus className="mr-2" />
                Add Task
              </Button>
            </div>
            <ul>
              {project.tasks.map((task) => (
                <li
                  key={task.id}
                  className="p-4 border-b last:border-b-0 flex justify-between"
                >
                  <span>{task.title}</span>
                  <span>{task.status}</span>
                </li>
              ))}
            </ul>
          </Card>
        </div>

        <div>
          <Card>
            <div className="p-4 border-b">
              <h2 className="text-xl font-semibold">Activity Feed</h2>
            </div>
            <ul>
              {project.activity.map((item) => (
                <li key={item.id} className="p-4 border-b last:border-b-0">
                  <p className="font-medium">
                    {item.user}{" "}
                    <span className="text-gray-600">{item.action}</span>
                  </p>
                  <p className="text-sm text-gray-500">{item.time}</p>
                </li>
              ))}
            </ul>
          </Card>
        </div>
      </div>
    </MainLayout>
  );
};


================================================================================
END: D:\QiEOS\apps\web\src\routes\admin\routes\projects\details.tsx
================================================================================


================================================================================
FILE: D:\QiEOS\apps\web\src\routes\admin\routes\projects\index.tsx
================================================================================

import React from "react";
import { MainLayout } from "../../../../components/admin/layout/MainLayout";
import { Card } from "@qieos/ui";
import { Button } from "@qieos/ui";
import { FiPlus, FiEye } from "react-icons/fi";

const projects = [
  {
    id: 1,
    name: "QiEOS Platform",
    status: "In Progress",
    team: "Core",
    lastUpdate: "2 hours ago",
  },
  {
    id: 2,
    name: "Qially Marketing Site",
    status: "Completed",
    team: "Web",
    lastUpdate: "1 day ago",
  },
  {
    id: 3,
    name: "Internal Admin Panel",
    status: "In Progress",
    team: "Internal",
    lastUpdate: "30 minutes ago",
  },
  {
    id: 4,
    name: "API Integrations",
    status: "On Hold",
    team: "Backend",
    lastUpdate: "1 week ago",
  },
];

export const ProjectsPage: React.FC = () => {
  return (
    <MainLayout>
      <div className="flex justify-between items-center mb-6">
        <h1 className="text-3xl font-bold">Projects</h1>
        <Button>
          <FiPlus className="mr-2" />
          New Project
        </Button>
      </div>
      <Card>
        <table className="w-full text-left">
          <thead>
            <tr className="border-b">
              <th className="p-4">Project Name</th>
              <th className="p-4">Status</th>
              <th className="p-4">Team</th>
              <th className="p-4">Last Update</th>
              <th className="p-4">Actions</th>
            </tr>
          </thead>
          <tbody>
            {projects.map((project) => (
              <tr
                key={project.id}
                className="border-b last:border-b-0 hover:bg-gray-50"
              >
                <td className="p-4 font-medium">{project.name}</td>
                <td className="p-4">{project.status}</td>
                <td className="p-4">{project.team}</td>
                <td className="p-4 text-gray-600">{project.lastUpdate}</td>
                <td className="p-4">
                  <Button variant="outline" size="sm">
                    <FiEye className="mr-2" />
                    View
                  </Button>
                </td>
              </tr>
            ))}
          </tbody>
        </table>
      </Card>
    </MainLayout>
  );
};


================================================================================
END: D:\QiEOS\apps\web\src\routes\admin\routes\projects\index.tsx
================================================================================


================================================================================
FILE: D:\QiEOS\apps\web\src\routes\admin\routes\tasks\index.tsx
================================================================================

import React from "react";
import { MainLayout } from "../../../../components/admin/layout/MainLayout";
import { Card } from "@qieos/ui";
import { Button } from "@qieos/ui";
import { FiPlus } from "react-icons/fi";

const tasks = [
  {
    id: 1,
    title: "Design new dashboard layout",
    project: "Internal Admin Panel",
    assignee: "Jane Doe",
    status: "In Progress",
    dueDate: "2025-09-15",
  },
  {
    id: 2,
    title: "Develop authentication flow",
    project: "QiEOS Platform",
    assignee: "John Smith",
    status: "Completed",
    dueDate: "2025-09-10",
  },
  {
    id: 3,
    title: "Write API documentation",
    project: "API Integrations",
    assignee: "Peter Jones",
    status: "Pending",
    dueDate: "2025-09-20",
  },
  {
    id: 4,
    title: "Create marketing materials",
    project: "Qially Marketing Site",
    assignee: "Mary Johnson",
    status: "On Hold",
    dueDate: "2025-10-01",
  },
  {
    id: 5,
    title: "Fix login button bug",
    project: "QiEOS Platform",
    assignee: "John Smith",
    status: "In Progress",
    dueDate: "2025-09-12",
  },
];

export const TasksPage: React.FC = () => {
  return (
    <MainLayout>
      <div className="flex justify-between items-center mb-6">
        <h1 className="text-3xl font-bold">Tasks</h1>
        <Button>
          <FiPlus className="mr-2" />
          New Task
        </Button>
      </div>
      <Card>
        <table className="w-full text-left">
          <thead>
            <tr className="border-b">
              <th className="p-4">Task Title</th>
              <th className="p-4">Project</th>
              <th className="p-4">Assignee</th>
              <th className="p-4">Status</th>
              <th className="p-4">Due Date</th>
            </tr>
          </thead>
          <tbody>
            {tasks.map((task) => (
              <tr
                key={task.id}
                className="border-b last:border-b-0 hover:bg-gray-50"
              >
                <td className="p-4 font-medium">{task.title}</td>
                <td className="p-4">{task.project}</td>
                <td className="p-4">{task.assignee}</td>
                <td className="p-4">{task.status}</td>
                <td className="p-4 text-gray-600">{task.dueDate}</td>
              </tr>
            ))}
          </tbody>
        </table>
      </Card>
    </MainLayout>
  );
};


================================================================================
END: D:\QiEOS\apps\web\src\routes\admin\routes\tasks\index.tsx
================================================================================


================================================================================
FILE: D:\QiEOS\apps\web\src\routes\admin\routes\tenants\index.tsx
================================================================================

import React from "react";
import { MainLayout } from "../../../../components/admin/layout/MainLayout";
import { Card } from "@qieos/ui";
import { Button } from "@qieos/ui";
import { FiPlus } from "react-icons/fi";

const tenants = [
  {
    id: "acme-corp",
    name: "Acme Corporation",
    status: "Active",
    users: 25,
    plan: "Enterprise",
  },
  {
    id: "stark-industries",
    name: "Stark Industries",
    status: "Active",
    users: 150,
    plan: "Enterprise",
  },
  {
    id: "wayne-enterprises",
    name: "Wayne Enterprises",
    status: "Trial",
    users: 5,
    plan: "Pro",
  },
  {
    id: "cyberdyne-systems",
    name: "Cyberdyne Systems",
    status: "Inactive",
    users: 0,
    plan: "Free",
  },
];

export const TenantsPage: React.FC = () => {
  return (
    <MainLayout>
      <div className="flex justify-between items-center mb-6">
        <h1 className="text-3xl font-bold">Tenants</h1>
        <Button>
          <FiPlus className="mr-2" />
          New Tenant
        </Button>
      </div>
      <Card>
        <table className="w-full text-left">
          <thead>
            <tr className="border-b">
              <th className="p-4">Tenant Name</th>
              <th className="p-4">Status</th>
              <th className="p-4">Plan</th>
              <th className="p-4">Users</th>
            </tr>
          </thead>
          <tbody>
            {tenants.map((tenant) => (
              <tr
                key={tenant.id}
                className="border-b last:border-b-0 hover:bg-gray-50"
              >
                <td className="p-4 font-medium">{tenant.name}</td>
                <td className="p-4">{tenant.status}</td>
                <td className="p-4">{tenant.plan}</td>
                <td className="p-4 text-gray-600">{tenant.users}</td>
              </tr>
            ))}
          </tbody>
        </table>
      </Card>
    </MainLayout>
  );
};


================================================================================
END: D:\QiEOS\apps\web\src\routes\admin\routes\tenants\index.tsx
================================================================================


================================================================================
FILE: D:\QiEOS\apps\web\src\routes\admin\tasks\index.tsx
================================================================================

import React from "react";
import { MainLayout } from "../../../components/admin/layout/MainLayout";
import { Card, Button } from "@qieos/ui";
import { FiPlus } from "react-icons/fi";

export const TasksPage: React.FC = () => {
  return (
    <MainLayout>
      <Card title="Tasks">
        <div className="flex items-center justify-between mb-4">
          <h2 className="text-xl font-semibold">Tasks</h2>
          <Button>
            <FiPlus className="mr-2" /> New Task
          </Button>
        </div>
        <p>Admin task list coming soon.</p>
      </Card>
    </MainLayout>
  );
};


================================================================================
END: D:\QiEOS\apps\web\src\routes\admin\tasks\index.tsx
================================================================================


================================================================================
FILE: D:\QiEOS\apps\web\src\routes\admin\tenants\index.tsx
================================================================================

import React from "react";
import { MainLayout } from "../../../components/admin/layout/MainLayout";
import { Card, Button } from "@qieos/ui";
import { FiPlus } from "react-icons/fi";

export const TenantsPage: React.FC = () => {
  return (
    <MainLayout>
      <Card title="Tenants">
        <div className="flex items-center justify-between mb-4">
          <h2 className="text-xl font-semibold">Tenants</h2>
          <Button>
            <FiPlus className="mr-2" /> New Tenant
          </Button>
        </div>
        <p>Tenant management coming soon.</p>
      </Card>
    </MainLayout>
  );
};


================================================================================
END: D:\QiEOS\apps\web\src\routes\admin\tenants\index.tsx
================================================================================


================================================================================
FILE: D:\QiEOS\apps\web\src\routes\auth\Callback.tsx
================================================================================

import React, { useEffect, useState } from "react";
import { useAuth } from "../../hooks/useAuth";
import { useNavigate, useSearchParams } from "react-router-dom";

export function AuthCallback() {
  const [loading, setLoading] = useState(true);
  const [error, setError] = useState("");
  const { claims } = useAuth();
  const navigate = useNavigate();
  const [searchParams] = useSearchParams();

  useEffect(() => {
    const handleAuthCallback = async () => {
      try {
        // Check if we have auth tokens in the URL
        const accessToken = searchParams.get("access_token");
        const refreshToken = searchParams.get("refresh_token");

        if (accessToken && refreshToken) {
          // Wait for claims to be loaded
          if (claims) {
            // Determine redirect URL based on user's client slug
            let redirectUrl: string;
            if (claims.client_slug) {
              redirectUrl = `https://${claims.client_slug}.qially.com`;
            } else {
              // Fallback to main site for users without a specific client slug
              redirectUrl = "https://qially.com";
            }

            // Redirect to the appropriate domain
            window.location.href = redirectUrl;
          }
        } else {
          // No tokens in URL, redirect to login
          navigate("/auth/login");
        }
      } catch (err: any) {
        setError(err.message || "Authentication failed");
        setLoading(false);
      }
    };

    handleAuthCallback();
  }, [claims, searchParams, navigate]);

  if (loading) {
    return (
      <div className="min-h-screen flex items-center justify-center bg-gray-50">
        <div className="text-center">
          <div className="animate-spin rounded-full h-12 w-12 border-b-2 border-primary mx-auto mb-4"></div>
          <p className="text-lg">Completing sign in...</p>
        </div>
      </div>
    );
  }

  if (error) {
    return (
      <div className="min-h-screen flex items-center justify-center bg-gray-50">
        <div className="max-w-md w-full space-y-8 text-center">
          <div>
            <h2 className="text-2xl font-bold text-red-600">
              Authentication Error
            </h2>
            <p className="mt-2 text-gray-600">{error}</p>
          </div>
          <button
            onClick={() => navigate("/auth/login")}
            className="bg-primary text-primary-foreground hover:bg-primary/90 px-4 py-2 rounded-md"
          >
            Back to Login
          </button>
        </div>
      </div>
    );
  }

  return null;
}


================================================================================
END: D:\QiEOS\apps\web\src\routes\auth\Callback.tsx
================================================================================


================================================================================
FILE: D:\QiEOS\apps\web\src\routes\auth\Login.tsx
================================================================================

import React, { useState, useEffect } from "react";
import { useAuth } from "../../hooks/useAuth";
import { useNavigate } from "react-router-dom";

export function Login() {
  const [email, setEmail] = useState("");
  const [password, setPassword] = useState("");
  const [loading, setLoading] = useState(false);
  const [error, setError] = useState("");

  const { signIn, signInWithMagicLink, claims } = useAuth();
  const navigate = useNavigate();

  // Extract client slug from current domain
  const getClientSlugFromDomain = () => {
    const hostname = window.location.hostname;
    if (
      hostname.includes(".qially.com") &&
      !hostname.startsWith("www.") &&
      !hostname.startsWith("portal.")
    ) {
      return hostname.split(".")[0];
    }
    return null;
  };

  const clientSlug = getClientSlugFromDomain();

  // Helper function to get redirect URL based on user's client slug
  const getRedirectUrl = (userClaims: any) => {
    if (userClaims?.client_slug) {
      return `https://${userClaims.client_slug}.qially.com`;
    }
    // Fallback to main site for users without a specific client slug
    return "https://qially.com";
  };

  const handleSubmit = async (e: React.FormEvent) => {
    e.preventDefault();
    setLoading(true);
    setError("");

    try {
      await signIn(email, password);
      // Wait for claims to be loaded, then redirect
      // The redirect will happen in the useEffect below
    } catch (err: any) {
      setError(err.message || "Login failed");
      setLoading(false);
    }
  };

  // Handle redirect after successful login and claims are loaded
  useEffect(() => {
    if (claims && !loading) {
      const redirectUrl = getRedirectUrl(claims);
      window.location.href = redirectUrl;
    }
  }, [claims, loading]);

  const handleMagicLink = async (e: React.FormEvent) => {
    e.preventDefault();
    setLoading(true);
    setError("");

    try {
      await signInWithMagicLink(email, clientSlug || undefined);
      setError("If the email exists, a sign-in link was sent.");
    } catch (err: any) {
      setError(err.message || "Failed to send magic link");
    } finally {
      setLoading(false);
    }
  };

  return (
    <div className="min-h-screen flex items-center justify-center bg-gray-50">
      <div className="max-w-md w-full space-y-8">
        <div>
          <h2 className="mt-6 text-center text-3xl font-extrabold text-gray-900">
            Sign in to QiEOS
          </h2>
        </div>
        <form className="mt-8 space-y-6" onSubmit={handleSubmit}>
          <div className="rounded-md shadow-sm -space-y-px">
            <div>
              <label htmlFor="email" className="sr-only">
                Email address
              </label>
              <input
                id="email"
                name="email"
                type="email"
                autoComplete="email"
                required
                className="appearance-none rounded-none relative block w-full px-3 py-2 border border-gray-300 placeholder-gray-500 text-gray-900 rounded-t-md focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 focus:z-10 sm:text-sm"
                placeholder="Email address"
                value={email}
                onChange={(e) => setEmail(e.target.value)}
              />
            </div>
            <div>
              <label htmlFor="password" className="sr-only">
                Password
              </label>
              <input
                id="password"
                name="password"
                type="password"
                autoComplete="current-password"
                required
                className="appearance-none rounded-none relative block w-full px-3 py-2 border border-gray-300 placeholder-gray-500 text-gray-900 rounded-b-md focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 focus:z-10 sm:text-sm"
                placeholder="Password"
                value={password}
                onChange={(e) => setPassword(e.target.value)}
              />
            </div>
          </div>

          {error && (
            <div className="text-red-600 text-sm text-center">{error}</div>
          )}

          <div className="grid grid-cols-1 gap-3">
            <button
              type="submit"
              disabled={loading}
              className="group relative w-full flex justify-center py-2 px-4 border border-transparent text-sm font-medium rounded-md text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 disabled:opacity-50"
            >
              {loading ? "Signing in..." : "Sign in"}
            </button>
            <button
              onClick={handleMagicLink}
              disabled={loading || !email}
              className="group relative w-full flex justify-center py-2 px-4 border text-sm font-medium rounded-md text-indigo-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 disabled:opacity-50"
            >
              Send magic link
            </button>
          </div>
        </form>
      </div>
    </div>
  );
}


================================================================================
END: D:\QiEOS\apps\web\src\routes\auth\Login.tsx
================================================================================


================================================================================
FILE: D:\QiEOS\apps\web\src\routes\client\Dashboard.tsx
================================================================================

import React from 'react'
import { Link } from 'react-router-dom'
import { useAuth } from '../../hooks/useAuth'
import { Card, CardHeader, CardTitle, CardContent } from '@qieos/ui'

export function ClientDashboard() {
  const { claims } = useAuth()

  return (
    <div className="min-h-screen bg-gray-50">
      <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8">
        <div className="mb-8">
          <h1 className="text-3xl font-bold text-gray-900">Client Portal</h1>
          <p className="text-gray-600 mt-2">
            Welcome back, {claims?.email}
          </p>
        </div>

        {/* Dashboard Stats */}
        <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6 mb-8">
          <div className="bg-white rounded-lg shadow p-6 relative overflow-hidden">
            <div className="absolute w-56 h-48 bg-blue-500 blur-[200px] -left-1/2 -bottom-1/2 opacity-20"></div>
            <div className="relative">
              <h3 className="text-lg font-semibold text-gray-800 mb-2">Active Tasks</h3>
              <span className="bg-gradient-to-r from-blue-600 to-indigo-400 font-bold text-3xl text-transparent bg-clip-text">12</span>
            </div>
          </div>
          
          <div className="bg-white rounded-lg shadow p-6 relative overflow-hidden">
            <div className="absolute w-56 h-48 bg-green-500 blur-[200px] -left-1/2 -bottom-1/2 opacity-20"></div>
            <div className="relative">
              <h3 className="text-lg font-semibold text-gray-800 mb-2">Projects</h3>
              <span className="bg-gradient-to-r from-green-600 to-emerald-400 font-bold text-3xl text-transparent bg-clip-text">3</span>
            </div>
          </div>
          
          <div className="bg-white rounded-lg shadow p-6 relative overflow-hidden">
            <div className="absolute w-56 h-48 bg-yellow-500 blur-[200px] -left-1/2 -bottom-1/2 opacity-20"></div>
            <div className="relative">
              <h3 className="text-lg font-semibold text-gray-800 mb-2">Files</h3>
              <span className="bg-gradient-to-r from-yellow-600 to-orange-400 font-bold text-3xl text-transparent bg-clip-text">24</span>
            </div>
          </div>
          
          <div className="bg-white rounded-lg shadow p-6 relative overflow-hidden">
            <div className="absolute w-56 h-48 bg-purple-500 blur-[200px] -left-1/2 -bottom-1/2 opacity-20"></div>
            <div className="relative">
              <h3 className="text-lg font-semibold text-gray-800 mb-2">KB Articles</h3>
              <span className="bg-gradient-to-r from-purple-600 to-pink-400 font-bold text-3xl text-transparent bg-clip-text">8</span>
            </div>
          </div>
        </div>

        {/* Activity and Quick Actions */}
        <div className="grid grid-cols-1 lg:grid-cols-2 gap-6 mb-8">
          <Card>
            <CardHeader>
              <CardTitle>Recent Activity</CardTitle>
            </CardHeader>
            <CardContent>
              <div className="space-y-4">
                <div className="flex items-center space-x-3">
                  <div className="w-2 h-2 bg-blue-500 rounded-full"></div>
                  <span className="text-sm text-gray-600">Task "Review documents" completed</span>
                </div>
                <div className="flex items-center space-x-3">
                  <div className="w-2 h-2 bg-green-500 rounded-full"></div>
                  <span className="text-sm text-gray-600">New file uploaded</span>
                </div>
                <div className="flex items-center space-x-3">
                  <div className="w-2 h-2 bg-yellow-500 rounded-full"></div>
                  <span className="text-sm text-gray-600">Project milestone reached</span>
                </div>
              </div>
            </CardContent>
          </Card>
          
          <Card>
            <CardHeader>
              <CardTitle>Quick Actions</CardTitle>
            </CardHeader>
            <CardContent>
              <div className="space-y-3">
                <Link to="/client/tasks/new" className="block w-full text-left p-3 rounded-lg border border-gray-200 hover:bg-gray-50 transition-colors">
                  <div className="font-medium">Create New Task</div>
                  <div className="text-sm text-gray-500">Add a new task to your project</div>
                </Link>
                <Link to="/client/files" className="block w-full text-left p-3 rounded-lg border border-gray-200 hover:bg-gray-50 transition-colors">
                  <div className="font-medium">Upload File</div>
                  <div className="text-sm text-gray-500">Share documents with your team</div>
                </Link>
                <Link to="/client/kb" className="block w-full text-left p-3 rounded-lg border border-gray-200 hover:bg-gray-50 transition-colors">
                  <div className="font-medium">View Knowledge Base</div>
                  <div className="text-sm text-gray-500">Browse helpful resources</div>
                </Link>
              </div>
            </CardContent>
          </Card>
        </div>

        <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
          {claims?.features?.tasks && (
            <Link
              to="/client/tasks"
              className="bg-white rounded-lg shadow p-6 hover:shadow-md transition-shadow"
            >
              <div className="flex items-center">
                <div className="flex-shrink-0">
                  <div className="w-8 h-8 bg-indigo-100 rounded-md flex items-center justify-center">
                    <svg className="w-5 h-5 text-indigo-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                      <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M9 5H7a2 2 0 00-2 2v10a2 2 0 002 2h8a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2" />
                    </svg>
                  </div>
                </div>
                <div className="ml-4">
                  <h3 className="text-lg font-medium text-gray-900">Tasks</h3>
                  <p className="text-gray-500">Manage your tasks and projects</p>
                </div>
              </div>
            </Link>
          )}

          <Link
            to="/client/kb"
            className="bg-white rounded-lg shadow p-6 hover:shadow-md transition-shadow"
          >
            <div className="flex items-center">
              <div className="flex-shrink-0">
                <div className="w-8 h-8 bg-green-100 rounded-md flex items-center justify-center">
                  <svg className="w-5 h-5 text-green-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M12 6.253v13m0-13C10.832 5.477 9.246 5 7.5 5S4.168 5.477 3 6.253v13C4.168 18.477 5.754 18 7.5 18s3.332.477 4.5 1.253m0-13C13.168 5.477 14.754 5 16.5 5c1.746 0 3.332.477 4.5 1.253v13C19.832 18.477 18.246 18 16.5 18c-1.746 0-3.332.477-4.5 1.253" />
                  </svg>
                </div>
              </div>
              <div className="ml-4">
                <h3 className="text-lg font-medium text-gray-900">Knowledge Base</h3>
                <p className="text-gray-500">Browse documentation and guides</p>
              </div>
            </div>
          </Link>

          {claims?.features?.billing && (
            <Link
              to="/client/billing"
              className="bg-white rounded-lg shadow p-6 hover:shadow-md transition-shadow"
            >
              <div className="flex items-center">
                <div className="flex-shrink-0">
                  <div className="w-8 h-8 bg-yellow-100 rounded-md flex items-center justify-center">
                    <svg className="w-5 h-5 text-yellow-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                      <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M17 9V7a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2m2 4h10a2 2 0 002-2v-6a2 2 0 00-2-2H9a2 2 0 00-2 2v6a2 2 0 002 2zm7-5a2 2 0 11-4 0 2 2 0 014 0z" />
                    </svg>
                  </div>
                </div>
                <div className="ml-4">
                  <h3 className="text-lg font-medium text-gray-900">Billing</h3>
                  <p className="text-gray-500">View invoices and payments</p>
                </div>
              </div>
            </Link>
          )}

          <Link
            to="/client/files"
            className="bg-white rounded-lg shadow p-6 hover:shadow-md transition-shadow"
          >
            <div className="flex items-center">
              <div className="flex-shrink-0">
                <div className="w-8 h-8 bg-blue-100 rounded-md flex items-center justify-center">
                  <svg className="w-5 h-5 text-blue-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M7 21h10a2 2 0 002-2V9.414a1 1 0 00-.293-.707l-5.414-5.414A1 1 0 0012.586 3H7a2 2 0 00-2 2v14a2 2 0 002 2z" />
                  </svg>
                </div>
              </div>
              <div className="ml-4">
                <h3 className="text-lg font-medium text-gray-900">Files</h3>
                <p className="text-gray-500">Upload and manage files</p>
              </div>
            </div>
          </Link>

          <Link
            to="/client/profile"
            className="bg-white rounded-lg shadow p-6 hover:shadow-md transition-shadow"
          >
            <div className="flex items-center">
              <div className="flex-shrink-0">
                <div className="w-8 h-8 bg-purple-100 rounded-md flex items-center justify-center">
                  <svg className="w-5 h-5 text-purple-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z" />
                  </svg>
                </div>
              </div>
              <div className="ml-4">
                <h3 className="text-lg font-medium text-gray-900">Profile</h3>
                <p className="text-gray-500">Manage your account settings</p>
              </div>
            </div>
          </Link>
        </div>
      </div>
    </div>
  )
}


================================================================================
END: D:\QiEOS\apps\web\src\routes\client\Dashboard.tsx
================================================================================


================================================================================
FILE: D:\QiEOS\apps\web\src\routes\client\Files.tsx
================================================================================

import React, { useState } from 'react'
import { FileUpload } from '../../modules/files/FileUpload'
import { FileList } from '../../modules/files/FileList'

export function Files() {
  const [refreshKey, setRefreshKey] = useState(0)

  const handleUploadComplete = () => {
    // Trigger a refresh of the file list
    setRefreshKey(prev => prev + 1)
  }

  return (
    <div className="max-w-4xl mx-auto p-6">
      <div className="mb-8">
        <h1 className="text-3xl font-bold text-gray-900">File Management</h1>
        <p className="text-gray-600 mt-2">Upload and manage your files</p>
      </div>

      <div className="space-y-8">
        <div className="bg-white rounded-lg shadow p-6">
          <h2 className="text-lg font-medium text-gray-900 mb-4">Upload Files</h2>
          <FileUpload onUploadComplete={handleUploadComplete} />
        </div>

        <div className="bg-white rounded-lg shadow p-6">
          <FileList key={refreshKey} />
        </div>
      </div>
    </div>
  )
}


================================================================================
END: D:\QiEOS\apps\web\src\routes\client\Files.tsx
================================================================================


================================================================================
FILE: D:\QiEOS\apps\web\src\routes\client\KnowledgeBase.tsx
================================================================================

import React, { useState } from 'react'
import { PublicKB } from '../../modules/kb/PublicKB'
import { PrivateKB } from '../../modules/kb/PrivateKB'
import { useAuth } from '../../hooks/useAuth'

export function KnowledgeBase() {
  const [activeTab, setActiveTab] = useState<'public' | 'private'>('public')
  const { claims } = useAuth()

  return (
    <div className="min-h-screen bg-gray-50">
      <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8">
        <div className="mb-8">
          <h1 className="text-3xl font-bold text-gray-900">Knowledge Base</h1>
          <p className="text-gray-600 mt-2">Access documentation and guides</p>
        </div>

        {/* Tab Navigation */}
        <div className="border-b border-gray-200 mb-8">
          <nav className="-mb-px flex space-x-8">
            <button
              onClick={() => setActiveTab('public')}
              className={`py-2 px-1 border-b-2 font-medium text-sm ${
                activeTab === 'public'
                  ? 'border-indigo-500 text-indigo-600'
                  : 'border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300'
              }`}
            >
              Public Documentation
            </button>
            {claims && (
              <button
                onClick={() => setActiveTab('private')}
                className={`py-2 px-1 border-b-2 font-medium text-sm ${
                  activeTab === 'private'
                    ? 'border-indigo-500 text-indigo-600'
                    : 'border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300'
                }`}
              >
                Private Documentation
              </button>
            )}
          </nav>
        </div>

        {/* Tab Content */}
        <div>
          {activeTab === 'public' && <PublicKB />}
          {activeTab === 'private' && claims && <PrivateKB />}
        </div>
      </div>
    </div>
  )
}


================================================================================
END: D:\QiEOS\apps\web\src\routes\client\KnowledgeBase.tsx
================================================================================


================================================================================
FILE: D:\QiEOS\apps\web\src\routes\client\Profile.tsx
================================================================================

import React, { useState, useEffect } from "react";
import { api } from "../../lib/supabaseClient";
import { useAuth } from "../../hooks/useAuth";

interface Profile {
  user_id: string;
  first_name?: string;
  last_name?: string;
  phone?: string;
  avatar_url?: string;
  email: string;
  role: string;
  org_id: string;
  company_ids: string[];
  department: string;
  created_at: string;
  updated_at: string;
}

export function Profile() {
  const [profile, setProfile] = useState<Profile | null>(null);
  const [loading, setLoading] = useState(true);
  const [saving, setSaving] = useState(false);
  const [error, setError] = useState("");
  const [success, setSuccess] = useState("");

  const { claims, refreshClaims } = useAuth();

  // Form state
  const [formData, setFormData] = useState({
    first_name: "",
    last_name: "",
    phone: "",
    avatar_url: "",
  });

  useEffect(() => {
    fetchProfile();
  }, []);

  const fetchProfile = async () => {
    try {
      setLoading(true);
      const response = await api.get("/me/profile");
      if (response.success) {
        setProfile(response.profile);
        setFormData({
          first_name: response.profile.first_name || "",
          last_name: response.profile.last_name || "",
          phone: response.profile.phone || "",
          avatar_url: response.profile.avatar_url || "",
        });
      } else {
        setError("Failed to fetch profile");
      }
    } catch (err: any) {
      setError(err.message || "Failed to fetch profile");
    } finally {
      setLoading(false);
    }
  };

  const handleSubmit = async (e: React.FormEvent) => {
    e.preventDefault();
    setSaving(true);
    setError("");
    setSuccess("");

    try {
      const response = await api.patch("/me/profile", formData);
      if (response.success) {
        setProfile(response.profile);
        setSuccess("Profile updated successfully");
        // Refresh claims to get updated info
        await refreshClaims();
      } else {
        setError("Failed to update profile");
      }
    } catch (err: any) {
      setError(err.message || "Failed to update profile");
    } finally {
      setSaving(false);
    }
  };

  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {
    const { name, value } = e.target;
    setFormData((prev) => ({
      ...prev,
      [name]: value,
    }));
  };

  if (loading) {
    return (
      <div className="flex items-center justify-center p-8">
        <div className="text-lg">Loading profile...</div>
      </div>
    );
  }

  return (
    <div className="max-w-2xl mx-auto p-6">
      <div className="mb-8">
        <h1 className="text-3xl font-bold text-gray-900">Profile Settings</h1>
        <p className="text-gray-600 mt-2">Manage your account information</p>
      </div>

      <div className="bg-white shadow rounded-lg p-6">
        <form onSubmit={handleSubmit} className="space-y-6">
          <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
            <div>
              <label
                htmlFor="first_name"
                className="block text-sm font-medium text-gray-700"
              >
                First Name
              </label>
              <input
                type="text"
                id="first_name"
                name="first_name"
                value={formData.first_name}
                onChange={handleInputChange}
                className="mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500"
                placeholder="Enter your first name"
              />
            </div>

            <div>
              <label
                htmlFor="last_name"
                className="block text-sm font-medium text-gray-700"
              >
                Last Name
              </label>
              <input
                type="text"
                id="last_name"
                name="last_name"
                value={formData.last_name}
                onChange={handleInputChange}
                className="mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500"
                placeholder="Enter your last name"
              />
            </div>
          </div>

          <div>
            <label
              htmlFor="phone"
              className="block text-sm font-medium text-gray-700"
            >
              Phone Number
            </label>
            <input
              type="tel"
              id="phone"
              name="phone"
              value={formData.phone}
              onChange={handleInputChange}
              className="mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500"
              placeholder="Enter your phone number"
            />
          </div>

          <div>
            <label
              htmlFor="avatar_url"
              className="block text-sm font-medium text-gray-700"
            >
              Avatar URL
            </label>
            <input
              type="url"
              id="avatar_url"
              name="avatar_url"
              value={formData.avatar_url}
              onChange={handleInputChange}
              className="mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500"
              placeholder="https://example.com/avatar.jpg"
            />
          </div>

          {/* Read-only information */}
          <div className="border-t pt-6">
            <h3 className="text-lg font-medium text-gray-900 mb-4">
              Account Information
            </h3>
            <div className="grid grid-cols-1 md:grid-cols-2 gap-4 text-sm">
              <div>
                <span className="font-medium text-gray-700">Email:</span>
                <span className="ml-2 text-gray-600">{profile?.email}</span>
              </div>
              <div>
                <span className="font-medium text-gray-700">Role:</span>
                <span className="ml-2 text-gray-600 capitalize">
                  {profile?.role}
                </span>
              </div>
              <div>
                <span className="font-medium text-gray-700">Department:</span>
                <span className="ml-2 text-gray-600 capitalize">
                  {profile?.department}
                </span>
              </div>
              <div>
                <span className="font-medium text-gray-700">Member since:</span>
                <span className="ml-2 text-gray-600">
                  {profile?.created_at
                    ? new Date(profile.created_at).toLocaleDateString()
                    : "N/A"}
                </span>
              </div>
            </div>
          </div>

          {error && (
            <div className="bg-red-50 border border-red-200 rounded-md p-4">
              <div className="text-red-800 text-sm">{error}</div>
            </div>
          )}

          {success && (
            <div className="bg-green-50 border border-green-200 rounded-md p-4">
              <div className="text-green-800 text-sm">{success}</div>
            </div>
          )}

          <div className="flex justify-end">
            <button
              type="submit"
              disabled={saving}
              className="px-4 py-2 bg-indigo-600 text-white rounded-md hover:bg-indigo-700 disabled:opacity-50"
            >
              {saving ? "Saving..." : "Save Changes"}
            </button>
          </div>
        </form>
      </div>
    </div>
  );
}


================================================================================
END: D:\QiEOS\apps\web\src\routes\client\Profile.tsx
================================================================================


================================================================================
FILE: D:\QiEOS\apps\web\src\routes\public\About.tsx
================================================================================

import React from "react";

const About = () => {
  return (
    <div className="container mx-auto py-16 px-4">
      <div className="max-w-4xl mx-auto bg-card/60 dark:bg-card/40 backdrop-blur-lg rounded-2xl border border-border/50 shadow-sm p-8 md:p-12">
        <h1 className="text-4xl font-bold text-center mb-8">About Me</h1>
        <div className="space-y-6 text-lg text-muted-foreground">
          <p>
            Hi, I'm Cody. With over 20 years of experience in the business and
            tech world, I've seen it all. From the fast-paced environment of
            Fortune 500 companies to the scrappy, get-it-done world of startups,
            I've learned what it takes to succeed.
          </p>
          <p>
            My approach is simple: I provide personal, one-on-one service.
            You're not just another client to me. I take the time to understand
            your business, your goals, and your challenges. I believe in
            building long-term relationships based on trust and results.
          </p>
          <p>
            As a small firm, I'm able to be nimble and responsive in a way that
            larger companies can't. I'm your single point of contact, your ally
            in navigating the complexities of modern business.
          </p>
        </div>
      </div>
    </div>
  );
};

export { About };


================================================================================
END: D:\QiEOS\apps\web\src\routes\public\About.tsx
================================================================================


================================================================================
FILE: D:\QiEOS\apps\web\src\routes\public\Contact.tsx
================================================================================

import React, { useState } from "react";

const CalendlyPlaceholder = () => {
  return (
    <div className="bg-secondary/60 rounded-lg p-8 text-center border border-border/50">
      <p className="font-bold text-lg">Calendly Component Placeholder</p>
      <p className="text-muted-foreground">
        This is where the Calendly booking widget will go.
      </p>
    </div>
  );
};

const Contact = () => {
  const [status, setStatus] = useState("");
  const [formData, setFormData] = useState({
    name: "",
    email: "",
    phone: "",
    message: "",
  });

  const handleChange = (
    e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>
  ) => {
    setFormData({ ...formData, [e.target.name]: e.target.value });
  };

  const handleSubmit = async (e: React.FormEvent<HTMLFormElement>) => {
    e.preventDefault();
    setStatus("sending");

    try {
      const response = await fetch("/api/contact", {
        method: "POST",
        headers: {
          "Content-Type": "application/json",
        },
        body: JSON.stringify(formData),
      });

      if (response.ok) {
        setStatus("success");
        setFormData({ name: "", email: "", phone: "", message: "" });
      } else {
        setStatus("error");
      }
    } catch (error) {
      setStatus("error");
    }
  };

  return (
    <div className="container mx-auto py-16 px-4">
      <div className="max-w-4xl mx-auto">
        <h1 className="text-4xl font-bold text-center mb-12">Contact Me</h1>
        <div className="grid md:grid-cols-2 gap-12">
          <div className="bg-card/60 dark:bg-card/40 backdrop-blur-lg rounded-2xl p-8 shadow-sm border border-border/50">
            <h2 className="text-2xl font-bold mb-4">Send a Message</h2>
            <form onSubmit={handleSubmit} className="space-y-4">
              <div>
                <label
                  htmlFor="name"
                  className="block text-sm font-medium text-muted-foreground"
                >
                  Name
                </label>
                <input
                  type="text"
                  name="name"
                  id="name"
                  required
                  value={formData.name}
                  onChange={handleChange}
                  className="mt-1 block w-full px-3 py-2 bg-background/80 border border-border rounded-md shadow-sm focus:outline-none focus:ring-primary focus:border-primary"
                />
              </div>
              <div>
                <label
                  htmlFor="email"
                  className="block text-sm font-medium text-muted-foreground"
                >
                  Email
                </label>
                <input
                  type="email"
                  name="email"
                  id="email"
                  required
                  value={formData.email}
                  onChange={handleChange}
                  className="mt-1 block w-full px-3 py-2 bg-background/80 border border-border rounded-md shadow-sm focus:outline-none focus:ring-primary focus:border-primary"
                />
              </div>
              <div>
                <label
                  htmlFor="phone"
                  className="block text-sm font-medium text-muted-foreground"
                >
                  Phone
                </label>
                <input
                  type="tel"
                  name="phone"
                  id="phone"
                  value={formData.phone}
                  onChange={handleChange}
                  className="mt-1 block w-full px-3 py-2 bg-background/80 border border-border rounded-md shadow-sm focus:outline-none focus:ring-primary focus:border-primary"
                />
              </div>
              <div>
                <label
                  htmlFor="message"
                  className="block text-sm font-medium text-muted-foreground"
                >
                  Message
                </label>
                <textarea
                  name="message"
                  id="message"
                  rows={4}
                  required
                  value={formData.message}
                  onChange={handleChange}
                  className="mt-1 block w-full px-3 py-2 bg-background/80 border border-border rounded-md shadow-sm focus:outline-none focus:ring-primary focus:border-primary"
                ></textarea>
              </div>
              <div>
                <button
                  type="submit"
                  className="w-full bg-primary text-primary-foreground hover:bg-primary/90 px-8 py-3 rounded-md"
                  disabled={status === "sending"}
                >
                  {status === "sending" ? "Sending..." : "Send Message"}
                </button>
              </div>
            </form>
            {status === "success" && (
              <p className="text-green-600 mt-4">Message sent successfully!</p>
            )}
            {status === "error" && (
              <p className="text-red-600 mt-4">
                Something went wrong. Please try again.
              </p>
            )}
          </div>
          <div className="space-y-8">
            <div className="bg-card/60 dark:bg-card/40 backdrop-blur-lg rounded-2xl p-8 shadow-sm border border-border/50">
              <h2 className="text-2xl font-bold mb-4">
                Other Ways to Reach Me
              </h2>
              <div className="space-y-4 text-muted-foreground">
                <p>
                  <strong>Phone:</strong>{" "}
                  <a
                    href="tel:+1-555-555-5555"
                    className="text-primary hover:underline"
                  >
                    (555) 555-5555
                  </a>
                </p>
                <p>
                  <strong>Email:</strong>{" "}
                  <a
                    href="mailto:cody@qially.me"
                    className="text-primary hover:underline"
                  >
                    cody@qially.me
                  </a>
                </p>
              </div>
            </div>
            <div className="bg-card/60 dark:bg-card/40 backdrop-blur-lg rounded-2xl p-8 shadow-sm border border-border/50">
              <h2 className="text-2xl font-bold mb-4">
                Schedule a Consultation
              </h2>
              <CalendlyPlaceholder />
            </div>
          </div>
        </div>
      </div>
    </div>
  );
};

export { Contact };


================================================================================
END: D:\QiEOS\apps\web\src\routes\public\Contact.tsx
================================================================================


================================================================================
FILE: D:\QiEOS\apps\web\src\routes\public\Home.tsx
================================================================================

import React from "react";
import { Link } from "react-router-dom";

const Home = () => {
  return (
    <div className="space-y-16 container mx-auto px-4">
      {/* Hero Section */}
      <section className="text-center py-20">
        <h1 className="text-5xl font-bold mb-4">Empower. Innovate. Grow.</h1>
        <p className="text-xl text-muted-foreground mb-8">
          I help entrepreneurs simplify the chaos — tax, HR, tech, automation
          for small business life.
        </p>
        <div className="space-x-4">
          <Link
            to="/about"
            className="bg-primary text-primary-foreground hover:bg-primary/90 px-8 py-3 rounded-md"
          >
            Learn more
          </Link>
          <Link
            to="/contact"
            className="bg-secondary text-secondary-foreground hover:bg-secondary/90 px-8 py-3 rounded-md"
          >
            Contact
          </Link>
        </div>
      </section>

      {/* About Teaser */}
      <section className="py-16 bg-card/60 dark:bg-card/40 backdrop-blur-lg rounded-2xl border border-border/50 shadow-sm">
        <div className="container mx-auto text-center max-w-3xl">
          <h2 className="text-3xl font-bold mb-4">
            Hi, I’m Cody – your ally in all things business.
          </h2>
          <p className="text-lg text-muted-foreground">
            With over 20 years of experience juggling everything from Fortune
            500 tech to Main Street startups, I provide solo operator, personal
            service to get you real results.
          </p>
        </div>
      </section>

      {/* Service Pillars */}
      <section className="py-16">
        <div className="container mx-auto text-center">
          <h2 className="text-3xl font-bold mb-10">What I Can Help You With</h2>
          <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-8">
            {/* Service Card 1 */}
            <div className="bg-card/60 dark:bg-card/40 backdrop-blur-lg rounded-2xl p-8 shadow-sm border border-border/50">
              <h3 className="text-2xl font-bold mb-3">Taxes & Bookkeeping</h3>
              <p className="mb-4 text-muted-foreground">
                Stress-free tax preparation and meticulous bookkeeping to keep
                your financials in order.
              </p>
              <Link to="/contact" className="text-primary hover:underline">
                Get in touch
              </Link>
            </div>
            {/* Service Card 2 */}
            <div className="bg-card/60 dark:bg-card/40 backdrop-blur-lg rounded-2xl p-8 shadow-sm border border-border/50">
              <h3 className="text-2xl font-bold mb-3">HR & Compliance</h3>
              <p className="mb-4 text-muted-foreground">
                Navigating the complexities of HR and ensuring your business
                stays compliant.
              </p>
              <Link to="/contact" className="text-primary hover:underline">
                Get in touch
              </Link>
            </div>
            {/* Service Card 3 */}
            <div className="bg-card/60 dark:bg-card/40 backdrop-blur-lg rounded-2xl p-8 shadow-sm border border-border/50">
              <h3 className="text-2xl font-bold mb-3">Automation & Tools</h3>
              <p className="mb-4 text-muted-foreground">
                Implementing smart automation and the right tools to boost your
                productivity.
              </p>
              <Link to="/contact" className="text-primary hover:underline">
                Get in touch
              </Link>
            </div>
            {/* Service Card 4 */}
            <div className="bg-card/60 dark:bg-card/40 backdrop-blur-lg rounded-2xl p-8 shadow-sm border border-border/50">
              <h3 className="text-2xl font-bold mb-3">IT & Strategy</h3>
              <p className="mb-4 text-muted-foreground">
                From tech support to long-term IT strategy, I've got your back.
              </p>
              <Link to="/contact" className="text-primary hover:underline">
                Get in touch
              </Link>
            </div>
          </div>
        </div>
      </section>

      {/* Why work with me */}
      <section className="py-16 bg-card/60 dark:bg-card/40 backdrop-blur-lg rounded-2xl border border-border/50 shadow-sm">
        <div className="container mx-auto max-w-3xl">
          <h2 className="text-3xl font-bold mb-4 text-center">
            Plain-language, ADHD-friendly, async-ready.
          </h2>
          <p className="text-lg text-muted-foreground">
            I believe in clear, direct communication. No jargon, no run-around.
            I know you're busy, so I'm built for asynchronous work. Send me a
            message, and I'll get back to you with what you need. It's that
            simple.
          </p>
        </div>
      </section>

      {/* What we do / features */}
      <section className="py-16">
        <div className="container mx-auto text-center">
          <h2 className="text-3xl font-bold mb-10">Features</h2>
          <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-8">
            <div className="p-8">
              <h3 className="text-2xl font-bold mb-3">Expert insights</h3>
              <p className="text-muted-foreground">
                Get advice from someone who's seen it all.
              </p>
            </div>
            <div className="p-8">
              <h3 className="text-2xl font-bold mb-3">Networking</h3>
              <p className="text-muted-foreground">
                Connect with a curated network of professionals.
              </p>
            </div>
            <div className="p-8">
              <h3 className="text-2xl font-bold mb-3">Interactive Portal</h3>
              <p className="text-muted-foreground">
                A secure, easy-to-use portal for all our work together.
              </p>
            </div>
            <div className="p-8">
              <h3 className="text-2xl font-bold mb-3">Stay updated</h3>
              <p className="text-muted-foreground">
                Regular updates on the things that matter to your business.
              </p>
            </div>
          </div>
        </div>
      </section>

      {/* Contact Strip */}
      <section className="py-16 bg-primary text-primary-foreground rounded-2xl">
        <div className="container mx-auto text-center">
          <h2 className="text-3xl font-bold mb-4">
            Ready to simplify your business?
          </h2>
          <p className="text-lg mb-6 opacity-90">
            No sales pressure, just a conversation.
          </p>
          <div className="flex justify-center items-center space-x-8">
            <a href="tel:+1-555-555-5555" className="text-lg">
              📞 (555) 555-5555
            </a>
            <a href="mailto:cody@qially.me" className="text-lg">
              ✉️ cody@qially.me
            </a>
          </div>
        </div>
      </section>
    </div>
  );
};

export { Home };


================================================================================
END: D:\QiEOS\apps\web\src\routes\public\Home.tsx
================================================================================


================================================================================
FILE: D:\QiEOS\apps\web\src\routes\public\LetterWizard.tsx
================================================================================

import React, { useState } from "react";

const WaitlistForm = () => {
  const [email, setEmail] = useState("");
  const [status, setStatus] = useState("");

  const handleSubmit = async (e: React.FormEvent<HTMLFormElement>) => {
    e.preventDefault();
    setStatus("submitting");

    try {
      const response = await fetch("/api/waitlist", {
        method: "POST",
        headers: { "Content-Type": "application/json" },
        body: JSON.stringify({ email, feature: "letter-wizard" }),
      });

      if (response.ok) {
        setStatus("success");
        setEmail("");
      } else {
        setStatus("error");
      }
    } catch (error) {
      setStatus("error");
    }
  };

  return (
    <form
      onSubmit={handleSubmit}
      className="flex flex-col sm:flex-row gap-4 items-center"
    >
      <input
        type="email"
        value={email}
        onChange={(e) => setEmail(e.target.value)}
        placeholder="Enter your email"
        required
        className="flex-grow w-full px-4 py-2 bg-background/80 border border-border rounded-md shadow-sm focus:outline-none focus:ring-primary focus:border-primary"
      />
      <button
        type="submit"
        className="bg-primary text-primary-foreground hover:bg-primary/90 px-6 py-2 rounded-md"
        disabled={status === "submitting"}
      >
        {status === "submitting" ? "Joining..." : "Join Waitlist"}
      </button>
      {status === "success" && (
        <p className="text-green-600">You've been added to the waitlist!</p>
      )}
      {status === "error" && (
        <p className="text-red-600">Something went wrong. Please try again.</p>
      )}
    </form>
  );
};

const LetterWizard = () => {
  const isWizardEnabled = import.meta.env.VITE_WIZARD_ENABLED === "true";

  return (
    <div className="container mx-auto py-16 px-4">
      <div className="max-w-3xl mx-auto text-center">
        <h1 className="text-4xl font-bold mb-6">USCIS Letter Generator</h1>

        <div className="bg-card/60 dark:bg-card/40 backdrop-blur-lg rounded-2xl p-8 shadow-sm border border-border/50">
          {isWizardEnabled ? (
            <div>
              <h2 className="text-2xl font-bold mb-4">
                Letter Wizard is Active
              </h2>
              <p className="mb-4 text-muted-foreground">
                The Letter Wizard component or iframe would be rendered here.
              </p>
              {/* Placeholder for the actual wizard component */}
              <div className="bg-secondary/60 rounded-lg p-8 border border-border/50">
                <p className="font-bold">Wizard Component</p>
              </div>
            </div>
          ) : (
            <div>
              <h2 className="text-2xl font-bold mb-4">Coming Soon!</h2>
              <p className="mb-6 text-muted-foreground">
                The USCIS Letter Wizard is currently in development. Join the
                waitlist to be notified when it's available.
              </p>
              <WaitlistForm />
            </div>
          )}
        </div>
      </div>
    </div>
  );
};

export { LetterWizard };


================================================================================
END: D:\QiEOS\apps\web\src\routes\public\LetterWizard.tsx
================================================================================


================================================================================
FILE: D:\QiEOS\apps\web\src\routes\public\Privacy.tsx
================================================================================

import React from "react";

const Privacy = () => {
  return (
    <div className="container mx-auto py-16 px-4">
      <div className="max-w-4xl mx-auto prose">
        <h1>Privacy Policy</h1>
        <p>Effective Date: September 11, 2025</p>
        <p>
          Placeholder for Privacy Policy content. This should be migrated
          verbatim from the existing site where available.
        </p>
      </div>
    </div>
  );
};

export { Privacy };


================================================================================
END: D:\QiEOS\apps\web\src\routes\public\Privacy.tsx
================================================================================


================================================================================
FILE: D:\QiEOS\apps\web\src\routes\public\PublicKB.tsx
================================================================================

import React from 'react'
import { Link } from 'react-router-dom'
import { PublicKB } from '../../modules/kb/PublicKB'

export function PublicKBPage() {
  return (
    <div className="min-h-screen bg-gray-50">
      {/* Navigation */}
      <nav className="bg-white shadow-sm">
        <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
          <div className="flex justify-between h-16">
            <div className="flex items-center">
              <Link to="/" className="flex-shrink-0">
                <h1 className="text-2xl font-bold text-indigo-600">QiEOS</h1>
              </Link>
            </div>
            <div className="flex items-center space-x-4">
              <Link
                to="/"
                className="text-gray-700 hover:text-gray-900"
              >
                Home
              </Link>
            </div>
          </div>
        </div>
      </nav>

      {/* Main Content */}
      <PublicKB />
    </div>
  )
}


================================================================================
END: D:\QiEOS\apps\web\src\routes\public\PublicKB.tsx
================================================================================


================================================================================
FILE: D:\QiEOS\apps\web\src\routes\public\Services.tsx
================================================================================

import React from "react";
import { Link } from "react-router-dom";

const services = [
  {
    title: "Taxes & Bookkeeping",
    benefits: [
      "Accurate and timely tax filing.",
      "Comprehensive bookkeeping services.",
      "Financial reporting and analysis.",
      "Payroll processing.",
    ],
    faq: [
      {
        q: "What software do you use?",
        a: "I primarily use QuickBooks Online, but I'm flexible with other platforms.",
      },
      {
        q: "Can you help with back taxes?",
        a: "Yes, I can help you get caught up on your tax filings.",
      },
    ],
  },
  {
    title: "HR & Compliance",
    benefits: [
      "Employee handbook creation.",
      "Compliance audits.",
      "Hiring and onboarding support.",
      "Benefits administration.",
    ],
    faq: [
      {
        q: "Do you offer HR support for small teams?",
        a: "Absolutely. I specialize in helping small businesses manage their HR needs.",
      },
    ],
  },
  {
    title: "Automation & Tools",
    benefits: [
      "Workflow automation.",
      "Software selection and implementation.",
      "Custom tool development.",
      "Training and support.",
    ],
    faq: [
      {
        q: "What kind of businesses do you help?",
        a: "I work with a variety of small businesses, from solo entrepreneurs to teams of up to 50.",
      },
    ],
  },
  {
    title: "IT & Strategy",
    benefits: [
      "Technology consulting.",
      "IT support and troubleshooting.",
      "Cybersecurity best practices.",
      "Long-term technology planning.",
    ],
    faq: [
      {
        q: "Can you be my on-call IT person?",
        a: "Yes, I offer retainer packages for ongoing IT support.",
      },
    ],
  },
];

const Services = () => {
  return (
    <div className="container mx-auto py-16 px-4">
      <h1 className="text-4xl font-bold text-center mb-12">Services</h1>
      <div className="space-y-12">
        {services.map((service, index) => (
          <div
            key={index}
            className="bg-card/60 dark:bg-card/40 backdrop-blur-lg rounded-2xl p-8 shadow-sm border border-border/50"
          >
            <h2 className="text-3xl font-bold mb-4">{service.title}</h2>
            <div className="grid md:grid-cols-2 gap-8 text-muted-foreground">
              <div>
                <h3 className="text-xl font-semibold mb-2 text-foreground">
                  Benefits
                </h3>
                <ul className="list-disc list-inside space-y-1">
                  {service.benefits.map((benefit, i) => (
                    <li key={i}>{benefit}</li>
                  ))}
                </ul>
              </div>
              <div>
                <h3 className="text-xl font-semibold mb-2 text-foreground">
                  Frequently Asked Questions
                </h3>
                <div className="space-y-2">
                  {service.faq.map((item, i) => (
                    <div key={i}>
                      <p className="font-semibold text-foreground/90">
                        {item.q}
                      </p>
                      <p>{item.a}</p>
                    </div>
                  ))}
                </div>
              </div>
            </div>
          </div>
        ))}
      </div>
      <div className="text-center mt-16">
        <Link
          to="/contact"
          className="bg-primary text-primary-foreground hover:bg-primary/90 px-8 py-3 rounded-md text-lg"
        >
          Book a Consult
        </Link>
      </div>
    </div>
  );
};

export { Services };


================================================================================
END: D:\QiEOS\apps\web\src\routes\public\Services.tsx
================================================================================


================================================================================
FILE: D:\QiEOS\apps\web\src\routes\public\Terms.tsx
================================================================================

import React from "react";

const Terms = () => {
  return (
    <div className="container mx-auto py-16 px-4">
      <div className="max-w-4xl mx-auto prose">
        <h1>Terms of Service</h1>
        <p>Effective Date: September 11, 2025</p>

        <h2>Acceptance of Terms</h2>
        <p>Placeholder for Acceptance of Terms content.</p>

        <h2>Permitted Use</h2>
        <p>Placeholder for Permitted Use content.</p>

        <h2>Intellectual Property</h2>
        <p>Placeholder for Intellectual Property content.</p>

        <h2>Third-Party Services</h2>
        <p>Placeholder for Third-Party Services content.</p>

        <h2>Document Uploads & Storage</h2>
        <p>Placeholder for Document Uploads & Storage content.</p>

        <h2>Payments and Refunds</h2>
        <p>Placeholder for Payments and Refunds content.</p>

        <h2>Communications (opt-out)</h2>
        <p>Placeholder for Communications (opt-out) content.</p>

        <h2>Governing Law (Indiana)</h2>
        <p>Placeholder for Governing Law (Indiana) content.</p>

        <h2>Policy Changes</h2>
        <p>Placeholder for Policy Changes content.</p>

        <h2>Disclaimer</h2>
        <p>Placeholder for Disclaimer content.</p>
      </div>
    </div>
  );
};

export { Terms };


================================================================================
END: D:\QiEOS\apps\web\src\routes\public\Terms.tsx
================================================================================


================================================================================
FILE: D:\QiEOS\apps\web\src\routes\public\_samples\about.tsx
================================================================================

// TODO: Replace with QiEOS UI components when available
// import { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card'

export function SampleAbout() {
  return (
    <div className="min-h-screen bg-gradient-to-br from-blue-50 via-indigo-50 to-purple-50 dark:from-gray-900 dark:via-blue-900 dark:to-purple-900">
      <div className="container mx-auto px-4 py-16">
        <div className="max-w-4xl mx-auto">
          <h1 className="text-4xl font-bold text-center mb-8 bg-gradient-to-r from-blue-600 to-purple-600 bg-clip-text text-transparent">
            About QiPortals
          </h1>

          {/* TODO: Replace with QiEOS Card components */}
          <div className="glass-card p-6 rounded-lg mb-8">
            <div className="mb-4">
              <h2 className="text-2xl font-semibold mb-2">Mission</h2>
              <p className="text-gray-600 dark:text-gray-300 mb-4">
                Building the next generation of cloud-native portal applications
              </p>
            </div>
            <div>
              <p className="text-gray-600 dark:text-gray-300">
                QiPortals is designed to be a comprehensive suite of portal
                applications built with modern web technologies and optimized
                for Cloudflare's edge network. Our focus is on performance,
                developer experience, and beautiful user interfaces.
              </p>
            </div>
          </div>

          <div className="grid md:grid-cols-2 gap-6">
            <div className="glass-card p-6 rounded-lg">
              <div className="mb-4">
                <h3 className="text-xl font-semibold mb-2">Technology Stack</h3>
              </div>
              <div>
                <ul className="space-y-2 text-sm text-gray-600 dark:text-gray-300">
                  <li>• React 19 with TypeScript</li>
                  <li>• TanStack Router for routing</li>
                  <li>• Tailwind CSS with glassmorphism</li>
                  <li>• Cloudflare Workers</li>
                  <li>• Model Context Protocol (MCP)</li>
                  <li>• pnpm monorepo architecture</li>
                </ul>
              </div>
            </div>

            <div className="glass-card p-6 rounded-lg">
              <div className="mb-4">
                <h3 className="text-xl font-semibold mb-2">Features</h3>
              </div>
              <div>
                <ul className="space-y-2 text-sm text-gray-600 dark:text-gray-300">
                  <li>• Edge-first architecture</li>
                  <li>• AI-powered knowledge base</li>
                  <li>• Responsive glassmorphism design</li>
                  <li>• Developer-friendly tooling</li>
                  <li>• Plop.js code generation</li>
                  <li>• Type-safe development</li>
                </ul>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  );
}


================================================================================
END: D:\QiEOS\apps\web\src\routes\public\_samples\about.tsx
================================================================================


================================================================================
FILE: D:\QiEOS\apps\web\src\routes\public\_samples\index.tsx
================================================================================

// TODO: Replace with QiEOS UI components when available
// import { Button } from '@/components/ui/button'
// import { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card'

export function SampleIndex() {
  return (
    <div className="min-h-screen bg-gradient-to-br from-blue-50 via-indigo-50 to-purple-50 dark:from-gray-900 dark:via-blue-900 dark:to-purple-900">
      <div className="container mx-auto px-4 py-16">
        <div className="text-center mb-16">
          <h1 className="text-6xl font-bold bg-gradient-to-r from-blue-600 to-purple-600 bg-clip-text text-transparent mb-6">
            QiPortals
          </h1>
          <p className="text-xl text-gray-600 dark:text-gray-300 mb-8 max-w-2xl mx-auto">
            Cloudflare-first portal suite with glassmorphism design and MCP knowledge base integration
          </p>
          <div className="flex gap-4 justify-center">
            {/* TODO: Replace with QiEOS Button component */}
            <button className="glass-button text-white border-white/30 px-4 py-2 rounded">
              Get Started
            </button>
            <button className="glass border-white/20 px-4 py-2 rounded">
              Learn More
            </button>
          </div>
        </div>

        <div className="grid md:grid-cols-3 gap-8 max-w-6xl mx-auto">
          {/* TODO: Replace with QiEOS Card components */}
          <div className="glass-card p-6 rounded-lg">
            <div className="mb-4">
              <h3 className="text-xl font-semibold text-blue-600 mb-2">Cloudflare-First</h3>
              <p className="text-gray-600 dark:text-gray-300">
                Built for Cloudflare Workers with edge computing and global distribution
              </p>
            </div>
            <div>
              <p className="text-sm text-gray-600 dark:text-gray-300">
                Leverage Cloudflare's edge network for lightning-fast performance and global reach.
              </p>
            </div>
          </div>

          <div className="glass-card p-6 rounded-lg">
            <div className="mb-4">
              <h3 className="text-xl font-semibold text-purple-600 mb-2">MCP Integration</h3>
              <p className="text-gray-600 dark:text-gray-300">
                Model Context Protocol for intelligent knowledge base management
              </p>
            </div>
            <div>
              <p className="text-sm text-gray-600 dark:text-gray-300">
                Seamlessly integrate with AI models through standardized MCP endpoints.
              </p>
            </div>
          </div>

          <div className="glass-card p-6 rounded-lg">
            <div className="mb-4">
              <h3 className="text-xl font-semibold text-indigo-600 mb-2">Glassmorphism UI</h3>
              <p className="text-gray-600 dark:text-gray-300">
                Modern, translucent design with beautiful visual effects
              </p>
            </div>
            <div>
              <p className="text-sm text-gray-600 dark:text-gray-300">
                Experience the future of web design with our glassmorphism interface.
              </p>
            </div>
          </div>
        </div>
      </div>
    </div>
  )
}


================================================================================
END: D:\QiEOS\apps\web\src\routes\public\_samples\index.tsx
================================================================================


================================================================================
FILE: D:\QiEOS\apps\web\src\styles\index.css
================================================================================

@tailwind base;
@tailwind components;
@tailwind utilities;

@layer base {
  :root {
    --background: 0 0% 100%;
    --foreground: 222.2 84% 4.9%;
    --card: 0 0% 100%;
    --card-foreground: 222.2 84% 4.9%;
    --popover: 0 0% 100%;
    --popover-foreground: 222.2 84% 4.9%;
    --primary: 221.2 83.2% 53.3%;
    --primary-foreground: 210 40% 98%;
    --secondary: 210 40% 96%;
    --secondary-foreground: 222.2 84% 4.9%;
    --muted: 210 40% 96%;
    --muted-foreground: 215.4 16.3% 46.9%;
    --accent: 210 40% 96%;
    --accent-foreground: 222.2 84% 4.9%;
    --destructive: 0 84.2% 60.2%;
    --destructive-foreground: 210 40% 98%;
    --border: 214.3 31.8% 91.4%;
    --input: 214.3 31.8% 91.4%;
    --ring: 221.2 83.2% 53.3%;
    --radius: 0.75rem;
  }

  .dark {
    --background: 222.2 84% 4.9%;
    --foreground: 210 40% 98%;
    --card: 222.2 84% 4.9%;
    --card-foreground: 210 40% 98%;
    --popover: 222.2 84% 4.9%;
    --popover-foreground: 210 40% 98%;
    --primary: 217.2 91.2% 59.8%;
    --primary-foreground: 222.2 84% 4.9%;
    --secondary: 217.2 32.6% 17.5%;
    --secondary-foreground: 210 40% 98%;
    --muted: 217.2 32.6% 17.5%;
    --muted-foreground: 215 20.2% 65.1%;
    --accent: 217.2 32.6% 17.5%;
    --accent-foreground: 210 40% 98%;
    --destructive: 0 62.8% 30.6%;
    --destructive-foreground: 210 40% 98%;
    --border: 217.2 32.6% 17.5%;
    --input: 217.2 32.6% 17.5%;
    --ring: 224.3 76.3% 94.1%;
  }
}

@layer base {
  * {
    @apply border-border;
  }
  body {
    @apply bg-background text-foreground;
  }
}


================================================================================
END: D:\QiEOS\apps\web\src\styles\index.css
================================================================================


================================================================================
FILE: D:\QiEOS\apps\web\src\styles\tokens.css
================================================================================

@tailwind base;
@tailwind components;
@tailwind utilities;

@layer base {
  :root {
    --background: 0 0% 100%;
    --foreground: 222.2 84% 4.9%;
    --card: 0 0% 100%;
    --card-foreground: 222.2 84% 4.9%;
    --popover: 0 0% 100%;
    --popover-foreground: 222.2 84% 4.9%;
    --primary: 221.2 83.2% 53.3%;
    --primary-foreground: 210 40% 98%;
    --secondary: 210 40% 96%;
    --secondary-foreground: 222.2 84% 4.9%;
    --muted: 210 40% 96%;
    --muted-foreground: 215.4 16.3% 46.9%;
    --accent: 210 40% 96%;
    --accent-foreground: 222.2 84% 4.9%;
    --destructive: 0 84.2% 60.2%;
    --destructive-foreground: 210 40% 98%;
    --border: 214.3 31.8% 91.4%;
    --input: 214.3 31.8% 91.4%;
    --ring: 221.2 83.2% 53.3%;
    --radius: 0.75rem;
  }

  .dark {
    --background: 222.2 84% 4.9%;
    --foreground: 210 40% 98%;
    --card: 222.2 84% 4.9%;
    --card-foreground: 210 40% 98%;
    --popover: 222.2 84% 4.9%;
    --popover-foreground: 210 40% 98%;
    --primary: 217.2 91.2% 59.8%;
    --primary-foreground: 222.2 84% 4.9%;
    --secondary: 217.2 32.6% 17.5%;
    --secondary-foreground: 210 40% 98%;
    --muted: 217.2 32.6% 17.5%;
    --muted-foreground: 215 20.2% 65.1%;
    --accent: 217.2 32.6% 17.5%;
    --accent-foreground: 210 40% 98%;
    --destructive: 0 62.8% 30.6%;
    --destructive-foreground: 210 40% 98%;
    --border: 217.2 32.6% 17.5%;
    --input: 217.2 32.6% 17.5%;
    --ring: 224.3 76.3% 94.1%;
  }
}

@layer base {
  * {
    @apply border-border;
  }
  body {
    @apply bg-background text-foreground;
  }
}


================================================================================
END: D:\QiEOS\apps\web\src\styles\tokens.css
================================================================================


================================================================================
FILE: D:\QiEOS\apps\web\src\styles\utilities.css
================================================================================

/* Glassmorphism utilities */
@layer utilities {
  .glass {
    @apply bg-white/10 backdrop-blur-md border border-white/20;
  }

  .glass-dark {
    @apply bg-black/10 backdrop-blur-md border border-white/10;
  }

  .glass-card {
    @apply bg-white/5 backdrop-blur-lg border border-white/10 shadow-xl;
  }

  .glass-button {
    @apply bg-white/20 backdrop-blur-sm border border-white/30 hover:bg-white/30 transition-all duration-200;
  }
}


================================================================================
END: D:\QiEOS\apps\web\src\styles\utilities.css
================================================================================


================================================================================
FILE: D:\QiEOS\blueprints\README.md
================================================================================

# Blueprints

Directory scaffolds that can be stamped per client for standardized project structures.


================================================================================
END: D:\QiEOS\blueprints\README.md
================================================================================


================================================================================
FILE: D:\QiEOS\docs\API_KEYS.md
================================================================================

# API Keys Configuration Guide

## 🔐 **Where to Store API Keys**

### 1. **Environment Variables (Recommended)**
Store all API keys in environment variables:

**File: `.env.local`** (create this file, it's gitignored)
```bash
# Cursor Agent API Keys
CURSOR_AGENT_API_KEY=your_cursor_agent_key_here
CURSOR_BACKGROUND_AGENT_KEY=your_background_agent_key_here

# Other API Keys
OPENAI_API_KEY=your_openai_key_here
SUPABASE_URL=your_supabase_url_here
SUPABASE_ANON_KEY=your_supabase_anon_key_here
SUPABASE_SERVICE_ROLE_KEY=your_supabase_service_role_key_here

# Cloudflare
CLOUDFLARE_API_TOKEN=your_cloudflare_token_here
CLOUDFLARE_ACCOUNT_ID=your_account_id_here

# Stripe
STRIPE_SECRET_KEY=your_stripe_secret_key_here
STRIPE_WEBHOOK_SECRET=your_stripe_webhook_secret_here
```

### 2. **Cursor Agent Configuration**
For Cursor-specific agent keys, you can also store them in:

**File: `.cursor/agents/config.json`** (create this file, it's gitignored)
```json
{
  "background_agent": {
    "api_key": "your_background_agent_key_here",
    "endpoint": "https://api.cursor.sh/agents"
  },
  "custom_agents": {
    "api_agent": "your_api_agent_key_here",
    "ui_agent": "your_ui_agent_key_here"
  }
}
```

### 3. **Worker Environment Variables**
For Cloudflare Workers, store secrets in:

**File: `workers/api/wrangler.toml`** (this file is protected by .cursorrules)
```toml
[vars]
ENVIRONMENT = "development"

[[kv_namespaces]]
binding = "CACHE"
id = "your_kv_namespace_id"

# Secrets are set via: wrangler secret put SECRET_NAME
# wrangler secret put OPENAI_API_KEY
# wrangler secret put SUPABASE_SERVICE_ROLE_KEY
```

## 🚫 **NEVER Store API Keys In:**
- ❌ Source code files
- ❌ Committed configuration files
- ❌ Public repositories
- ❌ Client-side code
- ❌ Documentation (except examples with placeholders)

## ✅ **Security Best Practices:**
1. **Use environment variables** for all API keys
2. **Create `.env.local`** for local development
3. **Use Cloudflare Workers secrets** for production
4. **Never commit** `.env.local` or `.env` files
5. **Use `.env.example`** as a template for other developers
6. **Rotate keys regularly**
7. **Use different keys** for development/staging/production

## 🔧 **Setup Instructions:**

1. **Copy the example file:**
   ```bash
   cp .env.example .env.local
   ```

2. **Fill in your actual API keys** in `.env.local`

3. **For Cloudflare Workers, set secrets:**
   ```bash
   cd workers/api
   wrangler secret put OPENAI_API_KEY
   wrangler secret put SUPABASE_SERVICE_ROLE_KEY
   ```

4. **For Cursor agents, configure in Cursor settings** or use the `.cursor/agents/config.json` file

## 📝 **Environment File Template:**
Use `.env.example` as a template - it's committed to git but contains no real secrets.


================================================================================
END: D:\QiEOS\docs\API_KEYS.md
================================================================================


================================================================================
FILE: D:\QiEOS\docs\DEV_LOG.md
================================================================================

# QiEOS Development Log

**Project**: QiEOS Monorepo - Unified Client Portal, Admin Control, APIs, AI, Billing  
**Status**: Component Transfer Phase Complete ✅  
**Last Updated**: 2025-01-10  
**Current Phase**: Site Stamping System → Cloudflare Pages Deployment  

---

## 🎯 **Today's Progress (2025-01-10)**

### **Site Stamping System Implementation** ✅
**Goal**: Create automated template-based site generation system for QiEOS client sites

**What Was Built**:
1. **Template Token System**: Updated `sites/_templatesites/` to use new token format:
   - `{{SITE_TITLE}}`, `{{SITE_TAGLINE}}`, `{{PRIMARY_HEX}}`, `{{ACCENT_HEX}}`
   - `{{BG_GRADIENT}}`, `{{CANONICAL_URL}}`, `{{CONTACT_EMAIL}}`, etc.
   - Replaced old `{{CLIENT_NAME}}` tokens with semantic naming

2. **Python Site Stamper Script**: Created `sites/_scripts/site_stamper.py` with:
   - Automated template copying and token replacement
   - Site-specific configuration system for 6 client sites
   - Backup system (moves existing sites to `.trash/` before overwriting)
   - README generation for each stamped site
   - Force flag for overwriting existing sites

3. **All 6 Client Sites Stamped**:
   - **codyricevelasquez**: Portfolio site with sky/violet theme
   - **empowerqnow**: Spiritual book landing with violet/cyan theme  
   - **qsaysit**: Podcast site with dark/cyan theme
   - **tu_angela**: Adult content teaser with red/violet theme
   - **casteneda-flooring**: Business site with blue/amber theme
   - **zjk-resource**: Newcomer resource hub with sky/emerald theme

**Technical Details**:
- Each site gets unique color schemes, content, and branding
- All sites ready for Cloudflare Pages deployment
- Security headers and caching configured
- SEO metadata and sitemaps generated
- Responsive design with Tailwind CSS

**Next Steps**: Deploy each site to separate Cloudflare Pages projects with custom domains

---

## 📋 **Current Status Summary**

### ✅ **COMPLETED PHASES**

#### **Phase 1: Project Scaffolding** ✅
- [x] Complete monorepo structure created per God Doc v4
- [x] All directories and placeholder files in place
- [x] Cursor rules and agents configured
- [x] Workspace settings and guardrails active

#### **Phase 2: Component Transfer** ✅ 
- [x] All React components transferred from legacy project
- [x] Tailwind CSS configurations updated
- [x] TypeScript interfaces and types migrated
- [x] Authentication context and hooks implemented
- [x] Protected routes and admin controls active

#### **Phase 3: Site Stamping System** ✅ (Just Completed)
- [x] Template token system updated (SITE_TITLE, PRIMARY_HEX, etc.)
- [x] Python site stamper script created with full automation
- [x] All 6 client sites stamped with unique themes and content:
  - [x] codyricevelasquez (Portfolio - Sky/Violet theme)
  - [x] empowerqnow (Spiritual - Violet/Cyan theme) 
  - [x] qsaysit (Podcast - Dark/Cyan theme)
  - [x] tu_angela (Adult - Red/Violet theme)
  - [x] casteneda-flooring (Business - Blue/Amber theme)
  - [x] zjk-resource (Newcomer Hub - Sky/Emerald theme)
- [x] Backup system implemented (.trash directory)
- [x] README generation for each stamped site
- [x] Cloudflare Pages configuration ready
- [x] **Supabase Auth System**: Enhanced with working config from `qiportal-dev`
- [x] **UI Component Library**: Created `packages/ui/` with Button, Card, Input, Label
- [x] **Client Dashboard**: Enhanced with visual elements and stats cards
- [x] **Client Sidebar**: Responsive navigation component
- [x] **Auth Flow Confirmed**: Using Supabase Auth + magic links (NOT Cloudflare Auth)

---

## 🎯 **CURRENT PHASE: Supabase Schema Setup**

### **What We're Working On Now:**
Creating the Supabase migration files as defined in Amendment I of the God Doc.

### **Files to Create:**
```
infra/supabase/migrations/
├── 000_init_orgs_companies_contacts.sql
├── 010_projects_tasks_tickets.sql
├── 015_time_entries.sql
├── 020_kb_hierarchy_docs_vectors.sql
├── 025_sites_registry.sql
├── 026_drops_meta.sql
├── 030_billing_ledger_invoices.sql
├── 040_feature_flags.sql
└── 900_rls_policies.sql
```

### **Key Requirements:**
- Every user-facing table has `org_id` and RLS enabled
- JWT claims control visibility (`org_id`, `role`, `company_ids`, `features`)
- Service-role (Worker) bypasses RLS for privileged operations
- Multi-tenant: Org → Department → Company → Contact

---

## 📁 **Files Created/Modified Today**

### **New Files Created:**
```
packages/ui/
├── src/
│   ├── button.tsx          # Button component with variants
│   ├── card.tsx            # Card components (Card, CardHeader, etc.)
│   ├── input.tsx           # Input component
│   ├── label.tsx           # Label component
│   ├── lib/utils.ts        # cn() utility for class merging
│   └── index.ts            # Package exports
└── package.json            # UI package dependencies

apps/web/src/
└── components/
    └── ClientSidebar.tsx   # Responsive sidebar navigation
```

### **Files Enhanced:**
```
apps/web/src/
├── lib/supabaseClient.ts   # Enhanced with proper Supabase config
└── routes/client/Dashboard.tsx  # Added stats cards, activity feed, quick actions
```

---

## 🔧 **Technical Decisions Made**

### **Authentication Flow** ✅
- **Confirmed**: Using Supabase Auth with magic links
- **NOT Using**: Cloudflare Auth (as per God Doc)
- **Worker Integration**: Gets enriched claims from Worker `/auth/session` endpoint
- **JWT Claims Structure**: Follows God Doc exactly

### **UI Component Strategy** ✅
- **Package**: Created `@qieos/ui` package for reusable components
- **Styling**: Using Tailwind CSS with class-variance-authority
- **TypeScript**: Properly typed with React.forwardRef
- **Dependencies**: Radix UI primitives for accessibility

### **Dashboard Enhancement** ✅
- **Visual Design**: Added gradient stat cards with blur effects
- **Feature Flags**: Maintains God Doc feature flag system
- **Activity Feed**: Shows recent user activity
- **Quick Actions**: Direct links to common tasks

---

## 🚀 **Next Steps (In Priority Order)**

### **Immediate (Next Session):**
1. **Create Supabase Migration Files** 
   - Start with `000_init_orgs_companies_contacts.sql`
   - Follow God Doc schema exactly
   - Include RLS policies

2. **Set Up Cloudflare Configuration**
   - Create `workers/api/wrangler.toml`
   - Configure R2 buckets
   - Set up environment variables

3. **Create GitHub Workflows**
   - `web-pages-deploy.yml` for Pages deployment
   - `worker-deploy.yml` for Worker deployment

### **After Schema Setup:**
4. **Test MVP Checklist**
   - Auth + RBAC working
   - Tasks CRUD with RLS
   - File upload to R2
   - KB public/private access
   - Profile updates
   - Website serving

---

## 📚 **Reference Materials**

### **Key Documents:**
- **God Doc**: `_qieos_docs/QiEos Constitution.md` (v4 LOCKED)
- **Amendment I**: `_qieos_docs/QiEOS • Official Development Specification (Amendment I).md`
- **Cursor Rules**: `.cursorrules` (active)
- **Workspace**: `qieos.code-workspace`

### **Template Sources Used:**
- **Supabase Auth**: `D:\qiportal-dev\qiportal-client\auth\lib\supabase.js`
- **UI Components**: `D:\customer-connect-portal-main\src\components\ui\`
- **Dashboard**: `D:\customer-connect-portal-main\src\app\dashboard\page.jsx`
- **Sidebar**: `D:\customer-connect-portal-main\src\components\system\Sidebar.jsx`

---

## 🎯 **MVP Acceptance Checklist** (From God Doc)

- [ ] **Auth + RBAC**: login via Supabase; enriched claims from Worker; route guards in web
- [ ] **Tasks**: create/list/update tasks scoped to company/org; visible in client + internal views
- [ ] **Files**: upload via signed URLs to R2; metadata saved; list & download in client view
- [ ] **KB**: public page renders from `/public/kb/` (≥1 article); private list fetches kb_docs under org and (if external) company
- [ ] **Profile**: `/me` page where user updates basic profile fields
- [ ] **Website**: main website served (from apps/web/public), visible at root

---

## 🔍 **Current Architecture Status**

### **✅ Working Components:**
- React + Vite web app with routing
- Supabase client configuration
- Auth context with claims system
- UI component library
- Enhanced client dashboard
- Protected routes with feature flags

### **⏳ Pending Setup:**
- Supabase database schema
- Cloudflare Worker API
- R2 file storage
- GitHub CI/CD workflows
- Environment configuration

---

## 📝 **Notes for Next Session**

1. **Start with Supabase migrations** - this is the foundation everything else builds on
2. **Follow God Doc exactly** - don't deviate from the locked schema
3. **Test each migration** - ensure RLS policies work correctly
4. **Keep auth flow simple** - Supabase handles magic links, Worker enriches claims

---

**Last Action**: Component transfer complete, ready to start Supabase schema creation  
**Next Action**: Create `000_init_orgs_companies_contacts.sql` migration file  
**Blockers**: None - ready to proceed with schema setup

---

## 📝 **Session Entry - 2025-01-27**

### **What Was Accomplished:**
1. **✅ Client Site Template Created** - Complete generic template in `sites/_templatesites/`
2. **✅ Cloudflare Pages Configuration** - All necessary files for deployment
3. **✅ Setup Scripts** - Both Windows (.bat) and Unix (.sh) setup scripts
4. **✅ Documentation** - Comprehensive README with usage instructions

### **Files Created:**
```
sites/_templatesites/
├── index.html              # Complete responsive website template
├── wrangler.toml           # Cloudflare Pages configuration
├── _headers                # Security and performance headers
├── _redirects              # SPA routing and redirects
├── robots.txt              # SEO robots file
├── sitemap.xml             # SEO sitemap
├── favicon.ico             # Placeholder favicon
├── setup-client.sh         # Unix setup script
├── setup-client.bat        # Windows setup script
└── README.md               # Comprehensive documentation
```

### **Template Features:**
- ✅ **Responsive Design** - Mobile-first with Tailwind CSS
- ✅ **SEO Optimized** - Meta tags, sitemap, robots.txt
- ✅ **Security Headers** - XSS protection, content type, frame options
- ✅ **Performance** - Caching headers, optimized assets
- ✅ **Accessibility** - ARIA labels, semantic HTML
- ✅ **Contact Form** - Ready for backend integration
- ✅ **Cloudflare Ready** - All deployment files included

### **Setup Process:**
1. Copy `_templatesites/` folder to new client directory
2. Run setup script with client information
3. Customize content and branding
4. Deploy to Cloudflare Pages

### **Technical Decisions:**
- **Template Variables**: Using `{{VARIABLE}}` syntax for easy replacement
- **Styling**: Tailwind CSS via CDN for simplicity
- **Scripts**: PowerShell-compatible batch files for Windows
- **Deployment**: Cloudflare Pages with proper configuration

### **Issues Encountered:**
- **File Creation Restrictions**: Some directories blocked file creation
- **PowerShell Compatibility**: Batch script execution required adjustments
- **Template Testing**: Setup script testing had path issues

### **Next Steps:**
1. **Create Supabase Migration Files** - Database schema setup
2. **Create Cloudflare Worker Configuration** - API setup
3. **Test Template Deployment** - Verify Cloudflare Pages integration
4. **Create GitHub Workflows** - CI/CD automation

### **Rollback Notes:**
- Template files are in `sites/_templatesites/` - can be copied to any client folder
- No existing files were modified - all changes are additive
- Setup scripts can be run multiple times safely

---

**Last Action**: Client site template creation complete  
**Next Action**: Create Supabase migration files and Cloudflare Worker configuration  
**Blockers**: File creation restrictions in some directories

---

## 📝 **Session Entry - 2025-01-27 - Codebase Alignment & Integration Setup**

### **What Was Accomplished:**
1. **✅ Codebase Analysis Complete** - Analyzed discrepancies between `docs/qieos.md` and current implementation
2. **✅ Integration Files Created** - All 4 missing integration files implemented
3. **✅ Admin-Electron Structure** - Proper Electron app structure created
4. **✅ VS Code Configuration** - Workspace settings file created
5. **✅ Authentication Bug Fixed** - Corrected `supabase_user_id` field reference
6. **✅ Configuration Verified** - Wrangler.toml and package names confirmed correct

### **Files Created/Modified:**
```
workers/api/src/integrations/
├── stripe.ts              # Payment processing integration
├── openai.ts              # AI/ML features with embeddings and RAG
├── r2.ts                  # File storage operations
└── elevenlabs.ts          # Voice synthesis integration

apps/admin-electron/
├── package.json           # Electron app configuration
├── src/
│   ├── main.ts           # Electron main process
│   ├── preload.ts        # Secure IPC bridge
│   └── renderer/
│       └── App.tsx       # React renderer with routing

.vscode/
└── settings.json         # Workspace configuration

workers/api/src/lib/
└── supabaseAdmin.ts      # Fixed user_id → supabase_user_id
```

### **Integration Features Implemented:**

#### **Stripe Integration** (`stripe.ts`):
- Customer creation and management
- Invoice generation and payment processing
- Payment intent creation
- Webhook handling for secure events

#### **OpenAI Integration** (`openai.ts`):
- Text embedding generation (ada-002 model)
- Chat completion with GPT-3.5-turbo
- RAG (Retrieval Augmented Generation) responses
- Text chunking for vector storage

#### **R2 Integration** (`r2.ts`):
- File upload/download operations
- Signed URL generation (placeholder for custom implementation)
- File metadata management
- List and delete operations

#### **ElevenLabs Integration** (`elevenlabs.ts`):
- Text-to-speech generation
- Voice management (list, create, delete)
- Multiple voice support with custom settings
- Audio file generation

### **Admin-Electron App Structure:**
- **Main Process**: Secure Electron window with proper security settings
- **Preload Script**: Context-isolated IPC bridge for secure communication
- **Renderer**: React app with routing for admin dashboard
- **Security**: No node integration, context isolation enabled

### **Issues Resolved:**
1. **Authentication Bug**: Fixed `supabaseAdmin.ts` to use correct field name
2. **Missing Integrations**: Created all 4 integration files as specified in God Doc
3. **Admin Structure**: Replaced n8n folder with proper Electron app structure
4. **Workspace Config**: Added VS Code settings for consistent development

### **Configuration Status:**
- **✅ Wrangler.toml**: Matches Amendment I specification exactly
- **✅ Package Names**: Correctly named (qieos-api, qieos-web)
- **✅ Cursor Rules**: Already properly configured
- **✅ Workspace Settings**: Now properly configured

### **Remaining Manual Tasks:**
1. **Remove n8n folder** from `apps/admin-electron/` (186+ files to clean up)
2. **Create individual migration files** in `infra/supabase/migrations/` (protected directory)
3. **Test integration imports** in Worker routes

### **Codebase Alignment Status:**
- **Before**: ~80% aligned with documentation
- **After**: ~95% aligned with documentation
- **Remaining**: Manual cleanup tasks only

### **Next Steps:**
1. **Manual Cleanup**: Remove n8n folder from admin-electron
2. **Migration Files**: Create individual SQL files (manual process due to protection)
3. **Integration Testing**: Import and test integration files in Worker routes
4. **Admin App Setup**: Install dependencies and test Electron app

### **Technical Decisions:**
- **Integration Pattern**: Class-based integrations with environment injection
- **Error Handling**: Proper error throwing for missing environment variables
- **Type Safety**: Full TypeScript support with proper Env interface
- **Security**: No secrets exposed, proper environment variable handling

---

**Last Action**: Codebase alignment and integration setup complete  
**Next Action**: Manual cleanup of n8n folder and migration file creation  
**Blockers**: File protection on migrations directory, manual cleanup needed

---

## 📝 **Session Entry - 2025-01-27 - CSS Inline Styles Fix & Repository Bug Scan**

### **What Was Accomplished:**
1. **✅ CSS Inline Styles Fixed** - Removed inline styles from Sidebar component
2. **✅ Dependencies Updated** - Added missing react-router-dom dependency
3. **✅ CSS Architecture Improved** - Added proper CSS class for icon spacing
4. **✅ Linting Warning Resolved** - Fixed CSS inline styles warning in admin-electron

### **Files Modified:**
```
apps/admin-electron/
├── src/renderer/components/Sidebar.tsx    # Removed inline styles, added CSS class
├── src/renderer/App.css                   # Added .nav-item-icon class
└── package.json                           # Added react-router-dom dependency
```

### **Technical Changes:**
- **Before**: `<span style={{ marginRight: '0.5rem' }}>{item.icon}</span>`
- **After**: `<span className="nav-item-icon">{item.icon}</span>`
- **CSS Added**: `.nav-item-icon { margin-right: 0.5rem; }`
- **Dependency Added**: `"react-router-dom": "^6.0.0"`

### **Benefits:**
- ✅ **Follows best practices** by keeping styles in external CSS files
- ✅ **Maintains consistency** with existing CSS architecture
- ✅ **Improves maintainability** by centralizing styles
- ✅ **Resolves linting warning** completely
- ✅ **Preserves exact same visual appearance**

### **Next Steps:**
1. **Repository Bug Scan** - Systematically scan for bugs and warnings
2. **Fix Identified Issues** - Address all found problems
3. **Update Documentation** - Keep dev docs current with changes

---

## 📝 **Session Entry - 2025-01-27 - Comprehensive Bug Fix & Code Quality Improvements**

### **What Was Accomplished:**
1. **✅ Repository Bug Scan Complete** - Systematically identified all issues across the codebase
2. **✅ CSS Inline Styles Eliminated** - Fixed 18+ inline style violations in admin-electron
3. **✅ TypeScript Configuration Enhanced** - Added missing compiler options
4. **✅ Accessibility Issues Resolved** - Fixed button accessibility in HTML templates
5. **✅ Type Definitions Added** - Created proper Electron API type definitions
6. **✅ Code Quality Improved** - Removed unused imports and optimized React components

### **Issues Fixed:**

#### **CSS Architecture Improvements:**
- **Dashboard Component**: Replaced 9 inline styles with semantic CSS classes
- **Route Components**: Fixed 8 route files with consistent margin-top styling
- **CSS Classes Added**:
  - `.dashboard-grid` - Grid layout for dashboard stats
  - `.stat-number` with variants (`.primary`, `.success`, `.warning`, `.danger`)
  - `.card-spacing` - Consistent card spacing
  - `.flex-gap` - Flexbox with gap utility
  - `.text-muted` - Muted text styling
  - `.margin-top` - Standard margin utility

#### **TypeScript Configuration:**
- **Added**: `"forceConsistentCasingInFileNames": true` to prevent cross-platform issues
- **Enhanced**: Include paths for type definitions
- **Created**: `src/renderer/types/electron.d.ts` for proper Electron API typing

#### **Accessibility Improvements:**
- **HTML Templates**: Added `aria-label="Toggle mobile menu"` to mobile menu buttons
- **Fixed Files**:
  - `sites/_templatesites/index.html`
  - `sites/clients/rosalucasesteban/index.html`
  - `sites/clients/_qsites/tu_angela/index.html`

#### **Code Quality:**
- **React Imports**: Optimized imports (removed unused `React` import)
- **Type Safety**: Added proper TypeScript types for Electron API
- **Dependencies**: Confirmed all dependencies are properly installed

### **Files Modified:**
```
apps/admin-electron/
├── src/renderer/
│   ├── App.css                           # Added 8 new CSS classes
│   ├── routes/
│   │   ├── Dashboard.tsx                 # Replaced 9 inline styles
│   │   ├── Auditor.tsx                   # Fixed import, added types
│   │   ├── Tenants.tsx                   # Fixed inline styles
│   │   ├── CRM.tsx                       # Fixed inline styles
│   │   ├── Projects.tsx                  # Fixed inline styles
│   │   ├── Tasks.tsx                     # Fixed inline styles
│   │   ├── Ingest.tsx                    # Fixed inline styles
│   │   ├── BillingDesk.tsx               # Fixed inline styles
│   │   ├── Scripts.tsx                   # Fixed inline styles
│   │   └── Migrations.tsx                # Fixed inline styles
│   └── types/
│       └── electron.d.ts                 # NEW: Electron API types
├── tsconfig.json                         # Enhanced compiler options
└── package.json                          # Added react-router-dom

sites/
├── _templatesites/index.html             # Fixed accessibility
├── clients/rosalucasesteban/index.html   # Fixed accessibility
└── clients/_qsites/tu_angela/index.html  # Fixed accessibility
```

### **Quality Metrics:**
- **Before**: 23 linter errors across 15 files
- **After**: 0 linter errors
- **CSS Inline Styles**: 18+ violations → 0 violations
- **TypeScript Errors**: 3 errors → 0 errors
- **Accessibility Issues**: 3 violations → 0 violations

### **Benefits Achieved:**
- ✅ **Maintainable CSS** - Centralized styling with semantic class names
- ✅ **Type Safety** - Proper TypeScript definitions for all APIs
- ✅ **Accessibility** - WCAG compliant button elements
- ✅ **Code Quality** - Clean imports and optimized components
- ✅ **Cross-Platform** - Consistent file naming enforcement
- ✅ **Developer Experience** - Better IDE support and error detection

### **Technical Decisions:**
- **CSS Strategy**: Semantic class names over utility classes for better maintainability
- **Type Definitions**: Separate `.d.ts` file for Electron API types
- **Accessibility**: ARIA labels for icon-only buttons
- **Import Optimization**: Named imports for better tree-shaking

---

**Last Action**: Comprehensive bug fix and code quality improvements complete  
**Next Action**: Continue with Supabase migration files and Cloudflare Worker configuration  
**Blockers**: None - all linting and quality issues resolved

---

## 📝 **Session Entry - 2025-01-13 - Snapshot Script Bug Fixes & Windows Compatibility**

### **What Was Accomplished:**
1. **✅ Snapshot Script Fixed** - Resolved multiple critical bugs in `docs/cursor/agents/scripts/snapshot.py`
2. **✅ Windows System Directory Protection** - Added proper handling for Windows system directories
3. **✅ Argument Access Issues Resolved** - Fixed argparse attribute access problems
4. **✅ File System Error Handling** - Added comprehensive error handling for permission issues
5. **✅ Path Calculation Corrected** - Fixed ROOT path calculation for proper project navigation

### **Issues Fixed:**

#### **Critical Bugs Resolved:**
- **AttributeError**: Fixed `args.flat-text` → `args.flat_text` (Python argparse converts hyphens to underscores)
- **FileNotFoundError**: Fixed `$RECYCLE.BIN` access errors on Windows systems
- **Path Calculation**: Fixed ROOT path from `parents[1]` → `parents[4]` for correct project root navigation
- **File Collection Logic**: Replaced broken `pass` statement with proper `continue` logic

#### **Windows Compatibility Improvements:**
- **System Directory Detection**: Added detection for `$RECYCLE.BIN`, `System Volume Information`, `RECYCLER`, `RECYCLED`
- **Permission Error Handling**: Added try-catch blocks around all file system operations
- **Custom Directory Walker**: Replaced `rglob("*")` with custom recursive walker to avoid system directory issues
- **Graceful Degradation**: Script continues processing even when encountering inaccessible files/directories

#### **Enhanced Error Handling:**
- **Warning Messages**: Added informative warnings for skipped files/directories
- **Error Recovery**: Script continues processing after encountering permission errors
- **User Feedback**: Clear error messages explaining what was skipped and why

### **Files Modified:**
```python
docs/cursor/agents/scripts/snapshot.py
├── Line 5: ROOT = Path(__file__).resolve().parents[4]  # Fixed path calculation
├── Lines 26-42: Enhanced should_ignore() with Windows system directory detection
├── Lines 44-67: Replaced collect_files() with custom recursive walker
├── Line 73: Fixed args.include_trash attribute access
├── Line 133: Fixed args.flat_text attribute access  
└── Line 152: Fixed args.flat_text attribute access
```

### **Technical Changes:**

#### **Before (Broken):**
```python
# Path calculation wrong
ROOT = Path(__file__).resolve().parents[1]

# Argument access errors
if args.flat-text:  # AttributeError
if args.include-trash:  # AttributeError

# File collection issues
for p in root.rglob("*"):  # Hits $RECYCLE.BIN
    if should_ignore(p, patterns):
        pass  # Doesn't actually skip

# No error handling for Windows system directories
```

#### **After (Fixed):**
```python
# Correct path calculation
ROOT = Path(__file__).resolve().parents[4]

# Proper argument access
if args.flat_text:  # Works correctly
if args.include_trash:  # Works correctly

# Custom directory walker with error handling
def walk_dir(path: Path):
    try:
        for item in path.iterdir():
            if should_ignore(item, patterns):
                continue  # Actually skips
            # ... proper recursive handling

# Windows system directory protection
if any(part.startswith('$') for part in path.parts):
    return True
```

### **Benefits Achieved:**
- ✅ **Windows Compatibility** - Script works on Windows without system directory errors
- ✅ **Error Resilience** - Continues processing even with permission issues
- ✅ **Proper Path Handling** - Correctly navigates to project root from script location
- ✅ **User Experience** - Clear feedback about what was skipped and why
- ✅ **Maintainability** - Better error handling and logging for debugging

### **Testing Results:**
- **Before**: Script crashed with `FileNotFoundError` on `$RECYCLE.BIN` access
- **After**: Script runs successfully with warning messages for inaccessible directories
- **Output**: Creates snapshots with proper manifest and zip files
- **Error Handling**: Gracefully skips system directories and permission-restricted files

### **Next Steps:**
1. **Test Snapshot Creation** - Verify script creates proper snapshots with all features
2. **Integration Testing** - Test with different command-line options
3. **Documentation Update** - Update script usage documentation if needed

---

## 2025-09-13 — QiEOS Auditor Agent Quick Scan Session

### Context
Initial audit scan of QiEOS monorepo to identify and fix critical build issues, styling violations, and configuration problems.

### Findings & Fixes Applied

#### HIGH Priority Issues Fixed:

1. **Electron Build Error** - `apps/admin-electron/src/main.ts:16`
   - **Issue**: `enableRemoteModule: false` is deprecated in Electron 27+
   - **Fix**: Removed deprecated property from webPreferences
   - **Impact**: Electron main process now builds successfully

2. **Inline Style Violation** - `apps/web/src/modules/files/FileUpload.tsx:151`
   - **Issue**: JSX inline style `style={{ width: \`${progress}%\` }}` violates QiEOS styling standards
   - **Fix**: Created CSS module `FileUpload.module.css` with CSS custom properties
   - **Impact**: Progress bar now uses proper CSS classes with `--progress` variable

3. **Package.json Duplication** - `apps/admin-electron/package.json:29-34`
   - **Issue**: Duplicate `dependencies` section causing potential conflicts
   - **Fix**: Consolidated into single dependencies section with all required packages
   - **Impact**: Cleaner package configuration, no duplicate entries

#### Additional Fixes:

4. **Missing Electron Renderer Files**
   - **Issue**: Missing `index.html` and `main.tsx` for Electron renderer build
   - **Fix**: Created proper entry points for Vite build process
   - **Impact**: Electron renderer now builds successfully

5. **Empty Route Component** - `apps/admin-electron/src/renderer/routes/KBEditor.tsx`
   - **Issue**: Empty file causing import/export errors
   - **Fix**: Created proper React component with default export
   - **Impact**: All route imports now resolve correctly

### Build Status
- **Before**: `pnpm -r build` failed with TypeScript and Vite errors
- **After**: `pnpm -r build` completes successfully across all 7 workspace projects
- **Build Time**: ~28 seconds for full monorepo build

### Environment & Secrets Audit
- ✅ No hardcoded secrets found in client code
- ✅ Proper VITE_* prefix usage for client environment variables
- ✅ Server secrets properly isolated in Worker environment
- ✅ Integration files use proper secret injection patterns

### Styling Compliance
- ✅ No remaining inline JSX styles (`style={}`)
- ✅ CSS modules implemented for dynamic styling
- ✅ Tailwind utilities used appropriately

### Files Modified
- `apps/admin-electron/src/main.ts` - Removed deprecated Electron property
- `apps/web/src/modules/files/FileUpload.tsx` - Converted to CSS modules
- `apps/web/src/modules/files/FileUpload.module.css` - New CSS module file
- `apps/admin-electron/package.json` - Fixed duplicate dependencies
- `apps/admin-electron/src/renderer/index.html` - New renderer entry point
- `apps/admin-electron/src/renderer/main.tsx` - New React entry point
- `apps/admin-electron/src/renderer/routes/KBEditor.tsx` - Fixed empty component

### Next Steps
1. Run Worker health checks (`pnpm -C workers/api dev`)
2. Test Electron app launch and renderer functionality
3. Verify web app builds and serves correctly
4. Consider adding lint rules to prevent future inline style violations

### Session Summary
Successfully resolved all critical build-blocking issues. The QiEOS monorepo now builds cleanly across all packages. Focus was on getting the app building and running rather than extensive refactoring, following the "minimal diffs" principle.

---

**Last Action**: QiEOS Auditor agent quick scan complete - all build issues resolved  
**Next Action**: Test Worker health checks and Electron app functionality  
**Blockers**: None - monorepo now builds successfully

---

## 2025-01-13 — Logger Agent Session Entry

- **Time**: 2025-01-13 14:30–14:45 (PST)
- **Branch/PR**: main (no PR created)
- **Goal**: Follow logger agent instructions to append session entry to DEV_LOG.md
- **Snapshot** (optional): None

### What Changed
- Read and followed logger.md instructions to append session entry to DEV_LOG.md

### Why
- Aligns with QiEOS development workflow requirements for session logging

### How It Was Changed
- Read logger.md, DEV_LOG.md, session-entry.md template, and QiEOS.md files
- Created session entry following template format and appended to DEV_LOG.md

### How to Test
1. Verify session entry appears at bottom of DEV_LOG.md
2. Confirm entry follows template format with all required sections

### Diffs Applied
- Q:\docs\DEV_LOG.md — Added session entry for 2025-01-13 logger agent session

### Decisions
- Used current date/time for session entry
- Followed template format exactly as specified in logger instructions
- No actual code changes made - this was a documentation/logging session

### Rollback
- Revert commit if needed
- No files moved to .trash/ - all changes were additive

### Open Questions
- DEV_LOG.md is outside the QiEos git repository (located at Q:\docs\DEV_LOG.md vs Q:\QiEos\)
- Logger instructions specify committing the file, but it's not in the repository scope
- Need to determine if docs folder should be added to QiEos repository or if DEV_LOG.md should be moved

### Next 1–2 Steps
1. Resolve DEV_LOG.md location issue - either add docs folder to QiEos repository or move DEV_LOG.md to repository
2. Continue with next development tasks

================================================================================
END: D:\QiEOS\docs\DEV_LOG.md
================================================================================


================================================================================
FILE: D:\QiEOS\docs\qi_portals_kb_schema_markdown_canvas_pack.md
================================================================================

---
title: QiPortals KB Schema — Markdown + Canvas Pack
project: QiPortals (Supabase)
owner: QiAlly
last_updated: 2025-08-30
category: data-model
aliases: [KB schema, Supabase public schema]
tags: [schema, supabase, kb, orgs, rls]
---

# QiPortals Knowledge Base — Public Schema

This is the source-of-truth Markdown for the **public** schema that powers the multi‑tenant Knowledge Base. It includes:
- A human‑readable table catalog
- A Mermaid ER diagram
- A ready‑to‑save **Obsidian Canvas** JSON at the end that visually links each table node (you can drop it into your vault as `QiPortals_KB_Schema.canvas`).

---

## Mermaid ER Overview
```mermaid
%%{init: {"theme": "dark"}}%%
erDiagram
  PROFILES ||--o{ ORG_MEMBERSHIPS : "has"
  ORGS ||--o{ ORG_MEMBERSHIPS : "maps users"
  ORGS ||--o{ KB_SPACES : "owns"
  KB_SPACES ||--o{ KB_ARTICLES : "contains"
  KB_SPACES ||--o{ KB_FILES : "has files"
  CLIENTS ||--o{ CLIENT_MEMBERSHIPS : "maps users"

  PROFILES {
    uuid id PK
    text email
    text full_name
    text avatar_url
    text role
    jsonb metadata
    bool sms_opt_in
    bool email_opt_in
    timestamptz last_sign_in_at
    timestamptz created_at
    timestamptz updated_at
  }

  ORGS {
    uuid id PK
    text name
    timestamptz created_at
  }

  ORG_MEMBERSHIPS {
    uuid org_id FK
    uuid user_id FK
    text role
    timestamptz created_at
  }

  KB_SPACES {
    uuid id PK
    uuid org_id FK
    text name
    text slug
    timestamptz created_at
  }

  KB_ARTICLES {
    uuid id PK
    uuid space_id FK
    text title
    text body_markdown
    text status
    text[] tags
    uuid created_by
    uuid updated_by
    timestamptz created_at
    timestamptz updated_at
    tsvector search
  }

  KB_FILES {
    uuid id PK
    uuid space_id FK
    text title
    text path
    text mime_type
    int8 size_bytes
    uuid created_by
    timestamptz created_at
  }

  CLIENTS {
    uuid id PK
    text name
    text status
    timestamptz created_at
  }

  CLIENT_MEMBERSHIPS {
    uuid client_id FK
    uuid user_id FK
    text role
    timestamptz created_at
  }
```

---

## Table Catalog

### 1) `profiles`
**Purpose**: App‑level user profile mirrored to `auth.users`.

| column | type | notes |
|---|---|---|
| `id` | uuid PK | equals `auth.users.id` |
| `email` | text | optional cache of auth email |
| `full_name` | text |  |
| `avatar_url` | text |  |
| `role` | text | app role: `admin`, `team_member`, `client_user` |
| `metadata` | jsonb | open extension field |
| `sms_opt_in` | bool |  |
| `email_opt_in` | bool |  |
| `last_sign_in_at` | timestamptz |  |
| `created_at` | timestamptz default now() |  |
| `updated_at` | timestamptz default now() | trigger/edge updates |

**Indexes**: `pk(id)`; add `unique(email)` if you want.

**RLS**: ON → `id = auth.uid()` for self‑read/write; admins via service role.

---

### 2) `orgs`
**Purpose**: A tenant/client container.

| column | type | notes |
|---|---|---|
| `id` | uuid PK default gen_random_uuid() |  |
| `name` | text not null unique |  |
| `created_at` | timestamptz default now() |  |

**Indexes**: `unique(name)`

**RLS**: ON → readable by members (via `org_memberships`).

---

### 3) `org_memberships`
**Purpose**: Connects users to orgs with a role.

| column | type | notes |
|---|---|---|
| `org_id` | uuid FK → orgs(id) on delete cascade |  |
| `user_id` | uuid FK → profiles(id) | = `auth.users.id` |
| `role` | text check in (`owner`,`admin`,`editor`,`viewer`) |  |
| `created_at` | timestamptz default now() |  |

**PK**: `(org_id, user_id)`  
**Indexes**: `(user_id, org_id)`

**RLS**: ON → `select` where `user_id = auth.uid()`.

---

### 4) `kb_spaces`
**Purpose**: Sections within an org’s KB (e.g., General, Legal).

| column | type | notes |
|---|---|---|
| `id` | uuid PK default gen_random_uuid() |  |
| `org_id` | uuid FK → orgs(id) on delete cascade |  |
| `name` | text not null |  |
| `slug` | text not null | unique per org |
| `created_at` | timestamptz default now() |  |

**Unique**: `(org_id, slug)`  
**Indexes**: `(org_id, slug)`

**RLS**: ON → `select` any member; `insert/update/delete` roles `owner/admin`.

---

### 5) `kb_articles`
**Purpose**: Markdown content for the KB.

| column | type | notes |
|---|---|---|
| `id` | uuid PK default gen_random_uuid() |  |
| `space_id` | uuid FK → kb_spaces(id) on delete cascade |  |
| `title` | text not null |  |
| `body_markdown` | text not null default '' |  |
| `status` | text default 'published' check in (`draft`,`published`,`archived`) |  |
| `tags` | text[] default '{}' |  |
| `created_by` | uuid not null | auth user |
| `updated_by` | uuid | auth user |
| `created_at` | timestamptz default now() |  |
| `updated_at` | timestamptz default now() |  |
| `search` | tsvector | via trigger on title/body/tags |

**Indexes**: `gin(search)`, `(space_id)`, `(updated_at desc)`

**RLS**: ON → `select` any member; `insert/update` roles `owner/admin/editor`; `delete` roles `owner/admin`.

---

### 6) `kb_files`
**Purpose**: File metadata; file bytes live in Storage `kb` bucket.

| column | type | notes |
|---|---|---|
| `id` | uuid PK default gen_random_uuid() |  |
| `space_id` | uuid FK → kb_spaces(id) on delete cascade |  |
| `title` | text |  |
| `path` | text not null | `org/<org_id>/kb/<space_id>/<uuid>/<filename>` |
| `mime_type` | text |  |
| `size_bytes` | bigint |  |
| `created_by` | uuid not null |  |
| `created_at` | timestamptz default now() |  |

**Indexes**: `(space_id)`  
**RLS**: ON → `select` any member; `insert/update/delete` roles `owner/admin/editor`.

---

### 7) `clients` & `client_memberships` (optional layer)
For agencies that manage multiple *client accounts* inside an org.

**clients**
| column | type |
|---|---|
| `id` uuid PK | `name` text | `status` text | `created_at` timestamptz |

**client_memberships**
| column | type |
|---|---|
| `client_id` uuid | `user_id` uuid | `role` text | `created_at` timestamptz |

RLS mirrors the `org_*` pattern if used.

---

## Storage (private bucket: `kb`)
- **Path convention:** `org/<org_id>/kb/<space_id>/<uuid>/<filename>`
- **Policies:**
  - `kb_read_org_members` (SELECT → `{authenticated}`) + path check + org membership
  - `kb_write_org_editors` (INSERT → `{authenticated}`) + path check + role in `owner/admin/editor`
  - Optional `UPDATE/DELETE` analogs for editors

---

## Obsidian Canvas JSON (save as `QiPortals_KB_Schema.canvas`)
> Tip: Create separate Markdown notes named after each table (e.g., `public_orgs.md`, `public_kb_spaces.md`). This canvas links to those filenames; adjust paths as needed.

```json
{
  "nodes": [
    {"id":"orgs","type":"file","file":"public_orgs.md","x":-400,"y":-60,"width":240,"height":120,"color":"2"},
    {"id":"org_memberships","type":"file","file":"public_org_memberships.md","x":-120,"y":160,"width":280,"height":120,"color":"2"},
    {"id":"kb_spaces","type":"file","file":"public_kb_spaces.md","x":80,"y":-60,"width":260,"height":120,"color":"4"},
    {"id":"kb_articles","type":"file","file":"public_kb_articles.md","x":420,"y":-60,"width":280,"height":140,"color":"4"},
    {"id":"kb_files","type":"file","file":"public_kb_files.md","x":420,"y":200,"width":260,"height":120,"color":"4"},
    {"id":"profiles","type":"file","file":"public_profiles.md","x":-420,"y":-300,"width":280,"height":160,"color":"1"},
    {"id":"clients","type":"file","file":"public_clients.md","x":-480,"y":200,"width":260,"height":120,"color":"3"},
    {"id":"client_memberships","type":"file","file":"public_client_memberships.md","x":-740,"y":200,"width":300,"height":120,"color":"3"}
  ],
  "edges": [
    {"id":"e1","fromNode":"profiles","toNode":"org_memberships","fromSide":"right","toSide":"left","label":"profiles.id → org_memberships.user_id"},
    {"id":"e2","fromNode":"orgs","toNode":"org_memberships","fromSide":"right","toSide":"left","label":"orgs.id → org_memberships.org_id"},
    {"id":"e3","fromNode":"orgs","toNode":"kb_spaces","fromSide":"right","toSide":"left","label":"orgs.id → kb_spaces.org_id"},
    {"id":"e4","fromNode":"kb_spaces","toNode":"kb_articles","fromSide":"right","toSide":"left","label":"kb_spaces.id → kb_articles.space_id"},
    {"id":"e5","fromNode":"kb_spaces","toNode":"kb_files","fromSide":"right","toSide":"left","label":"kb_spaces.id → kb_files.space_id"},
    {"id":"e6","fromNode":"profiles","toNode":"kb_articles","fromSide":"bottom","toSide":"top","label":"profiles.id → created_by/updated_by"},
    {"id":"e7","fromNode":"clients","toNode":"client_memberships","fromSide":"right","toSide":"left","label":"clients.id → client_memberships.client_id"},
    {"id":"e8","fromNode":"profiles","toNode":"client_memberships","fromSide":"left","toSide":"right","label":"profiles.id → client_memberships.user_id"}
  ]
}
```

---

## Notes & Conventions
- **RLS**: ON for `orgs`, `org_memberships`, `kb_spaces`, `kb_articles`, `kb_files`.
- **Search**: Postgres FTS now (`tsvector` + GIN) with an easy upgrade path to `pgvector` later.
- **Naming**: `snake_case` for tables/columns; plurals for tables.
- **Storage**: All KB files live under `kb` bucket with the enforced prefix.

---

## Roadmap (tiny steps)
1. Mirror this Markdown into your Obsidian vault as individual notes per table (use the exact filenames referenced in the Canvas JSON).
2. Drop the Canvas JSON as `QiPortals_KB_Schema.canvas` in the same folder for a clickable, visual map.

> When ready, I’ll add a **pgvector** section + indexer job spec and the small admin UI fields (status/tags) to round out content workflows.



================================================================================
END: D:\QiEOS\docs\qi_portals_kb_schema_markdown_canvas_pack.md
================================================================================


================================================================================
FILE: D:\QiEOS\docs\QiEOS.md
================================================================================

---
title: QiEOS Development Bible (Unified)
version: 0.3-merged
status: ACTIVE
updated: 2025-09-13
owner: QiAlly LLC (Q)
repo_root: QiEOS/
tags:
  - qieos
  - dev
  - goddoc
---

# Introduction

QiEOS is a Cloudflare-first, Supabase-backed platform unifying client portals, admin cockpit, APIs, billing, and per-client public sites. This Bible is the single source of truth for architecture, schema, workflows, and conventions.

## Purpose

- Govern architecture and directory structure across the monorepo
- Freeze DB schema principles (RLS-first) and Worker boundaries
- Document required workflows and deployment paths
- Provide onboarding and operational guardrails

## Goals

- Ship a stable MVP (auth, tasks, files, KB, profile, marketing site)
- Maintain a predictable, append-only migrations history
- Keep secrets server-side; enforce multi-tenant RLS end-to-end
- Ensure every milestone updates this file (law of the land)

## Vision

Cloud-native, multi-tenant operations where the Worker is the service-role brain, the web portal is the client face, and Electron Cockpit is the secure admin control plane. The repo remains stable and curated, enabling confident iteration without drift.

---

## Table of Contents

- [[#Master Index (Obsidian)|Master Index]]
- [[#Canonical Monorepo Structure|Canonical Monorepo Structure]]
- [[#QiAlly Marketing Site|QiAlly Marketing Site]]
- [[#Integration Ledger|Integration Ledger]]
- [[#Changelog|Changelog]]
- [[#Included Files (order)|Merged KB Files]]

## Master Index (Obsidian)

- [[README.md]]
- [[DEV_LOG.md]]
- [[docs/devops/QIEOS.md]] (this file)
- [[docs/devops/QiEOS_BIBLE.md]]
- [[docs/kb/QiEOS • Official Development Specification.md]]
- [[docs/kb/QiEOS • Official Development Specification (Amendment I).md]]
- [[docs/kb/QiEOS • Official Development Specification Session 20250910-0001.md]]
- [[docs/kb/SETUP.md]]
- [[docs/kb/QiSuite_Dev_Bible.md]]
- [[docs/backend/API_KEYS.md]]
- [[docs/backend/cursor/EDITOR.md]]
- [[docs/backend/cursor/CURSOR_MODES.md]]
- [[workers/api/README.md]]
- [[apps/web/README.md]]
- [[scripts/merge-kb.mjs]]
- [[scripts/setup-dev.mjs]]

### Frontend (apps/web)

- [[apps/web/index.html]]
- [[apps/web/vite.config.ts]] · [[apps/web/tsconfig.json]]
- [[apps/web/src/main.tsx]] · [[apps/web/src/App.tsx]]
- [[apps/web/src/context/AuthContext.tsx]]
- [[apps/web/src/routes/]]
  - [[apps/web/src/routes/auth/Login.tsx]]
  - [[apps/web/src/routes/admin/]] · [[apps/web/src/routes/admin/routes/]]
  - [[apps/web/src/routes/public/]] · [[apps/web/src/routes/client/]]
- [[apps/web/src/components/]]
  - [[apps/web/src/components/admin/layout/MainLayout.tsx]]
  - [[apps/web/src/components/admin/layout/header.tsx]]
  - [[apps/web/src/components/admin/ui/button.tsx]] · [[apps/web/src/components/admin/ui/card.tsx]]
  - [[apps/web/src/components/admin/lib/utils.ts]]
- [[apps/web/public/kb/]] (public KB)

### Backend (workers/api)

- [[workers/api/wrangler.toml]]
- [[workers/api/src/index.ts]] (Hono app)
- [[workers/api/src/middleware/auth.ts]]
- [[workers/api/src/lib/supabaseAdmin.ts]]
- [[workers/api/src/types/hono-augmentation.d.ts]]
- [[workers/api/src/routes/auth.ts]] · [[workers/api/src/routes/tasks.ts]]
- [[workers/api/src/routes/files.ts]] · [[workers/api/src/routes/kb.ts]]
- [[workers/api/src/routes/profile.ts]]

### Admin Cockpit (Electron)

- [[apps/admin-electron/README.md]]
- [[apps/admin-electron/src/renderer/App.tsx]]

### Shared Packages

- [[packages/ui/src/index.ts]] · [[packages/ui/src/button.tsx]] · [[packages/ui/src/card.tsx]]
- [[packages/types/src/index.ts]] · [[packages/types/src/types.ts]]
- [[packages/utils/index.ts]]

### Infra & Scripts

- [[infra/cloudflare/wrangler.toml]] · [[infra/cloudflare/env.example]]
- [[infra/supabase/migrations/]] · [[infra/supabase/seeds/]]
- [[scripts/create-migrations.sql]] · [[scripts/setup-dev.mjs]]

### Folders

- [[apps/]] · [[apps/web/]] · [[apps/admin-electron/]]
- [[workers/]] · [[workers/api/]]
- [[packages/]] · [[packages/ui/]] · [[packages/types/]] · [[packages/utils/]]
- [[infra/]] · [[infra/cloudflare/]] · [[infra/supabase/]]
- [[sites/]] · [[templates/]] · [[blueprints/]] · [[drops/]] · [[docs/]]

Generated: 2025-09-13T10:51:04.458Z

Note: The merged source dump below is now archived. Follow the unified sections here as the single source of truth.

## Canonical Monorepo Structure

```
QiEOS/
├─ apps/
│  ├─ web/                # Client portal + marketing site (React + Vite)
│  └─ admin-electron/     # Desktop cockpit for admins
├─ workers/
│  └─ api/                # Cloudflare Worker (Hono)
├─ infra/
│  ├─ cloudflare/         # wrangler.toml, env.example
│  └─ supabase/           # migrations, seeds, RLS policies
├─ blueprints/
├─ docs/
├─ drops/
├─ packages/
├─ scripts/
├─ sites/
├─ templates/
└─ .trash/                # safe-delete area
```

## Architecture & Principles

- Cloudflare-first: Pages + Workers + R2 (+ KV/Queues when needed)
- Supabase: Auth + Postgres + RLS; migrations are append-only and never edited
- Electron Cockpit: thin main, fat renderer; all privileged ops via Worker API
- Structure law: one domain = one Worker route + one web module folder
- Stability over convenience; new top-level folders require RFC in `docs/`
- Every milestone updates this file (law of the land)

## Amendment I (Schema + Cloudflare Setup)

- Migrations (in `infra/supabase/migrations/`):
  000_init_orgs_companies_contacts.sql · 010_projects_tasks_tickets.sql ·
  015_time_entries.sql · 020_kb_hierarchy_docs_vectors.sql · 025_sites_registry.sql ·
  026_drops_meta.sql · 030_billing_ledger_invoices.sql · 040_feature_flags.sql ·
  900_rls_policies.sql
- Worker config: `workers/api/wrangler.toml` (secrets via `wrangler secret`)
- R2 buckets: `qieos-files` (prod), `qieos-files-dev` (preview)

## MVP Scope & Validation Checklist

- Auth + RBAC: `POST /auth/session` returns enriched claims
- Tasks: `GET/POST/PATCH /tasks` with RLS
- Files: `POST /files/sign-upload` → client uploads to R2 → metadata row
- KB: `GET /kb/public`, `GET /kb/private`
- Profile: `PATCH /me/profile`
- Health: `GET /health` via `pnpm -C workers/api dev`
- Web: `apps/web` builds and deploys via Pages/CI

## Setup Summary

- Follow [[docs/SETUP.md]] end-to-end (Supabase → R2 → Wrangler → `pnpm dev`)
- Configure `infra/cloudflare/.env.example` and Worker secrets; never commit secrets
- Web `.env` contains only public vars (e.g., VITE\_\*)

## Development Workflow & Guardrails

- Small PRs; conventional commits; reversible edits; move removals to `.trash/DATE/`
- Locked paths (do not edit without RFC):
  - `infra/supabase/migrations/**`, `blueprints/**`, `templates/**`, `apps/web/public/**`
  - `workers/api/wrangler.toml`, `workers/api/src/middleware/**`, `workers/api/src/lib/supabaseAdmin.ts`
  - `workers/api/src/integrations/{stripe,openai,r2,elevenlabs}.ts`
- Keep `.cursorrules`, `.cursorignore`, `.vscode/settings.json` aligned with this doc

## QiAlly Marketing Site

- Pages & Components (apps/web):
  - Layout: `src/components/MarketingLayout.tsx`
  - Home `/`, About `/about`, Services `/services`, Contact `/contact`
  - Flows `/flows` (LetterWizard), Terms `/terms`, Privacy `/privacy`
- Routing: `src/App.tsx`
- Worker Endpoints:
  - `POST /api/contact` → `workers/api/src/routes/contact.ts`
  - `POST /api/waitlist` → `workers/api/src/routes/waitlist.ts`
- Env (infra/cloudflare/env.example): `CONTACT_WEBHOOK_URL`, `WAITLIST_KV_NAMESPACE`, `VITE_WIZARD_ENABLED`

## Integration Ledger

- QiEOS Official Dev Spec (v4) — merged
- Amendment I (Schema + Cloudflare) — merged
- Setup Guide — merged
- Session 20250910 — merged
- QiSuite Dev Bible — merged
- Marketing Site Spec — merged
- Code extraction — pending

## Changelog

- 2025-09-13 v0.3: Added Marketing Site section; reiterated “always update QiEOS.md”
- 2025-09-13 v0.2: Corrected repo root to `QiEOS/`; incorporated prior docs
- 2025-09-13 v0.1: Initial unified scaffold

## Session Log (selected)

### 2025‑09‑13 — QiEOS Alignment Session — General Review

- Current state captured (Cloudflare-first, Supabase/RLS, MVP features)
- Gaps noted (migrations apply, guardrails files, endpoint smoke tests, Electron check)
- Next actions: run migrations; boot Worker + smoke `/health` `/auth/session` `/tasks`; verify CI secrets

## Included Files (order)

1. QiEOS • Official Development Specification (Amendment I).md
2. QiEOS • Official Development Specification Session 20250910-0001.md
3. SETUP.md
4. QiEOS • Official Development Specification.md
5. QiSuite_Dev_Bible.md

---

---

# Source: QiEOS • Official Development Specification (Amendment I).md

perfect — I pulled your **current God Doc** from the repo PDF. now let’s lock in the **DB schema + Cloudflare setup** we drafted as the next constitutional amendment.

---

# QiEOS • Official Development Specification (Amendment I)

```yaml
amendment: I
title: Supabase Schema + Cloudflare Setup
status: ratified
date: 2025-09-10
```

## 14) Supabase Schema (frozen baseline)

All SQL migrations live under `/infra/supabase/migrations/`. The following files are now canonical:

- **000_init_orgs_companies_contacts.sql** → orgs, departments, companies, contacts
- **010_projects_tasks_tickets.sql** → projects, tasks (nullable project_id), tickets
- **015_time_entries.sql** → polymorphic time entries
- **020_kb_hierarchy_docs_vectors.sql** → hierarchical collections, docs, vectors (pgvector)
- **025_sites_registry.sql** → client site registry (Pages project + domain)
- **026_drops_meta.sql** → metadata for R2 public drops
- **030_billing_ledger_invoices.sql** → invoices + ledger
- **040_feature_flags.sql** → feature keys, org_features, module_access
- **900_rls_policies.sql** → RLS templates using `qieos_org()`, `qieos_role()`, `qieos_company_ids()`

**Principles:**

- Every user-facing table has `org_id` and **RLS enabled**.
- JWT claims (`org_id`, `role`, `company_ids`, `features`) control visibility.
- Service-role (Worker) bypasses RLS for privileged operations.

---

## 15) Cloudflare Setup (frozen baseline)

Cloudflare is the platform of record. All config lives in `/infra/cloudflare/`.

### 15.1 Worker (`workers/api/wrangler.toml`)

```toml
name = "qieos-api"
main = "src/index.ts"
compatibility_date = "2025-09-10"

[vars]
SUPABASE_URL = ""
SUPABASE_SERVICE_ROLE_KEY = ""
OPENAI_API_KEY = ""
STRIPE_SECRET_KEY = ""
JWT_ISSUER = "qieos"
EMBEDDING_DIM = "1536"

[[r2_buckets]]
binding = "R2"
bucket_name = "qieos-files"
preview_bucket_name = "qieos-files-dev"
```

Secrets are stored via `wrangler secret put`.

### 15.2 R2

- Buckets: `qieos-files`, `qieos-files-dev`.
- Worker endpoints handle signed uploads and metadata (`drops_meta`).

### 15.3 Pages

- `apps/web` builds to `dist/`.
- Deployed as Cloudflare Pages project `qieos-web`.
- `.github/workflows/web-pages-deploy.yml` builds with PNPM and deploys artifact.

### 15.4 Worker CI

- `.github/workflows/worker-deploy.yml` builds `workers/api` and deploys via Wrangler.

---

## 16) Validation Checklist

- [ ] `pnpm -C infra/supabase migrate` applies schema to Supabase.
- [ ] Worker boots with `pnpm -C workers/api dev` and responds on `/health`.
- [ ] `/auth/session` returns enriched claims.
- [ ] `/tasks` CRUD works with RLS.
- [ ] `/files/sign-upload` issues signed URL → file lands in R2 → metadata row written.
- [ ] `/kb/public` and `/kb/private` return articles.
- [ ] `/me/profile` updates successfully.
- [ ] Root website serves from Pages.

---

✅ what changed:

- Added **Amendment I** to the God Doc covering Supabase schema and Cloudflare setup.
- Keeps all prior structure intact; this extends, not rewrites.

👉 next step: I can generate the **actual SQL files** under `/infra/supabase/migrations/` and the **starter wrangler.toml + GitHub workflows** so they’re physically in your repo. want me to?

---

# Source: QiEOS • Official Development Specification Session 20250910-0001.md

---

title: QI‑EOS Dev Workflow & Session Log
author: Q (QiAlly)
project: QI‑EOS (primary) + QI‑LA (secondary)
repo: (primary) QI‑EOS • (secondary) QI‑LA
status: active
last_reviewed: 2025-09-10
labels: [DEV_LOG, cursor, agents]

---

# 🔁 Daily Quick-Start (Open Cursor)

1. **Sync context**
   - Read the latest _Session Log_ entry below.
   - Run `git status` and skim open PRs/issues.
2. **Kickoff prompt in Cursor (paste block):**
   ```text
   You are my repo concierge. Read the repo, summarize current state in 5 bullets, list top 3 next actions aligned to the Dev Plan below, and generate a safe task list. Never delete; if needed, move files to .trash/ with timestamp. Ask before running commands that change files.
   ```
3. **Pick the highest-impact task** from the _Today Focus_ list and move it to **In‑Progress**.
4. **Timebox**: 25–50 min block. Update the _Session Log_ as you go.
5. **Commit** with conventional commits; link to task id from _Task Board_.
6. **PR + Note**: open a small PR, paste the _Change Summary_ template.

---

# 🧭 Dev Plan (MVP Anchor)

- **Codebases**: QI‑EOS (primary), QI‑LA (secondary/companion).
- **Follow the repo README** for stack specifics; keep the workflow generic and reversible.
- **Principles**: smallest PRs, safe changes (no deletes; use `.trash/`), working software over grand refactors.
- **Sprint goal**: verify skeleton builds, wire agent prompts, and keep Session Log current.

---

# ✅ Definition of Done (per task)

- Unit/Smoke tested locally.
- Build passes; deploy preview OK.
- Docs updated in this file.
- Reversible (no destructive ops; .trash/ if needed).

---

# 🔐 Safety Rules for Agents

- **Never delete**, only move to `.trash/YYYY‑MM‑DD/`.
- Require confirmation before running commands that change files or infra.
- Log all actions under _Session Log > Steps_.

---

# 🧩 Working Agreements

- **Small PRs**, one thing per PR.
- **Conventional commits**: `feat:`, `fix:`, `chore:`, `docs:`, `refactor:`, `style:`, `ci:`.
- **Branch naming**: `feat/<module>-<slug>` e.g. `feat/auth-otp-flow`.

---

# 🗂️ Repo Map (keep updated)

```
/ (root)
  /src
    /components
    /pages
    /modules
      /auth
      /dashboard
      /chat
      /tickets
      /tasks
  /public
  /scripts
  /docs
  .trash/
```

---

# 📋 Today Focus

- [ ] Point this DEV_LOG at **QI‑EOS** & add `/docs/agents.md` to that repo.
- [ ] Run **Auditor** against QI‑EOS; fix the top finding only; open a tiny PR.
- [ ] Confirm envs per QI‑EOS README (document in `/docs/env.md`).

---

# 🧠 Agent Prompts (save to /docs/agents.md)

## Repo Concierge (Cursor)

```
ROLE: Repo Concierge
PRINCIPLES: Truth > speed; reversible changes; smallest diff; ask before mutating.
SAFETY: Never delete; stage to .trash/TIMESTAMP; print diff before apply.
TASK: On start, summarize repo, list top 3 next actions from this Dev Plan, propose a 30‑min plan.
OUTPUT: Markdown summary + checklists fit for this DEV_LOG.
```

## Auditor

```
ROLE: Auditor
TASK: Scan repo, flag risky patterns, missing envs, miswired routes, dead code, secrets, and outdated deps.
OUTPUT: Findings table (severity, file, line, fix), then minimal diff to fix top 3.
```

---

# 🧾 Session Log

> Use one entry per focused block (25–50 min). Keep it terse but useful.

## 2025‑09‑10 — Restart after break

- **Context**: Returning from break; need workflow and confirmation of agent setup.
- **Goal**: Re‑establish Cursor quickstart, add DEV_LOG, verify agent prompts present.
- **Steps**:
  1. Created this DEV_LOG; added Quick‑Start and Agent Prompts.
  2. Plan: add `/docs/agents.md` to repo; wire Cursor startup prompt.
- **Decisions**: Keep Supabase OTP for now; Cloudflare swap later if desired.
- **Next**: See _Next Actions_ below.

## 2025‑09‑10 — Repo correction to QI‑EOS

- **Context**: Previous doc referenced QiPortals; user clarified: focus repos are **QI‑EOS** and **QI‑LA**.
- **Goal**: Retarget DEV_LOG + tasks to QI‑EOS.
- **Steps**: Updated header (title/project/repo), Dev Plan, Today Focus.
- **Next**: Create `/docs/agents.md` in QI‑EOS; run Auditor; open PR with Change Summary template.

## 2025‑09‑13 — QiEOS Alignment Session — General Review

### 1. Current State (from God Doc + Audit)

- **Architecture frozen**: Cloudflare-first stack (Pages + Workers + R2) with Supabase (Postgres + RLS) as the DB.
- **Schema baseline**: Migrations for orgs, companies, tasks, tickets, KB hierarchy, billing, sites, drops, feature flags, and RLS templates are already defined.
- **Monorepo law**: Canonical tree is locked; any new folders require an RFC. Cursor guardrails + `.cursorrules` enforce this.
- **Electron scope**: Desktop cockpit is explicitly “thin main / fat renderer” with all privileged ops via Worker API.
- **MVP anchor**: Auth + RBAC, tasks, file uploads to R2, KB (public + private), profile updates, and website serving are the “tonight features”.
- **Amendment I**: Supabase schema + Cloudflare setup ratified 2025-09-10; `wrangler.toml` + CI/CD workflows must reflect this.
- **Setup guide**: Full step-through exists (Supabase → Cloudflare R2 → Wrangler secrets → `pnpm dev`).

### 2. Alignment Gaps

- **Physical migrations**: SQL files listed in Amendment I exist in tree, but need to confirm they’re actually populated + applied (`pnpm -C infra/supabase migrate`).
- **Cursor scaffolding**: `.cursorrules`, `.cursorignore`, `.vscode/settings.json`, and `docs/CURSOR_MODES.md` must be present and match locked content.
- **Agents.md**: Repo Concierge + Auditor prompts are defined in the DEV_LOG but may not be physically saved under `docs/agents.md` yet.
- **Validation checklist**: Worker `/health`, `/auth/session`, `/tasks`, `/files/sign-upload`, `/kb/public`, `/kb/private`, and `/me/profile` endpoints still need live smoke tests.
- **Electron**: `apps/admin-electron` folder tree is defined, but unclear if a renderer stub exists beyond `App.tsx`.

### 3. Next Actions (Tiny Steps)

#### Schema Apply

- Run: `pnpm -C infra/supabase migrate` → confirm tables + RLS applied.
- Verify Supabase dashboard shows orgs, projects, tasks, kb, billing, sites, drops.

#### Worker Health

- `pnpm -C workers/api dev` → hit `/health` locally.
- Add smoke checks for `/auth/session` + `/tasks`.

#### Guardrails Check

- Ensure `.cursorrules` and `.cursorignore` at repo root match QiEOS.md §12.
- Create `docs/agents.md` and `docs/CURSOR_MODES.md` if missing.

#### Electron Skeleton

- Verify `apps/admin-electron/src/renderer/App.tsx` builds.
- Ensure it points ONLY to Worker endpoints (no direct Supabase).

#### CI/CD Sync

- Check `.github/workflows/web-pages-deploy.yml` and `worker-deploy.yml` exist.
- Validate Cloudflare API token + account ID secrets set in GitHub.

### 4. Alignment Decisions

- **Repo of Record**: QiEOS (primary), QiLA (secondary support).
- **No deletions**: Anything outdated → move to `.trash/DATE/`.
- **RFC gate**: Any top-level folder changes or schema additions → must be proposed via RFC note in `/docs`.

### 5. Open Questions (for you to decide)

- Do you want me to generate the actual SQL stubs + `wrangler.toml` + GitHub workflow files so they’re in repo (not just documented)?
- Should the Electron cockpit get a barebones renderer now (auth screen + task list) for smoke, or stay skeletal until API endpoints stabilize?
- Do you want me to prep a Cursor follow-up prompt that enforces Git + Windows read-only locks on sacred paths (so no accidental edits)?

⚖️ This alignment session sets the repo at a stable constitutional point. Next milestone is applying schema + validating Worker endpoints. From there, we can layer the admin cockpit + client portal UI.

---

# 🧱 Decisions Log

- **2025‑09‑10**: Primary repo set to **QI‑EOS**; **QI‑LA** tracked as secondary.

---

# 🧰 Environment Checklist

- [ ] Cloudflare Pages connected to GitHub repo; preview deploys enabled.
- [ ] Pages env vars: `VITE_SUPABASE_URL`, `VITE_SUPABASE_ANON_KEY`, etc.
- [ ] Worker KV/DB bounds (if used) documented in `/docs/env.md`.
- [ ] Supabase: tables created (clients, tickets, updates), RLS policies noted.

---

# 🗺️ Next Actions (tiny steps)

1. Add `/docs/agents.md` with Repo Concierge + Auditor prompts (copy from above).
2. Commit & push; paste PR link here; run Auditor and fix top 1 issue.

---

# 📦 Change Summary Template (paste in PR)

**What changed**: _one‑liner_.
**Why**: aligns to Dev Plan (goal).
**How to test**: steps.
**Rollback**: revert commit; restore from `.trash/` if files moved.

---

# 📝 Notes

- Keep this file open while coding; update _Session Log_ as the source of truth.

---

# Source: SETUP.md

# QiEOS Setup Guide

This guide will help you set up the QiEOS development environment and deploy to production.

## Prerequisites

- **Node.js 18+** - [Download](https://nodejs.org/)
- **pnpm** - `npm install -g pnpm`
- **Git** - [Download](https://git-scm.com/)
- **Wrangler CLI** - `npm install -g wrangler`
- **Supabase Account** - [Sign up](https://supabase.com/)
- **Cloudflare Account** - [Sign up](https://cloudflare.com/)

## Quick Start

1. **Clone and setup**

   ```bash
   git clone <repository-url>
   cd qieos
   pnpm setup
   ```

2. **Set up Supabase**

   - Create a new Supabase project
   - Run `scripts/create-migrations.sql` in the SQL editor
   - Get your project URL and API keys

3. **Configure Cloudflare**

   - Create R2 buckets: `qieos-files` and `qieos-files-dev`
   - Get your Cloudflare API token
   - Set up wrangler secrets

4. **Start development**
   ```bash
   pnpm dev
   ```

## Detailed Setup

### 1. Database Setup (Supabase)

1. **Create Supabase Project**

   - Go to [Supabase Dashboard](https://supabase.com/dashboard)
   - Click "New Project"
   - Choose organization and enter project details
   - Wait for project to be ready

2. **Run Database Migrations**

   - Go to SQL Editor in your Supabase dashboard
   - Copy and paste the contents of `scripts/create-migrations.sql`
   - Click "Run" to execute the migration
   - Verify tables were created in the Table Editor

3. **Get API Keys**
   - Go to Settings > API
   - Copy your Project URL and API keys
   - You'll need: `SUPABASE_URL`, `SUPABASE_ANON_KEY`, `SUPABASE_SERVICE_ROLE_KEY`

### 2. Cloudflare Setup

1. **Create R2 Buckets**

   ```bash
   # Login to Cloudflare
   wrangler login

   # Create buckets
   wrangler r2 bucket create qieos-files
   wrangler r2 bucket create qieos-files-dev
   ```

2. **Set up Worker Secrets**

   ```bash
   cd workers/api

   # Set secrets
   wrangler secret put SUPABASE_URL
   wrangler secret put SUPABASE_SERVICE_ROLE_KEY
   wrangler secret put OPENAI_API_KEY
   wrangler secret put STRIPE_SECRET_KEY
   ```

3. **Deploy Worker**
   ```bash
   pnpm --filter qieos-api deploy
   ```

### 3. Environment Configuration

1. **Copy Environment Templates**

   ```bash
   cp infra/cloudflare/env.example infra/cloudflare/.env
   cp apps/web/.env.example apps/web/.env
   cp workers/api/.env.example workers/api/.env
   ```

2. **Fill in Environment Variables**
   - Update `.env` files with your actual values
   - Never commit `.env` files to git

### 4. Development

1. **Start Development Servers**

   ```bash
   # Start all services
   pnpm dev

   # Or start individually
   pnpm --filter qieos-web dev    # Web app on :5173
   pnpm --filter qieos-api dev    # Worker on :8787
   ```

2. **Build and Test**

   ```bash
   # Build all packages
   pnpm build

   # Build web app
   pnpm --filter qieos-web build

   # Type check worker
   pnpm --filter qieos-api type-check
   ```

## Deployment

### Web App (Cloudflare Pages)

1. **Manual Deployment**

   ```bash
   pnpm deploy:web
   ```

2. **GitHub Actions** (Recommended)
   - Push to `main` branch
   - GitHub Actions will automatically deploy
   - Requires `CLOUDFLARE_API_TOKEN` and `CLOUDFLARE_ACCOUNT_ID` secrets

### Worker (Cloudflare Workers)

1. **Manual Deployment**

   ```bash
   pnpm deploy:worker
   ```

2. **GitHub Actions** (Recommended)
   - Push to `main` branch
   - GitHub Actions will automatically deploy

### Client Sites (Cloudflare Pages)

1. **Deploy All Sites**

   ```bash
   pnpm deploy:sites
   ```

2. **Deploy Specific Site**
   ```bash
   cd sites/clients/your-site
   wrangler pages deploy . --project-name=qieos-your-site
   ```

## Validation Checklist

After setup, verify these endpoints work:

- [ ] `GET /health` - Worker health check
- [ ] `POST /auth/session` - Authentication endpoint
- [ ] `GET /tasks` - Tasks CRUD with RLS
- [ ] `POST /files/sign-upload` - File upload to R2
- [ ] `GET /kb/public` - Public knowledge base
- [ ] `GET /kb/private` - Private knowledge base
- [ ] `PATCH /me/profile` - Profile updates
- [ ] Root website serves from Pages

## Troubleshooting

### Common Issues

1. **Build Failures**

   - Check Node.js version: `node --version` (should be 18+)
   - Clear node_modules: `rm -rf node_modules && pnpm install`
   - Check TypeScript errors: `pnpm --filter qieos-web type-check`

2. **Database Connection Issues**

   - Verify Supabase URL and keys
   - Check RLS policies are applied
   - Ensure user has proper permissions

3. **Cloudflare Deployment Issues**

   - Verify API token has correct permissions
   - Check wrangler.toml configuration
   - Ensure secrets are set: `wrangler secret list`

4. **Authentication Issues**
   - Verify Supabase Auth is configured
   - Check JWT claims enrichment in Worker
   - Ensure RLS policies allow user access

### Getting Help

- Check the [God Doc](README.md) for architecture details
- Review [Amendment I](<docs/dev_specs/QiEOS%20•%20Official%20Development%20Specification%20(Amendment%20I).md>) for schema details
- Look at the [Development Log](DEV_LOG.md) for recent changes

## Next Steps

Once setup is complete:

1. **Test MVP Features**

   - Authentication flow
   - Task management
   - File uploads
   - Knowledge base access

2. **Customize for Your Use Case**

   - Update feature flags
   - Customize UI components
   - Add your branding

3. **Deploy to Production**
   - Set up custom domains
   - Configure production environment
   - Set up monitoring and alerts

---

**Need help?** Check the troubleshooting section or review the project documentation.

---

# Source: QiEOS • Official Development Specification.md

QiEOS • Official Development Specification (God Doc) — v4 (LOCKED)
title: QiEOS Official Dev Spec
owner: QiAlly LLC (QiEOS)
status: LOCKED
updated: 2025-09-09
principles:

- Cloudflare-first: Pages + Workers + R2
- Supabase Auth + Postgres + RLS
- Electron admin as desktop control plane
- Multi-tenant org→company→contact
- Cursor rules + locked paths to prevent AI drift
  mvp_tonight:
- Auth + RBAC
- Tasks (tenant-scoped)
- File storage (R2 signed URLs)
- Knowledge Base (public + private read)
- Profile update
- Public website visible
  repo_volume: "Q:"

0. Context & Goals (context first)

QiEOS unifies client portal, admin control, APIs, AI (RAG/voice/vision), billing, and per-client public websites—without restructuring later. This doc freezes names, folders, and contracts to keep things stable and shippable.

1. Canonical Monorepo Tree (DO NOT RENAME/MOVE)

Put a tiny README.md + .gitkeep in each empty dir. New top-level folders require an RFC in /docs.

qieos/
|\_qieos*docs
├─ apps/
│ ├─ web/ # React + Vite (TSX) | website + portal
│ │ ├─ index.html
│ │ ├─ vite.config.ts
│ │ ├─ tsconfig.json
│ │ ├─ public/ # our public website & static KB
│ │ │ ├─ favicon.ico
│ │ │ ├─ logo.svg
│ │ │ ├─ manifest.json
│ │ │ ├─ robots.txt
│ │ │ └─ kb/ # optional static public KB
│ │ │ ├─ index.json
│ │ │ └─ getting-started.md
│ │ └─ src/
│ │ ├─ main.tsx
│ │ ├─ App.tsx
│ │ ├─ routes/
│ │ │ ├─ public/ # '/', '/kb', etc.
│ │ │ ├─ auth/ # '/auth/*'
│ │ │ ├─ client/ # '/client/:companySlug/_'
│ │ │ ├─ internal/ # '/internal/_'
│ │ │ └─ admin/ # '/admin/\_' (web fallback)
│ │ ├─ components/ # reusable UI
│ │ ├─ modules/
│ │ │ ├─ crm/
│ │ │ ├─ projects/ # projects, tickets
│ │ │ ├─ tasks/ # tasks (can stand alone; project_id nullable)
│ │ │ ├─ messaging/ # chat (WS)
│ │ │ ├─ kb/ # private KB UI (org/company scoped)
│ │ │ ├─ ai/ # assistants + RAG + voice + vision
│ │ │ │ ├─ chat/
│ │ │ │ ├─ rag/
│ │ │ │ ├─ voice/
│ │ │ │ └─ vision/
│ │ │ ├─ billing/ # invoices, statements, payments
│ │ │ ├─ lms/ # (future)
│ │ │ └─ client-tools/ # togglable mini-tool hub
│ │ ├─ lib/ # client-side libraries
│ │ │ ├─ supabaseClient.ts
│ │ │ ├─ api.ts # Worker fetch wrapper
│ │ │ ├─ flags.ts # feature flag resolver
│ │ │ └─ claims.ts # JWT helpers/types
│ │ ├─ context/ # Auth, Tenant, Flags
│ │ ├─ hooks/ # useAuth/useTenant/useFlags/queries
│ │ ├─ store/ # tanstack-query or zustand config
│ │ └─ styles/ # tailwind.css, tokens
│ └─ admin-electron/ # Electron desktop admin (TS)
│ ├─ electron-main.ts # main process (no secrets in renderer)
│ ├─ preload.ts # secure IPC bridge (contextIsolation)
│ ├─ vite.config.ts
│ └─ src/renderer/ # React UI inside Electron
│ ├─ App.tsx
│ ├─ routes/
│ │ ├─ dashboard/ # admin home, KPIs
│ │ ├─ tenants/ # org/company provisioning + branding
│ │ ├─ crm/
│ │ ├─ projects/
│ │ ├─ tasks/
│ │ ├─ kb-editor/ # create/edit collections & docs
│ │ ├─ ingest/ # bulk import → RAG (to Worker endpoints)
│ │ ├─ billing-desk/ # invoices, statements, payments mgmt
│ │ ├─ scripts/ # script runner UI (server-executed)
│ │ ├─ migrations/ # db migrations launcher (server)
│ │ └─ auditor/ # read-only audit views, exports
│ ├─ components/
│ └─ lib/
│ ├─ api.ts # talks ONLY to Worker API
│ └─ queue.ts # local queue (retry/offline) → Worker
│
├─ sites/ # public client sites (each own Pages project)
│ ├─ \_themes/ # shared themes
│ ├─ \_assets/
│ ├─ \_scripts/
│ └─ clients/
│ ├─ {client-slug}/
│ │ ├─ site/ # Astro/Vite/Eleventy etc.
│ │ ├─ public/
│ │ └─ pages.config.json # Pages metadata
│ └─ ...
│
├─ drops/ # random public files (served via Worker/R2)
│ ├─ README.md
│ └─ .gitkeep
│
├─ workers/
│ └─ api/ # Cloudflare Worker (Hono)
│ ├─ wrangler.toml
│ └─ src/
│ ├─ index.ts # mount router + middleware
│ ├─ middleware/
│ │ ├─ auth.ts # Supabase JWT verify + enrich claims
│ │ └─ flags.ts # org/company feature toggle injector
│ ├─ routes/
│ │ ├─ health.ts
│ │ ├─ auth.ts # session→claims endpoint
│ │ ├─ tenants.ts # org/company provisioning & branding
│ │ ├─ crm.ts
│ │ ├─ projects.ts
│ │ ├─ tasks.ts
│ │ ├─ messaging.ts
│ │ ├─ kb.ts # kb_collections/docs CRUD + signed URLs
│ │ ├─ rag.ts # embed/query/citations (RAG)
│ │ ├─ billing.ts # Stripe webhooks + statements
│ │ ├─ lms.ts
│ │ ├─ tools.ts # script exec (server-side), mini-app hooks
│ │ └─ sites.ts # Pages orchestration + R2 drop links
│ ├─ integrations/ # external APIs (1 file per vendor)
│ │ ├─ openai.ts
│ │ ├─ stripe.ts
│ │ ├─ elevenlabs.ts
│ │ ├─ ocr.ts
│ │ ├─ zoho.ts
│ │ └─ r2.ts
│ └─ lib/
│ ├─ supabaseAdmin.ts # service-role client (server-only)
│ ├─ vector.ts # pgvector queries
│ ├─ embeddings.ts # OpenAI embeddings
│ ├─ ingest.ts # chunkers/parsers (pdf/docx/html)
│ ├─ flags.ts # feature flag checks
│ └─ sites.ts # Pages helpers
│
├─ templates/ # reusable content
│ ├─ communications/
│ │ ├─ email/
│ │ ├─ sms/
│ │ └─ whatsapp/
│ ├─ accounting/
│ │ ├─ reports/
│ │ └─ invoices/
│ ├─ legal/
│ │ ├─ contracts/
│ │ └─ letters/
│ ├─ immigration/
│ │ ├─ BLUEPRINTS/ # mirrors blueprints for docs
│ │ ├─ forms/ # I-589, I-765, etc.
│ │ └─ narratives/
│ └─ ops/
│ ├─ keysuite/ # CFO/COO playbooks
│ └─ project-kickoff/
│
├─ blueprints/ # directory scaffolds you can stamp per client
│ ├─ immigration/
│ │ ├─ I-589/
│ │ ├─ I-765/
│ │ ├─ I-131/
│ │ └─ SIV/
│ ├─ accounting/
│ │ └─ monthly-close/
│ ├─ website/
│ │ └─ minimal-landing/
│ └─ project/
│ └─ default/
│
├─ packages/
│ ├─ ui/
│ ├─ types/
│ └─ utils/
│
├─ infra/
│ ├─ cloudflare/
│ │ ├─ README.md
│ │ └─ env.example
│ └─ supabase/
│ ├─ migrations/
│ │ ├─ 000_init_orgs_companies_contacts.sql
│ │ ├─ 010_projects_tasks_tickets.sql
│ │ ├─ 015_time_entries.sql
│ │ ├─ 020_kb_hierarchy_docs_vectors.sql
│ │ ├─ 025_sites_registry.sql
│ │ ├─ 026_drops_meta.sql
│ │ ├─ 030_billing_ledger_invoices.sql
│ │ ├─ 040_feature_flags.sql
│ │ └─ 900_rls_policies.sql
│ ├─ seeds/
│ │ └─ 000_seed_org_admin.sql
│ └─ README.md
│
├─ docs/
│ ├─ ARCHITECTURE.md
│ ├─ SETUP.md
│ ├─ MODULES.md
│ ├─ AI_RAG.md
│ ├─ BILLING.md
│ ├─ FEATURE_FLAGS.md
│ └─ WEBSITES.md
│
├─ scripts/
│ ├─ db.migrate.mjs
│ ├─ seed.dev.mjs
│ └─ scaffold.mjs # stamp blueprints (e.g., I-589)
│
├─ .github/
│ └─ workflows/
│ ├─ web-pages-deploy.yml
│ ├─ worker-deploy.yml
│ └─ sites-deploy.yml
│
├─ package.json
└─ pnpm-workspace.yaml

Electron scope check: not small. The renderer holds full admin surfaces (tenants, CRM, KB editor, ingest/RAG, billing desk, scripts, migrations, auditor). The main process stays thin/secure. All privileged ops run in the Worker (service role). Electron talks to Worker via HTTPS. queue.ts handles offline/retry. No secrets in renderer.

2. Domain Model (frozen)

Org → Department(public|external|internal) → Company → Contact(user)

Projects and Tasks are peers (a task may have project_id NULL).

Tickets belong to projects.

Time entries can reference project_id or task_id (polymorphic).

Files stored in R2; DB keeps metadata and ACL.

KB: hierarchical kb_collections (tree) → kb_docs (articles) → kb_vectors for RAG.

Client Sites: sites_registry ties sites to org_id/company_id.

Drops: drops_meta indexes public files (TTL optional).

All user-visible tables have org_id and RLS enabled.

3. Auth, RBAC, Feature Flags (frozen)

JWT Claims (issued by Worker on login/refresh):

type Claims = {
role: 'admin' | 'internal' | 'external' | 'public';
org_id: string;
company_ids?: string[];
department?: 'public'|'external'|'internal';
features?: Record<string, boolean>; // merged org + company flags
scopes?: string[];
};

Feature keys (examples):
crm, projects, tasks, messaging, kb, ai_rag, billing, lms, client_tools, voice_assistant, vision_tools, client_sites, public_drops

UI hides disabled modules (useFlags()).

API enforces flags server-side.

RLS prevents bypass.

4. KB Organization (no future reshuffle)

Public KB: /apps/web/public/kb/ (flat files + index.json).

Private KB: DB tree via kb_collections(parent_id, path) + kb_docs(collection_id, path) for easy breadcrumbs and safe moves.

RAG: kb_vectors with tenant-scoped embeddings; queries filter by org_id (+ company_id for clients).

5. File Storage (R2, signed URLs)

Flow: web/Electron → Worker → signed upload URL → client uploads to R2 → Worker records metadata (org, company, owner, path, mime, bytes, ttl?) → UI lists by ACL.
Security: never expose service-role; enforce ACL + flags in Worker + RLS in DB.

6. Client Public Sites & Drops (final)

Sites live at /sites/clients/{client}/site/ → built by Actions to Cloudflare Pages (one project per site).

Registry stored in sites_registry (domain, slug, project, status).

Drops are files in R2 with simple public links; metadata in drops_meta, optionally auto-expire.

7. APIs (Worker routes) — MVP subset tonight

POST /auth/session → returns enriched claims

GET /tasks · POST /tasks · PATCH /tasks/:id (scoped by org/company/role)

POST /files/sign-upload → signed URL; POST /files/complete → metadata row

GET /kb/public (reads /public/kb/index.json passthrough if desired)

GET /kb/private (scoped list of kb_docs)

PATCH /me/profile (update name, phone, avatar pointer)

GET /site → serve root website assets (or direct Pages)

Additional domain routes exist but are not required for MVP.

8. Electron Responsibilities (explicit)

Does

Tenant provisioning, branding, CRM, projects/tasks, KB editing, ingestion to RAG, billing desk, script runner, migrations launcher, read-only auditor, exports.

Local queue for offline/retry, then sync to Worker.

Does NOT

Hold service-role secrets.

Talk directly to Supabase DB.

Run privileged mutations locally.
All privileged changes go through Worker.

9. MVP Acceptance Checklist (tonight)

Auth + RBAC: login via Supabase; enriched claims from Worker; route guards in web.

Tasks: create/list/update tasks scoped to company/org; visible in client + internal views.

Files: upload via signed URLs to R2; metadata saved; list & download in client view.

KB: public page renders from /public/kb/ (≥1 article); private list fetches kb_docs under org and (if external) company.

Profile: /me page where user updates basic profile fields.

Website: main website served (from apps/web/public), visible at root.

10. Guardrails (ADHD-proofing)

No folder drift: §1 is law.

One domain = one Worker route file + one web module folder.

Public vs private KB never mixed.

All server secrets live only in Worker.

RFC needed to add/rename top-level folders or DB tables.

11. Ties to prior work (docs anchor)

Preserves the Cloudflare-first architecture and the Supabase + RLS model.

Adds stable homes for client sites, drops, templates, and blueprints.

Keeps tasks/projects as peers and bakes in time entries, billing, and feature flags.

12. Cursor & Editor Guardrails (new, locked)

We constrain Cursor with Rules, Ignore lists, Custom Modes, and VS Code workspace settings. “File lock” is emulated with Git + OS protections.

12.1 Required files at repo root (Q:\qieos\*)

/.cursorrules — authoritative rules for the AI

# QiEOS Global Rules (authoritative)

You are operating inside the QiEOS monorepo. Follow the God Doc (README and /docs) exactly.

## NEVER MOVE/RENAME OR EDIT THESE PATHS

- /infra/supabase/migrations/\*\*
- /blueprints/\*\*
- /templates/\*\*
- /apps/web/public/\*\*
- /workers/api/wrangler.toml
- /workers/api/src/middleware/\*\*
- /workers/api/src/lib/supabaseAdmin.ts
- /workers/api/src/integrations/stripe.ts
- /workers/api/src/integrations/openai.ts
- /workers/api/src/integrations/r2.ts
- /workers/api/src/integrations/elevenlabs.ts

If a change is truly required:

1. Propose a diff in chat prefixed with "RFC:" explaining rationale and impact.
2. Wait for human approval before touching files.

## STRUCTURE LAW

- One domain = one worker route file and one web module folder.
- Public KB stays in /apps/web/public/kb; private KB stays in DB (+ vectors).
- All service-role ops live in Worker only.

## CODE STYLE

- React + Vite + TSX. Tailwind utilities. Keep files <400 lines; split otherwise.
- Prefer small, pure functions; avoid magic.
- Strong typing at boundaries; internal types can be inferred.

## SAFETY

- Never write secrets to client code.
- Before AI edit, run “Understand” on related files and God Doc excerpts.

/.cursorignore — hard ignore for AI indexing/edits

# Build artifacts and caches

dist/
build/
.out/
.next/
.vercel/
.cache/
coverage/

# Dependencies

node_modules/

# Env & secrets

.env
.env._
\*\*/_.pem \*_/_.key

# Generated assets / binaries

**/\*.pdf
**/_.docx
\*\*/_.png
**/\*.jpg
**/\*.zip

# LAW: AI must not edit these authoritative paths

infra/supabase/migrations/
blueprints/
templates/
apps/web/public/
workers/api/wrangler.toml

/.cursorindexingignore (optional) — if you want indexing-only ignores distinct from access ignores.

/.vscode/settings.json — workspace settings Cursor honors

{
"editor.formatOnSave": true,
"files.trimTrailingWhitespace": true,
"files.insertFinalNewline": true,

"files.exclude": {
"**/node_modules": true,
"**/dist": true,
"**/.git": true
},
"search.exclude": {
"**/node_modules": true,
"**/dist": true,
"apps/web/public/**": true
},

"typescript.tsserver.maxTsServerMemory": 4096,
"[typescriptreact]": {
"editor.defaultFormatter": "esbenp.prettier-vscode"
},
"[typescript]": {
"editor.defaultFormatter": "esbenp.prettier-vscode"
}
}

12.2 Locked Paths (practical enforcement)

Git guard (skip-worktree):

git update-index --skip-worktree workers/api/wrangler.toml
git update-index --skip-worktree infra/supabase/migrations/_
git update-index --skip-worktree apps/web/public/_

# undo: git update-index --no-skip-worktree <path>

Windows read-only (Q: drive):

attrib +R Q:\qieos\workers\api\wrangler.toml
attrib +R Q:\qieos\infra\supabase\migrations\*._ /s
attrib +R Q:\qieos\apps\web\public\*._ /s

12.3 Cursor Agents (Custom Modes) — who does what

API Agent (server-side)

SCOPE: workers/api/src/\*\* only.
NEVER touch paths listed in .cursorrules "NEVER MOVE/RENAME OR EDIT".
Hono endpoints; Zod validate inputs; enforce claims + feature flags.
All writes via supabaseAdmin; never expose secrets.

UI Agent (web)

SCOPE: apps/web/src/\*\* only.
Do not touch public/ or migrations.
React + TSX + Tailwind. Keep files <400 lines; make small components.
Use lib/api.ts; avoid ad-hoc fetch unless necessary.

KB/RAG Agent

SCOPE: workers/api/src/routes/kb.ts, rag.ts, and apps/web/src/modules/kb|ai/rag/\*\*
Implement hierarchical collections + doc rendering; citations for RAG.
Respect org_id + company_ids; NEVER leak across tenants.

Migrations Agent (SQL)

SCOPE: infra/supabase/migrations/\*\* but DO NOT EDIT existing files.
Create new numbered migration files only.
Add RLS policies with USING + WITH CHECK. Include rollback notes.

12.4 Daily flow in Cursor (to avoid drift)

Turn on the right Agent/Mode (API vs UI vs KB/RAG vs Migrations).

Ensure .cursorrules is active (Global Rules).

Work in small diffs: plan → approve → apply → run → iterate.

Keep sacred paths read-only (Git/OS) and in .cursorignore.

13. Q: Drive Conventions (tiny reminder)

Repo root is Q:\qieos.

Scripts assume Q: is mounted (Windows).

Keep the single asset hub under apps/web/public/ for the main site; client sites live under /sites/clients/\*/site/.

TL;DR: What I changed

Fixed headings, fencing, repeated ---, capitalization (QiEOS), and turned stray reference lines into clean instructions.

Ensured the tree and section numbers are consistent, code/command blocks render correctly, and Cursor rules are copy-ready.

If this looks good, paste it straight into your repo README.md. Want me to also drop it into /docs/ARCHITECTURE.md and scaffold the .cursorrules, .cursorignore, and .vscode/settings.json files so your repo physically matches this?

You said:
give me the prompt that will make cursor implement/create the folder sctructure and its own agents and rule documents to get this scaffolding up real quick, NOT the app just the structure and the agent settings and stuff.
ChatGPT said:
Thought for 7s

Here’s a single, copy-paste Cursor prompt that will scaffold the folders only (no app code), plus the Cursor agent/rules files and workspace settings exactly as in the God Doc. Paste this in Cursor Chat at your repo root (Q:\qieos).

Cursor Prompt — “QiEOS scaffolder (structure + agents + rules)”

You are acting as a repo scaffolder. Do NOT generate application code. Only create folders, placeholder files, and editor/agent config needed to match the QiEOS God Doc (v4).

Repo root is the current workspace (Q:\qieos). If any listed path already exists, leave existing files untouched and only add missing items. Make all changes in a single PR/commit titled: "chore(scaffold): QiEOS structure + cursor agents/rules".

==================================================

1. # CREATE FOLDER STRUCTURE (placeholders only)

Create these directories. In each empty directory create both a `.gitkeep` and a 1–2 line `README.md` explaining the folder’s purpose.

apps/
web/
public/
kb/
src/
routes/public/
routes/auth/
routes/client/
routes/internal/
routes/admin/
components/
modules/
crm/
projects/
tasks/
messaging/
kb/
ai/chat/
ai/rag/
ai/voice/
ai/vision/
billing/
lms/
client-tools/
lib/
context/
hooks/
store/
styles/
admin-electron/
src/renderer/
routes/dashboard/
routes/tenants/
routes/crm/
routes/projects/
routes/tasks/
routes/kb-editor/
routes/ingest/
routes/billing-desk/
routes/scripts/
routes/migrations/
routes/auditor/
components/
lib/

sites/
\_themes/
\_assets/
\_scripts/
clients/

drops/

workers/
api/
src/
middleware/
routes/
integrations/
lib/

templates/
communications/email/
communications/sms/
communications/whatsapp/
accounting/reports/
accounting/invoices/
legal/contracts/
legal/letters/
immigration/BLUEPRINTS/
immigration/forms/
immigration/narratives/
ops/QiSuite/
ops/project-kickoff/

blueprints/
immigration/I-589/
immigration/I-765/
immigration/I-131/
immigration/SIV/
accounting/monthly-close/
website/minimal-landing/
project/default/

packages/
ui/
types/
utils/

infra/
cloudflare/
supabase/
migrations/
seeds/

docs/

scripts/

.github/
workflows/

(Also ensure repo root has:) package.json, pnpm-workspace.yaml (create minimal placeholder if missing).

For these specific placeholder content files, create them if missing:

- apps/web/public/kb/index.json → `[]`
- apps/web/public/kb/getting-started.md → "# Getting Started\nWelcome to QiEOS."
- infra/supabase/README.md → short note: "Migrations live here; see 900_rls_policies.sql for RLS."
- drops/README.md → short note about R2 public drops and TTL policy.

# ================================================== 2) ADD CURSOR / EDITOR GUARDRAILS

Create `.cursorrules` at repo root with EXACT content:

# QiEOS Global Rules (authoritative)

You are operating inside the QiEOS monorepo. Follow the God Doc (README and /docs) exactly.

## NEVER MOVE/RENAME OR EDIT THESE PATHS

- /infra/supabase/migrations/\*\*
- /blueprints/\*\*
- /templates/\*\*
- /apps/web/public/\*\*
- /workers/api/wrangler.toml
- /workers/api/src/middleware/\*\*
- /workers/api/src/lib/supabaseAdmin.ts
- /workers/api/src/integrations/stripe.ts
- /workers/api/src/integrations/openai.ts
- /workers/api/src/integrations/r2.ts
- /workers/api/src/integrations/elevenlabs.ts

If a change is truly required:

1. Propose a diff in chat prefixed with "RFC:" explaining rationale and impact.
2. Wait for human approval before touching files.

## STRUCTURE LAW

- One domain = one worker route file and one web module folder.
- Public KB stays in /apps/web/public/kb; private KB stays in DB (+ vectors).
- All service-role ops live in Worker only.

## CODE STYLE

- React + Vite + TSX. Tailwind utilities. Keep files <400 lines; split otherwise.
- Prefer small, pure functions; avoid magic.
- Strong typing at boundaries; internal types can be inferred.

## SAFETY

- Never write secrets to client code.
- Before AI edit, run “Understand” on related files and God Doc excerpts.

Create `.cursorignore` at repo root with EXACT content:

# Build artifacts and caches

dist/
build/
.out/
.next/
.vercel/
.cache/
coverage/

# Dependencies

node_modules/

# Env & secrets

.env
.env._
\*\*/_.pem \*_/_.key

# Generated assets / binaries

**/\*.pdf
**/_.docx
\*\*/_.png
**/\*.jpg
**/\*.zip

# LAW: AI must not edit these authoritative paths

infra/supabase/migrations/
blueprints/
templates/
apps/web/public/
workers/api/wrangler.toml

(If supported, also create an empty `.cursorindexingignore` for future fine-grain control.)

Create VS Code workspace settings at `.vscode/settings.json`:

{
"editor.formatOnSave": true,
"files.trimTrailingWhitespace": true,
"files.insertFinalNewline": true,
"files.exclude": {
"**/node_modules": true,
"**/dist": true,
"**/.git": true
},
"search.exclude": {
"**/node_modules": true,
"**/dist": true,
"apps/web/public/**": true
},
"typescript.tsserver.maxTsServerMemory": 4096,
"[typescriptreact]": { "editor.defaultFormatter": "esbenp.prettier-vscode" },
"[typescript]": { "editor.defaultFormatter": "esbenp.prettier-vscode" }
}

Create `docs/EDITOR.md` summarizing:

- Use Custom Modes (Agents): API, UI, KB/RAG, Migrations.
- Work in small diffs (plan → approve → apply → run → iterate).
- Keep sacred paths read-only and in `.cursorignore`.
- Windows lock tips (attrib +R) and Git skip-worktree examples.

# ================================================== 3) DEFINE CURSOR CUSTOM MODES (as instructions text)

Create `docs/CURSOR_MODES.md` with these four presets (users will paste into Cursor → Settings → Chat → Custom Modes):

### API Agent (server-side)

SCOPE: workers/api/src/\*\* only.
NEVER touch paths listed in .cursorrules "NEVER MOVE/RENAME OR EDIT".
Hono endpoints; Zod validate inputs; enforce claims + feature flags.
All writes via supabaseAdmin; never expose secrets.

### UI Agent (web)

SCOPE: apps/web/src/\*\* only.
Do not touch public/ or migrations.
React + TSX + Tailwind. Keep files <400 lines; make small components.
Use lib/api.ts; avoid ad-hoc fetch unless necessary.

### KB/RAG Agent

SCOPE: workers/api/src/routes/kb.ts, rag.ts, and apps/web/src/modules/kb|ai/rag/\*\*
Implement hierarchical collections + doc rendering; citations for RAG.
Respect org_id + company_ids; NEVER leak across tenants.

### Migrations Agent (SQL)

SCOPE: infra/supabase/migrations/\*\* but DO NOT EDIT existing files.
Create new numbered migration files only.
Add RLS policies with USING + WITH CHECK. Include rollback notes.

# ================================================== 4) DO NOT WRITE APPLICATION CODE

- Do NOT create React components, Worker handlers, or TS implementation files.
- Only create the folder tree, placeholder READMEs, .gitkeep, and the files listed in sections 2–3.

# ================================================== 5) ACCEPTANCE CHECKLIST (verify before committing)

- [ ] All directories exist as listed, each with `.gitkeep` and a short `README.md` if otherwise empty.
- [ ] `apps/web/public/kb/index.json` and `getting-started.md` exist with starter content.
- [ ] `.cursorrules`, `.cursorignore`, optional `.cursorindexingignore`, and `.vscode/settings.json` exist at repo root.
- [ ] `docs/EDITOR.md` and `docs/CURSOR_MODES.md` created.
- [ ] No app logic files were generated.
- [ ] Commit created: "chore(scaffold): QiEOS structure + cursor agents/rules".

Proceed to apply the file/folder changes now.

Want me to also give you a tiny follow-up prompt that sets Windows read-only flags and Git skip-worktree on the “do-not-touch” paths right after Cursor finishes writing these files?

---

# Source: QiSuite_Dev_Bible.md

# QiSuite Dev Bible

## 📌 Project Overview

**QiSuite** is a modular second brain framework with:

- A desktop app (Electron + React + Tailwind)
- A hosted chatbot (Cloudflare Worker API)
- Core assistant ("Qinnie") that runs both locally and in the cloud

Main goal: create a modular and extensible foundation for AI-first business tools like:

- QiFileFlow (duplicate file cleaner + OCR)
- QiNote (semantic note builder)
- QiLifeFeed (daily logs, time tracking, automations)
- QiMind (vector memory / contextual Qinnie)

---

## 🔧 Stack Overview

### Desktop (Electron + React + Tailwind)

- Runs on `Electron` using Vite as the dev server.
- Hot-reloads React UI with Tailwind CSS.
- Has local storage-based settings management (for API keys, etc.).
- Loads Qinnie dock on all screens.

### Web API (Cloudflare Worker)

- POST endpoint: `/chat`
- Accepts `{ message }` JSON and returns `{ reply }`
- Will eventually support:
  - OpenAI + Ollama fallback
  - Per-client memory (KV store)
  - Branded deployment URLs

---

## ⚙️ Features (Current)

### ✅ Electron Shell

- Main window loads Vite app.
- Preload.js supports secure IPC for key storage.

### ✅ UI (React + Tailwind)

- Homepage with `Hero`, `Pitch`, `Pricing`, `Footer`
- Persistent `QinnieDock` open by default
- Responsive layout

### ✅ QinnieDock

- Floating assistant dock in lower right
- Open by default (can collapse)
- Settings panel (gear icon):
  - OpenAI Key
  - Worker URL
- Messages persist per session (local only)
- Replies fetched from Worker (if configured), else fallback

### ✅ Branding

- Core brand: **QiSuite**
- Powered by: **BuiltByRays™**
- All client-specific assets abstracted to `shared/theme.js`

### ✅ Worker API

- Cloudflare Worker endpoint: `/chat`
- Basic echo-style reply stub
- Ready for KV + OpenAI integrations

---

## 🔐 Settings Management

Uses localStorage for now:

- `OPENAI_API_KEY`
- `WORKER_API_URL`

Settings panel available inside Qinnie dock.

---

## 🧱 Folder Structure

```
QiSuite_Full_Build/
├── electron/
│   ├── main/              ← Electron startup logic
│   ├── renderer/
│   │   ├── pages/App.jsx
│   │   ├── components/    ← Modular UI: Hero, Pitch, Pricing, Dock, etc.
│   └── package.json
│
├── shared/
│   └── theme.js           ← Branding config
│
├── workers/
│   ├── src/index.js       ← Cloudflare Worker logic
│   └── wrangler.toml
└── README.md              ← Full setup & deployment guide
```

---

## 🌐 Cloudflare Deployment

### Setup

```bash
npm install -g wrangler
wrangler login
cd workers
wrangler publish
```

### URL

```http
POST https://your-app-name.workers.dev/chat
Content-Type: application/json
Body: { "message": "Hello Qinnie" }
```

### KV / Secrets (coming)

```bash
wrangler kv:namespace create QINNIE_KV
wrangler secret put OPENAI_API_KEY
```

---

## 🔮 Next Sprints

### Sprint 1: QiFileFlow

- Duplicate file detection (hashing)
- OCR and semantic labeling
- File quarantine + tagging UI

### Sprint 2: QiMind

- Local vector database (Chroma, Weaviate, or Ollama embed)
- RAG + search for enhanced memory in Qinnie

### Sprint 3: Client Portal Mode

- Convert UI into mobile-friendly PWA
- Tailwind theme overrides per client repo

---

## 🧠 Notes

- All branding should come from `theme.js`
- Clients can fork or clone this repo and deploy their own version
- Shared modules will live in `modules/` soon

---

## ✍️ Maintainer

**Q / Cody Rice Velasquez**
`qially.me` · `qiSuite.app` · `BuiltByRays™`

---

> “Go big or go home.” – The mission is modular sovereignty. This is just the beginning.
> Session’s reset, so I rebuilt your **entire Zoho AI Blog Pipeline Blueprint** (Solid-but-Big) with OpenAI handling content + cover images. Here’s the **end-to-end package**:

---

# **Zoho AI Blog Pipeline – Full Blueprint**

## **1. System Overview**

- **Workflow:** AI generates → Draft → Approval → Publish → Social Share → Archive

- **Core Tools:**

  - **Zoho Flow** (automation backbone)

  - **Zoho Projects/Tasks** (content pipeline board)

  - **Zoho Forms** (approval gateway)

  - **Zoho WorkDrive** (draft storage)

  - **Zoho Sites** (blog CMS)

  - **Zoho Social** (distribution)

  - **OpenAI (GPT-4 + DALL·E)** (content + images)

---

## **2. Folder & Task Structure**

### **WorkDrive Structure**

```
/Blog
  /Topics
  /Drafts
  /Approved
  /Published
```

### **Projects Board Columns**

- Topics → Draft → Pending Approval → Approved → Published

---

## **3. Flow Architecture**

### **Flow 1: Topic Generation**

- **Trigger:** Monthly schedule (1st day)

- **Action:**

  - OpenAI → generate 4–8 SEO blog topics

  - Create Zoho Tasks with titles, keywords, dates

### **Flow 2: Draft Creation**

- **Trigger:** New task enters “Draft”

- **Action:**

  - OpenAI → write full blog draft

  - DALL·E → create cover image

  - Save files to WorkDrive/Drafts

  - Update Task with WorkDrive links

### **Flow 3: Approval Workflow**

- **Trigger:** Draft ready

- **Action:**

  - Zoho Form auto-filled with article preview + approve/reject buttons

  - Submission updates task:

    - Approve → move to “Approved”

    - Reject → send back to “Draft” with comments

### **Flow 4: Publish**

- **Trigger:** Task moves to “Approved”

- **Action:**

  - Push article + image via Zoho Sites API

  - Mark task as “Published”

### **Flow 5: Social Share**

- **Trigger:** New blog published

- **Action:**

  - AI generates captions (long/short/hashtag variants)

  - Post via Zoho Social to LinkedIn, IG, Facebook, X

### **Flow 6: Archive**

- Move final draft + image to “Published” folder

- Log analytics in Zoho Analytics or Sheet

---

## **4. AI Prompt Templates**

### **Topic Generation**

```
Generate {X} blog post ideas for [brand/audience].
Focus on trending topics for next {month}.
Output: Title + 3 keywords + 1-sentence hook.
```

### **Blog Draft**

```
Write a {1,200}-word blog post for [brand/audience].
Tone: conversational, professional.
Include H2 sections, SEO keywords, and call-to-action.
Format: Markdown (Zoho compatible).
```

### **Cover Image**

```
Create a modern, vibrant cover image for a blog about [topic].
Style: minimal, brand colors (#hex).
Format: 1200x630px, no text.
```

---

## **5. Zoho Form (Approval Mockup)**

**Fields:**

- Article Title (auto-filled)

- Preview (link to WorkDrive)

- Approve (Yes/No radio)

- Feedback (multi-line)

- Submit button → triggers Flow update

---

## **6. Zoho Sites API (Publish)**

**Endpoint:**
`POST https://sites.zoho.com/api/v1/blogs/{siteId}/posts`

**Payload:**

```json
{
  "title": "Blog Title",
  "content": "<p>HTML of blog</p>",
  "image": "https://workdrive.link/image.jpg",
  "meta_title": "SEO Title",
  "meta_description": "SEO Description",
  "status": "published"
}
```

---

## **7. Social Share (Zoho Social API)**

**Caption Generator Example:**

```
Create 3 caption variants:
1. Conversational (LinkedIn)
2. Short + emoji (Twitter/X)
3. Visual hook (Instagram/Facebook)
Include CTA: "Read full post → [link]"
```

---

## **8. Mockup Overview**

- **Kanban Board:** Visual pipeline from topic → publish

- **Form Preview:** Simple approve/reject flow

- **Automation Map:** Arrows showing Flow steps & triggers

- **Branding:** OpenAI images, QiLife style guide colors

---

## **Next Steps**

1. Configure WorkDrive & Projects structure.

2. Build Flows (start with Topic Gen + Draft Creation).

3. Create Approval Form → link to Flow.

4. Configure Zoho Sites API → test publish.

5. Set up Zoho Social → test captions.

---

Totally hear you—Tauri’s toolchain and Tailwind setup can feel like a hurdle when all you want is a simple GUI shell. Let’s pause on Tailwind and get you a crisp-looking app with plain CSS so you can move on to wiring up the Python bits, then we can layer in fancier styling later.

---

## A. Strip out Tailwind for now

1. **Remove** the Tailwind imports and configs:

   - Delete or ignore `tailwind.config.*` and `postcss.config.*`.

   - In your **`src/index.css`**, wipe it clean (or delete and recreate) with:

     ```css
     /* src/index.css */
     body,
     html,
     #root {
       margin: 0;
       padding: 0;
       height: 100%;
       font-family: sans-serif;
       background: #f5f5f5;
     }
     .app-header {
       background: white;
       box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
       padding: 16px;
       font-size: 1.5rem;
       font-weight: 500;
     }
     .split-view {
       display: flex;
       height: calc(100% - 64px); /* header is 64px tall */
     }
     .sidebar {
       width: 240px;
       background: white;
       border-right: 1px solid #ddd;
       overflow-y: auto;
     }
     .sidebar button {
       display: block;
       width: 100%;
       padding: 12px 16px;
       border: none;
       background: none;
       text-align: left;
       font-size: 1rem;
       cursor: pointer;
     }
     .sidebar button:hover {
       background: #eee;
     }
     .sidebar .active {
       background: #007acc;
       color: white;
     }
     .content {
       flex: 1;
       padding: 24px;
       overflow-y: auto;
     }
     .card {
       background: white;
       padding: 24px;
       max-width: 600px;
       margin: 0 auto;
       box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
       border-radius: 8px;
     }
     .card h2 {
       margin-top: 0;
       margin-bottom: 12px;
       font-size: 1.25rem;
     }
     ```

2. **Update your React components** to use these class names:

   ```tsx
   // src/App.tsx
   import React, { useState } from "react";
   import Sidebar from "./components/Sidebar";
   import DuplicateCleaner from "./components/DuplicateCleaner";
   import FileFlow from "./components/FileFlow";
   import QuickReceipt from "./components/QuickReceipt";
   import "./index.css";

   const modules = {
     "duplicate-cleaner": <DuplicateCleaner />,
     "file-flow":        <FileFlow />,
     "quick-receipt":    <QuickReceipt />
   };

   export default function App() {
     const [active, setActive] = useState<keyof typeof modules>("duplicate-cleaner");
     return (
       <div className="app-header">QILife One 2.0</div>
       <div className="split-view">
         <Sidebar active={active} onSelect={setActive} />
         <div className="content">
           {modules[active]}
         </div>
       </div>
     );
   }
   ```

   ```tsx
   // src/components/Sidebar.tsx
   import React from "react";
   type Props = { active: string; onSelect: (k: string) => void };
   const items = [
     ["duplicate-cleaner", "Duplicate Cleaner"],
     ["file-flow", "File Flow"],
     ["quick-receipt", "Quick Receipt"],
   ] as const;

   export default function Sidebar({ active, onSelect }: Props) {
     return (
       <div className="sidebar">
         {items.map(([key, label]) => (
           <button
             key={key}
             className={active === key ? "active" : ""}
             onClick={() => onSelect(key)}
           >
             {label}
           </button>
         ))}
       </div>
     );
   }
   ```

   ```tsx
   // src/components/DuplicateCleaner.tsx
   import React from "react";
   export default function DuplicateCleaner() {
     return (
       <div className="card">
         <h2>Duplicate Cleaner</h2>
         <p>Placeholder UI for Duplicate Cleaner module</p>
       </div>
     );
   }
   ```

   And similarly wrap `FileFlow` and `QuickReceipt` in `.card`.

3. **Run** as before:

   ```bash
   npm install
   npm run tauri dev
   ```

You’ll immediately get a respectable white‐and‐gray UI with a header, sidebar buttons that highlight, and centered cards—no Tailwind or PostCSS headaches.

---

## B. Next steps

Once you’re comfortable with the shell, we can:

- Wire up the Tauri commands to each module.

- Introduce a lightweight component library (e.g. **Chakra UI** or **Material-UI**) if you want richer styling without custom PostCSS.

- Circle back to Tailwind (or another utility lib) once the core features are working.

Does this plain-CSS approach feel like a better springboard? Let me know and I’ll help with any tweaks or next wiring steps.

Q, step away from the Big Red “Delete Index” button. Some of those index files are _holding the whole wig on_. Let’s do this clean so you stop chasing phantom errors.

# What “index.\*” actually does (quick and real)

- **Barrel/auto‑resolve**: `import x from './foo'` actually loads `./foo/index.(js|ts|tsx)`. Delete that index and every import like that breaks until you change it to `./foo/actualFile`.

- **Entry points**: `renderer/src/index.tsx` (React entry), `app/main/main.js` (Electron main), and the root `index.html` (Vite) are non‑negotiable. Kill those and the app just… won’t.

- **Static folders**: Random `index.html` files sprinkled in content folders (meant to hide directory listing on web servers) are fine to delete in an Electron app—they’re noise.

# What you can delete safely (now)

- Any **index.html** sitting inside vault/docs/marketing/etc. that’s not the **root** app page.

- Any **index.js/ts** that’s just a dead barrel file (it only re‑exports from another file) **IF** you also fix the imports that point at the folder.

# What you must NOT delete

- `qilife-one/app/renderer/src/index.tsx` (or your renderer’s main index file)

- `qilife-one/app/main/main.js` (Electron main process entry)

- Root `index.html` used by Vite/Electron to load the renderer

- Any `preload.js` that your `BrowserWindow` is configured to use

# Fast safety check before you go snip‑snip

**Do this in the project root.**

## 1) Find all imports that rely on folder auto‑index

- **PowerShell (Windows)**:

```powershell
# shows imports that end at a folder (no file extension) – likely relying on index files
(Get-ChildItem -Recurse -Include *.js,*.ts,*.tsx |
  Select-String -Pattern "from\s+['""](\.\/|\.\.\/)[^'""]+['""]" ) |
  Where-Object { $_.Line -notmatch "\.(js|ts|tsx|jsx|mjs|cjs)['""]$" } |
  Select-Object Path, LineNumber, Line
```

- **ripgrep (if you have it):**

```bash
rg -n "from ['\"](\.\/|\.\.\/)[^'\"\.]+['\"]" --glob '!**/dist/**' --glob '!**/node_modules/**'
```

These hits are the **imports you’ll break** if you delete the corresponding `index.*`. Plan to rewrite them to point at actual files (e.g., `./foo/index.ts` → `./foo/fooService.ts`).

## 2) Dry‑run delete without chaos

Rename suspected index files first:

```powershell
Get-ChildItem -Recurse -Include index.js,index.ts,index.tsx,index.html `
| Where-Object { $_.FullName -notmatch "renderer\\src\\index\.tsx|app\\main\\main\.js$|\\index\.html$" } `
| Rename-Item -NewName { $_.Name + ".bak" }
```

Then run:

```bash
npm run typecheck  # if you have tsc configured
npm run build      # see what actually fails
```

If it builds clean, delete the `.bak` files. If not, fix the imports the errors complain about.

## 3) Convert barrels to explicit files (when you _do_ remove them)

Example:

```diff
- import { clean } from './fileflow';
+ import { clean } from './fileflow/clean.js';
```

Do a quick project‑wide replace once you decide on file names.

# Recommendation for your repo right now

## Fast & Dirty (10–15 min)

1. **Keep**:

   - `app/main/main.js`

   - `app/renderer/src/index.tsx`

   - root `index.html`

   - any `preload.js` referenced in `main.js`

2. **Rename** every other `index.*` to `.bak` (command above).

3. Run `npm run build`. Fix only the imports that explode. Delete the rest.

## Solid & Safe (1–2 hrs)

- Replace folder‑level imports with file‑specific imports across the repo (search/replace).

- Delete dead barrel `index.*` files.

- Add **eslint-plugin-import** rules so unresolved imports scream early:

```json
// .eslintrc
{
  "plugins": ["import"],
  "rules": {
    "import/no-unresolved": "error",
    "import/extensions": [
      "error",
      "ignorePackages",
      { "js": "never", "ts": "never", "tsx": "never" }
    ]
  },
  "settings": {
    "import/resolver": { "node": { "extensions": [".js", ".ts", ".tsx"] } }
  }
}
```

## Big Energy (future‑proof)

- **Disallow folder imports** entirely with a lint rule:

```json
"no-restricted-syntax": ["error", {
  "selector": "ImportDeclaration[source.value=/^(\\.\\.?\\/)(?!.*\\.(js|ts|tsx)$).*/]",
  "message": "Import a file, not a folder. Explicit > implicit."
}]
```

- Add a **path alias** system so you never deal with `../../..` nonsense again. In `tsconfig.json`:

```json
{
  "compilerOptions": {
    "baseUrl": ".",
    "paths": {
      "@main/*": ["app/main/*"],
      "@renderer/*": ["app/renderer/*"],
      "@backend/*": ["backend/*"]
    }
  }
}
```

And wire webpack/vite to respect those aliases.

# About deleting the _main_ index

You **can** test it: rename the main index (renderer entry) and see if your bundler pukes. Spoiler: it will. Keep the main app entry + Electron main. Those are entry points, not directory‑listing stubs.

---

Say the word and I’ll drop the **zip** with:

- Clean **Electron + Python** split

- No dumb index barrels

- Aliases configured

- Lint rules that block folder‑imports

- Example import patterns (explicit files only)

- Post‑install script to spawn the Python backend

You want **Fast & Dirty** minimal skeleton or **Big Energy** fully commented build‑ready package?

Short answer: it’ll work when we stop tripping over our own shoelaces. Long answer: here’s the game plan to get Cockpit actually launching your backend, showing live status, and not pretending files live in folders that don’t exist. I read the files you dropped in, and a few issues are elbowing each other for “most annoying.” I’m fixing them all in one pass below.

# What’s broken (and why I’m sighing)

1. Renderer vs Electron bridge mismatch

   - `preload.js` exports `electronAPI.launchBackend()`, but `ConnectionManager.jsx` calls `window.require('electron')` and tries `ipcRenderer.invoke(...)`. That won’t fly with `contextIsolation: true`. Use the exposed API instead.

2. Backend launcher command is… not a command

   - In `main.js` your ternary is built on a truthy string, so it always picks the Windows branch, and the command string is malformed. Also, activating the venv and starting Uvicorn needs platform‑specific spawn args, not wishful thinking.

3. Vite/Tailwind paths and folder layout

   - `index.html` imports `/src/main.jsx`, but your `main.jsx`, `App.jsx`, and components are at the project root. Tailwind is looking under `./src/**/*` too. We either move files into `src/` or change all the tooling. Moving is cleaner.

4. Frontend health check expectations

   - UI is hitting `http://localhost:7130/api/run/` on connect. If the backend isn’t up yet, we should trigger the launcher and poll a simple `/health` before loading apps. Right now it just shrugs.

# The fix — step by step

Do these in order, then you can run `npm run electron-dev` like a functional adult.

## 1) Reshuffle the frontend into a proper `src/` layout

Create these folders and move files:

`/src   /components     Dashboard.jsx     Header.jsx     ConnectionManager.jsx     LogViewer.jsx     MiniAppCard.jsx   App.jsx   main.jsx   index.css index.html`

Update imports inside `App.jsx` after moving:

`- import Dashboard from './components/Dashboard' - import Header from './components/Header' - import ConnectionManager from './components/ConnectionManager' + import Dashboard from './components/Dashboard' + import Header from './components/Header' + import ConnectionManager from './components/ConnectionManager'`

Yes, paths stay the same after the move because they’re now relative to `/src`.

`index.html` already points to `/src/main.jsx`, so once the files live there, builds stop sulking.

## 2) Tailwind config: make sure it actually sees your files

`tailwind.config.js`

`export default {    content: [ -    "./index.html", -    "./src/**/*.{js,ts,jsx,tsx}", +    "./index.html", +    "./src/**/*.{js,jsx,ts,tsx}",    ],    theme: { /* unchanged */ }  }`

## 3) Fix the secure Renderer ↔ Main bridge usage

`preload.js` is fine. Use it.

`ConnectionManager.jsx` — replace the raw `ipcRenderer` usage and add a real health check with basic polling:

`-import React, { useState } from 'react'; -import axios from 'axios'; +import React, { useState } from 'react'; +import axios from 'axios';   export default function ConnectionManager({ onConnect }) {    const [status, setStatus] = useState("Disconnected");  -  const checkBackend = async () => { +  const checkBackend = async () => {      try { -      await axios.get("http://localhost:7130/api/run/"); -      setStatus("Connected"); -      onConnect(); +      await axios.get("http://localhost:7130/health"); +      setStatus("Connected"); +      onConnect();      } catch (e) {        console.warn("Backend not running. Attempting to launch..."); -      launchBackend(); +      await launchBackend(); +      await waitForHealth();      }    };  -  const launchBackend = async () => { -    const { ipcRenderer } = window.require('electron'); -    ipcRenderer.invoke("launch-backend") -      .then(() => { -        setStatus("Connected"); -        onConnect(); -      }) -      .catch(() => { -        setStatus("Failed to start"); -      }); -  }; +  const launchBackend = async () => { +    if (!window.electronAPI?.launchBackend) { +      setStatus("No bridge"); +      throw new Error("electronAPI not available"); +    } +    await window.electronAPI.launchBackend(); +  }; + +  const waitForHealth = async (timeoutMs = 15000) => { +    const start = Date.now(); +    while (Date.now() - start < timeoutMs) { +      try { +        await axios.get("http://localhost:7130/health", { timeout: 1000 }); +        setStatus("Connected"); +        onConnect(); +        return; +      } catch { +        await new Promise(r => setTimeout(r, 500)); +      } +    } +    setStatus("Failed to start"); +    throw new Error("Backend failed to become healthy in time"); +  };     return (      <div className="absolute top-4 right-6">        <button          onClick={checkBackend}          className="bg-electric text-white px-4 py-2 rounded shadow hover:bg-blue-600"        >          {status === "Connected" ? "Connected" : "Connect"}        </button>      </div>    );  }`

Also update `App.jsx` so Connect follows the same logic and doesn’t hammer `/api/run/` blindly:

`-  const fetchApps = async () => { +  const fetchApps = async () => {      setIsLoading(true)      try { -      const response = await axios.get('http://localhost:7130/api/run/') +      const response = await axios.get('http://localhost:7130/api/apps')        setApps(response.data)      } catch (err) {        console.error('Failed to fetch miniapps:', err)        setApps([])      } finally {        setIsLoading(false)      }    }     const handleConnect = async () => {      if (!isConnected) { -      // Try to connect and fetch apps        try { -        await fetchApps() +        // Ask ConnectionManager’s button or call the bridge directly if needed. +        if (window.electronAPI?.launchBackend) { +          await window.electronAPI.launchBackend() +        } +        // wait for health quickly +        await axios.get('http://localhost:7130/health', { timeout: 5000 }) +        await fetchApps()          setIsConnected(true)        } catch (err) {          console.error('Failed to connect:', err)          setIsConnected(false)        }      } else {        setIsConnected(false)        setApps([])      }    }`

If your backend doesn’t have `/health` and `/api/apps` yet, you can point these to whatever you actually have. I’m standardizing the endpoints because future-you will thank me.

## 4) Make the backend launcher actually run on Windows, macOS, and Linux

Replace your `ipcMain.handle('launch-backend', ...)` in `main.js` with a sane, cross‑platform spawn. This version:

- Detects platform

- Activates the venv if present

- Uses `uvicorn main:app --host 127.0.0.1 --port 7130`

- Leaves `--reload` for dev only

- Logs output so you can see what exploded

`` // main.js  const { app, BrowserWindow, ipcMain } = require('electron')  const path = require('path')  const isDev = !app.isPackaged  const { spawn } = require('child_process')   let mainWindow   function createWindow() { /* unchanged */ }   app.whenReady().then(() => {    createWindow()     // Handle backend launch from frontend request -  ipcMain.handle('launch-backend', () => { -    const backendPath = path.join(__dirname, '..', 'QiLifeCore-BackendAPI') -    const venvActivate = process.platform === 'win32' -      ? path.join(backendPath, 'venv', 'Scripts', 'activate.bat') -      : path.join(backendPath, 'venv', 'bin', 'activate') - -    const command = 'cmd.exe /c "${venvActivate} && ${backendPath} && python -m uvicorn main:app --reload --port 7130"' -      ? `cmd.exe /c "${venvActivate} && uvicorn main:app --reload"` -      : `bash -c "source ${venvActivate} && uvicorn main:app --reload"` - -    console.log('Launching backend from:', backendPath) -    spawn(command, { cwd: backendPath, shell: true }) -  }) +  ipcMain.handle('launch-backend', async () => { +    const backendPath = path.join(__dirname, '..', 'QiLifeCore-BackendAPI') +    const isWin = process.platform === 'win32' +    const venvPython = isWin +      ? path.join(backendPath, 'venv', 'Scripts', 'python.exe') +      : path.join(backendPath, 'venv', 'bin', 'python') + +    // Prefer venv python if it exists, otherwise fall back to system python +    const pythonCmd = require('fs').existsSync(venvPython) +      ? venvPython +      : (isWin ? 'python' : 'python3') + +    const uvicornArgs = [ +      '-m', 'uvicorn', 'main:app', +      '--host', '127.0.0.1', +      '--port', '7130', +      ...(isDev ? ['--reload'] : []) +    ] + +    console.log('Launching backend:', pythonCmd, uvicornArgs.join(' ')) +    const child = spawn(pythonCmd, uvicornArgs, { cwd: backendPath, shell: false }) + +    child.stdout.on('data', d => console.log('[backend]', d.toString().trim())) +    child.stderr.on('data', d => console.error('[backend]', d.toString().trim())) +    child.on('close', code => console.log('Backend exited with code', code)) + +    return true +  })  })   app.on('window-all-closed', () => {    if (process.platform !== 'darwin') app.quit()  }) ``

## 5) Dev workflow that doesn’t make you cry

- Install deps:

  `npm install`

- Start vite + electron together:

  `npm run electron-dev`

- Click “Connect” in the UI. It will:

  1. Try `/health`

  2. If down, call the bridge to launch backend

  3. Poll `/health` for up to ~15s

  4. Load `/api/apps` and render

If you don’t have `/health` in the FastAPI backend yet, add the world’s most boring endpoint:

`# in QiLifeCore-BackendAPI/main.py from fastapi import FastAPI  app = FastAPI()  @app.get("/health") def health():     return {"ok": True}  @app.get("/api/apps") def apps():     # TODO: wire to your real mini-app registry     return ["FileFlow Duplicate Cleaner", "Cockpit Test App"]`

## 6) Optional polish so it feels alive

- `Header.jsx` connect button is a bit confused: if you’re connected, show Disconnect, but don’t route that through the same `onConnect`. You already handle this in `App.jsx`, so it’s fine. Consider disabling while polling so humans don’t click like caffeinated woodpeckers.

- `Dashboard.jsx` metrics are faked. Later, read real system stats from backend via a `/metrics` endpoint. For now, keep the vibe.

# TL;DR build order

1. Move files into `/src` as above

2. Patch `ConnectionManager.jsx`, `App.jsx`, `main.js` exactly as shown

3. Ensure backend has `/health` and `/api/apps`

4. `npm run electron-dev`

5. Click Connect. It should launch the backend and populate apps, like a responsible adult app would.

# What you’ll get after this pass

- Connect button that actually starts the backend and waits for it to be ready

- No forbidden `ipcRenderer` shenanigans in the Renderer

- Vite and Tailwind no longer blindfolded

- A clean path to packaging with `npm run dist`

If you want me to also wire the live logs (`LogViewer.jsx`) against a FastAPI `websocket` endpoint, that’s the next chunk: add `/ws/{log}` in the backend using `WebSocket` and stream `uvicorn` or per‑mini‑app logs. For today, let’s make the ignition key turn the engine instead of the wipers.

Here you go—clean, receipt-ready, Obsidian-friendly. Two files: **Dev Docs** and **SOP**. Paste straight into your vault.

---

# `DEV_DOCS_qially-support.md`

````md
---
title: "QiAlly Support KB — Dev Docs"
project: "access.qially.com/support"
owner: "QiAlly (Q)"
status: "active"
stack: ["Astro", "Starlight", "Cloudflare Pages/Workers", "Markdown/MDX"]
tags:
  [
    "docs",
    "kb",
    "astro",
    "starlight",
    "cloudflare",
    "elevenlabs",
    "zoho-bookings",
  ]
updated: "2025-09-13"
---

# QiAlly Support KB — Developer Documentation

## 0) Purpose

A lightweight, public-facing knowledge base at **https://access.qially.com/support** with search, ToC, clean sidebar, optional ElevenLabs voice bubble, and booking button/embed.

---

## 1) Architecture Overview

- **Framework**: Astro + Starlight (static site generator; MD/MDX content, built-in Pagefind search).
- **Hosting**: Cloudflare Pages **or** Worker Assets. We mount under **`/support`** using Astro `base: '/support'`.
- **Path Ownership**:
  - If the rest of `access.qially.com` is separate, a **Worker** routes `access.qially.com/support*` to this build.
  - If this repo _is_ the access site, just add the `/support` docs app inside and keep `base: '/support'`.

---

## 2) Local Dev

### Prereqs

- Node 20+
- pnpm or npm
- Cloudflare Wrangler (`npm i -D wrangler`) if using Worker Assets

### Commands

```bash
# Scaffold (first time)
npm create astro@latest -- --template starlight
# Dev
npm i
npm run dev
# Build (respecting base=/support)
npm run build
# Serve via Worker (if using Worker Assets)
npx wrangler deploy
```
````

---

## 3) Config

### `astro.config.mjs` (key bits)

```ts
import { defineConfig, envField } from "astro/config";
import starlight from "@astrojs/starlight";

export default defineConfig({
  site: "https://access.qially.com",
  base: "/support",
  integrations: [
    starlight({
      title: "QiAlly — Support",
      description: "How we work, expectations, billing, boundaries, and help.",
      lastUpdated: true,
      tableOfContents: { minHeadingLevel: 2, maxHeadingLevel: 3 },
      sidebar: [
        { label: "Start", items: ["index"] },
        {
          label: "Working Together",
          items: [
            "how-we-work",
            "communication",
            "agreements-expectations",
            "revisions-and-change-requests",
          ],
        },
        {
          label: "Ops & Safety",
          items: [
            "billing-and-payments",
            "security-and-access",
            "support-hours",
          ],
        },
        { label: "Get Help", items: ["book-time"] },
      ],
      head: [
        {
          tag: "script",
          attrs: {
            src: "https://unpkg.com/@elevenlabs/convai-widget-embed",
            async: true,
            type: "text/javascript",
          },
        },
      ],
    }),
  ],
  env: {
    schema: {
      PUBLIC_ELEVENLABS_AGENT_ID: envField.string({
        context: "client",
        access: "public",
        optional: true,
      }),
      PUBLIC_BOOKING_URL: envField.string({
        context: "client",
        access: "public",
        optional: true,
      }),
    },
  },
});
```

### Env

Create `.env` or Pages env vars:

```
PUBLIC_BOOKING_URL=https://bookings.zoho.com/your-page
PUBLIC_ELEVENLABS_AGENT_ID=XXXXXXXX
```

> Only **PUBLIC\_\*** envs appear client-side. Do not store secrets here.

---

## 4) Content Structure

```
src/
  content/
    docs/
      index.md
      how-we-work.md
      communication.md
      agreements-expectations.md
      revisions-and-change-requests.md
      billing-and-payments.md
      security-and-access.md
      support-hours.md
      book-time.mdx
  components/
    BookingEmbed.astro
    ConvaiWidget.astro (optional)
```

### Sample Content Frontmatter

```md
---
title: How I Work
description: Process, deliverables, and collaboration rhythm.
updated: 2025-09-13
---
```

### Booking Embed

`src/components/BookingEmbed.astro`

```astro
---
const url = import.meta.env.PUBLIC_BOOKING_URL ?? 'https://bookings.zoho.com/your-page';
---
<div style="width:100%;height:min(1200px,100vh);">
  <iframe src={url} style="width:100%;height:100%;border:0;" loading="lazy" />
</div>
```

`src/content/docs/book-time.mdx`

```mdx
---
title: Book Time
description: Meet with Q for direct help.
updated: 2025-09-13
---

<a
  class="sl-button"
  href={import.meta.env.PUBLIC_BOOKING_URL}
  target="_blank"
  rel="noopener"
>
  Open Booking Page
</a>

<details>
  <summary>Prefer inline booking?</summary>
  <BookingEmbed />
</details>

export const components = {
  BookingEmbed: (await import("../../components/BookingEmbed.astro")).default,
};

;
```

### ElevenLabs Bubble (optional)

`src/components/ConvaiWidget.astro`

```astro
---
const agentId = import.meta.env.PUBLIC_ELEVENLABS_AGENT_ID;
---
{agentId && <elevenlabs-convai agent-id={agentId}></elevenlabs-convai>}
```

Mount it in a page or layout when ready.

---

## 5) Deployment Options

### A) Cloudflare Pages (simple)

- Build command: `npm run build`

- Output dir: `dist`

- Custom domain: `access.qially.com`

- Because `base='/support'`, the docs live under `/support` correctly.

### B) Worker Assets (subpath isolation)

`wrangler.toml`

```toml
name = "qially-support"
main = "src/worker.ts"
compatibility_date = "2025-09-13"

routes = [
  { pattern = "access.qially.com/support*", zone_name = "qially.com" }
]

[assets]
directory = "./dist"
not_found_handling = "single-page-application"
```

`src/worker.ts`

```ts
export default {
  async fetch(request, env) {
    return env.ASSETS.fetch(request);
  },
} as ExportedHandler;
```

---

## 6) Theming & UX

- Starlight handles dark mode and ToC out of the box.

- Keep headings H2/H3 for ToC clarity.

- Add small “Last updated” badge via frontmatter.

- Optional JSON-LD `FAQPage` if you add an FAQ doc.

---

## 7) QA Checklist

- `/support` loads on hard refresh (no 404).

- Search finds words in body titles and content.

- Booking link opens; embed shows on `/book-time`.

- If `PUBLIC_ELEVENLABS_AGENT_ID` present, widget appears and loads once.

- Lighthouse a11y ≥ 95.

---

## 8) Maintenance

- Content authors edit `src/content/docs/*`.

- PR requires preview build passing, markdown lint clean, and link check.

- Version bump in `CHANGELOG.md` on user-visible content changes.

---

````

---

# `SOP_qially-support.md`
```md
---
title: "QiAlly Support KB — SOP"
project: "access.qially.com/support"
owner: "QiAlly (Q)"
status: "active"
tags: ["sop", "ops", "docs", "kb", "workflow", "compliance"]
updated: "2025-09-13"
---

# Standard Operating Procedure — QiAlly Support KB

## 1) Scope
Covers content changes, releases, rollbacks, and routine hygiene for the public Support KB at `/support`.

---

## 2) Roles
- **Owner (Q):** approves policy language, signs off on releases.
- **Editor:** writes/updates docs, follows content checklist.
- **Maintainer:** runs builds, deploys, and handles incidents.

---

## 3) Branching & Releases
- `main`: production (immutable except via PR).
- `feat/<topic>`: content/features.
- **Release cadence:** as needed; prefer small, atomic changes.
- **PR requirements:**
  - Checklist completed (below).
  - Preview build green.
  - One reviewer sign-off (Owner or Maintainer).

---

## 4) Content Update Workflow
1. **Draft** in `feat/<topic>`: edit or add `src/content/docs/*.md(x)`.
2. **Lint & Links**:
   - Headings logical (H2/H3).
   - Short descriptions present.
   - Run link check (internal + external).
3. **Tone & Clarity**:
   - Plain language, no legalese unless needed.
   - Actionable bullets; “what to do,” not just “what is.”
4. **Metadata**:
   - Update frontmatter `updated: YYYY-MM-DD`.
   - Keep titles ≤ 60 chars, descriptions ≤ 160 chars.
5. **Preview**:
   - `npm run dev` locally, spot-check ToC, search, booking, and widget (if enabled).
6. **PR** → review → **merge**.
7. **Deploy**:
   - Pages: merge triggers build to `dist`.
   - Worker Assets: `npm run build && npx wrangler deploy`.
8. **Post-Deploy** smoke test:
   - `/support`, `/support/how-we-work`, `/support/book-time`.
   - Search returns recent changes.
   - Hard refresh works (SPA fallback ok).

---

## 5) Incident Response
- **Severity S1 (Critical):** Broken page load, widespread 404s, booking down.
  - Action: Rollback to last known good build.
    - Pages: redeploy previous successful build in dashboard.
    - Worker: `wrangler versions list` (if using), then redeploy prior bundle; or `git revert` and redeploy.
  - Notify stakeholders; note incident in `INCIDENTS.md`.
- **Severity S2 (Major):** Widget or search degraded, content error in legal/billing page.
  - Action: hotfix branch → targeted change → fast deploy.
- **Severity S3 (Minor):** Typos, small layout issues.
  - Action: batch into next routine release.

---

## 6) Governance — Policies & Sensitive Sections
- **Agreements & Expectations**, **Billing**, **Security** = **Owner approval required** before publish.
- Use versioned diffs in PR description. Keep **`CHANGELOG.md`** updated.

---

## 7) Accessibility & QA Checklist (run every PR)
- Headings sequential; ToC shows H2/H3 only.
- Alt text for any images (rare in this KB).
- Links: descriptive, not “click here”.
- Contrast and focus visible (Starlight default OK).
- Keyboard nav reaches booking button and any expandable content.

---

## 8) SEO Hygiene
- Frontmatter description present (≤160 chars).
- Unique titles per page.
- If an FAQ doc exists, consider a simple JSON-LD `FAQPage`.
- Canonical is the page URL under `/support`.

---

## 9) Integrations

### Booking
- **Env:** `PUBLIC_BOOKING_URL` must be a public, embeddable URL.
- Test both: button (new tab) and embed (loads in < 3s, responsive).

### ElevenLabs (optional)
- **Env:** `PUBLIC_ELEVENLABS_AGENT_ID` must be set for bubble to render.
- Domain allowlist must include `access.qially.com`.
- If issues: comment out `ConvaiWidget` include; keep script for later.

---

## 10) Backups & Export
- The repo is the source of truth.
- Weekly: tag `content-YYYY.MM.DD` after notable additions.
- Quarterly: export static HTML (`dist/`) and archive to S3/Drive.

---

## 11) Deletion Safety (AI/Editor Guardrails)
- Never hard-delete files.
- If removal needed, **move** to `.trash/` preserving path.
- Note deletions in PR description and request explicit approval.

---

## 12) Change Log Format (`CHANGELOG.md`)
````

## 2025-09-13

- Added: initial KB scaffold; pages (How I Work, Communication, Agreements, Revisions, Billing, Security, Hours, Book Time).

- Config: base=/support; Pagefind search default.

- Deploy: Worker Assets route access.qially.com/support\*.

```

---

## 13) Cursor Kickoff Prompt (for repeatability)
```

Role: Implement and maintain the QiAlly Support KB at access.qially.com/support using Astro + Starlight.
Objectives:

- Configure astro.config.mjs with site=[https://access.qially.com](https://access.qially.com/) and base=/support.

- Create the docs listed in Dev Docs.

- Implement BookingEmbed.astro and optional ConvaiWidget.astro.

- Ensure Pagefind search, ToC, dark mode, and SPA fallback work on subpath.

- Respect Deletion Safety: never delete; move to .trash/ preserving paths and report moves.

- Produce a PR with checklist, link check pass, and a CHANGELOG entry.

Deliverables:

- Working build in dist/; deploy via Pages or Worker Assets.

- README updates and Dev Docs refresh if paths/config change.

```

---

## 14) Review Cadence
- Monthly: review “Agreements & Expectations,” “Billing,” and “Security” for drift.
- Quarterly: run Lighthouse and accessibility review; track scores.

---

## 15) Exit Criteria
- Content complete and accurate.
- Search returns expected results.
- Booking flow (button and embed) verified.
- Optional voice widget verified or safely disabled.
```

—

Need me to prefill those docs with your exact policy language and booking URL next? I’ll wire it clean and keep your brand voice tight.


================================================================================
END: D:\QiEOS\docs\QiEOS.md
================================================================================


================================================================================
FILE: D:\QiEOS\docs\qu_note_developer_docs_v_1.md
================================================================================

# QuNote Developer Documentation v1.0

**QuNote** is an ADHD-friendly, neurodivergent-first, open-source note-taking system designed to treat notes as a living graph. It uses Obsidian as the authoring environment, while Quartz or Docsify act as publishing layers through a lightweight adapter. QuNote emphasizes a clear schema (frontmatter), predictable folder structures, and auto-generated mind maps, allowing users to visualize connections without dependency on heavy plugins.

---

## 1. Philosophy & Design Principles

- **Single source of truth:** The Obsidian vault is canonical. Static sites are mirrors.
- **Schema over plugins:** All critical data is stored in YAML frontmatter and markdown. No lock-in.
- **Low-friction capture:** Create new notes with unique IDs and sensible defaults in seconds.
- **Structured yet forgiving:** Defaults and validation guide use without blocking writing.
- **Graph-first design:** The system renders an auto mind map at build time.
- **Neurodivergent-friendly:** Prioritizes quick capture, focus tools, color-coded energy states, saved filters, and keyboard-driven workflows.

---

## 2. Core Vocabulary

- **QNode:** A single note with identity and metadata.
- **Orbit → System → Origin:** Context taxonomy.
  - **Orbit:** Broad life area (e.g., Business, Personal, Journals, Projects, Tasks, Spiritual, Private).
  - **System:** Subdomain or program (e.g., Snippets, CFO OS, EmpowerQNow, FileFlow).
  - **Origin:** Specific source or topic (e.g., language, client, module, place).
- **Influence:** Upstream note shaping the QNode.
- **Status:** Lifecycle state (`Inbox (New)`, `Processing`, `Active`, `Done`, `Dormant`, `Archive`, `Delete`).
- **Energy:** Attention alignment (`Surge`, `High`, `Moderate`, `Low`, `Blocked`).
- **Reflective Score:** Quick importance rating, 0–9. Recommended values: 0, 3, 6, 9 for consistency.

---

## 3. Vault Directory Structure

```
/vault/
  /00-Galaxy/        # indices and dashboards
  /10-Orbits/
    /Business/
    /Personal/
    /Journals/
    /Projects/
    /Tasks/
    /Spiritual/
    /Private/
  /20-Systems/
    /Snippets/
    /CFO-OS/
    /EmpowerQNow/
    /FileFlow/
  /30-Origins/
    /Languages/
      /Python/
      /JavaScript/
      /Shell/
    /Clients/
    /Places/
  /_templates/
  /_assets/
```

QNodes can be filed under any logical home. The frontmatter retains Orbit, System, and Origin metadata, so physical placement is flexible.

---

## 4. Frontmatter Schema

Each markdown note begins with:

```yaml
---
qid: QNO-20250825-001
slug: js-fetch-retry-expo-backoff
title: Fetch with retry and exponential backoff
summary: Minimal fetch retry with exponential backoff; add jitter for production.

type: [Snippet]
orbit: Dev
system: Snippets
origin: JavaScript
influence: [QNO-5]

status: Verified
energy: High
reflective_score: 6

tags: [web, http, retry]
event_dates: []
links: []

created: 2025-08-25T01:58:00-04:00
created_by: Cody
updated: 2025-08-25T02:20:00-04:00
updated_by: Cody
---
```

### JSON Schema (Frontmatter)

```json
{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "QuNoteFrontmatter",
  "type": "object",
  "required": ["qid", "slug", "title"],
  "properties": {
    "qid": {"type": "string", "pattern": "^QNO-[0-9]{8}-[0-9]{3}$"},
    "slug": {"type": "string"},
    "title": {"type": "string"},
    "summary": {"type": "string"},
    "type": {"type": ["string", "array"]},
    "orbit": {"type": "string"},
    "system": {"type": "string"},
    "origin": {"type": "string"},
    "influence": {"type": "array", "items": {"type": "string"}},
    "status": {"type": "string"},
    "energy": {"type": "string"},
    "reflective_score": {"type": "integer", "minimum": 0, "maximum": 9},
    "tags": {"type": "array", "items": {"type": "string"}},
    "event_dates": {"type": "array", "items": {"type": "string"}},
    "links": {"type": "array", "items": {"type": "string", "format": "uri"}},
    "created": {"type": "string"},
    "created_by": {"type": "string"},
    "updated": {"type": "string"},
    "updated_by": {"type": "string"}
  }
}
```

> **Note:** Earlier scoring values are accepted, but QuNote recommends 0, 3, 6, and 9 for simplicity.

---

## 5. Mapping from Notion CSV

| Notion Column                  | QuNote Frontmatter  | Notes |
|---|---|---|
| Title                          | `title`             | Use as-is. |
| Type                           | `type`              | Split on commas into an array. |
| Origin / Orbit / System        | `origin`, `orbit`, `system` | Map directly. |
| Influence / Linked Node        | `influence`, `links`| Internal links → `influence`; external → `links`. |
| Tags                           | `tags`              | Split and trim. |
| Status / Energy / Score        | `status`, `energy`, `reflective_score` | Normalize values. |
| Contextual Summary & Insight   | `summary`           | First paragraph only. |
| Description                    | body                | Main content. |
| Created / Last Edited          | `created`, `updated`| Parse to ISO 8601. Optional `created_by`, `updated_by`. |
| QuNote ID                      | `qid`               | Retain or generate. |
| Event Dates                    | `event_dates`       | Parse into list. |

---

## 6. Linking Conventions

- **Internal:** `[[qid Title]]` or `[[qid]]`. Converted to `[Title](relative/path)` at build.
- **Backlinks:** Native in Quartz; generated footer in Docsify.
- **Cross-references:** Defined in frontmatter under `influence`.

---

## 7. IDs, Slugs, and Naming

- **QID:** `QNO-YYYYMMDD-XXX` (e.g., `QNO-20250825-003`).
- **Slug:** Kebab case, filesystem safe. Default is derived from title.
- **Filename:** `YYYYMMDD--slug--qid.md` for sortability and stability.

---

## 8. Build Targets

### Docsify
- Lightweight, no build runtime.
- QuNote generates `_sidebar.md` grouped by Orbit/System.
- Adds code block copy buttons and backlinks footer.

### Quartz
- Supports Obsidian-style links and backlinks.
- QuNote syncs vault into `site/quartz/content/`.

**Shared theme:** Both use `site/theme.css` for consistency.

**Commands:**
```
python tools/build.py docsify
python tools/build.py quartz
python tools/build.py both
```

---

## 9. Auto Mind Map

QuNote produces a `graph.json` to power an interactive D3 mind map.

- **Nodes:** Represent QNodes with metadata (status, energy, tags, etc.).
- **Edges:** Derived from wikilinks, frontmatter `influence`, and taxonomy.
- **Viewer:** Docsify uses `/graph.html`; Quartz embeds as a custom page.

---

## 10. Tooling

- **build.py:** Orchestrates verification, sync, sidebar, graph.
- **verify_frontmatter.py:** Validates required keys and normalizes values.
- **sync_content.py:** Copies markdown to site directories and rewrites links.
- **build_sidebar.py:** Generates Docsify sidebar from frontmatter.
- **build_graph.py:** Produces `graph.json` from links and metadata.

All scripts are Python-only; optional dependencies: `pyyaml`, `python-frontmatter`.

---

## 11. Reference Implementations

**Wikilink Regex**
```python
WIKILINK = re.compile(r"\[\[([^\]|#]+)(?:\|([^\]]+))?\]\]")
```

**QID Generator**
```python
def next_qid(today, existing):
    base = today.strftime("%Y%m%d")
    seq = 1
    while True:
        qid = f"QNO-{base}-{seq:03d}"
        if qid not in existing:
            return qid
        seq += 1
```

**Normalization Maps**
```python
STATUS_MAP = {
  'inbox': 'Inbox (New)', 'processing': 'Processing', 'active': 'Active',
  'done': 'Done', 'dormant': 'Dormant', 'archive': 'Archive',
  'verified': 'Verified', 'delete': 'Delete'
}
ENERGY_MAP = {
  'surge': 'Surge', 'high': 'High', 'moderate': 'Moderate',
  'low': 'Low', 'blocked': 'Blocked'
}
```

---

## 12. Accessibility Features

- **Quick capture:** CLI spawns new QNode with ID and defaults.
- **Focus mode:** CSS hides sidebars/backlinks for reading.
- **Energy tint:** UI cues based on `energy` value.
- **Saved filters:** Predefined searches for focus.
- **Weekly review:** Surfaces random verified notes and stale inbox items.
- **Keyboard-first:** Minimal reliance on mouse.

---

## 13. Static Site Details

- **Docsify:** Minimal index, Prism highlighting, copy buttons, `_sidebar.md`, and `graph.html`.
- **Quartz:** Uses `content/` folder; `quartz.config.ts` imports `theme.css`; includes graph viewer page.

---

## 14. Testing

- **Unit tests:** Link resolution, QID generation, frontmatter validation.
- **Snapshot tests:** Compare fixture vault outputs.
- **Smoke test:** `python tools/build.py both` should complete successfully.

---

## 15. Migration Guide (Notion → QuNote)

1. Export Notion table as CSV.
2. Run `python tools/migrate_notion_csv.py path/to.csv`.
3. Generated markdown includes mapped frontmatter and content.
4. Verify QIDs, statuses, and energy normalization.
5. Build with `python tools/build.py both`.

**Edge cases handled:**
- Energy level case mismatches.
- Reflective score conversion.
- Origin/Orbit/Influence containing Notion URLs.

---

## 16. Security & Privacy

- No telemetry or external calls.
- Graph excludes private orbit by default.
- Option to exclude sensitive folders from sync.

---

## 17. Governance

- **License:** MIT.
- **Branching:** `main` is protected; PRs require passing tests.
- **Code Style:** Black (Python), Prettier (Markdown/JS).
- **Commits:** Conventional Commits enforced.
- **Issue Labels:** `bug`, `feat`, `docs`, `build`.

---

## 18. Roadmap

- Optional Electron wrapper for a standalone desktop app.
- Visual Kanban for status inside Docsify.
- Mermaid auto-diagrams for taxonomy clusters.
- Export/import adapters for Notion, Obsidian cache, and Google Drive text.

---

## 19. Templates

**QNode (General)**
```md
---
qid: QNO-{{date:YYYYMMDD}}-{{seq}}
slug: {{slug}}
title: {{title}}
summary: ""

type: [Note]
orbit: Journals
system:
origin:
influence: []

status: Inbox (New)
energy: Moderate
reflective_score: 3

tags: []
event_dates: []
links: []

created: {{now}}
created_by: {{user}}
updated: {{now}}
updated_by: {{user}}
---

## Notes
```

**Snippet**
```md
---
qid: QNO-{{date}}-{{seq}}
slug: {{slug}}
title: {{title}}
summary: ""

type: [Snippet]
orbit: Dev
system: Snippets
origin: {{language}}
status: Verified
energy: High
reflective_score: 6

tags: []
---

## Purpose

## Snippet
```{{language}}
# code here
```

## Notes
```

---

## 20. Repository Structure

```
qnote/
├─ vault/
│  ├─ 10-Orbits/
│  ├─ _templates/
│  └─ _assets/
├─ site/
│  ├─ docsify/
│  │  ├─ index.html
│  │  ├─ _sidebar.md (generated)
│  │  ├─ graph.html (viewer)
│  │  └─ theme.css
│  └─ quartz/
│     ├─ content/
│     └─ quartz.config.ts
├─ tools/
│  ├─ build.py
│  ├─ verify_frontmatter.py
│  ├─ sync_content.py
│  ├─ build_sidebar.py
│  ├─ build_graph.py
│  └─ migrate_notion_csv.py
├─ tests/
│  ├─ test_frontmatter.py
│  ├─ test_links.py
│  └─ fixtures/
├─ .pre-commit-config.yaml
├─ README.md
└─ LICENSE
```

---

## 21. Quick Start

1. Copy the repo skeleton.
2. Add your Obsidian vault under `/vault`.
3. Run `python tools/build.py both`.
4. Serve `site/docsify/` or build Quartz.

You now have a schema-driven, graph-visualized, Obsidian-authored knowledge base with interchangeable Quartz or Docsify outputs.



================================================================================
END: D:\QiEOS\docs\qu_note_developer_docs_v_1.md
================================================================================


================================================================================
FILE: D:\QiEOS\docs\cursor\CURSOR_MODES.md
================================================================================

# Cursor Custom Modes (Agents)

This document contains the Cursor AI agent presets for different domains. Copy each preset into **Cursor → Settings → Chat → Custom Modes** to enable specialized AI assistance.

## API Agent (server-side)

**SCOPE**: `workers/api/src/**` only.

**NEVER** touch paths listed in `.cursorrules` "NEVER MOVE/RENAME OR EDIT".

**RESPONSIBILITIES**:

- Hono endpoints with proper error handling
- Zod validation for all inputs
- Enforce claims + feature flags server-side
- All database writes via `supabaseAdmin` service-role client
- Never expose secrets to client code
- Implement proper RLS bypass for privileged operations

**PATTERNS**:

```typescript
// Route structure
export const authRoutes = new Hono().post("/session", async (c) => {
  const { token } = await c.req.json();
  // Validate token, enrich claims, return
});

// Always validate inputs
const schema = z.object({
  title: z.string().min(1),
  org_id: z.string().uuid(),
});
const { title, org_id } = schema.parse(await c.req.json());

// Enforce feature flags
if (!claims.features?.tasks) {
  return c.json({ error: "Feature not enabled" }, 403);
}
```

## UI Agent (web)

**SCOPE**: `apps/web/src/**` only.

**DO NOT** touch `public/` or `migrations/`.

**RESPONSIBILITIES**:

- React + TSX + Tailwind CSS components
- Keep files under 400 lines; split into smaller components
- Use `lib/api.ts` for API calls; avoid ad-hoc fetch
- Implement proper loading states and error handling
- Follow the established route structure (`/public`, `/auth`, `/client`, `/internal`, `/admin`)

**PATTERNS**:

```tsx
// Component structure
export function TaskList() {
  const { data: tasks, isLoading } = useQuery({
    queryKey: ["tasks"],
    queryFn: () => api.get("/tasks"),
  });

  if (isLoading) return <LoadingSpinner />;
  if (!tasks) return <ErrorMessage />;

  return (
    <div className="space-y-4">
      {tasks.map((task) => (
        <TaskCard key={task.id} task={task} />
      ))}
    </div>
  );
}

// Always use the API wrapper
import { api } from "@/lib/api";
const response = await api.post("/tasks", { title, description });
```

## KB/RAG Agent

**SCOPE**: `workers/api/src/routes/kb.ts`, `rag.ts`, and `apps/web/src/modules/kb|ai/rag/**`

**RESPONSIBILITIES**:

- Implement hierarchical collections + document rendering
- Provide citations for RAG responses
- Respect `org_id` + `company_ids` scoping
- **NEVER** leak data across tenants
- Handle both public (static files) and private (DB) knowledge bases

**PATTERNS**:

```typescript
// KB route structure
export const kbRoutes = new Hono()
  .get("/public", async (c) => {
    // Serve from apps/web/public/kb/
  })
  .get("/private", async (c) => {
    // Query kb_docs with org_id filter
    const docs = await supabaseAdmin
      .from("kb_docs")
      .select("*")
      .eq("org_id", claims.org_id);
  });

// RAG with citations
const results = await vectorSearch(query, {
  org_id: claims.org_id,
  company_ids: claims.company_ids,
});
return {
  answer: generatedAnswer,
  citations: results.map((r) => ({
    title: r.title,
    url: r.url,
    snippet: r.snippet,
  })),
};
```

## Migrations Agent (SQL)

**SCOPE**: `infra/supabase/migrations/**` but **DO NOT EDIT** existing files.

**RESPONSIBILITIES**:

- Create new numbered migration files only
- Add RLS policies with proper `USING` + `WITH CHECK` clauses
- Include rollback notes in comments
- Follow the established naming convention (`000_`, `010_`, etc.)
- Never modify existing migration files

**PATTERNS**:

```sql
-- Migration: 050_new_feature.sql
-- Description: Add new feature table with RLS
-- Rollback: DROP TABLE new_feature;

CREATE TABLE new_feature (
  id UUID PRIMARY KEY DEFAULT gen_random_uuid(),
  org_id UUID NOT NULL REFERENCES orgs(id),
  name TEXT NOT NULL,
  created_at TIMESTAMPTZ DEFAULT NOW()
);

-- Enable RLS
ALTER TABLE new_feature ENABLE ROW LEVEL SECURITY;

-- RLS Policy
CREATE POLICY "Users can view their org's features" ON new_feature
  FOR SELECT USING (
    org_id = qieos_org() OR
    qieos_role() = 'admin'
  );

CREATE POLICY "Users can insert their org's features" ON new_feature
  FOR INSERT WITH CHECK (
    org_id = qieos_org() AND
    qieos_role() IN ('admin', 'internal')
  );
```

## Usage Instructions

1. **Copy the relevant agent preset** into Cursor → Settings → Chat → Custom Modes
2. **Select the appropriate mode** before starting work on a domain
3. **Stay within scope** - each agent is designed for specific file paths
4. **Follow the patterns** - each agent has established coding patterns to follow
5. **Respect the guardrails** - never touch sacred paths or break established rules

## Switching Between Agents

- **API work**: Use API Agent for `workers/api/src/**`
- **UI work**: Use UI Agent for `apps/web/src/**`
- **Knowledge Base**: Use KB/RAG Agent for knowledge base and AI features
- **Database changes**: Use Migrations Agent for schema changes

Remember: Each agent is specialized and should not cross into other domains. This keeps the codebase organized and prevents AI drift.


================================================================================
END: D:\QiEOS\docs\cursor\CURSOR_MODES.md
================================================================================


================================================================================
FILE: D:\QiEOS\docs\cursor\EDITOR.md
================================================================================

# Editor Configuration & Workflow

## Cursor Custom Modes (Agents)

Use these custom modes for focused development:

- **API Agent**: Server-side development in `workers/api/src/**`
- **UI Agent**: Web frontend development in `apps/web/src/**`
- **KB/RAG Agent**: Knowledge base and RAG implementation
- **Migrations Agent**: SQL migrations in `infra/supabase/migrations/**`

## Workflow Best Practices

1. **Work in small diffs**: plan → approve → apply → run → iterate
2. **Keep sacred paths read-only**: Use Git skip-worktree and OS file locks
3. **Respect .cursorrules**: Never edit paths listed in "NEVER MOVE/RENAME OR EDIT"

## File Locking (Windows)

```bat
# Make files read-only
attrib +R Q:\qieos\workers\api\wrangler.toml
attrib +R Q:\qieos\infra\supabase\migrations\*.* /s
attrib +R Q:\qieos\apps\web\public\*.* /s

# Git skip-worktree (prevents accidental commits)
git update-index --skip-worktree workers/api/wrangler.toml
git update-index --skip-worktree infra/supabase/migrations/*
git update-index --skip-worktree apps/web/public/*

# Undo skip-worktree
git update-index --no-skip-worktree <path>
```

## Daily Flow

1. Turn on the right Agent/Mode for your task
2. Ensure `.cursorrules` is active (Global Rules)
3. Work in small, focused changes
4. Keep sacred paths protected and in `.cursorignore`


================================================================================
END: D:\QiEOS\docs\cursor\EDITOR.md
================================================================================


================================================================================
FILE: D:\QiEOS\docs\cursor\agents\auditor.md
================================================================================



================================================================================
END: D:\QiEOS\docs\cursor\agents\auditor.md
================================================================================


================================================================================
FILE: D:\QiEOS\docs\cursor\agents\conductor.md
================================================================================



================================================================================
END: D:\QiEOS\docs\cursor\agents\conductor.md
================================================================================


================================================================================
FILE: D:\QiEOS\docs\cursor\agents\kickoff.md
================================================================================

# Agent: Repo Concierge — Daily Kickoff

ROLE: Repo Concierge (Cursor)

## WORKSPACE CONTEXT
- **Workspace Root**: `Q:\` (where docs/ and QiEos/ live)
- **Repo Root**: `Q:\QiEos\` (the actual QiEOS monorepo)
- **God Doc**: `Q:\docs\QiEOS.md` (architecture, schema, workflows)
- **Dev Log**: `Q:\docs\DEV_LOG.md` (session history)
- **Safety Rules**: `Q:\QiEos\.cursor\rules\qieos.mdc`

PRINCIPLES
- Truth > speed; reversible changes; smallest diff first.
- **Never skip plan**: always summarize → propose → wait → then apply.
- Locks + safety: obey qieos.mdc (folder/file/section locks, no deletions, explicit approval).
- No inline styles in JSX/HTML. Use CSS Modules or Tailwind utilities.
- Every session must leave a trace in `Q:\docs\DEV_LOG.md`. Material changes also update `Q:\docs\QiEOS.md`.

TASKS (on start)
1) Verify environment:
   - Run `cd Q:\QiEos && git status` and ensure branch is correct.
   - Take snapshot:  
     ```powershell
     cd Q:\
     python docs/cursor/agents/scripts/snapshot.py --mode quick --flat-text --bundle --outdir snapshots
     ```
2) Gather context:
   - Read last entry in `Q:\docs\DEV_LOG.md` (What/Why/Next).
   - Read `Q:\docs\QiEOS.md` (God Doc: architecture, schema, workflows).
3) Repo summary:
   - Output 3–5 bullets describing current state of repo.
   - Note unresolved Open Questions from the devlog.
4) Propose plan:
   - 3 concrete actions that advance toward a **working app** (build/run/auth/migrations/core routes).
   - Each action = file(s) + why it matters.
   - Format as a checklist with expected time (~30–50 min).
5) Stop here — wait for explicit approval.
   - Print "**Ready to apply? (yes/no)**".
6) If approved:
   - Apply smallest diff first, respecting locks.
   - After each diff:
     - Run quick build/test (`cd Q:\QiEos && pnpm -r build`, `cd Q:\QiEos && pnpm -r test`).
     - Call **Logger** (`Q:\docs\cursor\agents\logger.md`) to append a session entry using `Q:\docs\cursor\agents\templates\session-entry.md`.
   - If architecture/schema/workflow changed: propose a short amendment diff for `Q:\docs\QiEOS.md`.

OUTPUT
- **Kickoff Summary** (bullets).
- **Plan Checklist** (top 3 actions).
- **Diff Preview** (for smallest diff only).
- **Confirmation prompt**: Ready to apply?


================================================================================
END: D:\QiEOS\docs\cursor\agents\kickoff.md
================================================================================


================================================================================
FILE: D:\QiEOS\docs\cursor\agents\logger.md
================================================================================



================================================================================
END: D:\QiEOS\docs\cursor\agents\logger.md
================================================================================


================================================================================
FILE: D:\QiEOS\docs\cursor\agents\planner.md
================================================================================

# Agent: Planner (Kickoff)

PRECHECK (must pass)
- Resolve $ROOT via: `git rev-parse --show-toplevel`
- Read $ROOT/.agents/state/turn.txt; if not "planner", print "Not my turn (planner)" and STOP.
- All file reads use $ROOT-absolute paths. Never write files.

PRINCIPLES
- Plan before code. Never mutate files.
- Respect qieos.mdc (locks, no deletions, explicit approval, no inline styles).
- Drive toward a WORKING APP: build/run/auth/migrations/core routes.

TASKS
1) Read context:
   - $ROOT/docs/DEV_LOG.md (latest entry: What/Why/Next)
   - $ROOT/docs/QiEOS.md (architecture/schema/workflows)
   - `git status` (summarize untracked/modified)
2) Summarize repo state in ≤5 bullets (include any blockers).
3) Propose a plan:
   - 3–5 steps, each with:
     - id (e.g., STEP-1), goal, files to touch, success criteria, est. time (≤50m total)
   - MUST respect locks. If change requires architecture/schema/workflow updates, mark `requires_godoc=true`.
4) Print **Diff Previews** for STEP-1 ONLY (no writes).
5) Save/Update plan:
   - Write the JSON plan content to stdout in a fenced block labeled PLAN-JSON.
   - Human will copy it into $ROOT/.agents/state/plan.json (or you may request a write if tools enabled).
6) WAIT for human: “yes, apply STEP-1” or “replan”.

OUTPUT
- “Repo State” bullets
- “Proposed Plan” checklist
- “Diff Preview (STEP-1)”
- PLAN-JSON fenced block
- “Ready to apply STEP-1? (yes/no)”

================================================================================
END: D:\QiEOS\docs\cursor\agents\planner.md
================================================================================


================================================================================
FILE: D:\QiEOS\docs\cursor\agents\README.md
================================================================================

# Agents Kit (QI-EOS)

## WORKSPACE CONTEXT
- **Workspace Root**: `Q:\` (where docs/ and QiEos/ live)
- **Repo Root**: `Q:\QiEos\` (the actual QiEOS monorepo)
- **God Doc**: `Q:\docs\QiEOS.md` (architecture, schema, workflows)
- **Dev Log**: `Q:\docs\DEV_LOG.md` (session history)
- **Safety Rules**: `Q:\QiEos\.cursor\rules\qieos.mdc`

This folder contains:
- **Safety Rules** all agents must follow.
- **Daily Kickoff** prompt for Cursor to resume work safely.
- **Auditor** prompt to scan for issues.
- **Logger** prompt + script to append entries to `Q:\docs\DEV_LOG.md`.
- **Templates** for session entries and PR change summaries.
- **Workflows** to keep sessions repeatable.

**Source of truth:** `Q:\docs\DEV_LOG.md` (create if not present).


================================================================================
END: D:\QiEOS\docs\cursor\agents\README.md
================================================================================


================================================================================
FILE: D:\QiEOS\docs\cursor\agents\safety-rules.md
================================================================================

# Safety Rules

## WORKSPACE CONTEXT
- **Workspace Root**: `Q:\` (where docs/ and QiEos/ live)
- **Repo Root**: `Q:\QiEos\` (the actual QiEOS monorepo)
- **God Doc**: `Q:\docs\QiEOS.md` (architecture, schema, workflows)
- **Dev Log**: `Q:\docs\DEV_LOG.md` (session history)
- **Safety Rules**: `Q:\QiEos\.cursor\rules\qieos.mdc`

These rules govern all human and Cursor edits to the QiEOS repo.  
They exist to preserve constitutional integrity and prevent accidental damage.

---

## 🔒 Lock Mechanisms

1. **Folder Locks**  
   - If `LOCKED.md` or `locked.md` exists in a folder, that folder is *constitutionally locked*.  
   - Any edits inside must be explicitly approved via RFC (QiEOS God Doc §12.2).  
   - Cursor agents must abort without explicit approval.

2. **File Locks**  
   - If the first line of a file contains a lock marker, that file is locked:  
     - Example (TypeScript/JS):  
       ```ts
       // 🚫 LOCKED — Do not edit without RFC approval (QiEOS God Doc §12.2)
       ```  
     - Example (SQL):  
       ```sql
       -- 🚫 LOCKED — Do not edit without RFC approval (QiEOS God Doc §12.2)
       ```  
     - Example (TOML):
       ```toml
       # 🚫 LOCKED — Do not edit without RFC approval (QiEOS God Doc §12.2)
       ```
   - Cursor agents must abort edits to locked files unless given explicit approval.

3. **Section Locks (Surgical)**
    - Lock just a region using start/end markers. Nothing inside may be edited; everything outside is free.
    - Markers (language-agnostic text; use the comment style of the file):
        - LOCK START: LOCK-START: <reason|ticket|RFC>
        - LOCK END: LOCK-END
    
    - Examples
        TypeScript/JS:
            ```
            // 🔒 LOCK-START: RLS policy generator — RFC-2025-09-13
            export const rlsPolicy = `...`
            // 🔓 LOCK-END
            ```
        SQL:
            ```
            -- 🔒 LOCK-START: canonical tables — RFC-2025-09-13
            create table if not exists orgs (...);
            -- 🔓 LOCK-END
            ```
        TOML:
            ```
            # 🔒 LOCK-START: wrangler bindings schema
            [vars]
            # ...
            # 🔓 LOCK-END
            ```
    - Enforcement rule:
        - Any code between a LOCK-START line and the next LOCK-END line is locked. Tools must abort edits in that span unless the maintaier  grants explicit approval.
    - Notes
        Nesting is not allowed (simplifies enforcement).
    If a LOCK-START has no matching LOCK-END, treat the lock as running to EOF.
---

## ⚖️ Editing Principles

1. **Explicit Approval Required**  
   - All Cursor-initiated edits require explicit approval from the maintainer.  
   - Agents must print planned diffs, wait for confirmation, then apply.

2. **No Deletions**  
   - Nothing is ever hard-deleted.  
   - Move removed files to `Q:\QiEos\.trash/YYYY-MM-DD/…` for historical traceability.

3. **Smallest Diffs**  
   - Prefer surgical, minimal changes over broad refactors.  
   - Break large changes into multiple small, reviewable steps.

4. **Traceability**  
   - Every applied change updates `Q:\docs\DEV_LOG.md` with:  
     - What was changed  
     - Why it was changed  
     - How it was changed  
     - Rollback instructions

5. **Secrets Management**  
   - Never commit secrets or env values.  
   - Use `.env*` files (ignored by Git) and CI/CD environment variables.

6. **Reversibility**  
   - Every PR or commit must include rollback notes in case the change must be undone.

7. **Respect Structure**  
   - Do not move or rename files without explaining downstream impacts in `Q:\docs\DEV_LOG.md`.  
   - Structural changes (folders, package names, migrations) require an RFC.

8. **Open Questions**  
   - If unsure, stop work.  
   - Log an open question in `Q:\docs\DEV_LOG.md` under the **"Open Questions"** section for discussion.

---

## ✅ Summary

- **Locked folder?** → Abort unless explicit RFC approval.  
- **Locked file line?** → Abort unless explicit RFC approval.  
- **All other changes?** → Print diffs, wait for explicit approval, log in devlog.  
- **Never delete, always trace, always reversible.**


================================================================================
END: D:\QiEOS\docs\cursor\agents\safety-rules.md
================================================================================


================================================================================
FILE: D:\QiEOS\docs\cursor\agents\worker.md
================================================================================



================================================================================
END: D:\QiEOS\docs\cursor\agents\worker.md
================================================================================


================================================================================
FILE: D:\QiEOS\docs\cursor\agents\scripts\code_extraction.ps1
================================================================================

$repo = Split-Path -Parent $PSCommandPath | Split-Path -Parent
Set-Location $repo
python scripts/snapshot.py --mode quick --flat-text --outdir snapshots


================================================================================
END: D:\QiEOS\docs\cursor\agents\scripts\code_extraction.ps1
================================================================================


================================================================================
FILE: D:\QiEOS\docs\cursor\agents\scripts\devlog_append.md
================================================================================



================================================================================
END: D:\QiEOS\docs\cursor\agents\scripts\devlog_append.md
================================================================================


================================================================================
FILE: D:\QiEOS\docs\cursor\agents\scripts\devlog_append.py
================================================================================

import argparse, os, datetime
from pathlib import Path

DEVLOG = Path("docs/DEV_LOG.md")

HEADER = """# QI-EOS Devlog

> Source of truth for daily context, decisions, and next steps.
"""

def ensure_header():
    if not DEVLOG.exists():
        DEVLOG.parent.mkdir(parents=True, exist_ok=True)
        DEVLOG.write_text(HEADER + "\n", encoding="utf-8")

def append_entry(entry:str):
    ts = datetime.datetime.now().strftime("%Y-%m-%d %H:%M")
    with DEVLOG.open("a", encoding="utf-8") as f:
        f.write("\n" + entry.strip() + "\n")

if __name__ == "__main__":
    parser = argparse.ArgumentParser(description="Append a session entry to docs/DEV_LOG.md")
    parser.add_argument("--entry", required=True, help="Markdown block for the session")
    args = parser.parse_args()
    ensure_header()
    append_entry(args.entry)
    ts = datetime.datetime.now().strftime("%Y-%m-%d %H:%M")
    print(f"[DEV_LOG] appended at {ts} -> {DEVLOG}")


================================================================================
END: D:\QiEOS\docs\cursor\agents\scripts\devlog_append.py
================================================================================


================================================================================
FILE: D:\QiEOS\docs\cursor\agents\scripts\kickoff.ps1
================================================================================

#Requires -Version 5
param(
  [switch]$Bundle,
  [switch]$FlatText
)

$ErrorActionPreference = "Stop"
$repo = Split-Path -Parent $PSCommandPath | Split-Path -Parent  # repo root if script is scripts/kickoff.ps1
Set-Location $repo

Write-Host "== QiEOS Kickoff ==" -ForegroundColor Cyan

# 1) Pull latest
git pull
Write-Host "Pulled latest." -ForegroundColor DarkGray

# 2) Snapshot (read-only)
$py = "python"
if (-not (Get-Command $py -ErrorAction SilentlyContinue)) { $py = "py" }
$flags = @("--mode","quick","--outdir","snapshots")
if ($Bundle)   { $flags += "--bundle" }
if ($FlatText) { $flags += "--flat-text" }

& $py "scripts/snapshot.py" @flags

# 3) Show git status and ask to proceed
git status
$ans = Read-Host "Continue to session start commit? (y/N)"
if ($ans -notin @("y","Y")) { Write-Host "Aborted by user."; exit 0 }

# 4) Start session commit
git add .
git commit -m ("chore(session): start " + (Get-Date -Format "yyyy-MM-dd HH:mm")) | Out-Null

# 5) Open Cursor (optional – comment out if already running)
# Adjust path if needed:
$cursor = "$env:LOCALAPPDATA\Programs\cursor\Cursor.exe"
if (Test-Path $cursor) {
  Start-Process -FilePath $cursor -ArgumentList @("--folder",$repo) -WindowStyle Normal
}

# 6) Auditor reminder (manual in Cursor)
Write-Host "`nOpen Cursor and run Auditor (docs/agents/auditor.md). Fix top 1–3 issues only." -ForegroundColor Yellow
$ans = Read-Host "Press Enter when Auditor fixes are applied (or type 'abort' to stop)"
if ($ans -eq "abort") { Write-Host "Aborted by user."; exit 0 }

# 7) Logger reminder (manual in Cursor)
Write-Host "Run Logger to append today's session entry (docs/agents/logger.md)." -ForegroundColor Yellow
$null = Read-Host "Press Enter to continue"

# 8) PR step
$ans = Read-Host "Create PR now? (y/N)"
if ($ans -in @("y","Y")) {
  git push -u origin HEAD
  Write-Host "Pushed. Create PR in GitHub, then paste the PR link into today's devlog entry." -ForegroundColor Green
} else {
  Write-Host "Skipping PR push for now." -ForegroundColor DarkGray
}

Write-Host "`nKickoff complete." -ForegroundColor Cyan


================================================================================
END: D:\QiEOS\docs\cursor\agents\scripts\kickoff.ps1
================================================================================


================================================================================
FILE: D:\QiEOS\docs\cursor\agents\scripts\run_day.md
================================================================================



================================================================================
END: D:\QiEOS\docs\cursor\agents\scripts\run_day.md
================================================================================


================================================================================
FILE: D:\QiEOS\docs\cursor\agents\scripts\run_day.ps1
================================================================================

#Requires -Version 5
$ErrorActionPreference = "Stop"

# Always operate from Git root
$gitRoot = (git rev-parse --show-toplevel).Trim()
if (-not $gitRoot) { throw "Not in a Git repo." }
Set-Location $gitRoot

$stateDir = Join-Path $gitRoot ".agents\state"
New-Item -ItemType Directory -Force -Path $stateDir | Out-Null

$turn = Join-Path $stateDir "turn.txt"
$plan = Join-Path $stateDir "plan.json"
$prog = Join-Path $stateDir "progress.json"
$scratch = Join-Path $stateDir "session.md"

# Initialize if missing
if (-not (Test-Path $turn)) { "planner" | Set-Content -Encoding UTF8 $turn }
if (-not (Test-Path $plan)) { "{}" | Set-Content -Encoding UTF8 $plan }
if (-not (Test-Path $prog)) { "{}" | Set-Content -Encoding UTF8 $prog }
if (-not (Test-Path $scratch)) { "# Session scratch`n" | Set-Content -Encoding UTF8 $scratch }

Write-Host "Git root: $gitRoot"
Write-Host "Using baton at: $turn"

# Start-of-day snapshot (read-only)
python docs/cursor/agents/scripts/snapshot.py --mode quick --flat-text --bundle --outdir snapshots

# Open Cursor on repo (optional)
$cursor = "$env:LOCALAPPDATA\Programs\cursor\Cursor.exe"
if (Test-Path $cursor) { Start-Process $cursor "--folder `"$gitRoot`"" }

Write-Host "`n== Agent loop =="
while ($true) {
  $t = (Get-Content $turn -Raw).Trim().ToLower()
  switch ($t) {
    "planner" { Write-Host "🧭 Planner’s turn. Open docs/cursor/agents/planner.md and run it."; }
    "worker"  { Write-Host "🔧 Worker’s turn. Open docs/cursor/agents/worker.md and run it."; }
    "auditor" { Write-Host "🔍 Auditor’s turn. Open docs/cursor/agents/auditor.md and run it."; }
    "logger"  { Write-Host "📝 Logger’s turn. Open docs/cursor/agents/logger.md and run it."; }
    "close"   { Write-Host "✅ Closing day. Running final snapshot and exiting loop."; break }
    default   { Write-Host "Unknown turn token '$t'. Set to 'planner'."; "planner" | Set-Content $turn }
  }
  $next = Read-Host "Set next turn (planner/worker/auditor/logger/close)"
  if ($next -notin @("planner","worker","auditor","logger","close")) {
    Write-Host "Invalid; keeping current." -ForegroundColor Yellow
  } else {
    $next | Set-Content -Encoding UTF8 $turn
  }
}
# Final snapshot for the day
python docs/cursor/agents/scripts/snapshot.py --mode full --bundle --outdir snapshots
Write-Host "🎬 Day closed."

================================================================================
END: D:\QiEOS\docs\cursor\agents\scripts\run_day.ps1
================================================================================


================================================================================
FILE: D:\QiEOS\docs\cursor\agents\scripts\snapshot.py
================================================================================

#!/usr/bin/env python3
import argparse, os, sys, json, hashlib, subprocess, datetime, zipfile
from pathlib import Path

ROOT = Path(__file__).resolve().parents[4] / "QiEos"
SNAPDIR = Path(__file__).resolve().parents[4] / "snapshots"
DEFAULT_IGNORE = [
    ".git/", "node_modules/", "dist/", "build/", ".cache/", ".turbo/",
    ".next/", ".DS_Store", "*.log", "*.tmp", "*.lock", "*.env", ".trash/",
    "$RECYCLE.BIN/", "System Volume Information/", "Thumbs.db"
]

def run(cmd, cwd=ROOT):
    return subprocess.run(cmd, cwd=cwd, shell=True, capture_output=True, text=True)

def sha256_file(p: Path, max_bytes=None):
    h = hashlib.sha256()
    with p.open("rb") as f:
        if max_bytes:
            h.update(f.read(max_bytes))
        else:
            for chunk in iter(lambda: f.read(1024*1024), b""):
                h.update(chunk)
    return h.hexdigest()

def should_ignore(path: Path, patterns):
    try:
        s = str(path).replace("\\","/") + ("/" if path.is_dir() else "")
        
        # Check for Windows system directories and files
        if any(part.startswith('$') for part in path.parts):
            return True
        if any(part in ['System Volume Information', 'RECYCLER', 'RECYCLED'] for part in path.parts):
            return True
        
        for pat in patterns:
            # simple glob-ish check
            if pat.endswith("/"):
                if s.find(pat) != -1:
                    return True
            else:
                # Use path.name for filename patterns, full path for directory patterns
                if "/" in pat:
                    # Directory pattern - check against full path
                    if s.find(pat) != -1:
                        return True
                else:
                    # Filename pattern - check against just the filename
                    try:
                        if path.name == pat or path.match(pat):
                            return True
                    except (OSError, ValueError):
                        # If path operations fail, fall back to string matching
                        if path.name == pat:
                            return True
        return False
    except (OSError, ValueError, AttributeError):
        # If any path operations fail, be conservative and don't ignore
        return False

def collect_files(root: Path, patterns):
    count = 0
    def walk_dir(path: Path, depth=0):
        nonlocal count
        if depth > 10:  # Prevent infinite recursion
            return
        try:
            for item in path.iterdir():
                count += 1
                if count % 1000 == 0:
                    print(f"[info] Processed {count} items...")
                try:
                    if should_ignore(item, patterns):
                        continue
                    if item.is_dir():
                        yield from walk_dir(item, depth + 1)
                    elif item.is_file():
                        yield item
                except (PermissionError, FileNotFoundError, OSError) as e:
                    # Skip files/dirs we can't access
                    print(f"[warn] Skipping {item}: {e}")
                    continue
        except (PermissionError, FileNotFoundError, OSError) as e:
            print(f"[warn] Cannot access directory {path}: {e}")
            return
    
    try:
        print(f"[info] Starting file collection from {root}")
        yield from walk_dir(root)
        print(f"[info] File collection complete. Processed {count} total items.")
    except (PermissionError, FileNotFoundError, OSError) as e:
        print(f"[error] Cannot access root directory {root}: {e}")
        return

def git_info():
    def g(args): return run(f"git {args}")
    branch = g("rev-parse --abbrev-ref HEAD").stdout.strip() or "detached"
    sha = g("rev-parse --short HEAD").stdout.strip()
    status = g("status --porcelain=v1").stdout.strip().splitlines()
    diffstat = g("diff --stat").stdout.strip()
    return {
        "branch": branch,
        "head": sha,
        "dirty": len(status) > 0,
        "status": status,
        "diffstat": diffstat,
        "remote": run("git remote -v").stdout.strip().splitlines(),
    }

def main():
    ap = argparse.ArgumentParser(description="QiEOS snapshot/archiver")
    ap.add_argument("--mode", choices=["quick","full"], default="quick")
    ap.add_argument("--bundle", action="store_true", help="also create git bundle")
    ap.add_argument("--flat-text", action="store_true", help="create a single code_extraction_*.txt")
    ap.add_argument("--include-trash", action="store_true", help="include .trash directory")
    ap.add_argument("--outdir", default=str(SNAPDIR))
    ap.add_argument("--max-hash-mb", type=int, default=16, help="cap per-file hash bytes for speed")
    args = ap.parse_args()

    ignore = list(DEFAULT_IGNORE)
    if args.include_trash:
        ignore = [p for p in ignore if p != ".trash/"]
    # allow .snapignore overrides
    snapignore = ROOT / ".snapignore"
    if snapignore.exists():
        extra = [ln.strip() for ln in snapignore.read_text(encoding="utf-8").splitlines() if ln.strip() and not ln.strip().startswith("#")]
        ignore.extend(extra)

    SNAPDIR.mkdir(parents=True, exist_ok=True)
    gi = git_info()
    ts = datetime.datetime.now().strftime("%Y%m%d-%H%M")
    base = f"QiEOS-snap-{ts}-{gi['branch']}-{gi['head'] or 'nohead'}"
    zpath = Path(args.outdir) / f"{base}.zip"
    mpath = Path(args.outdir) / f"{base}.manifest.json"
    tpath = Path(args.outdir) / f"{base}.code_extraction.txt"

    # collect
    files = list(collect_files(ROOT, ignore))
    manifest = {
        "repo": str(ROOT),
        "generated_at": ts,
        "branch": gi["branch"],
        "head": gi["head"],
        "dirty": gi["dirty"],
        "status": gi["status"],
        "diffstat": gi["diffstat"],
        "count_files": 0,
        "total_bytes": 0,
        "files": []
    }

    max_bytes = args.max_hash_mb * 1024 * 1024
    if args.mode == "quick":
        # hash only up to max_bytes; still zip full files
        pass  # behavior same; we just cap hashing

    # create zip + manifest
    with zipfile.ZipFile(zpath, "w", compression=zipfile.ZIP_DEFLATED) as zf:
        for fp in files:
            rel = fp.relative_to(ROOT)
            try:
                size = fp.stat().st_size
            except FileNotFoundError:
                continue
            manifest["files"].append({
                "path": str(rel).replace("\\","/"),
                "size": size,
                "sha256": sha256_file(fp, max_bytes=max_bytes)
            })
            manifest["count_files"] += 1
            manifest["total_bytes"] += size
            zf.write(fp, arcname=str(rel))

        # add current git patch for easy human read
        patch = run("git diff").stdout
        zf.writestr("_git_diff.patch", patch)
        zf.writestr("_git_status.txt", "\n".join(gi["status"]))
        zf.writestr("_git_remote.txt", "\n".join(gi["remote"]))

    mpath.write_text(json.dumps(manifest, indent=2), encoding="utf-8")

    # optional flat text extraction
    if args.flat_text:
        with tpath.open("w", encoding="utf-8", errors="ignore") as out:
            out.write(f"# Code Extraction — {base}\n\n")
            for fp in files:
                rel = str(fp.relative_to(ROOT)).replace("\\","/")
                out.write(f"\n\n===== FILE: {rel} =====\n")
                try:
                    out.write(fp.read_text(encoding="utf-8", errors="ignore"))
                except Exception as e:
                    out.write(f"\n[non-text or read error: {e}]\n")

    # optional git bundle for bare restore (includes all refs)
    bpath = None
    if args.bundle:
        bpath = Path(args.outdir) / f"{base}.bundle"
        run(f"git bundle create {bpath} --all")

    print(f"[snap] zip:      {zpath}")
    print(f"[snap] manifest: {mpath}")
    if args.flat_text:
        print(f"[snap] text:     {tpath}")
    if args.bundle:
        print(f"[snap] bundle:   {bpath}")

if __name__ == "__main__":
    main()

================================================================================
END: D:\QiEOS\docs\cursor\agents\scripts\snapshot.py
================================================================================


================================================================================
FILE: D:\QiEOS\docs\cursor\agents\snapshots\QiEOS-snap-20250913-0942-detached-nohead.manifest.json
================================================================================

{
  "repo": "Q:\\docs\\cursor\\agents",
  "generated_at": "20250913-0942",
  "branch": "detached",
  "head": "",
  "dirty": false,
  "status": [],
  "diffstat": "",
  "count_files": 12,
  "total_bytes": 24675,
  "files": [
    {
      "path": "auditor.md",
      "size": 1202,
      "sha256": "82d4e6db3d97fc6f9a511167ea86b7a1c418fb98c63385da07df558b6b68b2a5"
    },
    {
      "path": "kickoff.md",
      "size": 1202,
      "sha256": "82d4e6db3d97fc6f9a511167ea86b7a1c418fb98c63385da07df558b6b68b2a5"
    },
    {
      "path": "logger.md",
      "size": 1030,
      "sha256": "0209b4bb18cb8a2299be2280dce6925721fcac7b783373150e50f0e2eb098fcd"
    },
    {
      "path": "README.md",
      "size": 439,
      "sha256": "b014dd93e507fe2dfbb0b9c3b2e97c5f3ffb5dc04094f17ee2a9066273fd7bac"
    },
    {
      "path": "safety-rules.md",
      "size": 3984,
      "sha256": "cdf84b599559ef5e0b8fe9f7eea078cf5560a4add5f851ae76572ab1921ee9cd"
    },
    {
      "path": "scripts/code_extraction.ps1",
      "size": 156,
      "sha256": "fede7d903571353154748975a0c5bab823ff0ce3c910caba09faa59c90e2ee45"
    },
    {
      "path": "scripts/devlog_append.py",
      "size": 970,
      "sha256": "30d708d7652140ca5467dccc8079303553819c24b2778e790f18ebc63931b31b"
    },
    {
      "path": "scripts/kickoff.ps1",
      "size": 2146,
      "sha256": "15df9b1d13650a9a69f86db1f51f8c7942c208804e3b74c9339d18a59c7b0f80"
    },
    {
      "path": "scripts/snapshot.py",
      "size": 6081,
      "sha256": "cff636e6765153e5d27af355fdee40a4862d1b3c2d1924edcbe0541a341c6b2c"
    },
    {
      "path": "templates/change-summary.md",
      "size": 656,
      "sha256": "e5c4eed8c5a059cc1228448e3ea230a24771a50e9b87c1d5a6b690876737a376"
    },
    {
      "path": "templates/session-entry.md",
      "size": 709,
      "sha256": "e7f17045b347a581ea28550a1c4ce11f1c936517058575b18e999302c72befa7"
    },
    {
      "path": "workflows/daily-kickoff.md",
      "size": 6100,
      "sha256": "bebf628ddcd7bef8b7105846a2e445da9c4b1851d142f81bff0dc94023d984ae"
    }
  ]
}

================================================================================
END: D:\QiEOS\docs\cursor\agents\snapshots\QiEOS-snap-20250913-0942-detached-nohead.manifest.json
================================================================================


================================================================================
FILE: D:\QiEOS\docs\cursor\agents\templates\change-summary.md
================================================================================

## {{DATE}} — {{FOCUS_TITLE}}

- **Time**: {{START}}–{{END}} ({{TZ}})
- **Branch/PR**: {{BRANCH}} {{PR_LINK}}
- **Goal**: {{ONE_LINE_GOAL}}

### What Changed
- {{ONE_LINE_SUMMARY}}

### Why
- Aligns with MVP goal {{GOAL_REF}}

### How It Was Changed
- {{METHOD}} (e.g., new migration, codemod, config tweak)

### How to Test
1. {{TEST_STEP_1}}
2. {{TEST_STEP_2}}

### Diffs Applied
- {{PATH}} — {{SUMMARY}}

### Decisions
- {{DECISION}}

### Rollback
- Revert commit {{SHA}}  
- Restore from `.trash/{{YYYY-MM-DD}}/…` if needed

### Open Questions
- {{QUESTION}}

### Next 1–2 Steps
1. {{NEXT_1}}
2. {{NEXT_2}}


================================================================================
END: D:\QiEOS\docs\cursor\agents\templates\change-summary.md
================================================================================


================================================================================
FILE: D:\QiEOS\docs\cursor\agents\templates\session-entry.md
================================================================================

## {{DATE}} — {{FOCUS_TITLE}}

- **Time**: {{START}}–{{END}} ({{TZ}})
- **Branch/PR**: {{BRANCH}} {{PR_LINK}}
- **Goal**: {{ONE_LINE_GOAL}}
- **Snapshot** (optional): {{SNAP_NAME_OR_MANIFEST_PATH}}

### What Changed
- {{ONE_LINE_SUMMARY}}

### Why
- Aligns with MVP goal {{GOAL_REF}}

### How It Was Changed
- {{METHOD}} (e.g., new migration, codemod, config tweak)

### How to Test
1. {{TEST_STEP_1}}
2. {{TEST_STEP_2}}

### Diffs Applied
- {{PATH}} — {{SUMMARY}}

### Decisions
- {{DECISION}}

### Rollback
- Revert commit {{SHA}}  
- Restore from `.trash/{{DATE}}/…` if needed

### Open Questions
- {{QUESTION}}

### Next 1–2 Steps
1. {{NEXT_1}}
2. {{NEXT_2}}


================================================================================
END: D:\QiEOS\docs\cursor\agents\templates\session-entry.md
================================================================================


================================================================================
FILE: D:\QiEOS\docs\cursor\agents\workflows\daily-kickoff.md
================================================================================

---
title: QiEOS Daily Kickoff → Close → Resume
status: active
last_updated: 2025-09-13
---

# 🌀 Daily Kickoff → Close → Resume (Human + Agent)

This is the one doc you need for a dev day:
- Start the day
- Work safely with agents
- Close your session cleanly
- Know exactly how to resume tomorrow

> **Safety is implicit.** All steps obey `qieos.mdc` (locks, no deletions, explicit approval, no inline styles) and the God Doc in `docs/QiEOS.md`.

---

## 📁 Paths & Files (reference only)

- **Workspace Root**: `Q:\` (where docs/ and QiEos/ live)
- **Repo Root**: `Q:\QiEos\` (the actual QiEOS monorepo)
- **God Doc**: `Q:\docs\QiEOS.md`
- **Dev Log**: `Q:\docs\DEV_LOG.md`
- **Trash**: `Q:\QiEos\.trash\YYYY-MM-DD\...`
- **Agent prompts**:
  - Kickoff → `Q:\docs\cursor\agents\kickoff.md`
  - Auditor → `Q:\docs\cursor\agents\auditor.md`
  - Logger → `Q:\docs\cursor\agents\logger.md`
- **Agent templates**:
  - Session entry → `Q:\docs\cursor\agents\templates\session-entry.md`
  - PR change summary → `Q:\docs\cursor\agents\templates\change-summary.md`
- **Scripts**:
  - Snapshot (Python) → `Q:\docs\cursor\agents\scripts\snapshot.py`
  - Kickoff (PS1) → `Q:\docs\cursor\agents\scripts\kickoff.ps1`
  - Code extraction (PS1) → `Q:\docs\cursor\agents\scripts\code_extraction.ps1`

---

## 1) Verify Environment

```powershell
cd Q:\QiEos
git status
git pull
```

* Ensure you’re on the correct branch (main or feature).
* Run a snapshot before changes:

```powershell
cd Q:\
python docs/cursor/agents/scripts/snapshot.py --mode quick --flat-text --bundle --outdir snapshots
```

* **Optional one-click start**:
  Desktop shortcut target:

  ```powershell
  powershell.exe -ExecutionPolicy Bypass -File "Q:\docs\cursor\agents\scripts\kickoff.ps1" -Bundle -FlatText
  ```

  This:

  1. Runs `git pull`
  2. Creates a **read-only snapshot** (zip + manifest + optional code\_extraction.txt + git bundle)
  3. Pauses for **explicit approval** before starting the session

---

## 2) Kickoff (plan before code)

Open **Cursor** at repo root. In Cursor, open and paste the prompt from:

```
Q:\docs\cursor\agents\kickoff.md
```

Approve the plan only after it shows **diff previews** (no writes yet).
Say **“yes, apply”** when ready.

---

## 3) Snapshot (read-only) & Start Session Commit

If you didn't use the .ps1 launcher, take a snapshot now:

```powershell
cd Q:\
python docs/cursor/agents/scripts/snapshot.py --mode quick --flat-text --bundle --outdir snapshots
```

Start the session commit:

```powershell
cd Q:\QiEos
git add .
git commit -m "chore(session): start $(Get-Date -Format 'yyyy-MM-dd HH:mm')"
```

---

## 4) Minimal Work Loop (small, approved diffs)

Repeat this loop for each change:

* **Plan**: propose change in Cursor (diff preview only). Respect locks (`LOCKED.md`, `🚫 LOCKED`, `LOCK-START/END`).
* **Approve**: if safe and surgical, say **“yes, apply.”**
* **Build & test**:

  ```powershell
  cd Q:\QiEos
  pnpm -r build
  pnpm -r test
  #Optional quick smoke check (adjust to your app)
  #pnpm -r dev # or: pnpm start / electron . / uvicorn ...
  ```
* **Commit**:

  ```powershell
  cd Q:\QiEos
  git add .
  git commit -m "feat/fix/chore: <one-line summary>"
  ```

---

## 5) Audit (top 1–3 issues only)

Open and paste the prompt from:

```
Q:\docs\cursor\agents\auditor.md
```

Rules:

* Fix only the top **1–3** findings.
* Abort if diffs touch locked files/folders/sections.
* If JSX `style={}` appears → propose Inline→CSS Modules refactor (preview only).

Approve minimal diffs → apply → commit.

---

## 6) Log the Session (append to DEV_LOG)

Open and use the Logger prompt from:

```
Q:\docs\cursor\agents\logger.md
```

Tell Logger to apply the template at:

```
Q:\docs\cursor\agents\templates\session-entry.md
```

Logger fills fields (time, branch/PR, what/why/how/test/diffs/decisions/rollback/open Qs/next steps), prints the markdown diff, waits for approval, then appends to:

```
Q:\docs\DEV_LOG.md
```

---

## 7) PR Prep (if this block is PR-worthy)

Push your branch:

```powershell
cd Q:\QiEos
git push -u origin HEAD
```

Open a PR in GitHub.
PR description: paste the template at:

```
Q:\docs\cursor\agents\templates\change-summary.md
```

Copy PR link → have Logger update today’s DEV_LOG entry with the link.

---

## 8) Close the Session (end of day)

* **Final snapshot (optional but recommended)**:

  ```powershell
  cd Q:\
  python docs/cursor/agents/scripts/snapshot.py --mode full --bundle --outdir snapshots
  ```
* **Make resumption easy**:

  * Ensure DEV_LOG entry has **Next 1–2 Steps**.
  * Add a short `# TODO(next)` in the file you’ll touch first tomorrow.
* **Push final commits**:

  ```powershell
  cd Q:\QiEos
  git push
  ```
* If today changed architecture/schema/workflow, update the **God Doc**:

  ```powershell
  cd Q:\QiEos
  vim ../docs/QiEOS.md
  git add ../docs/QiEOS.md
  git commit -m "docs(godoc): update schema/workflow notes [$(Get-Date -Format 'yyyy-MM-dd')]"
  git push
  ```

---

## 9) Resume Tomorrow

```powershell
cd Q:\QiEos
git pull
code .   # or Cursor.exe --folder .
```

Open the latest session in:

```
Q:\docs\DEV_LOG.md
```

* Skim **What Changed**, **Open Questions**, **Next 1–2 Steps**.
* Re-run Kickoff (`Q:\docs\cursor\agents\kickoff.md`) for a new plan.
* If a PR is open, sync branch and continue.

---

## ✅ Non-Negotiables (enforced by `qieos.mdc`)

* **No deletions.** Move to `Q:\QiEos\.trash/YYYY-MM-DD/...`
* **Respect locks.** Abort if `LOCKED.md`, `🚫 LOCKED`, or `LOCK-START/END`.
* **Inline styles banned.** Never use `style={}`; always CSS Modules or Tailwind.
* **Explicit approval.** Agents show diffs; you must say **"yes, apply."**
* **Traceability.** Every applied change logged in `Q:\docs\DEV_LOG.md` with rollback notes.

---

## 🧰 Quick Commands (reference)

**Manual snapshot:**

```powershell
cd Q:\
python docs/cursor/agents/scripts/snapshot.py --mode quick --flat-text --bundle --outdir snapshots
```

**Open Cursor (default Windows path):**

```powershell
$env:LOCALAPPDATA\Programs\cursor\Cursor.exe --folder Q:\QiEos
```

**Code extraction only:**

```powershell
powershell.exe -ExecutionPolicy Bypass -File "Q:\docs\cursor\agents\scripts\code_extraction.ps1"
```
---


================================================================================
END: D:\QiEOS\docs\cursor\agents\workflows\daily-kickoff.md
================================================================================


================================================================================
FILE: D:\QiEOS\drops\README.md
================================================================================

# Drops

Public file drops served via Worker/R2 with TTL policy.


================================================================================
END: D:\QiEOS\drops\README.md
================================================================================


================================================================================
FILE: D:\QiEOS\functions\api\contact.ts
================================================================================

export async function onRequestPost(context: any) {
  const { request, env } = context;

  try {
    const body = await request.json();
    const { name, email, message } = body;

    // Basic validation
    if (!name || !email || !message) {
      return new Response(
        JSON.stringify({
          ok: false,
          error: "Missing required fields",
        }),
        {
          status: 400,
          headers: { "Content-Type": "application/json" },
        }
      );
    }

    // Email validation
    const emailRegex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
    if (!emailRegex.test(email)) {
      return new Response(
        JSON.stringify({
          ok: false,
          error: "Invalid email format",
        }),
        {
          status: 400,
          headers: { "Content-Type": "application/json" },
        }
      );
    }

    // Here you would typically send the email using a service like:
    // - SendGrid
    // - Mailgun
    // - Resend
    // - Or your preferred email service

    // For now, we'll just log the contact form submission
    console.log("Contact form submission:", {
      name,
      email,
      message,
      timestamp: new Date().toISOString(),
    });

    // In a real implementation, you would:
    // 1. Send an email notification to yourself
    // 2. Send a confirmation email to the user
    // 3. Store the submission in a database

    return new Response(
      JSON.stringify({
        ok: true,
        message: "Message sent successfully",
      }),
      {
        status: 200,
        headers: { "Content-Type": "application/json" },
      }
    );
  } catch (error) {
    console.error("Contact form error:", error);

    return new Response(
      JSON.stringify({
        ok: false,
        error: "Internal server error",
      }),
      {
        status: 500,
        headers: { "Content-Type": "application/json" },
      }
    );
  }
}


================================================================================
END: D:\QiEOS\functions\api\contact.ts
================================================================================


================================================================================
FILE: D:\QiEOS\infra\README.md
================================================================================

# Infrastructure

Cloudflare and Supabase configuration and deployment files.


================================================================================
END: D:\QiEOS\infra\README.md
================================================================================


================================================================================
FILE: D:\QiEOS\infra\cloudflare\wrangler.toml
================================================================================

name = "qieos-api"
main = "workers/api/src/index.ts"
compatibility_date = "2025-01-27"

[vars]
SUPABASE_URL = ""
SUPABASE_SERVICE_ROLE_KEY = ""
OPENAI_API_KEY = ""
STRIPE_SECRET_KEY = ""
JWT_ISSUER = "qieos"
EMBEDDING_DIM = "1536"

[[r2_buckets]]
binding = "R2"
bucket_name = "qieos-files"
preview_bucket_name = "qieos-files-dev"

[env.production]
name = "qieos-api"

[env.staging]
name = "qieos-api-staging"


================================================================================
END: D:\QiEOS\infra\cloudflare\wrangler.toml
================================================================================


================================================================================
FILE: D:\QiEOS\infra\supabase\README.md
================================================================================

# Supabase Infrastructure

Migrations live here; see 900_rls_policies.sql for RLS.


================================================================================
END: D:\QiEOS\infra\supabase\README.md
================================================================================


================================================================================
FILE: D:\QiEOS\infra\supabase\migrations\20250911103424_initial_schema.sql
================================================================================



================================================================================
END: D:\QiEOS\infra\supabase\migrations\20250911103424_initial_schema.sql
================================================================================


================================================================================
FILE: D:\QiEOS\qially-coming-soon\qially.com\404.html
================================================================================

<!doctype html>
<html lang="en">
<head>
  <meta charset="utf-8" />
  <title>Page Not Found — QiAlly</title>
  <meta name="viewport" content="width=device-width,initial-scale=1" />
  <meta name="description" content="The page you're looking for doesn't exist. Return to QiAlly's homepage for professional scoping, voting, and strategic guidance services." />
  <meta name="keywords" content="QiAlly, 404, page not found, professional services" />
  <meta name="author" content="QiAlly" />
  <meta name="robots" content="noindex, nofollow" />
  <meta property="og:title" content="Page Not Found — QiAlly" />
  <meta property="og:description" content="The page you're looking for doesn't exist. Return to QiAlly's homepage." />
  <meta property="og:url" content="https://qially.me" />
  <meta property="og:image" content="https://res.cloudinary.com/dp5b5fymz/image/upload/v1755927329/qibird.svg" />
  <meta property="og:type" content="website" />
  <meta name="twitter:card" content="summary_large_image" />
  <meta name="twitter:title" content="Page Not Found — QiAlly" />
  <meta name="twitter:description" content="The page you're looking for doesn't exist. Return to QiAlly's homepage." />
  <meta name="twitter:image" content="https://res.cloudinary.com/dp5b5fymz/image/upload/v1755927329/qibird.svg" />
  <link rel="preconnect" href="https://fonts.googleapis.com">
  <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
  <link href="https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700&display=swap" rel="stylesheet">
  <style>
    /* CSS Variables matching QIPortal theme */
    :root {
      --bg: 15 23 42;
      --panel: 30 41 59;
      --text: 248 250 252;
      --subtext: 148 163 184;
      --ring: 51 65 85;
      --primary: 59 130 246;
      --accent: 147 51 234;
      --success: 34 197 94;
      --warning: 245 158 11;
    }

    * { 
      box-sizing: border-box;
      margin: 0;
      padding: 0;
    }

    html, body { 
      height: 100%;
      font-family: 'Inter', ui-sans-serif, system-ui, sans-serif;
      background-color: rgb(var(--bg));
      color: rgb(var(--text));
      overflow-x: hidden;
    }

    /* Animated background with stars */
    body::before {
      content: '';
      position: fixed;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      background-image: 
        radial-gradient(2px 2px at 20px 30px, rgba(255,255,255,0.3), transparent),
        radial-gradient(2px 2px at 40px 70px, rgba(255,255,255,0.4), transparent),
        radial-gradient(1px 1px at 90px 40px, rgba(255,255,255,0.2), transparent),
        radial-gradient(1px 1px at 130px 80px, rgba(255,255,255,0.3), transparent),
        radial-gradient(2px 2px at 160px 30px, rgba(255,255,255,0.2), transparent),
        radial-gradient(1px 1px at 200px 120px, rgba(255,255,255,0.3), transparent),
        radial-gradient(2px 2px at 240px 60px, rgba(255,255,255,0.2), transparent),
        radial-gradient(1px 1px at 280px 100px, rgba(255,255,255,0.3), transparent);
      background-repeat: repeat;
      background-size: 300px 200px;
      animation: twinkle 4s ease-in-out infinite;
      z-index: -2;
    }

    /* Hero gradient overlay */
    body::after {
      content: '';
      position: fixed;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      background: linear-gradient(135deg, rgb(15 23 42) 0%, rgb(30 58 138) 50%, rgb(88 28 135) 100%);
      opacity: 0.8;
      z-index: -1;
    }

    /* Glow radial effect */
    .glow-radial {
      position: fixed;
      top: 0;
      left: 0;
      width: 100%;
      height: 50%;
      background: radial-gradient(circle at 50% 0%, rgba(59, 130, 246, 0.15) 0%, transparent 70%);
      pointer-events: none;
      z-index: -1;
    }

    /* Floating blobs */
    .blob {
      position: fixed;
      border-radius: 50%;
      filter: blur(40px);
      opacity: 0.3;
      z-index: -1;
    }

    .blob-1 {
      width: 300px;
      height: 300px;
      background: radial-gradient(circle, rgba(59, 130, 246, 0.4) 0%, transparent 70%);
      top: 20%;
      left: 10%;
      animation: blob 7s infinite;
    }

    .blob-2 {
      width: 250px;
      height: 250px;
      background: radial-gradient(circle, rgba(147, 51, 234, 0.3) 0%, transparent 70%);
      top: 60%;
      right: 15%;
      animation: blob 7s infinite 2s;
    }

    .blob-3 {
      width: 200px;
      height: 200px;
      background: radial-gradient(circle, rgba(34, 211, 238, 0.3) 0%, transparent 70%);
      bottom: 20%;
      left: 20%;
      animation: blob 7s infinite 4s;
    }

    /* Main container */
    .container {
      min-height: 100vh;
      display: flex;
      align-items: center;
      justify-content: center;
      padding: 2rem;
      position: relative;
      z-index: 1;
    }

    /* Glass card */
    .card {
      width: min(720px, 100%);
      background: rgba(var(--panel), 0.8);
      -webkit-backdrop-filter: blur(24px);
      backdrop-filter: blur(24px);
      border: 1px solid rgba(var(--ring), 0.5);
      border-radius: 1rem;
      padding: 2.5rem;
      box-shadow: 
        0 10px 15px -3px rgba(0, 0, 0, 0.1),
        0 4px 6px -4px rgba(0, 0, 0, 0.1),
        0 1px 0 rgba(255, 255, 255, 0.06) inset;
      position: relative;
      overflow: hidden;
      text-align: center;
    }

    .card::before {
      content: '';
      position: absolute;
      top: 0;
      left: 0;
      right: 0;
      height: 1px;
      background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.1), transparent);
    }

    /* Header section */
    .header {
      display: flex;
      align-items: center;
      justify-content: center;
      gap: 1rem;
      margin-bottom: 2rem;
    }

    .brand {
      width: 56px;
      height: 56px;
      border-radius: 1rem;
      display: grid;
      place-items: center;
      background: linear-gradient(135deg, rgb(var(--primary)), rgb(var(--accent)));
      box-shadow: 0 0 20px rgba(59, 130, 246, 0.3);
      position: relative;
      overflow: hidden;
    }

    .brand::before {
      content: '';
      position: absolute;
      top: 0;
      left: 0;
      right: 0;
      bottom: 0;
      background: linear-gradient(45deg, transparent 30%, rgba(255, 255, 255, 0.1) 50%, transparent 70%);
      animation: shimmer 3s infinite;
    }

    .brand img {
      width: 32px;
      height: 32px;
      filter: brightness(0) invert(1);
      z-index: 1;
      position: relative;
    }

    .title-section h1 {
      font-size: 1.75rem;
      font-weight: 600;
      margin-bottom: 0.5rem;
      background: linear-gradient(90deg, rgb(var(--text)), rgb(var(--subtext)));
      -webkit-background-clip: text;
      -webkit-text-fill-color: transparent;
      background-clip: text;
    }

    .title-section p {
      color: rgb(var(--subtext));
      font-size: 1rem;
      line-height: 1.5;
    }

    /* 404 specific styling */
    .error-code {
      font-size: 6rem;
      font-weight: 700;
      background: linear-gradient(135deg, rgb(var(--primary)), rgb(var(--accent)));
      -webkit-background-clip: text;
      -webkit-text-fill-color: transparent;
      background-clip: text;
      margin-bottom: 1rem;
      line-height: 1;
    }

    .error-message {
      font-size: 1.25rem;
      color: rgb(var(--text));
      margin-bottom: 0.5rem;
    }

    .error-description {
      color: rgb(var(--subtext));
      font-size: 1rem;
      line-height: 1.6;
      margin-bottom: 2rem;
      max-width: 500px;
      margin-left: auto;
      margin-right: auto;
    }

    /* Navigation suggestions */
    .nav-suggestions {
      background: rgba(var(--ring), 0.2);
      border: 1px solid rgba(var(--ring), 0.3);
      border-radius: 0.75rem;
      padding: 1.5rem;
      margin-bottom: 2rem;
    }

    .nav-suggestions h3 {
      font-size: 1rem;
      font-weight: 600;
      margin-bottom: 1rem;
      color: rgb(var(--text));
    }

    .nav-links {
      display: flex;
      flex-wrap: wrap;
      gap: 0.75rem;
      justify-content: center;
    }

    .nav-link {
      display: inline-flex;
      align-items: center;
      padding: 0.5rem 1rem;
      background: rgba(var(--panel), 0.8);
      border: 1px solid rgba(var(--ring), 0.5);
      border-radius: 0.5rem;
      color: rgb(var(--text));
      text-decoration: none;
      font-size: 0.875rem;
      transition: all 0.2s ease;
    }

    .nav-link:hover {
      background: rgba(var(--primary), 0.1);
      border-color: rgba(var(--primary), 0.3);
      color: rgb(var(--primary));
      transform: translateY(-1px);
    }

    /* Actions */
    .actions {
      display: flex;
      gap: 0.75rem;
      flex-wrap: wrap;
      justify-content: center;
    }

    .btn {
      display: inline-flex;
      align-items: center;
      justify-content: center;
      padding: 0.75rem 1.5rem;
      border-radius: 0.75rem;
      font-weight: 500;
      font-size: 0.875rem;
      text-decoration: none;
      transition: all 0.2s ease;
      border: 1px solid transparent;
      cursor: pointer;
      position: relative;
      overflow: hidden;
    }

    .btn::before {
      content: '';
      position: absolute;
      top: 0;
      left: -100%;
      width: 100%;
      height: 100%;
      background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.1), transparent);
      transition: left 0.5s ease;
    }

    .btn:hover::before {
      left: 100%;
    }

    .btn-primary {
      background: linear-gradient(135deg, rgb(var(--primary)), rgb(var(--accent)));
      color: white;
      box-shadow: 0 4px 12px rgba(59, 130, 246, 0.3);
    }

    .btn-primary:hover {
      transform: translateY(-2px);
      box-shadow: 0 8px 20px rgba(59, 130, 246, 0.4);
    }

    .btn-secondary {
      background: rgba(var(--panel), 0.8);
      color: rgb(var(--text));
      border-color: rgba(var(--ring), 0.5);
    }

    .btn-secondary:hover {
      background: rgba(var(--panel), 1);
      border-color: rgba(var(--ring), 0.8);
      transform: translateY(-1px);
    }

    /* Footer */
    footer {
      text-align: center;
      font-size: 0.75rem;
      color: rgb(var(--subtext));
      opacity: 0.7;
      margin-top: 2rem;
    }

    /* Animations */
    @keyframes twinkle {
      0%, 100% { opacity: 0.3; }
      50% { opacity: 1; }
    }

    @keyframes blob {
      0% { transform: translate(0) scale(1); }
      33% { transform: translate(30px, -50px) scale(1.1); }
      66% { transform: translate(-20px, 20px) scale(0.9); }
      100% { transform: translate(0) scale(1); }
    }

    @keyframes shimmer {
      0% { transform: translateX(-100%); }
      100% { transform: translateX(100%); }
    }

    @keyframes float {
      0%, 100% { transform: translateY(0px); }
      50% { transform: translateY(-10px); }
    }

    /* Loading animation for content */
    .fade-in {
      animation: fadeIn 0.8s ease-out;
    }

    @keyframes fadeIn {
      from {
        opacity: 0;
        transform: translateY(20px);
      }
      to {
        opacity: 1;
        transform: translateY(0);
      }
    }

    /* Responsive design */
    @media (max-width: 640px) {
      .container {
        padding: 1rem;
      }
      
      .card {
        padding: 1.5rem;
      }
      
      .error-code {
        font-size: 4rem;
      }
      
      .error-message {
        font-size: 1.125rem;
      }
      
      .nav-links {
        flex-direction: column;
        align-items: center;
      }
      
      .actions {
        flex-direction: column;
        align-items: center;
      }
      
      .btn {
        width: 100%;
        max-width: 300px;
        justify-content: center;
      }
    }
  </style>
</head>
<body>
  <!-- Background effects -->
  <div class="glow-radial"></div>
  <div class="blob blob-1"></div>
  <div class="blob blob-2"></div>
  <div class="blob blob-3"></div>

  <div class="container">
    <main class="card fade-in">
      <div class="header">
        <div class="brand">
          <img src="https://res.cloudinary.com/dp5b5fymz/image/upload/v1755927329/qibird.svg" alt="QiAlly">
        </div>
        <div class="title-section">
          <h1>QiAlly</h1>
          <p>Professional Solutions Tailored to You</p>
        </div>
      </div>

      <div class="error-code">404</div>
      <div class="error-message">Page Not Found</div>
      <div class="error-description">
        The page you're looking for doesn't exist. It might have been moved, deleted, or you entered the wrong URL.
      </div>

      <!-- Navigation suggestions -->
      <div class="nav-suggestions">
        <h3>Here are some helpful links:</h3>
        <div class="nav-links">
          <a href="/" class="nav-link">Home</a>
          <a href="/services.html" class="nav-link">Services</a>
          <a href="/about.html" class="nav-link">About</a>
          <a href="/contact.html" class="nav-link">Contact</a>
          <a href="/knowledge-base.html" class="nav-link">Help Center</a>
        </div>
      </div>

      <div class="actions">
        <a class="btn btn-primary" href="/">
          <svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" style="margin-right: 0.5rem;">
            <path d="M3 9l9-7 9 7v11a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2z"/>
            <polyline points="9,22 9,12 15,12 15,22"/>
          </svg>
          Go Home
        </a>
        <a class="btn btn-secondary" href="/contact.html">
          <svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" style="margin-right: 0.5rem;">
            <path d="M4 4h16c1.1 0 2 .9 2 2v12c0 1.1-.9 2-2 2H4c-1.1 0-2-.9-2-2V6c0-1.1.9-2 2-2z"/>
            <polyline points="22,6 12,13 2,6"/>
          </svg>
          Contact Me
        </a>
      </div>

      <footer>© <span id="year"></span> QiAlly. All rights reserved.</footer>
    </main>
  </div>

  <script>
    // Set current year
    document.getElementById('year').textContent = new Date().getFullYear();
    
    // Add some interactive effects
    document.addEventListener('DOMContentLoaded', function() {
      const card = document.querySelector('.card');
      
      // Parallax effect on mouse move
      document.addEventListener('mousemove', function(e) {
        const x = e.clientX / window.innerWidth;
        const y = e.clientY / window.innerHeight;
        
        card.style.transform = `perspective(1000px) rotateX(${(y - 0.5) * 5}deg) rotateY(${(x - 0.5) * 5}deg)`;
      });
      
      // Reset transform on mouse leave
      document.addEventListener('mouseleave', function() {
        card.style.transform = 'perspective(1000px) rotateX(0deg) rotateY(0deg)';
      });
    });
  </script>
</body>
</html>


================================================================================
END: D:\QiEOS\qially-coming-soon\qially.com\404.html
================================================================================


================================================================================
FILE: D:\QiEOS\qially-coming-soon\qially.com\about-me.html
================================================================================

<!doctype html>
<html lang="en">
<head>
  <meta charset="utf-8" />
  <title>About QiAlly | Meet Cody Rice Velasquez</title>
  <meta name="viewport" content="width=device-width,initial-scale=1" />
  <meta name="description" content="Meet Cody Rice Velasquez, the systems whisperer and chaos-to-clarity alchemist behind QiAlly. Learn about his journey from Evansville roots to reviving broken empires." />
  <meta name="keywords" content="Cody Rice Velasquez, QiAlly, about, systems optimization, process improvement, professional services" />
  <meta name="author" content="QiAlly" />
  <link rel="canonical" href="https://qially.me/about-me" />
  <meta property="og:title" content="About QiAlly | Meet Cody Rice Velasquez" />
  <meta property="og:description" content="Meet Cody Rice Velasquez, the systems whisperer and chaos-to-clarity alchemist behind QiAlly." />
  <meta property="og:url" content="https://qially.me/about-me" />
  <meta property="og:image" content="https://res.cloudinary.com/dp5b5fymz/image/upload/v1755927329/qibird.svg" />
  <meta property="og:type" content="website" />
  <meta name="twitter:card" content="summary_large_image" />
  <meta name="twitter:title" content="About QiAlly | Meet Cody Rice Velasquez" />
  <meta name="twitter:description" content="Meet Cody Rice Velasquez, the systems whisperer and chaos-to-clarity alchemist behind QiAlly." />
  <meta name="twitter:image" content="https://res.cloudinary.com/dp5b5fymz/image/upload/v1755927329/qibird.svg" />
  <link rel="preconnect" href="https://fonts.googleapis.com">
  <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
  <link href="https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700&display=swap" rel="stylesheet">
  <style>
    /* CSS Variables matching QIPortal theme */
    :root {
      --bg: 15 23 42;
      --panel: 30 41 59;
      --text: 248 250 252;
      --subtext: 148 163 184;
      --ring: 51 65 85;
      --primary: 59 130 246;
      --accent: 147 51 234;
      --success: 34 197 94;
      --warning: 245 158 11;
    }

    * { 
      box-sizing: border-box;
      margin: 0;
      padding: 0;
    }

    html, body { 
      height: 100%;
      font-family: 'Inter', ui-sans-serif, system-ui, sans-serif;
      background-color: rgb(var(--bg));
      color: rgb(var(--text));
      overflow-x: hidden;
    }

    /* Animated background with stars */
    body::before {
      content: '';
      position: fixed;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      background-image: 
        radial-gradient(2px 2px at 20px 30px, rgba(255,255,255,0.3), transparent),
        radial-gradient(2px 2px at 40px 70px, rgba(255,255,255,0.4), transparent),
        radial-gradient(1px 1px at 90px 40px, rgba(255,255,255,0.2), transparent),
        radial-gradient(1px 1px at 130px 80px, rgba(255,255,255,0.3), transparent),
        radial-gradient(2px 2px at 160px 30px, rgba(255,255,255,0.2), transparent),
        radial-gradient(1px 1px at 200px 120px, rgba(255,255,255,0.3), transparent),
        radial-gradient(2px 2px at 240px 60px, rgba(255,255,255,0.2), transparent),
        radial-gradient(1px 1px at 280px 100px, rgba(255,255,255,0.3), transparent);
      background-repeat: repeat;
      background-size: 300px 200px;
      animation: twinkle 4s ease-in-out infinite;
      z-index: -2;
    }

    /* Hero gradient overlay */
    body::after {
      content: '';
      position: fixed;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      background: linear-gradient(135deg, rgb(15 23 42) 0%, rgb(30 58 138) 50%, rgb(88 28 135) 100%);
      opacity: 0.8;
      z-index: -1;
    }

    /* Glow radial effect */
    .glow-radial {
      position: fixed;
      top: 0;
      left: 0;
      width: 100%;
      height: 50%;
      background: radial-gradient(circle at 50% 0%, rgba(59, 130, 246, 0.15) 0%, transparent 70%);
      pointer-events: none;
      z-index: -1;
    }

    /* Floating blobs */
    .blob {
      position: fixed;
      border-radius: 50%;
      filter: blur(40px);
      opacity: 0.3;
      z-index: -1;
    }

    .blob-1 {
      width: 300px;
      height: 300px;
      background: radial-gradient(circle, rgba(59, 130, 246, 0.4) 0%, transparent 70%);
      top: 20%;
      left: 10%;
      animation: blob 7s infinite;
    }

    .blob-2 {
      width: 250px;
      height: 250px;
      background: radial-gradient(circle, rgba(147, 51, 234, 0.3) 0%, transparent 70%);
      top: 60%;
      right: 15%;
      animation: blob 7s infinite 2s;
    }

    .blob-3 {
      width: 200px;
      height: 200px;
      background: radial-gradient(circle, rgba(34, 211, 238, 0.3) 0%, transparent 70%);
      bottom: 20%;
      left: 20%;
      animation: blob 7s infinite 4s;
    }

    /* Navigation */
    .nav {
      position: fixed;
      top: 0;
      left: 0;
      right: 0;
      z-index: 100;
      background: rgba(var(--panel), 0.8);
      -webkit-backdrop-filter: blur(24px);
      backdrop-filter: blur(24px);
      border-bottom: 1px solid rgba(var(--ring), 0.3);
      padding: 1rem 2rem;
    }

    .nav-container {
      max-width: 1200px;
      margin: 0 auto;
      display: flex;
      justify-content: space-between;
      align-items: center;
    }

    .nav-brand {
      display: flex;
      align-items: center;
      gap: 0.75rem;
      text-decoration: none;
      color: rgb(var(--text));
    }

    .nav-brand img {
      width: 32px;
      height: 32px;
      filter: brightness(0) invert(1);
    }

    .nav-brand span {
      font-weight: 600;
      font-size: 1.25rem;
    }

    .nav-links {
      display: flex;
      gap: 2rem;
      list-style: none;
    }

    .nav-links a {
      color: rgb(var(--subtext));
      text-decoration: none;
      font-weight: 500;
      transition: color 0.2s ease;
    }

    .nav-links a:hover {
      color: rgb(var(--text));
    }

    .nav-links a.active {
      color: rgb(var(--primary));
    }

    /* Main container */
    .container {
      min-height: 100vh;
      padding-top: 80px;
      position: relative;
      z-index: 1;
    }

    /* Hero section */
    .hero {
      display: flex;
      align-items: center;
      justify-content: center;
      min-height: calc(100vh - 80px);
      padding: 2rem;
      text-align: center;
    }

    .hero-content {
      max-width: 800px;
    }

    .hero h1 {
      font-size: 3.5rem;
      font-weight: 700;
      margin-bottom: 1.5rem;
      background: linear-gradient(135deg, rgb(var(--text)), rgb(var(--primary)));
      -webkit-background-clip: text;
      -webkit-text-fill-color: transparent;
      background-clip: text;
      line-height: 1.2;
    }

    .hero-subtitle {
      font-size: 1.5rem;
      color: rgb(var(--primary));
      margin-bottom: 1rem;
      font-weight: 500;
    }

    .hero-description {
      font-size: 1.125rem;
      color: rgb(var(--subtext));
      margin-bottom: 2rem;
      line-height: 1.6;
      max-width: 700px;
      margin-left: auto;
      margin-right: auto;
    }

    /* Timeline styles */
    .timeline-section {
      padding: 4rem 2rem;
      max-width: 1200px;
      margin: 0 auto;
    }

    .section-title {
      text-align: center;
      font-size: 2.5rem;
      font-weight: 600;
      margin-bottom: 3rem;
      background: linear-gradient(135deg, rgb(var(--text)), rgb(var(--subtext)));
      -webkit-background-clip: text;
      -webkit-text-fill-color: transparent;
      background-clip: text;
    }

    .timeline-container {
      display: flex;
      overflow-x: auto;
      scroll-behavior: smooth;
      padding: 1rem;
      background: rgba(var(--panel), 0.3);
      border-radius: 1rem;
      margin-bottom: 2rem;
      perspective: 800px;
    }

    .timeline-item {
      flex: 0 0 auto;
      margin: 0 0.75rem;
      padding: 1rem 2rem;
      background: rgba(var(--panel), 0.8);
      -webkit-backdrop-filter: blur(24px);
      backdrop-filter: blur(24px);
      border: 1px solid rgba(var(--ring), 0.5);
      border-radius: 1rem;
      box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
      font-weight: 600;
      color: var(--primary-color);
      transform-style: preserve-3d;
      transition: transform 0.3s ease, box-shadow 0.3s ease;
      cursor: pointer;
      -webkit-user-select: none;
      user-select: none;
    }

    .timeline-item:hover {
      transform: rotateY(20deg) translateY(-5px) translateZ(10px);
      box-shadow: 0 8px 12px rgba(0, 0, 0, 0.2);
    }

    .timeline-item.active {
      background: rgb(var(--primary));
      color: #ffffff;
    }

    #timeline-content {
      margin: 2rem 1rem;
      padding: 1.5rem;
      background: rgba(var(--panel), 0.8);
      -webkit-backdrop-filter: blur(24px);
      backdrop-filter: blur(24px);
      border: 1px solid rgba(var(--ring), 0.5);
      border-radius: 0.5rem;
      box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
      color: rgb(var(--text));
      opacity: 1;
      transition: opacity 0.3s ease;
    }

    #timeline-content h3 {
      margin-top: 0;
      color: rgb(var(--accent));
    }

    /* Resume section */
    .resume-section {
      padding: 4rem 2rem;
      background: rgba(var(--panel), 0.3);
      margin: 2rem 0;
    }

    .resume-content {
      max-width: 800px;
      margin: 0 auto;
      text-align: center;
    }

    .resume-content h2 {
      font-size: 2rem;
      font-weight: 600;
      margin-bottom: 1rem;
      color: rgb(var(--text));
    }

    .resume-content p {
      color: rgb(var(--subtext));
      margin-bottom: 2rem;
      line-height: 1.6;
    }

    /* Buttons */
    .btn {
      display: inline-flex;
      align-items: center;
      justify-content: center;
      padding: 0.75rem 1.5rem;
      border-radius: 0.75rem;
      font-weight: 500;
      font-size: 0.875rem;
      text-decoration: none;
      transition: all 0.2s ease;
      border: 1px solid transparent;
      cursor: pointer;
      position: relative;
      overflow: hidden;
    }

    .btn::before {
      content: '';
      position: absolute;
      top: 0;
      left: -100%;
      width: 100%;
      height: 100%;
      background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.1), transparent);
      transition: left 0.5s ease;
    }

    .btn:hover::before {
      left: 100%;
    }

    .btn-primary {
      background: linear-gradient(135deg, rgb(var(--primary)), rgb(var(--accent)));
      color: white;
      box-shadow: 0 4px 12px rgba(59, 130, 246, 0.3);
    }

    .btn-primary:hover {
      transform: translateY(-2px);
      box-shadow: 0 8px 20px rgba(59, 130, 246, 0.4);
    }

    .btn-secondary {
      background: rgba(var(--panel), 0.8);
      color: rgb(var(--text));
      border-color: rgba(var(--ring), 0.5);
    }

    .btn-secondary:hover {
      background: rgba(var(--panel), 1);
      border-color: rgba(var(--ring), 0.8);
      transform: translateY(-1px);
    }

    .btn-group {
      display: flex;
      gap: 1rem;
      justify-content: center;
      flex-wrap: wrap;
    }

    /* Footer */
    footer {
      background: rgba(var(--panel), 0.8);
      border-top: 1px solid rgba(var(--ring), 0.3);
      padding: 2rem;
      color: rgb(var(--subtext));
    }

    .footer-content {
      max-width: 1200px;
      margin: 0 auto;
      display: grid;
      grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
      gap: 2rem;
      align-items: start;
    }

    .footer-section {
      display: flex;
      flex-direction: column;
    }

    .footer-brand {
      display: flex;
      align-items: center;
    }

    .footer-links {
      display: flex;
      flex-direction: column;
      gap: 0.5rem;
      list-style: none;
    }

    .footer-links a {
      color: rgb(var(--subtext));
      text-decoration: none;
      transition: color 0.2s ease;
      font-size: 0.875rem;
    }

    .footer-links a:hover {
      color: rgb(var(--primary));
    }

    .social-links {
      display: flex;
      gap: 1rem;
      margin-bottom: 1rem;
    }

    .social-link {
      display: flex;
      align-items: center;
      justify-content: center;
      width: 40px;
      height: 40px;
      background: rgba(var(--panel), 0.8);
      border: 1px solid rgba(var(--ring), 0.5);
      border-radius: 0.5rem;
      color: rgb(var(--subtext));
      text-decoration: none;
      transition: all 0.2s ease;
    }

    .social-link:hover {
      background: rgba(var(--primary), 0.1);
      border-color: rgba(var(--primary), 0.3);
      color: rgb(var(--primary));
      transform: translateY(-2px);
    }

    .contact-info p {
      display: flex;
      align-items: center;
      margin-bottom: 0.5rem;
    }

    /* Animations */
    @keyframes twinkle {
      0%, 100% { opacity: 0.3; }
      50% { opacity: 1; }
    }

    @keyframes blob {
      0% { transform: translate(0) scale(1); }
      33% { transform: translate(30px, -50px) scale(1.1); }
      66% { transform: translate(-20px, 20px) scale(0.9); }
      100% { transform: translate(0) scale(1); }
    }

    @keyframes fadeIn {
      from {
        opacity: 0;
        transform: translateY(20px);
      }
      to {
        opacity: 1;
        transform: translateY(0);
      }
    }

    /* Loading animation for content */
    .fade-in {
      animation: fadeIn 0.8s ease-out;
    }

    /* Responsive design */
    @media (max-width: 768px) {
      .nav {
        padding: 1rem;
      }

      .nav-links {
        display: none;
      }

      .hero h1 {
        font-size: 2.5rem;
      }

      .hero-subtitle {
        font-size: 1.25rem;
      }

      .hero-description {
        font-size: 1rem;
      }

      .timeline-section {
        padding: 2rem 1rem;
      }

      .section-title {
        font-size: 2rem;
      }

      .timeline-container {
        flex-direction: column;
        overflow-x: visible;
      }

      .timeline-item {
        margin: 0.5rem 0;
      }

      .btn-group {
        flex-direction: column;
        align-items: center;
      }

      .footer-content {
        grid-template-columns: 1fr;
        text-align: center;
        gap: 1.5rem;
      }

      .footer-section {
        align-items: center;
      }

      .social-links {
        justify-content: center;
      }
    }
  </style>
</head>
<body>
  <!-- Background effects -->
  <div class="glow-radial"></div>
  <div class="blob blob-1"></div>
  <div class="blob blob-2"></div>
  <div class="blob blob-3"></div>

  <!-- Navigation -->
  <nav class="nav">
    <div class="nav-container">
      <a href="/" class="nav-brand">
        <img src="https://res.cloudinary.com/dp5b5fymz/image/upload/v1755927329/qibird.svg" alt="QiAlly">
        <span>QiAlly</span>
      </a>
      <ul class="nav-links">
        <li><a href="/">Home</a></li>
        <li><a href="/services.html">Services</a></li>
        <li><a href="/about-me.html" class="active">About</a></li>
        <li><a href="/contact.html">Contact</a></li>
        <li><a href="/knowledge-base.html">Help Center</a></li>
        <li><a href="https://portal.qially.com/client" target="_blank" rel="noopener noreferrer">Client Portal</a></li>
      </ul>
    </div>
  </nav>

  <div class="container">
    <!-- Hero section -->
    <section class="hero fade-in">
      <div class="hero-content">
        <h1>Meet Cody Rice Velasquez</h1>
        <p class="hero-subtitle">Systems Whisperer & Chaos-to-Clarity Alchemist</p>
        <p class="hero-description">
          "I'm Cody Rice Velasquez—systems whisperer, chaos-to-clarity alchemist, and the brain behind QiAlly & EmpowerQNow. From Evansville roots to reviving broken empires, I bridge the gap between disarray and dynamite success."
        </p>
        <div class="btn-group">
          <a href="https://crm.qially.com/bookings/qimoment" target="_blank" rel="noopener noreferrer" class="btn btn-primary">
            <svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" style="margin-right: 0.5rem;">
              <path d="M8 2v4"/>
              <path d="M16 2v4"/>
              <rect x="3" y="4" width="18" height="18" rx="2"/>
              <path d="M3 10h18"/>
            </svg>
            Book a Meeting
          </a>
          <a href="cody_rice_velasquez_resume.pdf" target="_blank" rel="noopener noreferrer" class="btn btn-secondary">
            <svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" style="margin-right: 0.5rem;">
              <path d="M14 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V8z"/>
              <polyline points="14,2 14,8 20,8"/>
              <line x1="16" y1="13" x2="8" y2="13"/>
              <line x1="16" y1="17" x2="8" y2="17"/>
              <polyline points="10,9 9,9 8,9"/>
            </svg>
            View Resume
          </a>
        </div>
      </div>
    </section>

    <!-- Career Timeline section -->
    <section class="timeline-section">
      <h2 class="section-title">Career Journey</h2>
      <div class="timeline-container" id="timeline"></div>
      <div id="timeline-content">
        <em>Select a milestone to view details</em>
      </div>
    </section>

    <!-- Resume section -->
    <section class="resume-section">
      <div class="resume-content">
        <h2>Professional Resume</h2>
        <p>Download Cody's comprehensive resume to learn more about his qualifications, experience, and achievements in systems optimization and process improvement.</p>
        <div class="btn-group">
          <a href="cody_rice_velasquez_resume.pdf" target="_blank" rel="noopener noreferrer" class="btn btn-primary">
            <svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" style="margin-right: 0.5rem;">
              <path d="M21 15v4a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2v-4"/>
              <polyline points="7,10 12,15 17,10"/>
              <line x1="12" y1="15" x2="12" y2="3"/>
            </svg>
            Download Resume
          </a>
          <a href="https://portal.qially.com/client" target="_blank" rel="noopener noreferrer" class="btn btn-secondary">
            <svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" style="margin-right: 0.5rem;">
              <path d="M15 3h4a2 2 0 0 1 2 2v14a2 2 0 0 1-2 2h-4"/>
              <polyline points="10,17 15,12 10,7"/>
              <line x1="15" y1="12" x2="3" y2="12"/>
            </svg>
            Client Portal
          </a>
        </div>
      </div>
    </section>
  </div>

  <!-- Footer -->
  <footer>
    <div class="footer-content">
      <div class="footer-section">
        <div class="footer-brand">
          <img src="https://res.cloudinary.com/dp5b5fymz/image/upload/v1755927329/qibird.svg" alt="QiAlly" style="width: 32px; height: 32px; filter: brightness(0) invert(1); margin-right: 0.75rem;">
          <span style="font-weight: 600; font-size: 1.25rem;">QiAlly</span>
        </div>
        <p style="margin-top: 1rem; color: rgb(var(--subtext));">Empower. Innovate. Grow.</p>
        <p style="margin-top: 0.5rem; color: rgb(var(--subtext)); font-size: 0.875rem;">© <span id="year"></span> QiAlly. All rights reserved.</p>
      </div>
      
      <div class="footer-section">
        <h4 style="color: rgb(var(--text)); margin-bottom: 1rem; font-weight: 600;">Quick Links</h4>
        <ul class="footer-links">
          <li><a href="/services.html">Services</a></li>
          <li><a href="/about-me.html">About</a></li>
          <li><a href="/contact.html">Contact</a></li>
          <li><a href="/knowledge-base.html">Help Center</a></li>
        </ul>
      </div>
      
      <div class="footer-section">
        <h4 style="color: rgb(var(--text)); margin-bottom: 1rem; font-weight: 600;">Connect With Us</h4>
        <div class="social-links">
          <a href="https://www.facebook.com/qially1/" target="_blank" rel="noopener noreferrer" class="social-link">
            <svg width="20" height="20" viewBox="0 0 24 24" fill="currentColor">
              <path d="M24 12.073c0-6.627-5.373-12-12-12s-12 5.373-12 12c0 5.99 4.388 10.954 10.125 11.854v-8.385H7.078v-3.47h3.047V9.43c0-3.007 1.792-4.669 4.533-4.669 1.312 0 2.686.235 2.686.235v2.953H15.83c-1.491 0-1.956.925-1.956 1.874v2.25h3.328l-.532 3.47h-2.796v8.385C19.612 23.027 24 18.062 24 12.073z"/>
            </svg>
          </a>
          <a href="https://x.com/QiAlly" target="_blank" rel="noopener noreferrer" class="social-link">
            <svg width="20" height="20" viewBox="0 0 24 24" fill="currentColor">
              <path d="M18.244 2.25h3.308l-7.227 8.26 8.502 11.24H16.17l-5.214-6.817L4.99 21.75H1.68l7.73-8.835L1.254 2.25H8.08l4.713 6.231zm-1.161 17.52h1.833L7.084 4.126H5.117z"/>
            </svg>
          </a>
          <a href="https://www.youtube.com/@qiallyme" target="_blank" rel="noopener noreferrer" class="social-link">
            <svg width="20" height="20" viewBox="0 0 24 24" fill="currentColor">
              <path d="M23.498 6.186a3.016 3.016 0 0 0-2.122-2.136C19.505 3.545 12 3.545 12 3.545s-7.505 0-9.377.505A3.017 3.017 0 0 0 .502 6.186C0 8.07 0 12 0 12s0 3.93.502 5.814a3.016 3.016 0 0 0 2.122 2.136c1.871.505 9.376.505 9.376.505s7.505 0 9.377-.505a3.015 3.015 0 0 0 2.122-2.136C24 15.93 24 12 24 12s0-3.93-.502-5.814zM9.545 15.568V8.432L15.818 12l-6.273 3.568z"/>
            </svg>
          </a>
        </div>
        <div class="contact-info" style="margin-top: 1rem;">
          <p style="color: rgb(var(--subtext)); font-size: 0.875rem; margin-bottom: 0.5rem;">
            <svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" style="margin-right: 0.5rem; display: inline;">
              <path d="M4 4h16c1.1 0 2 .9 2 2v12c0 1.1-.9 2-2 2H4c-1.1 0-2-.9-2-2V6c0-1.1.9-2 2-2z"/>
              <polyline points="22,6 12,13 2,6"/>
            </svg>
            Info@qially.me
          </p>
          <p style="color: rgb(var(--subtext)); font-size: 0.875rem;">
            <svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" style="margin-right: 0.5rem; display: inline;">
              <path d="M22 16.92v3a2 2 0 0 1-2.18 2 19.79 19.79 0 0 1-8.63-3.07 19.5 19.5 0 0 1-6-6 19.79 19.79 0 0 1-3.07-8.67A2 2 0 0 1 4.11 2h3a2 2 0 0 1 2 1.72 12.84 12.84 0 0 0 .7 2.81 2 2 0 0 1-.45 2.11L8.09 9.91a16 16 0 0 0 6 6l1.27-1.27a2 2 0 0 1 2.11-.45 12.84 12.84 0 0 0 2.81.7A2 2 0 0 1 22 16.92z"/>
            </svg>
            +1 (765) 443-4769
          </p>
        </div>
      </div>
    </div>
    
    <div class="footer-bottom" style="border-top: 1px solid rgba(var(--ring), 0.3); margin-top: 2rem; padding-top: 1rem; text-align: center;">
      <p style="color: rgb(var(--subtext)); font-size: 0.75rem;">
        This site uses cookies to improve your experience. By using this site you agree to our 
        <a href="/privacy-policy.html" style="color: rgb(var(--primary));">Privacy Policy</a> and 
        <a href="/terms-of-use.html" style="color: rgb(var(--primary));">Terms of Use</a>.
      </p>
    </div>
  </footer>

  <script>
    // Set current year
    document.getElementById('year').textContent = new Date().getFullYear();
    
    // Interactive Career Timeline
    (function() {
      // Define your key milestones
      const years = [
        2008, // HS Grad
        2009, // Angel Ayuda LLC
        2010, // Spanish Fluency
        2014, // Ivy Tech Grad
        2016, // MSIL Rise
        2018, // IUPUI Attendance
        2019, // Servicios Rice-Velasquez Launch
        2020, // WGU Graduation
        2021, // ASL Proficiency
        2022, // EmpowerQNow Development
        2023, // SRVGroup Founded
        2024, // SRV1NE & InnovaFlow
        2025  // QiAlly & QiLife Launches
      ];

      const events = {
        2008: "Graduated Henry Harrison High School; active in swim team, Spanish & chess clubs; held leadership roles in Tri-State Alliance; worked at McDonalds & delivered papers while fixing computers on the side.",
        2009: "Founded Angel Ayuda LLC during the crisis, providing computer repair services while studying full time.",
        2010: "Achieved fluency in Spanish and deep immersion in Hispanic culture.",
        2014: "Graduated Ivy Tech Community College (Associate's in InfoSys, Networking Security cert, CompTIA certified) while leading teams at Enkei, IHOP, and Waffle House.",
        2016: "Climbed from Jr. Account Manager to Acting Director of HR & Ops at MSIL—managing 300+ employees and refining SOPs.",
        2018: "Attended IUPUI for advanced business-ops integration studies.",
        2019: "Started Servicios Rice-Velasquez, scaling to $1.5M in revenue while still at MSIL.",
        2020: "Graduated Western Governors University with a BBA in HR Management.",
        2021: "Studied ASL Levels I–II; provided translation and support for deaf employees.",
        2022: "Developed EmpowerQNow tarot & mind map system—melding strategy and spirituality.",
        2023: "Founded SRVGroup with multiple LLCs under the umbrella, expanding service offerings.",
        2024: "Launched SRV1NE solopreneur venture, later rebranded to InnovaFlow within QIP ecosystem.",
        2025: "Co-founded IisiTax LLC (now QiAlly LLC); beta-launched QiLife & QiCall AI modules."
      };

      const container = document.getElementById('timeline');
      const contentBox = document.getElementById('timeline-content');

      years.forEach(year => {
        const btn = document.createElement('button');
        btn.className = 'timeline-item';
        btn.textContent = year;
        btn.dataset.year = year;
        btn.addEventListener('click', () => {
          // Reset previous active
          document.querySelectorAll('.timeline-item.active')
            .forEach(el => el.classList.remove('active'));
          btn.classList.add('active');

          // Fade-out then in
          contentBox.style.opacity = 0;
          setTimeout(() => {
            contentBox.innerHTML = `<h3>${year}</h3><p>${events[year] || 'No event defined.'}</p>`;
            contentBox.style.opacity = 1;
          }, 300);

          // Smooth scroll
          btn.scrollIntoView({ behavior: 'smooth', inline: 'center' });
        });
        container.appendChild(btn);
      });
    })();

    // Add some interactive effects
    document.addEventListener('DOMContentLoaded', function() {
      // Add scroll effect to navigation
      window.addEventListener('scroll', function() {
        const nav = document.querySelector('.nav');
        if (window.scrollY > 50) {
          nav.style.background = 'rgba(var(--panel), 0.95)';
        } else {
          nav.style.background = 'rgba(var(--panel), 0.8)';
        }
      });
    });
  </script>
</body>
</html>

================================================================================
END: D:\QiEOS\qially-coming-soon\qially.com\about-me.html
================================================================================


================================================================================
FILE: D:\QiEOS\qially-coming-soon\qially.com\contact.html
================================================================================

<!doctype html>
<html lang="en">
<head>
  <meta charset="utf-8" />
  <title>Contact — QiAlly</title>
  <meta name="viewport" content="width=device-width,initial-scale=1" />
  <meta name="description" content="Get in touch with QiAlly for professional scoping, voting systems, and strategic guidance. Contact me today to discuss your project." />
  <meta name="keywords" content="QiAlly, contact, get in touch, professional services, consultation" />
  <meta name="author" content="QiAlly" />
  <meta property="og:title" content="Contact — QiAlly" />
  <meta property="og:description" content="Get in touch with QiAlly for professional services and consultation." />
  <meta property="og:url" content="https://qially.me/contact" />
  <meta property="og:image" content="https://res.cloudinary.com/dp5b5fymz/image/upload/v1755927329/qibird.svg" />
  <meta property="og:type" content="website" />
  <meta name="twitter:card" content="summary_large_image" />
  <meta name="twitter:title" content="Contact — QiAlly" />
  <meta name="twitter:description" content="Get in touch with QiAlly for professional services and consultation." />
  <meta name="twitter:image" content="https://res.cloudinary.com/dp5b5fymz/image/upload/v1755927329/qibird.svg" />
  <link rel="preconnect" href="https://fonts.googleapis.com">
  <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
  <link href="https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700&display=swap" rel="stylesheet">
  <style>
    /* CSS Variables matching QIPortal theme */
    :root {
      --bg: 15 23 42;
      --panel: 30 41 59;
      --text: 248 250 252;
      --subtext: 148 163 184;
      --ring: 51 65 85;
      --primary: 59 130 246;
      --accent: 147 51 234;
      --success: 34 197 94;
      --warning: 245 158 11;
    }

    * { 
      box-sizing: border-box;
      margin: 0;
      padding: 0;
    }

    html, body { 
      height: 100%;
      font-family: 'Inter', ui-sans-serif, system-ui, sans-serif;
      background-color: rgb(var(--bg));
      color: rgb(var(--text));
      overflow-x: hidden;
    }

    /* Animated background with stars */
    body::before {
      content: '';
      position: fixed;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      background-image: 
        radial-gradient(2px 2px at 20px 30px, rgba(255,255,255,0.3), transparent),
        radial-gradient(2px 2px at 40px 70px, rgba(255,255,255,0.4), transparent),
        radial-gradient(1px 1px at 90px 40px, rgba(255,255,255,0.2), transparent),
        radial-gradient(1px 1px at 130px 80px, rgba(255,255,255,0.3), transparent),
        radial-gradient(2px 2px at 160px 30px, rgba(255,255,255,0.2), transparent),
        radial-gradient(1px 1px at 200px 120px, rgba(255,255,255,0.3), transparent),
        radial-gradient(2px 2px at 240px 60px, rgba(255,255,255,0.2), transparent),
        radial-gradient(1px 1px at 280px 100px, rgba(255,255,255,0.3), transparent);
      background-repeat: repeat;
      background-size: 300px 200px;
      animation: twinkle 4s ease-in-out infinite;
      z-index: -2;
    }

    /* Hero gradient overlay */
    body::after {
      content: '';
      position: fixed;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      background: linear-gradient(135deg, rgb(15 23 42) 0%, rgb(30 58 138) 50%, rgb(88 28 135) 100%);
      opacity: 0.8;
      z-index: -1;
    }

    /* Glow radial effect */
    .glow-radial {
      position: fixed;
      top: 0;
      left: 0;
      width: 100%;
      height: 50%;
      background: radial-gradient(circle at 50% 0%, rgba(59, 130, 246, 0.15) 0%, transparent 70%);
      pointer-events: none;
      z-index: -1;
    }

    /* Floating blobs */
    .blob {
      position: fixed;
      border-radius: 50%;
      filter: blur(40px);
      opacity: 0.3;
      z-index: -1;
    }

    .blob-1 {
      width: 300px;
      height: 300px;
      background: radial-gradient(circle, rgba(59, 130, 246, 0.4) 0%, transparent 70%);
      top: 20%;
      left: 10%;
      animation: blob 7s infinite;
    }

    .blob-2 {
      width: 250px;
      height: 250px;
      background: radial-gradient(circle, rgba(147, 51, 234, 0.3) 0%, transparent 70%);
      top: 60%;
      right: 15%;
      animation: blob 7s infinite 2s;
    }

    .blob-3 {
      width: 200px;
      height: 200px;
      background: radial-gradient(circle, rgba(34, 211, 238, 0.3) 0%, transparent 70%);
      bottom: 20%;
      left: 20%;
      animation: blob 7s infinite 4s;
    }

    /* Navigation */
    .nav {
      position: fixed;
      top: 0;
      left: 0;
      right: 0;
      z-index: 100;
      background: rgba(var(--panel), 0.8);
      backdrop-filter: blur(24px);
      border-bottom: 1px solid rgba(var(--ring), 0.3);
      padding: 1rem 2rem;
    }

    .nav-container {
      max-width: 1200px;
      margin: 0 auto;
      display: flex;
      justify-content: space-between;
      align-items: center;
    }

    .nav-brand {
      display: flex;
      align-items: center;
      gap: 0.75rem;
      text-decoration: none;
      color: rgb(var(--text));
    }

    .nav-brand img {
      width: 32px;
      height: 32px;
      filter: brightness(0) invert(1);
    }

    .nav-brand span {
      font-weight: 600;
      font-size: 1.25rem;
    }

    .nav-links {
      display: flex;
      gap: 2rem;
      list-style: none;
    }

    .nav-links a {
      color: rgb(var(--subtext));
      text-decoration: none;
      font-weight: 500;
      transition: color 0.2s ease;
    }

    .nav-links a:hover {
      color: rgb(var(--text));
    }

    .nav-links a.active {
      color: rgb(var(--primary));
    }

    /* Main container */
    .container {
      min-height: 100vh;
      padding-top: 80px;
      position: relative;
      z-index: 1;
    }

    /* Hero section */
    .hero {
      text-align: center;
      padding: 4rem 2rem;
      max-width: 800px;
      margin: 0 auto;
    }

    .hero h1 {
      font-size: 3rem;
      font-weight: 700;
      margin-bottom: 1rem;
      background: linear-gradient(135deg, rgb(var(--text)), rgb(var(--primary)));
      -webkit-background-clip: text;
      -webkit-text-fill-color: transparent;
      background-clip: text;
    }

    .hero p {
      font-size: 1.25rem;
      color: rgb(var(--subtext));
      line-height: 1.6;
    }

    /* Contact section */
    .contact {
      padding: 4rem 2rem;
      max-width: 1200px;
      margin: 0 auto;
    }

    .contact-grid {
      display: grid;
      grid-template-columns: 1fr 1fr;
      gap: 3rem;
      margin-bottom: 4rem;
    }

    .contact-info {
      background: rgba(var(--panel), 0.8);
      backdrop-filter: blur(24px);
      border: 1px solid rgba(var(--ring), 0.5);
      border-radius: 1rem;
      padding: 2.5rem;
    }

    .contact-info h3 {
      font-size: 1.5rem;
      font-weight: 600;
      margin-bottom: 1.5rem;
      color: rgb(var(--text));
    }

    .contact-methods {
      list-style: none;
      margin-bottom: 2rem;
    }

    .contact-methods li {
      display: flex;
      align-items: center;
      gap: 1rem;
      margin-bottom: 1.5rem;
      color: rgb(var(--subtext));
    }

    .contact-icon {
      width: 40px;
      height: 40px;
      background: rgba(var(--primary), 0.1);
      border-radius: 0.5rem;
      display: flex;
      align-items: center;
      justify-content: center;
      color: rgb(var(--primary));
    }

    .contact-icon svg {
      width: 20px;
      height: 20px;
    }

    .contact-text {
      flex: 1;
    }

    .contact-text h4 {
      font-weight: 600;
      color: rgb(var(--text));
      margin-bottom: 0.25rem;
    }

    .contact-text p {
      color: rgb(var(--subtext));
      font-size: 0.875rem;
    }

    /* Form styles */
    .contact-form {
      background: rgba(var(--panel), 0.8);
      backdrop-filter: blur(24px);
      border: 1px solid rgba(var(--ring), 0.5);
      border-radius: 1rem;
      padding: 2.5rem;
    }

    .form-group {
      margin-bottom: 1.5rem;
    }

    .form-group label {
      display: block;
      font-weight: 500;
      color: rgb(var(--text));
      margin-bottom: 0.5rem;
    }

    .form-group input,
    .form-group textarea,
    .form-group select {
      width: 100%;
      padding: 0.75rem;
      background: rgba(var(--panel), 0.8);
      border: 1px solid rgba(var(--ring), 0.5);
      border-radius: 0.5rem;
      color: rgb(var(--text));
      font-size: 0.875rem;
      transition: all 0.2s ease;
    }

    .form-group input:focus,
    .form-group textarea:focus,
    .form-group select:focus {
      outline: none;
      border-color: rgb(var(--primary));
      box-shadow: 0 0 0 3px rgba(var(--primary), 0.1);
    }

    .form-group textarea {
      resize: vertical;
      min-height: 120px;
    }

    .form-row {
      display: grid;
      grid-template-columns: 1fr 1fr;
      gap: 1rem;
    }

    /* Assistant section */
    .assistant-section {
      background: rgba(var(--panel), 0.3);
      border-radius: 1rem;
      padding: 2.5rem;
      margin-bottom: 3rem;
      text-align: center;
    }

    .assistant-section h3 {
      font-size: 1.5rem;
      font-weight: 600;
      margin-bottom: 1rem;
      color: rgb(var(--text));
    }

    .assistant-section p {
      color: rgb(var(--subtext));
      margin-bottom: 2rem;
      line-height: 1.6;
    }

    .assistant-embed {
      background: rgba(var(--panel), 0.8);
      border: 1px solid rgba(var(--ring), 0.5);
      border-radius: 0.75rem;
      padding: 2rem;
      min-height: 400px;
      display: flex;
      align-items: center;
      justify-content: center;
    }

    .assistant-placeholder {
      text-align: center;
      color: rgb(var(--subtext));
    }

    .assistant-placeholder svg {
      width: 48px;
      height: 48px;
      margin-bottom: 1rem;
      color: rgb(var(--primary));
    }

    /* Buttons */
    .btn {
      display: inline-flex;
      align-items: center;
      justify-content: center;
      padding: 0.75rem 1.5rem;
      border-radius: 0.75rem;
      font-weight: 500;
      font-size: 0.875rem;
      text-decoration: none;
      transition: all 0.2s ease;
      border: 1px solid transparent;
      cursor: pointer;
      position: relative;
      overflow: hidden;
    }

    .btn::before {
      content: '';
      position: absolute;
      top: 0;
      left: -100%;
      width: 100%;
      height: 100%;
      background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.1), transparent);
      transition: left 0.5s ease;
    }

    .btn:hover::before {
      left: 100%;
    }

    .btn-primary {
      background: linear-gradient(135deg, rgb(var(--primary)), rgb(var(--accent)));
      color: white;
      box-shadow: 0 4px 12px rgba(59, 130, 246, 0.3);
    }

    .btn-primary:hover {
      transform: translateY(-2px);
      box-shadow: 0 8px 20px rgba(59, 130, 246, 0.4);
    }

    .btn-secondary {
      background: rgba(var(--panel), 0.8);
      color: rgb(var(--text));
      border-color: rgba(var(--ring), 0.5);
    }

    .btn-secondary:hover {
      background: rgba(var(--panel), 1);
      border-color: rgba(var(--ring), 0.8);
      transform: translateY(-1px);
    }

    .btn-group {
      display: flex;
      gap: 1rem;
      justify-content: center;
      flex-wrap: wrap;
    }

    /* Success message */
    .success-message {
      background: rgba(var(--success), 0.1);
      border: 1px solid rgba(var(--success), 0.2);
      color: rgb(var(--success));
      padding: 1rem;
      border-radius: 0.5rem;
      margin-bottom: 1rem;
      display: none;
    }

    /* Footer */
    footer {
      background: rgba(var(--panel), 0.8);
      border-top: 1px solid rgba(var(--ring), 0.3);
      padding: 2rem;
      color: rgb(var(--subtext));
    }

    .footer-content {
      max-width: 1200px;
      margin: 0 auto;
      display: grid;
      grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
      gap: 2rem;
      align-items: start;
    }

    .footer-section {
      display: flex;
      flex-direction: column;
    }

    .footer-brand {
      display: flex;
      align-items: center;
    }

    .footer-links {
      display: flex;
      flex-direction: column;
      gap: 0.5rem;
      list-style: none;
    }

    .footer-links a {
      color: rgb(var(--subtext));
      text-decoration: none;
      transition: color 0.2s ease;
      font-size: 0.875rem;
    }

    .footer-links a:hover {
      color: rgb(var(--primary));
    }

    .social-links {
      display: flex;
      gap: 1rem;
      margin-bottom: 1rem;
    }

    .social-link {
      display: flex;
      align-items: center;
      justify-content: center;
      width: 40px;
      height: 40px;
      background: rgba(var(--panel), 0.8);
      border: 1px solid rgba(var(--ring), 0.5);
      border-radius: 0.5rem;
      color: rgb(var(--subtext));
      text-decoration: none;
      transition: all 0.2s ease;
    }

    .social-link:hover {
      background: rgba(var(--primary), 0.1);
      border-color: rgba(var(--primary), 0.3);
      color: rgb(var(--primary));
      transform: translateY(-2px);
    }

    .contact-info p {
      display: flex;
      align-items: center;
      margin-bottom: 0.5rem;
    }

    /* Animations */
    @keyframes twinkle {
      0%, 100% { opacity: 0.3; }
      50% { opacity: 1; }
    }

    @keyframes blob {
      0% { transform: translate(0) scale(1); }
      33% { transform: translate(30px, -50px) scale(1.1); }
      66% { transform: translate(-20px, 20px) scale(0.9); }
      100% { transform: translate(0) scale(1); }
    }

    @keyframes fadeIn {
      from {
        opacity: 0;
        transform: translateY(20px);
      }
      to {
        opacity: 1;
        transform: translateY(0);
      }
    }

    /* Responsive design */
    @media (max-width: 768px) {
      .nav {
        padding: 1rem;
      }

      .nav-links {
        display: none;
      }

      .hero h1 {
        font-size: 2.5rem;
      }

      .hero p {
        font-size: 1.125rem;
      }

      .contact {
        padding: 2rem 1rem;
      }

      .contact-grid {
        grid-template-columns: 1fr;
        gap: 2rem;
      }

      .form-row {
        grid-template-columns: 1fr;
      }

      .btn-group {
        flex-direction: column;
        align-items: center;
      }

      .footer-content {
        grid-template-columns: 1fr;
        text-align: center;
        gap: 1.5rem;
      }

      .footer-section {
        align-items: center;
      }

      .social-links {
        justify-content: center;
      }
    }

    /* Booking section styles */
    .booking-section {
      background: rgba(var(--panel), 0.8);
      backdrop-filter: blur(24px);
      border: 1px solid rgba(var(--ring), 0.5);
      border-radius: 1rem;
      padding: 2rem;
      margin-top: 2rem;
    }

    .booking-section h3 {
      color: rgb(var(--text));
      margin-bottom: 1rem;
      font-size: 1.5rem;
      font-weight: 600;
    }

    .booking-section p {
      color: rgb(var(--subtext));
      margin-bottom: 1.5rem;
      line-height: 1.6;
    }

    .booking-options {
      display: flex;
      flex-direction: column;
      gap: 1.5rem;
    }

    .booking-btn {
      display: flex;
      align-items: center;
      justify-content: center;
      padding: 1rem 2rem;
      font-size: 1.125rem;
      font-weight: 600;
      text-decoration: none;
      border-radius: 0.75rem;
      transition: all 0.3s ease;
      background: linear-gradient(135deg, rgb(var(--primary)), rgb(var(--accent)));
      color: white;
      border: none;
      cursor: pointer;
    }

    .booking-btn:hover {
      transform: translateY(-2px);
      box-shadow: 0 8px 25px rgba(var(--primary), 0.3);
    }

    .qr-code-section {
      text-align: center;
    }

    .qr-code-section h4 {
      color: rgb(var(--text));
      margin-bottom: 1rem;
      font-size: 1.125rem;
      font-weight: 600;
    }

    .qr-code-container {
      display: inline-block;
      padding: 1rem;
      background: rgba(var(--background), 0.8);
      border-radius: 0.75rem;
      border: 1px solid rgba(var(--ring), 0.3);
    }

    .qr-code {
      width: 150px;
      height: 150px;
      border-radius: 0.5rem;
      margin-bottom: 0.5rem;
    }

    .qr-caption {
      color: rgb(var(--subtext));
      font-size: 0.875rem;
      margin: 0;
    }

    /* Responsive adjustments for booking section */
    @media (max-width: 768px) {
      .booking-section {
        margin-top: 1.5rem;
        padding: 1.5rem;
      }

      .booking-btn {
        padding: 0.875rem 1.5rem;
        font-size: 1rem;
      }

      .qr-code {
        width: 120px;
        height: 120px;
      }
    }

    /* Loading animation for content */
    .fade-in {
      animation: fadeIn 0.8s ease-out;
    }
  </style>
</head>
<body>
  <!-- Background effects -->
  <div class="glow-radial"></div>
  <div class="blob blob-1"></div>
  <div class="blob blob-2"></div>
  <div class="blob blob-3"></div>

  <!-- Navigation -->
  <nav class="nav">
    <div class="nav-container">
      <a href="/" class="nav-brand">
        <img src="https://res.cloudinary.com/dp5b5fymz/image/upload/v1755927329/qibird.svg" alt="QiAlly">
        <span>QiAlly</span>
      </a>
      <ul class="nav-links">
        <li><a href="/">Home</a></li>
        <li><a href="/services.html">Services</a></li>
        <li><a href="/about.html">About</a></li>
        <li><a href="/contact.html" class="active">Contact</a></li>
        <li><a href="/knowledge-base.html">Help Center</a></li>
      </ul>
    </div>
  </nav>

  <div class="container">
    <!-- Hero section -->
    <section class="hero fade-in">
      <h1>Get in Touch</h1>
      <p>Ready to start your project? I'm here to help you achieve your goals. Let's discuss how I can support your success.</p>
    </section>

    <!-- Contact section -->
    <section class="contact">
      <div class="contact-grid">
        <!-- Contact Information -->
        <div class="contact-info">
          <h3>Contact Information</h3>
          <ul class="contact-methods">
            <li>
              <div class="contact-icon">
                <svg viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                  <path d="M4 4h16c1.1 0 2 .9 2 2v12c0 1.1-.9 2-2 2H4c-1.1 0-2-.9-2-2V6c0-1.1.9-2 2-2z"/>
                  <polyline points="22,6 12,13 2,6"/>
                </svg>
              </div>
              <div class="contact-text">
                <h4>Email</h4>
                <p>Info@qially.me</p>
              </div>
            </li>
            <li>
              <div class="contact-icon">
                <svg viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                  <path d="M22 16.92v3a2 2 0 0 1-2.18 2 19.79 19.79 0 0 1-8.63-3.07 19.5 19.5 0 0 1-6-6 19.79 19.79 0 0 1-3.07-8.67A2 2 0 0 1 4.11 2h3a2 2 0 0 1 2 1.72 12.84 12.84 0 0 0 .7 2.81 2 2 0 0 1-.45 2.11L8.09 9.91a16 16 0 0 0 6 6l1.27-1.27a2 2 0 0 1 2.11-.45 12.84 12.84 0 0 0 2.81.7A2 2 0 0 1 22 16.92z"/>
                </svg>
              </div>
              <div class="contact-text">
                <h4>Phone</h4>
                <p>+1 (765) 443-4769</p>
              </div>
            </li>
            <li>
              <div class="contact-icon">
                <svg viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                  <path d="M21 10c0 7-9 13-9 13s-9-6-9-13a9 9 0 0 1 18 0z"/>
                  <circle cx="12" cy="10" r="3"/>
                </svg>
              </div>
              <div class="contact-text">
                <h4>Location</h4>
                <p>Indianapolis, IN - Available Worldwide</p>
                <a href="https://maps.app.goo.gl/9dS76JosPJt1X7XS7" target="_blank" rel="noopener noreferrer" style="color: rgb(var(--primary)); font-size: 0.875rem; text-decoration: none; margin-top: 0.25rem; display: inline-block;">
                  View on Google Maps →
                </a>
              </div>
            </li>
            <li>
              <div class="contact-icon">
                <svg viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                  <path d="M12 8v4l3 3m6-3a9 9 0 1 1-18 0 9 9 0 0 1 18 0z"/>
                </svg>
              </div>
              <div class="contact-text">
                <h4>Response Time</h4>
                <p>Within 24 hours</p>
              </div>
            </li>
          </ul>
          
          <div class="btn-group">
            <a href="mailto:Info@qially.me" class="btn btn-primary">
              <svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" style="margin-right: 0.5rem;">
                <path d="M4 4h16c1.1 0 2 .9 2 2v12c0 1.1-.9 2-2 2H4c-1.1 0-2-.9-2-2V6c0-1.1.9-2 2-2z"/>
                <polyline points="22,6 12,13 2,6"/>
              </svg>
              Send Email
            </a>
            <a href="https://portal.qially.com/client" class="btn btn-secondary">
              <svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" style="margin-right: 0.5rem;">
                <path d="M15 3h4a2 2 0 0 1 2 2v14a2 2 0 0 1-2 2h-4"/>
                <polyline points="10,17 15,12 10,7"/>
                <line x1="15" y1="12" x2="3" y2="12"/>
              </svg>
              Client Portal
            </a>
          </div>
        </div>

        <!-- Booking Section -->
        <div class="booking-section">
          <h3>Schedule a Meeting</h3>
          <p>Ready to discuss your project? Book a consultation with me directly through my calendar.</p>
          
          <div class="booking-options">
            <a href="https://crm.qially.com/bookings/qimoment" target="_blank" rel="noopener noreferrer" class="btn btn-primary booking-btn">
              <svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" style="margin-right: 0.5rem;">
                <path d="M8 2v4"/>
                <path d="M16 2v4"/>
                <rect x="3" y="4" width="18" height="18" rx="2"/>
                <path d="M3 10h18"/>
              </svg>
              Book a Meeting
            </a>
            
            <div class="qr-code-section">
              <h4>Or scan the QR code</h4>
              <div class="qr-code-container">
                <img src="/public/bookingQRCode.png" alt="Booking QR Code" class="qr-code">
                <p class="qr-caption">Scan to book your consultation</p>
              </div>
            </div>
          </div>
        </div>
        </div>

        <!-- Contact Form -->
        <div class="contact-form">
          <h3>Send Me a Message</h3>
          <!-- Change or deletion of the name attributes in the input tag will lead to empty values on record submission-->
          <form action='https://forms.zohopublic.com/codyqia1/form/ContactUs/formperma/ITirbHI9pou_f5HAt-nY6tJETC6FPmjrVRYvgpxuW2o/htmlRecords/submit' name='form' id='form' method='POST' accept-charset='UTF-8' enctype='multipart/form-data'>
            <input type="hidden" name="zf_referrer_name" value=""><!-- To Track referrals , place the referrer name within the " " in the above hidden input field -->
            <input type="hidden" name="zf_redirect_url" value=""><!-- To redirect to a specific page after record submission , place the respective url within the " " in the above hidden input field -->
            <input type="hidden" name="zc_gad" value=""><!-- If GCLID is enabled in Zoho CRM Integration, click details of AdWords Ads will be pushed to Zoho CRM -->
            
            <div class="form-row">
              <div class="form-group">
                <label for="Name_First">First Name <em>*</em></label>
                <input type="text" maxlength="255" name="Name_First" fieldType=7 placeholder="Enter your first name" required />
              </div>
              <div class="form-group">
                <label for="Name_Last">Last Name <em>*</em></label>
                <input type="text" maxlength="255" name="Name_Last" fieldType=7 placeholder="Enter your last name" required />
              </div>
            </div>
            
            <div class="form-group">
              <label for="Email">Email <em>*</em></label>
              <input type="email" maxlength="255" name="Email" value="" fieldType=9 placeholder="Enter your email address" required />
            </div>
            
            <div class="form-group">
              <label for="MultiLine">Message <em>*</em></label>
              <textarea name="MultiLine" maxlength="65535" placeholder="Tell me about your project and how I can help..." required></textarea>
            </div>
            
            <button type="submit" class="btn btn-primary" style="width: 100%;">
              <svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" style="margin-right: 0.5rem;">
                <path d="M22 2L11 13"/>
                <polygon points="22,2 15,22 11,13 2,9 22,2"/>
              </svg>
              Send Message
            </button>
          </form>
        </div>
      </div>

      <!-- AI Assistant Section -->
      <div class="assistant-section">
        <h3>Need Immediate Help?</h3>
        <p>Chat with my AI assistant to get quick answers to your questions or schedule a consultation.</p>
        
        <div class="assistant-embed">
          <div class="assistant-placeholder">
            <svg viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
              <path d="M21 15a2 2 0 0 1-2 2H7l-4 4V5a2 2 0 0 1 2-2h14a2 2 0 0 1 2 2z"/>
            </svg>
            <h4>11labs AI Assistant</h4>
            <p>Embed your 11labs assistant here</p>
            <p style="font-size: 0.875rem; opacity: 0.7;">Replace this placeholder with your 11labs embed code</p>
          </div>
        </div>
      </div>
    </section>
  </div>

  <!-- Footer -->
  <footer>
    <div class="footer-content">
      <div class="footer-section">
        <div class="footer-brand">
          <img src="https://res.cloudinary.com/dp5b5fymz/image/upload/v1755927329/qibird.svg" alt="QiAlly" style="width: 32px; height: 32px; filter: brightness(0) invert(1); margin-right: 0.75rem;">
          <span style="font-weight: 600; font-size: 1.25rem;">QiAlly</span>
        </div>
        <p style="margin-top: 1rem; color: rgb(var(--subtext));">Empower. Innovate. Grow.</p>
        <p style="margin-top: 0.5rem; color: rgb(var(--subtext)); font-size: 0.875rem;">© <span id="year"></span> QiAlly. All rights reserved.</p>
      </div>
      
      <div class="footer-section">
        <h4 style="color: rgb(var(--text)); margin-bottom: 1rem; font-weight: 600;">Quick Links</h4>
        <ul class="footer-links">
          <li><a href="/services.html">Services</a></li>
          <li><a href="/about.html">About</a></li>
          <li><a href="/contact.html">Contact</a></li>
          <li><a href="/knowledge-base.html">Help Center</a></li>
        </ul>
      </div>
      
      <div class="footer-section">
        <h4 style="color: rgb(var(--text)); margin-bottom: 1rem; font-weight: 600;">Connect With Us</h4>
        <div class="social-links">
          <a href="https://www.facebook.com/qially1/" target="_blank" rel="noopener noreferrer" class="social-link">
            <svg width="20" height="20" viewBox="0 0 24 24" fill="currentColor">
              <path d="M24 12.073c0-6.627-5.373-12-12-12s-12 5.373-12 12c0 5.99 4.388 10.954 10.125 11.854v-8.385H7.078v-3.47h3.047V9.43c0-3.007 1.792-4.669 4.533-4.669 1.312 0 2.686.235 2.686.235v2.953H15.83c-1.491 0-1.956.925-1.956 1.874v2.25h3.328l-.532 3.47h-2.796v8.385C19.612 23.027 24 18.062 24 12.073z"/>
            </svg>
          </a>
          <a href="https://x.com/QiAlly" target="_blank" rel="noopener noreferrer" class="social-link">
            <svg width="20" height="20" viewBox="0 0 24 24" fill="currentColor">
              <path d="M18.244 2.25h3.308l-7.227 8.26 8.502 11.24H16.17l-5.214-6.817L4.99 21.75H1.68l7.73-8.835L1.254 2.25H8.08l4.713 6.231zm-1.161 17.52h1.833L7.084 4.126H5.117z"/>
            </svg>
          </a>
          <a href="https://www.youtube.com/@qiallyme" target="_blank" rel="noopener noreferrer" class="social-link">
            <svg width="20" height="20" viewBox="0 0 24 24" fill="currentColor">
              <path d="M23.498 6.186a3.016 3.016 0 0 0-2.122-2.136C19.505 3.545 12 3.545 12 3.545s-7.505 0-9.377.505A3.017 3.017 0 0 0 .502 6.186C0 8.07 0 12 0 12s0 3.93.502 5.814a3.016 3.016 0 0 0 2.122 2.136c1.871.505 9.376.505 9.376.505s7.505 0 9.377-.505a3.015 3.015 0 0 0 2.122-2.136C24 15.93 24 12 24 12s0-3.93-.502-5.814zM9.545 15.568V8.432L15.818 12l-6.273 3.568z"/>
            </svg>
          </a>
        </div>
        <div class="contact-info" style="margin-top: 1rem;">
          <p style="color: rgb(var(--subtext)); font-size: 0.875rem; margin-bottom: 0.5rem;">
            <svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" style="margin-right: 0.5rem; display: inline;">
              <path d="M4 4h16c1.1 0 2 .9 2 2v12c0 1.1-.9 2-2 2H4c-1.1 0-2-.9-2-2V6c0-1.1.9-2 2-2z"/>
              <polyline points="22,6 12,13 2,6"/>
            </svg>
            Info@qially.me
          </p>
          <p style="color: rgb(var(--subtext)); font-size: 0.875rem;">
            <svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" style="margin-right: 0.5rem; display: inline;">
              <path d="M22 16.92v3a2 2 0 0 1-2.18 2 19.79 19.79 0 0 1-8.63-3.07 19.5 19.5 0 0 1-6-6 19.79 19.79 0 0 1-3.07-8.67A2 2 0 0 1 4.11 2h3a2 2 0 0 1 2 1.72 12.84 12.84 0 0 0 .7 2.81 2 2 0 0 1-.45 2.11L8.09 9.91a16 16 0 0 0 6 6l1.27-1.27a2 2 0 0 1 2.11-.45 12.84 12.84 0 0 0 2.81.7A2 2 0 0 1 22 16.92z"/>
            </svg>
            +1 (765) 443-4769
          </p>
        </div>
      </div>
    </div>
    
    <div class="footer-bottom" style="border-top: 1px solid rgba(var(--ring), 0.3); margin-top: 2rem; padding-top: 1rem; text-align: center;">
      <p style="color: rgb(var(--subtext)); font-size: 0.75rem;">
        This site uses cookies to improve your experience. By using this site you agree to our 
        <a href="/privacy-policy" style="color: rgb(var(--primary));">Privacy Policy</a> and 
        <a href="/terms-of-use" style="color: rgb(var(--primary));">Terms of Use</a>.
      </p>
    </div>
  </footer>

  <script>
    // Set current year
    document.getElementById('year').textContent = new Date().getFullYear();
    
    // Contact form handling - Zoho Forms will handle the submission
    // The form will automatically redirect after successful submission
    
    // Add some interactive effects
    document.addEventListener('DOMContentLoaded', function() {
      // Smooth scrolling for navigation links
      document.querySelectorAll('a[href^="#"]').forEach(anchor => {
        anchor.addEventListener('click', function (e) {
          e.preventDefault();
          const target = document.querySelector(this.getAttribute('href'));
          if (target) {
            target.scrollIntoView({
              behavior: 'smooth',
              block: 'start'
            });
          }
        });
      });

      // Add scroll effect to navigation
      window.addEventListener('scroll', function() {
        const nav = document.querySelector('.nav');
        if (window.scrollY > 50) {
          nav.style.background = 'rgba(var(--panel), 0.95)';
        } else {
          nav.style.background = 'rgba(var(--panel), 0.8)';
        }
      });
    });
  </script>
</body>
</html>


================================================================================
END: D:\QiEOS\qially-coming-soon\qially.com\contact.html
================================================================================


================================================================================
FILE: D:\QiEOS\qially-coming-soon\qially.com\index.html
================================================================================

<!doctype html>
<html lang="en">
<head>
  <meta charset="utf-8" />
  <title>QiAlly — Professional Services & Solutions</title>
  <meta name="viewport" content="width=device-width,initial-scale=1" />
  <meta name="description" content="QiAlly provides professional scoping, voting, and strategic solutions. Get personalized support and expert guidance for your projects." />
  <meta name="keywords" content="QiAlly, professional services, scoping, voting, strategic solutions, client portal" />
  <meta name="author" content="QiAlly" />
  <link rel="canonical" href="https://qially.me" />
  <meta property="og:title" content="QiAlly — Professional Services & Solutions" />
  <meta property="og:description" content="Professional scoping, voting, and strategic solutions tailored to your needs." />
  <meta property="og:url" content="https://qially.com" />
  <meta property="og:image" content="https://res.cloudinary.com/dp5b5fymz/image/upload/v1755927329/qibird.svg" />
  <meta property="og:type" content="website" />
  <meta name="twitter:card" content="summary_large_image" />
  <meta name="twitter:title" content="QiAlly — Professional Services & Solutions" />
  <meta name="twitter:description" content="Professional scoping, voting, and strategic solutions tailored to your needs." />
  <meta name="twitter:image" content="https://res.cloudinary.com/dp5b5fymz/image/upload/v1755927329/qibird.svg" />
  <link rel="preconnect" href="https://fonts.googleapis.com">
  <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
  <link href="https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700&display=swap" rel="stylesheet">
  <style>
    /* CSS Variables matching QIPortal theme */
    :root {
      --bg: 15 23 42;
      --panel: 30 41 59;
      --text: 248 250 252;
      --subtext: 148 163 184;
      --ring: 51 65 85;
      --primary: 59 130 246;
      --accent: 147 51 234;
      --success: 34 197 94;
      --warning: 245 158 11;
    }

    * { 
      box-sizing: border-box;
      margin: 0;
      padding: 0;
    }

    html, body { 
      height: 100%;
      font-family: 'Inter', ui-sans-serif, system-ui, sans-serif;
      background-color: rgb(var(--bg));
      color: rgb(var(--text));
      overflow-x: hidden;
    }

    /* Animated background with stars */
    body::before {
      content: '';
      position: fixed;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      background-image: 
        radial-gradient(2px 2px at 20px 30px, rgba(255,255,255,0.3), transparent),
        radial-gradient(2px 2px at 40px 70px, rgba(255,255,255,0.4), transparent),
        radial-gradient(1px 1px at 90px 40px, rgba(255,255,255,0.2), transparent),
        radial-gradient(1px 1px at 130px 80px, rgba(255,255,255,0.3), transparent),
        radial-gradient(2px 2px at 160px 30px, rgba(255,255,255,0.2), transparent),
        radial-gradient(1px 1px at 200px 120px, rgba(255,255,255,0.3), transparent),
        radial-gradient(2px 2px at 240px 60px, rgba(255,255,255,0.2), transparent),
        radial-gradient(1px 1px at 280px 100px, rgba(255,255,255,0.3), transparent);
      background-repeat: repeat;
      background-size: 300px 200px;
      animation: twinkle 4s ease-in-out infinite;
      z-index: -2;
    }

    /* Hero gradient overlay */
    body::after {
      content: '';
      position: fixed;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      background: linear-gradient(135deg, rgb(15 23 42) 0%, rgb(30 58 138) 50%, rgb(88 28 135) 100%);
      opacity: 0.8;
      z-index: -1;
    }

    /* Glow radial effect */
    .glow-radial {
      position: fixed;
      top: 0;
      left: 0;
      width: 100%;
      height: 50%;
      background: radial-gradient(circle at 50% 0%, rgba(59, 130, 246, 0.15) 0%, transparent 70%);
      pointer-events: none;
      z-index: -1;
    }

    /* Floating blobs */
    .blob {
      position: fixed;
      border-radius: 50%;
      filter: blur(40px);
      opacity: 0.3;
      z-index: -1;
    }

    .blob-1 {
      width: 300px;
      height: 300px;
      background: radial-gradient(circle, rgba(59, 130, 246, 0.4) 0%, transparent 70%);
      top: 20%;
      left: 10%;
      animation: blob 7s infinite;
    }

    .blob-2 {
      width: 250px;
      height: 250px;
      background: radial-gradient(circle, rgba(147, 51, 234, 0.3) 0%, transparent 70%);
      top: 60%;
      right: 15%;
      animation: blob 7s infinite 2s;
    }

    .blob-3 {
      width: 200px;
      height: 200px;
      background: radial-gradient(circle, rgba(34, 211, 238, 0.3) 0%, transparent 70%);
      bottom: 20%;
      left: 20%;
      animation: blob 7s infinite 4s;
    }

    /* Navigation */
    .nav {
      position: fixed;
      top: 0;
      left: 0;
      right: 0;
      z-index: 100;
      background: rgba(var(--panel), 0.8);
      -webkit-backdrop-filter: blur(24px);
      /* stylelint-disable-next-line */
      backdrop-filter: blur(24px);
      border-bottom: 1px solid rgba(var(--ring), 0.3);
      padding: 1rem 2rem;
    }

    .nav-container {
      max-width: 1200px;
      margin: 0 auto;
      display: flex;
      justify-content: space-between;
      align-items: center;
    }

    .nav-brand {
      display: flex;
      align-items: center;
      gap: 0.75rem;
      text-decoration: none;
      color: rgb(var(--text));
    }

    .nav-brand img {
      width: 32px;
      height: 32px;
      filter: brightness(0) invert(1);
    }

    .nav-brand span {
      font-weight: 600;
      font-size: 1.25rem;
    }

    .nav-links {
      display: flex;
      gap: 2rem;
      list-style: none;
    }

    .nav-links a {
      color: rgb(var(--subtext));
      text-decoration: none;
      font-weight: 500;
      transition: color 0.2s ease;
    }

    .nav-links a:hover {
      color: rgb(var(--text));
    }

    .nav-links a.active {
      color: rgb(var(--primary));
    }

    /* Main container */
    .container {
      min-height: 100vh;
      padding-top: 80px;
      position: relative;
      z-index: 1;
    }

    /* Hero section */
    .hero {
      display: flex;
      align-items: center;
      justify-content: center;
      min-height: calc(100vh - 80px);
      padding: 2rem;
      text-align: center;
    }

    .hero-content {
      max-width: 800px;
    }

    .hero h1 {
      font-size: 3.5rem;
      font-weight: 700;
      margin-bottom: 1.5rem;
      background: linear-gradient(135deg, rgb(var(--text)), rgb(var(--primary)));
      -webkit-background-clip: text;
      -webkit-text-fill-color: transparent;
      background-clip: text;
      line-height: 1.2;
    }

    .hero p {
      font-size: 1.25rem;
      color: rgb(var(--subtext));
      margin-bottom: 2rem;
      line-height: 1.6;
      max-width: 600px;
      margin-left: auto;
      margin-right: auto;
    }

    /* Features section */
    .features {
      padding: 4rem 2rem;
      max-width: 1200px;
      margin: 0 auto;
    }

    .section-title {
      text-align: center;
      font-size: 2.5rem;
      font-weight: 600;
      margin-bottom: 3rem;
      background: linear-gradient(135deg, rgb(var(--text)), rgb(var(--subtext)));
      -webkit-background-clip: text;
      -webkit-text-fill-color: transparent;
      background-clip: text;
    }

    .features-grid {
      display: grid;
      grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
      gap: 2rem;
      margin-bottom: 3rem;
    }

    .feature-card {
      background: rgba(var(--panel), 0.8);
      backdrop-filter: blur(24px);
      border: 1px solid rgba(var(--ring), 0.5);
      border-radius: 1rem;
      padding: 2rem;
      transition: all 0.3s ease;
    }

    .feature-card:hover {
      transform: translateY(-5px);
      border-color: rgba(var(--primary), 0.3);
      box-shadow: 0 10px 30px rgba(0, 0, 0, 0.2);
    }

    .feature-icon {
      width: 48px;
      height: 48px;
      background: linear-gradient(135deg, rgb(var(--primary)), rgb(var(--accent)));
      border-radius: 0.75rem;
      display: flex;
      align-items: center;
      justify-content: center;
      margin-bottom: 1rem;
    }

    .feature-icon svg {
      width: 24px;
      height: 24px;
      color: white;
    }

    .feature-card h3 {
      font-size: 1.25rem;
      font-weight: 600;
      margin-bottom: 0.75rem;
      color: rgb(var(--text));
    }

    .feature-card p {
      color: rgb(var(--subtext));
      line-height: 1.6;
    }

    /* CTA section */
    .cta-section {
      text-align: center;
      padding: 4rem 2rem;
      background: rgba(var(--panel), 0.3);
      margin: 2rem 0;
    }

    .cta-content {
      max-width: 600px;
      margin: 0 auto;
    }

    .cta-content h2 {
      font-size: 2rem;
      font-weight: 600;
      margin-bottom: 1rem;
      color: rgb(var(--text));
    }

    .cta-content p {
      color: rgb(var(--subtext));
      margin-bottom: 2rem;
      line-height: 1.6;
    }

    /* Buttons */
    .btn {
      display: inline-flex;
      align-items: center;
      justify-content: center;
      padding: 0.75rem 1.5rem;
      border-radius: 0.75rem;
      font-weight: 500;
      font-size: 0.875rem;
      text-decoration: none;
      transition: all 0.2s ease;
      border: 1px solid transparent;
      cursor: pointer;
      position: relative;
      overflow: hidden;
    }

    .btn::before {
      content: '';
      position: absolute;
      top: 0;
      left: -100%;
      width: 100%;
      height: 100%;
      background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.1), transparent);
      transition: left 0.5s ease;
    }

    .btn:hover::before {
      left: 100%;
    }

    .btn-primary {
      background: linear-gradient(135deg, rgb(var(--primary)), rgb(var(--accent)));
      color: white;
      box-shadow: 0 4px 12px rgba(59, 130, 246, 0.3);
    }

    .btn-primary:hover {
      transform: translateY(-2px);
      box-shadow: 0 8px 20px rgba(59, 130, 246, 0.4);
    }

    .btn-secondary {
      background: rgba(var(--panel), 0.8);
      color: rgb(var(--text));
      border-color: rgba(var(--ring), 0.5);
    }

    .btn-secondary:hover {
      background: rgba(var(--panel), 1);
      border-color: rgba(var(--ring), 0.8);
      transform: translateY(-1px);
    }

    .btn-group {
      display: flex;
      gap: 1rem;
      justify-content: center;
      flex-wrap: wrap;
    }

    /* Footer */
    footer {
      background: rgba(var(--panel), 0.8);
      border-top: 1px solid rgba(var(--ring), 0.3);
      padding: 2rem;
      color: rgb(var(--subtext));
    }

    .footer-content {
      max-width: 1200px;
      margin: 0 auto;
      display: grid;
      grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
      gap: 2rem;
      align-items: start;
    }

    .footer-section {
      display: flex;
      flex-direction: column;
    }

    .footer-brand {
      display: flex;
      align-items: center;
    }

    .footer-links {
      display: flex;
      flex-direction: column;
      gap: 0.5rem;
      list-style: none;
    }

    .footer-links a {
      color: rgb(var(--subtext));
      text-decoration: none;
      transition: color 0.2s ease;
      font-size: 0.875rem;
    }

    .footer-links a:hover {
      color: rgb(var(--primary));
    }

    .social-links {
      display: flex;
      gap: 1rem;
      margin-bottom: 1rem;
    }

    .social-link {
      display: flex;
      align-items: center;
      justify-content: center;
      width: 40px;
      height: 40px;
      background: rgba(var(--panel), 0.8);
      border: 1px solid rgba(var(--ring), 0.5);
      border-radius: 0.5rem;
      color: rgb(var(--subtext));
      text-decoration: none;
      transition: all 0.2s ease;
    }

    .social-link:hover {
      background: rgba(var(--primary), 0.1);
      border-color: rgba(var(--primary), 0.3);
      color: rgb(var(--primary));
      transform: translateY(-2px);
    }

    .contact-info p {
      display: flex;
      align-items: center;
      margin-bottom: 0.5rem;
    }

    /* Animations */
    @keyframes twinkle {
      0%, 100% { opacity: 0.3; }
      50% { opacity: 1; }
    }

    @keyframes blob {
      0% { transform: translate(0) scale(1); }
      33% { transform: translate(30px, -50px) scale(1.1); }
      66% { transform: translate(-20px, 20px) scale(0.9); }
      100% { transform: translate(0) scale(1); }
    }

    @keyframes fadeIn {
      from {
        opacity: 0;
        transform: translateY(20px);
      }
      to {
        opacity: 1;
        transform: translateY(0);
      }
    }

    /* Responsive design */
    @media (max-width: 768px) {
      .nav {
        padding: 1rem;
      }

      .nav-links {
        display: none;
      }

      .hero h1 {
        font-size: 2.5rem;
      }

      .hero p {
        font-size: 1.125rem;
      }

      .features {
        padding: 2rem 1rem;
      }

      .section-title {
        font-size: 2rem;
      }

      .features-grid {
        grid-template-columns: 1fr;
      }

      .btn-group {
        flex-direction: column;
        align-items: center;
      }

      .footer-content {
        grid-template-columns: 1fr;
        text-align: center;
        gap: 1.5rem;
      }

      .footer-section {
        align-items: center;
      }

      .social-links {
        justify-content: center;
      }
    }

    /* Loading animation for content */
    .fade-in {
      animation: fadeIn 0.8s ease-out;
    }

    /* New section styles */
    .hero-subtitle {
      font-size: 1.5rem;
      color: rgb(var(--primary));
      margin-bottom: 1rem;
      font-weight: 500;
    }

    .hero-description {
      font-size: 1.125rem;
      color: rgb(var(--subtext));
      margin-bottom: 2rem;
      line-height: 1.6;
      max-width: 700px;
      margin-left: auto;
      margin-right: auto;
    }

    .section-subtitle {
      font-size: 1.25rem;
      color: rgb(var(--primary));
      margin-bottom: 1rem;
      font-weight: 500;
      text-align: center;
    }

    .section-description {
      color: rgb(var(--subtext));
      font-size: 1.125rem;
      line-height: 1.6;
      margin-bottom: 3rem;
      text-align: center;
      max-width: 800px;
      margin-left: auto;
      margin-right: auto;
    }

    /* Benefits list */
    .benefits-list {
      display: flex;
      flex-direction: column;
      gap: 1rem;
      margin: 2rem 0;
      max-width: 600px;
      margin-left: auto;
      margin-right: auto;
    }

    .benefit-item {
      display: flex;
      align-items: center;
      gap: 1rem;
      padding: 1rem;
      background: rgba(var(--panel), 0.5);
      border-radius: 0.75rem;
      border: 1px solid rgba(var(--ring), 0.3);
    }

    .benefit-item svg {
      color: rgb(var(--success));
      flex-shrink: 0;
    }

    .benefit-item span {
      color: rgb(var(--text));
      font-weight: 500;
    }

    .highlight-text {
      font-size: 1.125rem;
      color: rgb(var(--primary));
      font-weight: 600;
      text-align: center;
      margin-top: 2rem;
      font-style: italic;
    }

    /* Achievements grid */
    .achievements-grid {
      display: grid;
      grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
      gap: 2rem;
      margin-top: 3rem;
    }

    .achievement-card {
      background: rgba(var(--panel), 0.8);
      backdrop-filter: blur(24px);
      border: 1px solid rgba(var(--ring), 0.5);
      border-radius: 1rem;
      padding: 2rem;
      text-align: center;
      transition: all 0.3s ease;
    }

    .achievement-card:hover {
      transform: translateY(-5px);
      border-color: rgba(var(--primary), 0.3);
      box-shadow: 0 10px 30px rgba(0, 0, 0, 0.2);
    }

    .achievement-number {
      font-size: 3rem;
      font-weight: 700;
      background: linear-gradient(135deg, rgb(var(--primary)), rgb(var(--accent)));
      -webkit-background-clip: text;
      -webkit-text-fill-color: transparent;
      background-clip: text;
      margin-bottom: 0.5rem;
    }

    .achievement-label {
      color: rgb(var(--subtext));
      font-size: 1rem;
      font-weight: 500;
    }

    /* Case studies grid */
    .case-studies-grid {
      display: grid;
      grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
      gap: 2rem;
      margin-top: 3rem;
    }

    .case-study-card {
      background: rgba(var(--panel), 0.8);
      backdrop-filter: blur(24px);
      border: 1px solid rgba(var(--ring), 0.5);
      border-radius: 1rem;
      padding: 2rem;
      transition: all 0.3s ease;
      position: relative;
    }

    .case-study-card:hover {
      transform: translateY(-5px);
      border-color: rgba(var(--primary), 0.3);
      box-shadow: 0 10px 30px rgba(0, 0, 0, 0.2);
    }

    .case-study-number {
      position: absolute;
      top: -10px;
      left: 20px;
      background: linear-gradient(135deg, rgb(var(--primary)), rgb(var(--accent)));
      color: white;
      width: 40px;
      height: 40px;
      border-radius: 50%;
      display: flex;
      align-items: center;
      justify-content: center;
      font-weight: 700;
      font-size: 1.125rem;
    }

    .case-study-card h3 {
      font-size: 1.25rem;
      font-weight: 600;
      margin-bottom: 1rem;
      color: rgb(var(--text));
      margin-top: 1rem;
    }

    .case-study-card p {
      color: rgb(var(--subtext));
      line-height: 1.6;
    }

    /* Testimonial styles */
    .testimonial-container {
      max-width: 800px;
      margin: 0 auto;
    }

    .testimonial-content h2 {
      text-align: center;
      font-size: 2.5rem;
      font-weight: 600;
      margin-bottom: 3rem;
      background: linear-gradient(135deg, rgb(var(--text)), rgb(var(--subtext)));
      -webkit-background-clip: text;
      -webkit-text-fill-color: transparent;
      background-clip: text;
    }

    .testimonial-card {
      background: rgba(var(--panel), 0.8);
      backdrop-filter: blur(24px);
      border: 1px solid rgba(var(--ring), 0.5);
      border-radius: 1rem;
      padding: 3rem;
      text-align: center;
      position: relative;
    }

    .testimonial-card::before {
      content: '"';
      position: absolute;
      top: 1rem;
      left: 2rem;
      font-size: 4rem;
      color: rgba(var(--primary), 0.3);
      font-family: serif;
    }

    .testimonial-text {
      font-size: 1.25rem;
      color: rgb(var(--text));
      line-height: 1.6;
      margin-bottom: 2rem;
      font-style: italic;
    }

    .testimonial-author {
      color: rgb(var(--primary));
      font-weight: 600;
      font-size: 1.125rem;
    }

    /* Responsive adjustments for new sections */
    @media (max-width: 768px) {
      .hero-subtitle {
        font-size: 1.25rem;
      }

      .hero-description {
        font-size: 1rem;
      }

      .section-subtitle {
        font-size: 1.125rem;
      }

      .section-description {
        font-size: 1rem;
      }

      .achievements-grid {
        grid-template-columns: 1fr;
      }

      .case-studies-grid {
        grid-template-columns: 1fr;
      }

      .testimonial-card {
        padding: 2rem;
      }

      .testimonial-text {
        font-size: 1.125rem;
      }

      .achievement-number {
        font-size: 2.5rem;
      }
    }
  </style>
</head>
<body>
  <!-- Background effects -->
  <div class="glow-radial"></div>
  <div class="blob blob-1"></div>
  <div class="blob blob-2"></div>
  <div class="blob blob-3"></div>

  <!-- Navigation -->
  <nav class="nav">
    <div class="nav-container">
      <a href="/" class="nav-brand">
        <img src="https://res.cloudinary.com/dp5b5fymz/image/upload/v1755927329/qibird.svg" alt="QiAlly">
        <span>QiAlly</span>
      </a>
      <ul class="nav-links">
        <li><a href="/" class="active">Home</a></li>
        <li><a href="/services.html">Services</a></li>
        <li><a href="/about.html">About</a></li>
        <li><a href="/contact.html">Contact</a></li>
        <li><a href="/knowledge-base.html">Help Center</a></li>
      </ul>
    </div>
  </nav>

  <div class="container">
    <!-- Hero section -->
    <section class="hero fade-in">
      <div class="hero-content">
        <h1>Empower. Innovate. Grow.</h1>
        <p class="hero-subtitle">Transforming Proven Systems into Thriving Operations</p>
        <p class="hero-description">I take what works, spot hidden savings, and drive sustainable growth by fusing finance, HR, technology, and operations into seamless end-to-end solutions.</p>
        <div class="btn-group">
          <a href="https://crm.qially.com/bookings/qimoment" target="_blank" rel="noopener noreferrer" class="btn btn-primary">
            <svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" style="margin-right: 0.5rem;">
              <path d="M8 2v4"/>
              <path d="M16 2v4"/>
              <rect x="3" y="4" width="18" height="18" rx="2"/>
              <path d="M3 10h18"/>
            </svg>
            Book a Meeting
          </a>
          <a href="/services.html" class="btn btn-secondary">
            <svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" style="margin-right: 0.5rem;">
              <path d="M9 12l2 2 4-4"/>
              <path d="M21 12c-1 0-2-1-2-2s1-2 2-2 2 1 2 2-1 2-2 2z"/>
              <path d="M3 12c1 0 2-1 2-2s-1-2-2-2-2 1-2 2 1 2 2 2z"/>
            </svg>
            View Services
          </a>
        </div>
      </div>
    </section>

    <!-- Why QiAlly Matters section -->
    <section class="features">
      <h2 class="section-title">Why QiAlly Matters</h2>
      <p class="section-subtitle">Empower your operations to succeed</p>
      <p class="section-description">I uncover efficiency gains and maximize ROI. By integrating financial insight, workforce strategy, tech innovation, and process excellence, I deliver holistic solutions that last.</p>
      <div class="features-grid">
        <div class="feature-card">
          <div class="feature-icon">
            <svg viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
              <path d="M9 12l2 2 4-4"/>
              <path d="M21 12c-1 0-2-1-2-2s1-2 2-2 2 1 2 2-1 2-2 2z"/>
              <path d="M3 12c1 0 2-1 2-2s-1-2-2-2-2 1-2 2 1 2 2 2z"/>
            </svg>
          </div>
          <h3>Process Improvement</h3>
          <p>Streamline workflows and eliminate bottlenecks to achieve peak operational performance.</p>
        </div>
        <div class="feature-card">
          <div class="feature-icon">
            <svg viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
              <path d="M17 21v-2a4 4 0 0 0-4-4H5a4 4 0 0 0-4 4v2"/>
              <circle cx="9" cy="7" r="4"/>
              <path d="M23 21v-2a4 4 0 0 0-3-3.87"/>
              <path d="M16 3.13a4 4 0 0 1 0 7.75"/>
            </svg>
          </div>
          <h3>Workforce Optimization</h3>
          <p>Maximize team productivity through strategic HR solutions and talent management.</p>
        </div>
        <div class="feature-card">
          <div class="feature-icon">
            <svg viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
              <path d="M18 10h-1.26A8 8 0 1 0 9 20h9a5 5 0 0 0 0-10z"/>
            </svg>
          </div>
          <h3>Tech Integration</h3>
          <p>Seamlessly integrate technology solutions to enhance efficiency and drive innovation.</p>
        </div>
        <div class="feature-card">
          <div class="feature-icon">
            <svg viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
              <path d="M12 1v22"/>
              <path d="M17 5H9.5a3.5 3.5 0 0 0 0 7h5a3.5 3.5 0 0 1 0 7H6"/>
            </svg>
          </div>
          <h3>Financial Acumen</h3>
          <p>Leverage financial insights to identify cost savings and maximize return on investment.</p>
        </div>
      </div>
    </section>

    <!-- What I Do section -->
    <section class="cta-section">
      <div class="cta-content">
        <h2>What I Do at QiAlly</h2>
        <p class="section-subtitle">Crafting holistic, end-to-end solutions</p>
        <p>At QiAlly, I combine my background in finance, HR, technology, and operations to:</p>
        <div class="benefits-list">
          <div class="benefit-item">
            <svg width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
              <path d="M9 12l2 2 4-4"/>
            </svg>
            <span>Identify and capture cost savings</span>
          </div>
          <div class="benefit-item">
            <svg width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
              <path d="M9 12l2 2 4-4"/>
            </svg>
            <span>Streamline workflows for peak performance</span>
          </div>
          <div class="benefit-item">
            <svg width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
              <path d="M9 12l2 2 4-4"/>
            </svg>
            <span>Scale systems for measurable growth</span>
          </div>
        </div>
        <p class="highlight-text">No silo left behind—every piece works together.</p>
      </div>
    </section>

    <!-- Achievements section -->
    <section class="features">
      <h2 class="section-title">My Outstanding Achievements</h2>
      <p class="section-subtitle">Explore my track record of driving savings and growth</p>
      <div class="achievements-grid">
        <div class="achievement-card">
          <div class="achievement-number">200+</div>
          <div class="achievement-label">Systems Optimized</div>
        </div>
        <div class="achievement-card">
          <div class="achievement-number">$3M+</div>
          <div class="achievement-label">Savings Delivered</div>
        </div>
        <div class="achievement-card">
          <div class="achievement-number">80+</div>
          <div class="achievement-label">Solutions & Processes Optimized</div>
        </div>
      </div>
    </section>

    <!-- Case Studies section -->
    <section class="cta-section">
      <div class="cta-content">
        <h2>Case Studies</h2>
        <p class="section-subtitle">Explore our diverse range of successful projects that highlight our commitment to creativity, innovation, and delivering exceptional results for our valued clients.</p>
        <div class="case-studies-grid">
          <div class="case-study-card">
            <div class="case-study-number">1.</div>
            <h3>Operational Workflow Overhaul</h3>
            <p>Integrated finance and tech workflows, cutting process time by 40%.</p>
          </div>
          <div class="case-study-card">
            <div class="case-study-number">2.</div>
            <h3>HR Tech Implementation</h3>
            <p>Deployed an HRIS that boosted onboarding efficiency by 60%.</p>
          </div>
          <div class="case-study-card">
            <div class="case-study-number">3.</div>
            <h3>Reporting Automation</h3>
            <p>Automated financial reports, saving 200 man-hours per quarter.</p>
          </div>
          <div class="case-study-card">
            <div class="case-study-number">4.</div>
            <h3>Process Mapping & Optimization</h3>
            <p>Uncovered $250K in annual savings through comprehensive mapping.</p>
          </div>
        </div>
      </div>
    </section>

    <!-- Testimonial section -->
    <section class="features">
      <div class="testimonial-container">
        <div class="testimonial-content">
          <h2>What my clients are saying</h2>
          <div class="testimonial-card">
            <div class="testimonial-text">
              "Cody is the best, they didn't just get the job done, they found and correct other issues along the ways proactively. Huge savings and potential from the start."
            </div>
            <div class="testimonial-author">
              — Nick Pecoraro, Director at MSIL
            </div>
          </div>
        </div>
      </div>
    </section>



    <!-- Final CTA section -->
    <section class="cta-section">
      <div class="cta-content">
        <h2>Let's bring your systems to life</h2>
        <p>Have processes that need a makeover or systems that deserve to thrive?</p>
        <div class="btn-group">
          <a href="https://crm.qially.com/bookings/qimoment" target="_blank" rel="noopener noreferrer" class="btn btn-primary">
            <svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" style="margin-right: 0.5rem;">
              <path d="M8 2v4"/>
              <path d="M16 2v4"/>
              <rect x="3" y="4" width="18" height="18" rx="2"/>
              <path d="M3 10h18"/>
            </svg>
            Book a Meeting
          </a>
          <a href="https://portal.qially.com/client" class="btn btn-secondary">
            <svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" style="margin-right: 0.5rem;">
              <path d="M15 3h4a2 2 0 0 1 2 2v14a2 2 0 0 1-2 2h-4"/>
              <polyline points="10,17 15,12 10,7"/>
              <line x1="15" y1="12" x2="3" y2="12"/>
            </svg>
            Client Portal
          </a>
        </div>
      </div>
    </section>
  </div>

  <!-- Footer -->
  <footer>
    <div class="footer-content">
      <div class="footer-section">
        <div class="footer-brand">
          <img src="https://res.cloudinary.com/dp5b5fymz/image/upload/v1755927329/qibird.svg" alt="QiAlly" style="width: 32px; height: 32px; filter: brightness(0) invert(1); margin-right: 0.75rem;">
          <span style="font-weight: 600; font-size: 1.25rem;">QiAlly</span>
        </div>
        <p style="margin-top: 1rem; color: rgb(var(--subtext));">Empower. Innovate. Grow.</p>
        <p style="margin-top: 0.5rem; color: rgb(var(--subtext)); font-size: 0.875rem;">© <span id="year"></span> QiAlly. All rights reserved.</p>
      </div>
      
      <div class="footer-section">
        <h4 style="color: rgb(var(--text)); margin-bottom: 1rem; font-weight: 600;">Quick Links</h4>
        <ul class="footer-links">
          <li><a href="/services.html">Services</a></li>
          <li><a href="/about.html">About</a></li>
          <li><a href="/contact.html">Contact</a></li>
          <li><a href="/knowledge-base.html">Help Center</a></li>
        </ul>
      </div>
      
      <div class="footer-section">
        <h4 style="color: rgb(var(--text)); margin-bottom: 1rem; font-weight: 600;">Connect With Us</h4>
        <div class="social-links">
          <a href="https://www.facebook.com/qially1/" target="_blank" rel="noopener noreferrer" class="social-link">
            <svg width="20" height="20" viewBox="0 0 24 24" fill="currentColor">
              <path d="M24 12.073c0-6.627-5.373-12-12-12s-12 5.373-12 12c0 5.99 4.388 10.954 10.125 11.854v-8.385H7.078v-3.47h3.047V9.43c0-3.007 1.792-4.669 4.533-4.669 1.312 0 2.686.235 2.686.235v2.953H15.83c-1.491 0-1.956.925-1.956 1.874v2.25h3.328l-.532 3.47h-2.796v8.385C19.612 23.027 24 18.062 24 12.073z"/>
            </svg>
          </a>
          <a href="https://x.com/QiAlly" target="_blank" rel="noopener noreferrer" class="social-link">
            <svg width="20" height="20" viewBox="0 0 24 24" fill="currentColor">
              <path d="M18.244 2.25h3.308l-7.227 8.26 8.502 11.24H16.17l-5.214-6.817L4.99 21.75H1.68l7.73-8.835L1.254 2.25H8.08l4.713 6.231zm-1.161 17.52h1.833L7.084 4.126H5.117z"/>
            </svg>
          </a>
          <a href="https://www.youtube.com/@qiallyme" target="_blank" rel="noopener noreferrer" class="social-link">
            <svg width="20" height="20" viewBox="0 0 24 24" fill="currentColor">
              <path d="M23.498 6.186a3.016 3.016 0 0 0-2.122-2.136C19.505 3.545 12 3.545 12 3.545s-7.505 0-9.377.505A3.017 3.017 0 0 0 .502 6.186C0 8.07 0 12 0 12s0 3.93.502 5.814a3.016 3.016 0 0 0 2.122 2.136c1.871.505 9.376.505 9.376.505s7.505 0 9.377-.505a3.015 3.015 0 0 0 2.122-2.136C24 15.93 24 12 24 12s0-3.93-.502-5.814zM9.545 15.568V8.432L15.818 12l-6.273 3.568z"/>
            </svg>
          </a>
        </div>
        <div class="contact-info" style="margin-top: 1rem;">
          <p style="color: rgb(var(--subtext)); font-size: 0.875rem; margin-bottom: 0.5rem;">
            <svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" style="margin-right: 0.5rem; display: inline;">
              <path d="M4 4h16c1.1 0 2 .9 2 2v12c0 1.1-.9 2-2 2H4c-1.1 0-2-.9-2-2V6c0-1.1.9-2 2-2z"/>
              <polyline points="22,6 12,13 2,6"/>
            </svg>
            Info@qially.me
          </p>
          <p style="color: rgb(var(--subtext)); font-size: 0.875rem;">
            <svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" style="margin-right: 0.5rem; display: inline;">
              <path d="M22 16.92v3a2 2 0 0 1-2.18 2 19.79 19.79 0 0 1-8.63-3.07 19.5 19.5 0 0 1-6-6 19.79 19.79 0 0 1-3.07-8.67A2 2 0 0 1 4.11 2h3a2 2 0 0 1 2 1.72 12.84 12.84 0 0 0 .7 2.81 2 2 0 0 1-.45 2.11L8.09 9.91a16 16 0 0 0 6 6l1.27-1.27a2 2 0 0 1 2.11-.45 12.84 12.84 0 0 0 2.81.7A2 2 0 0 1 22 16.92z"/>
            </svg>
            +1 (765) 443-4769
          </p>
        </div>
      </div>
    </div>
    
    <div class="footer-bottom" style="border-top: 1px solid rgba(var(--ring), 0.3); margin-top: 2rem; padding-top: 1rem; text-align: center;">
      <p style="color: rgb(var(--subtext)); font-size: 0.75rem;">
        This site uses cookies to improve your experience. By using this site you agree to our 
        <a href="/privacy-policy" style="color: rgb(var(--primary));">Privacy Policy</a> and 
        <a href="/terms-of-use" style="color: rgb(var(--primary));">Terms of Use</a>.
      </p>
    </div>
  </footer>

  <script>
    // Set current year
    document.getElementById('year').textContent = new Date().getFullYear();
    
    // Add some interactive effects
    document.addEventListener('DOMContentLoaded', function() {
      // Smooth scrolling for navigation links
      document.querySelectorAll('a[href^="#"]').forEach(anchor => {
        anchor.addEventListener('click', function (e) {
          e.preventDefault();
          const target = document.querySelector(this.getAttribute('href'));
          if (target) {
            target.scrollIntoView({
              behavior: 'smooth',
              block: 'start'
            });
          }
        });
      });

      // Add scroll effect to navigation
      window.addEventListener('scroll', function() {
        const nav = document.querySelector('.nav');
        if (window.scrollY > 50) {
          nav.style.background = 'rgba(var(--panel), 0.95)';
        } else {
          nav.style.background = 'rgba(var(--panel), 0.8)';
        }
      });
    });
  </script>
</body>
</html>


================================================================================
END: D:\QiEOS\qially-coming-soon\qially.com\index.html
================================================================================


================================================================================
FILE: D:\QiEOS\qially-coming-soon\qially.com\knowledge-base.html
================================================================================

<!doctype html>
<html lang="en">
<head>
  <meta charset="utf-8" />
  <title>Knowledge Base — QiAlly | Public Resources & Documentation</title>
  <meta name="viewport" content="width=device-width,initial-scale=1" />
  <meta name="description" content="QiAlly's public knowledge base. Access comprehensive documentation, guides, and resources for systems optimization, process improvement, and professional services." />
  <meta name="keywords" content="QiAlly, knowledge base, documentation, guides, process improvement, systems optimization, professional services" />
  <meta name="author" content="QiAlly" />
  <link rel="canonical" href="https://qially.me/knowledge-base" />
  <meta property="og:title" content="Knowledge Base — QiAlly | Public Resources & Documentation" />
  <meta property="og:description" content="QiAlly's public knowledge base. Access comprehensive documentation, guides, and resources." />
  <meta property="og:url" content="https://qially.me/knowledge-base" />
  <meta property="og:image" content="https://res.cloudinary.com/dp5b5fymz/image/upload/v1755927329/qibird.svg" />
  <meta property="og:type" content="website" />
  <meta name="twitter:card" content="summary_large_image" />
  <meta name="twitter:title" content="Help Center — QiAlly" />
  <meta name="twitter:description" content="Get help and support for QiAlly services." />
  <meta name="twitter:image" content="https://res.cloudinary.com/dp5b5fymz/image/upload/v1755927329/qibird.svg" />
  <link rel="preconnect" href="https://fonts.googleapis.com">
  <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
  <link href="https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700&display=swap" rel="stylesheet">
  <style>
    /* CSS Variables matching QIPortal theme */
    :root {
      --bg: 15 23 42;
      --panel: 30 41 59;
      --text: 248 250 252;
      --subtext: 148 163 184;
      --ring: 51 65 85;
      --primary: 59 130 246;
      --accent: 147 51 234;
      --success: 34 197 94;
      --warning: 245 158 11;
    }

    * { 
      box-sizing: border-box;
      margin: 0;
      padding: 0;
    }

    html, body { 
      height: 100%;
      font-family: 'Inter', ui-sans-serif, system-ui, sans-serif;
      background-color: rgb(var(--bg));
      color: rgb(var(--text));
      overflow-x: hidden;
    }

    /* Animated background with stars */
    body::before {
      content: '';
      position: fixed;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      background-image: 
        radial-gradient(2px 2px at 20px 30px, rgba(255,255,255,0.3), transparent),
        radial-gradient(2px 2px at 40px 70px, rgba(255,255,255,0.4), transparent),
        radial-gradient(1px 1px at 90px 40px, rgba(255,255,255,0.2), transparent),
        radial-gradient(1px 1px at 130px 80px, rgba(255,255,255,0.3), transparent),
        radial-gradient(2px 2px at 160px 30px, rgba(255,255,255,0.2), transparent),
        radial-gradient(1px 1px at 200px 120px, rgba(255,255,255,0.3), transparent),
        radial-gradient(2px 2px at 240px 60px, rgba(255,255,255,0.2), transparent),
        radial-gradient(1px 1px at 280px 100px, rgba(255,255,255,0.3), transparent);
      background-repeat: repeat;
      background-size: 300px 200px;
      animation: twinkle 4s ease-in-out infinite;
      z-index: -2;
    }

    /* Hero gradient overlay */
    body::after {
      content: '';
      position: fixed;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      background: linear-gradient(135deg, rgb(15 23 42) 0%, rgb(30 58 138) 50%, rgb(88 28 135) 100%);
      opacity: 0.8;
      z-index: -1;
    }

    /* Glow radial effect */
    .glow-radial {
      position: fixed;
      top: 0;
      left: 0;
      width: 100%;
      height: 50%;
      background: radial-gradient(circle at 50% 0%, rgba(59, 130, 246, 0.15) 0%, transparent 70%);
      pointer-events: none;
      z-index: -1;
    }

    /* Floating blobs */
    .blob {
      position: fixed;
      border-radius: 50%;
      filter: blur(40px);
      opacity: 0.3;
      z-index: -1;
    }

    .blob-1 {
      width: 300px;
      height: 300px;
      background: radial-gradient(circle, rgba(59, 130, 246, 0.4) 0%, transparent 70%);
      top: 20%;
      left: 10%;
      animation: blob 7s infinite;
    }

    .blob-2 {
      width: 250px;
      height: 250px;
      background: radial-gradient(circle, rgba(147, 51, 234, 0.3) 0%, transparent 70%);
      top: 60%;
      right: 15%;
      animation: blob 7s infinite 2s;
    }

    .blob-3 {
      width: 200px;
      height: 200px;
      background: radial-gradient(circle, rgba(34, 211, 238, 0.3) 0%, transparent 70%);
      bottom: 20%;
      left: 20%;
      animation: blob 7s infinite 4s;
    }

    /* Navigation */
    .nav {
      position: fixed;
      top: 0;
      left: 0;
      right: 0;
      z-index: 100;
      background: rgba(var(--panel), 0.8);
      backdrop-filter: blur(24px);
      border-bottom: 1px solid rgba(var(--ring), 0.3);
      padding: 1rem 2rem;
    }

    .nav-container {
      max-width: 1200px;
      margin: 0 auto;
      display: flex;
      justify-content: space-between;
      align-items: center;
    }

    .nav-brand {
      display: flex;
      align-items: center;
      gap: 0.75rem;
      text-decoration: none;
      color: rgb(var(--text));
    }

    .nav-brand img {
      width: 32px;
      height: 32px;
      filter: brightness(0) invert(1);
    }

    .nav-brand span {
      font-weight: 600;
      font-size: 1.25rem;
    }

    .nav-links {
      display: flex;
      gap: 2rem;
      list-style: none;
    }

    .nav-links a {
      color: rgb(var(--subtext));
      text-decoration: none;
      font-weight: 500;
      transition: color 0.2s ease;
    }

    .nav-links a:hover {
      color: rgb(var(--text));
    }

    .nav-links a.active {
      color: rgb(var(--primary));
    }

    /* Main container */
    .container {
      min-height: 100vh;
      padding-top: 80px;
      position: relative;
      z-index: 1;
    }

    /* Hero section */
    .hero {
      text-align: center;
      padding: 4rem 2rem;
      max-width: 800px;
      margin: 0 auto;
    }

    .hero h1 {
      font-size: 3rem;
      font-weight: 700;
      margin-bottom: 1rem;
      background: linear-gradient(135deg, rgb(var(--text)), rgb(var(--primary)));
      -webkit-background-clip: text;
      -webkit-text-fill-color: transparent;
      background-clip: text;
    }

    .hero p {
      font-size: 1.25rem;
      color: rgb(var(--subtext));
      line-height: 1.6;
    }

    /* Search section */
    .search-section {
      padding: 2rem;
      max-width: 800px;
      margin: 0 auto 4rem;
    }

    .search-container {
      background: rgba(var(--panel), 0.8);
      backdrop-filter: blur(24px);
      border: 1px solid rgba(var(--ring), 0.5);
      border-radius: 1rem;
      padding: 2rem;
      text-align: center;
    }

    .search-container h3 {
      font-size: 1.5rem;
      font-weight: 600;
      margin-bottom: 1rem;
      color: rgb(var(--text));
    }

    .search-container p {
      color: rgb(var(--subtext));
      margin-bottom: 2rem;
      line-height: 1.6;
    }

    .search-box {
      display: flex;
      gap: 1rem;
      max-width: 500px;
      margin: 0 auto;
    }

    .search-input {
      flex: 1;
      padding: 0.75rem 1rem;
      background: rgba(var(--panel), 0.8);
      border: 1px solid rgba(var(--ring), 0.5);
      border-radius: 0.5rem;
      color: rgb(var(--text));
      font-size: 0.875rem;
      transition: all 0.2s ease;
    }

    .search-input:focus {
      outline: none;
      border-color: rgb(var(--primary));
      box-shadow: 0 0 0 3px rgba(var(--primary), 0.1);
    }

    .search-input::placeholder {
      color: rgb(var(--subtext));
    }

    /* Help categories */
    .help-categories {
      padding: 4rem 2rem;
      max-width: 1200px;
      margin: 0 auto;
    }

    .section-title {
      text-align: center;
      font-size: 2.5rem;
      font-weight: 600;
      margin-bottom: 3rem;
      background: linear-gradient(135deg, rgb(var(--text)), rgb(var(--subtext)));
      -webkit-background-clip: text;
      -webkit-text-fill-color: transparent;
      background-clip: text;
    }

    .categories-grid {
      display: grid;
      grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
      gap: 2rem;
      margin-bottom: 4rem;
    }

    .category-card {
      background: rgba(var(--panel), 0.8);
      backdrop-filter: blur(24px);
      border: 1px solid rgba(var(--ring), 0.5);
      border-radius: 1rem;
      padding: 2rem;
      transition: all 0.3s ease;
      cursor: pointer;
    }

    .category-card:hover {
      transform: translateY(-5px);
      border-color: rgba(var(--primary), 0.3);
      box-shadow: 0 10px 30px rgba(0, 0, 0, 0.2);
    }

    .category-icon {
      width: 64px;
      height: 64px;
      background: linear-gradient(135deg, rgb(var(--primary)), rgb(var(--accent)));
      border-radius: 1rem;
      display: flex;
      align-items: center;
      justify-content: center;
      margin-bottom: 1.5rem;
    }

    .category-icon svg {
      width: 32px;
      height: 32px;
      color: white;
    }

    .category-card h3 {
      font-size: 1.25rem;
      font-weight: 600;
      margin-bottom: 0.75rem;
      color: rgb(var(--text));
    }

    .category-card p {
      color: rgb(var(--subtext));
      line-height: 1.6;
      margin-bottom: 1.5rem;
    }

    .category-stats {
      display: flex;
      justify-content: space-between;
      align-items: center;
      font-size: 0.875rem;
      color: rgb(var(--subtext));
    }

    .article-count {
      display: flex;
      align-items: center;
      gap: 0.5rem;
    }

    /* Zoho Desk Integration */
    .zoho-integration {
      background: rgba(var(--panel), 0.3);
      border-radius: 1rem;
      padding: 3rem;
      margin: 3rem 0;
      text-align: center;
    }

    .zoho-content {
      max-width: 800px;
      margin: 0 auto;
    }

    .zoho-content h2 {
      font-size: 2rem;
      font-weight: 600;
      margin-bottom: 1rem;
      color: rgb(var(--text));
    }

    .zoho-content p {
      color: rgb(var(--subtext));
      margin-bottom: 2rem;
      line-height: 1.6;
    }

    .zoho-embed {
      background: rgba(var(--panel), 0.8);
      border: 1px solid rgba(var(--ring), 0.5);
      border-radius: 0.75rem;
      padding: 2rem;
      min-height: 500px;
      display: flex;
      align-items: center;
      justify-content: center;
    }

    .zoho-placeholder {
      text-align: center;
      color: rgb(var(--subtext));
    }

    .zoho-placeholder svg {
      width: 64px;
      height: 64px;
      margin-bottom: 1rem;
      color: rgb(var(--primary));
    }

    /* FAQ section */
    .faq-section {
      padding: 4rem 2rem;
      max-width: 800px;
      margin: 0 auto;
    }

    .faq-item {
      background: rgba(var(--panel), 0.8);
      backdrop-filter: blur(24px);
      border: 1px solid rgba(var(--ring), 0.5);
      border-radius: 1rem;
      margin-bottom: 1rem;
      overflow: hidden;
    }

    .faq-question {
      padding: 1.5rem;
      cursor: pointer;
      display: flex;
      justify-content: space-between;
      align-items: center;
      transition: all 0.2s ease;
    }

    .faq-question:hover {
      background: rgba(var(--ring), 0.1);
    }

    .faq-question h3 {
      font-size: 1.125rem;
      font-weight: 600;
      color: rgb(var(--text));
    }

    .faq-toggle {
      width: 24px;
      height: 24px;
      background: rgba(var(--primary), 0.1);
      border-radius: 50%;
      display: flex;
      align-items: center;
      justify-content: center;
      color: rgb(var(--primary));
      transition: transform 0.2s ease;
    }

    .faq-item.active .faq-toggle {
      transform: rotate(45deg);
    }

    .faq-answer {
      padding: 0 1.5rem;
      max-height: 0;
      overflow: hidden;
      transition: all 0.3s ease;
    }

    .faq-item.active .faq-answer {
      padding: 0 1.5rem 1.5rem;
      max-height: 200px;
    }

    .faq-answer p {
      color: rgb(var(--subtext));
      line-height: 1.6;
    }

    /* Contact support */
    .support-section {
      text-align: center;
      padding: 4rem 2rem;
      background: rgba(var(--panel), 0.3);
      margin: 2rem 0;
    }

    .support-content {
      max-width: 600px;
      margin: 0 auto;
    }

    .support-content h2 {
      font-size: 2rem;
      font-weight: 600;
      margin-bottom: 1rem;
      color: rgb(var(--text));
    }

    .support-content p {
      color: rgb(var(--subtext));
      margin-bottom: 2rem;
      line-height: 1.6;
    }

    /* Buttons */
    .btn {
      display: inline-flex;
      align-items: center;
      justify-content: center;
      padding: 0.75rem 1.5rem;
      border-radius: 0.75rem;
      font-weight: 500;
      font-size: 0.875rem;
      text-decoration: none;
      transition: all 0.2s ease;
      border: 1px solid transparent;
      cursor: pointer;
      position: relative;
      overflow: hidden;
    }

    .btn::before {
      content: '';
      position: absolute;
      top: 0;
      left: -100%;
      width: 100%;
      height: 100%;
      background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.1), transparent);
      transition: left 0.5s ease;
    }

    .btn:hover::before {
      left: 100%;
    }

    .btn-primary {
      background: linear-gradient(135deg, rgb(var(--primary)), rgb(var(--accent)));
      color: white;
      box-shadow: 0 4px 12px rgba(59, 130, 246, 0.3);
    }

    .btn-primary:hover {
      transform: translateY(-2px);
      box-shadow: 0 8px 20px rgba(59, 130, 246, 0.4);
    }

    .btn-secondary {
      background: rgba(var(--panel), 0.8);
      color: rgb(var(--text));
      border-color: rgba(var(--ring), 0.5);
    }

    .btn-secondary:hover {
      background: rgba(var(--panel), 1);
      border-color: rgba(var(--ring), 0.8);
      transform: translateY(-1px);
    }

    .btn-group {
      display: flex;
      gap: 1rem;
      justify-content: center;
      flex-wrap: wrap;
    }

    /* Footer */
    footer {
      background: rgba(var(--panel), 0.8);
      border-top: 1px solid rgba(var(--ring), 0.3);
      padding: 2rem;
      text-align: center;
      color: rgb(var(--subtext));
    }

    .footer-content {
      max-width: 1200px;
      margin: 0 auto;
      display: flex;
      justify-content: space-between;
      align-items: center;
      flex-wrap: wrap;
      gap: 1rem;
    }

    .footer-links {
      display: flex;
      gap: 2rem;
      list-style: none;
    }

    .footer-links a {
      color: rgb(var(--subtext));
      text-decoration: none;
      transition: color 0.2s ease;
    }

    .footer-links a:hover {
      color: rgb(var(--primary));
    }

    /* Animations */
    @keyframes twinkle {
      0%, 100% { opacity: 0.3; }
      50% { opacity: 1; }
    }

    @keyframes blob {
      0% { transform: translate(0) scale(1); }
      33% { transform: translate(30px, -50px) scale(1.1); }
      66% { transform: translate(-20px, 20px) scale(0.9); }
      100% { transform: translate(0) scale(1); }
    }

    @keyframes fadeIn {
      from {
        opacity: 0;
        transform: translateY(20px);
      }
      to {
        opacity: 1;
        transform: translateY(0);
      }
    }

    /* Responsive design */
    @media (max-width: 768px) {
      .nav {
        padding: 1rem;
      }

      .nav-links {
        display: none;
      }

      .hero h1 {
        font-size: 2.5rem;
      }

      .hero p {
        font-size: 1.125rem;
      }

      .search-box {
        flex-direction: column;
      }

      .help-categories {
        padding: 2rem 1rem;
      }

      .section-title {
        font-size: 2rem;
      }

      .categories-grid {
        grid-template-columns: 1fr;
      }

      .zoho-integration {
        padding: 2rem;
      }

      .zoho-content h2 {
        font-size: 1.5rem;
      }

      .faq-section {
        padding: 2rem 1rem;
      }

      .btn-group {
        flex-direction: column;
        align-items: center;
      }

      .footer-content {
        flex-direction: column;
        text-align: center;
      }

      .footer-links {
        justify-content: center;
      }
    }

    /* Loading animation for content */
    .fade-in {
      animation: fadeIn 0.8s ease-out;
    }
  </style>
</head>
<body>
  <!-- Background effects -->
  <div class="glow-radial"></div>
  <div class="blob blob-1"></div>
  <div class="blob blob-2"></div>
  <div class="blob blob-3"></div>

  <!-- Navigation -->
  <nav class="nav">
    <div class="nav-container">
      <a href="/" class="nav-brand">
        <img src="https://res.cloudinary.com/dp5b5fymz/image/upload/v1755927329/qibird.svg" alt="QiAlly">
        <span>QiAlly</span>
      </a>
      <ul class="nav-links">
        <li><a href="/">Home</a></li>
        <li><a href="/services.html">Services</a></li>
        <li><a href="/about.html">About</a></li>
        <li><a href="/contact.html">Contact</a></li>
        <li><a href="/knowledge-base.html" class="active">Help Center</a></li>
      </ul>
    </div>
  </nav>

  <div class="container">
    <!-- Hero section -->
    <section class="hero fade-in">
      <h1>Knowledge Base</h1>
      <p>Find answers to your questions and get the support you need. Our knowledge base is here to help you succeed.</p>
    </section>

    <!-- Search section -->
    <section class="search-section">
      <div class="search-container">
        <h3>Search for Help</h3>
        <p>Looking for something specific? Search our knowledge base to find the information you need.</p>
        <div class="search-box">
          <input type="text" class="search-input" placeholder="Search for articles, guides, or FAQs..." id="searchInput">
          <button class="btn btn-primary" onclick="searchKnowledgeBase()">
            <svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" style="margin-right: 0.5rem;">
              <circle cx="11" cy="11" r="8"/>
              <path d="M21 21l-4.35-4.35"/>
            </svg>
            Search
          </button>
        </div>
      </div>
    </section>

    <!-- Help categories -->
    <section class="help-categories">
      <h2 class="section-title">Browse by Category</h2>
      <div class="categories-grid">
        <div class="category-card" onclick="openCategory('getting-started')">
          <div class="category-icon">
            <svg viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
              <path d="M13 2L3 14h9l-1 8 10-12h-9l1-8z"/>
            </svg>
          </div>
          <h3>Getting Started</h3>
          <p>Learn the basics and get up and running with QiAlly services quickly.</p>
          <div class="category-stats">
            <span class="article-count">
              <svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                <path d="M14 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V8z"/>
                <polyline points="14,2 14,8 20,8"/>
                <line x1="16" y1="13" x2="8" y2="13"/>
                <line x1="16" y1="17" x2="8" y2="17"/>
                <polyline points="10,9 9,9 8,9"/>
              </svg>
              12 articles
            </span>
          </div>
        </div>

        <div class="category-card" onclick="openCategory('services')">
          <div class="category-icon">
            <svg viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
              <path d="M9 12l2 2 4-4"/>
              <path d="M21 12c-1 0-2-1-2-2s1-2 2-2 2 1 2 2-1 2-2 2z"/>
              <path d="M3 12c1 0 2-1 2-2s-1-2-2-2-2 1-2 2 1 2 2 2z"/>
            </svg>
          </div>
          <h3>Services Guide</h3>
          <p>Detailed guides for scoping, voting systems, and strategic guidance services.</p>
          <div class="category-stats">
            <span class="article-count">
              <svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                <path d="M14 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V8z"/>
                <polyline points="14,2 14,8 20,8"/>
                <line x1="16" y1="13" x2="8" y2="13"/>
                <line x1="16" y1="17" x2="8" y2="17"/>
                <polyline points="10,9 9,9 8,9"/>
              </svg>
              18 articles
            </span>
          </div>
        </div>

        <div class="category-card" onclick="openCategory('client-portal')">
          <div class="category-icon">
            <svg viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
              <path d="M15 3h4a2 2 0 0 1 2 2v14a2 2 0 0 1-2 2h-4"/>
              <polyline points="10,17 15,12 10,7"/>
              <line x1="15" y1="12" x2="3" y2="12"/>
            </svg>
          </div>
          <h3>Client Portal</h3>
          <p>Everything you need to know about using the client portal and managing your projects.</p>
          <div class="category-stats">
            <span class="article-count">
              <svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                <path d="M14 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V8z"/>
                <polyline points="14,2 14,8 20,8"/>
                <line x1="16" y1="13" x2="8" y2="13"/>
                <line x1="16" y1="17" x2="8" y2="17"/>
                <polyline points="10,9 9,9 8,9"/>
              </svg>
              25 articles
            </span>
          </div>
        </div>

        <div class="category-card" onclick="openCategory('troubleshooting')">
          <div class="category-icon">
            <svg viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
              <path d="M10.29 3.86L1.82 18a2 2 0 0 0 1.71 3h16.94a2 2 0 0 0 1.71-3L13.71 3.86a2 2 0 0 0-3.42 0z"/>
              <line x1="12" y1="9" x2="12" y2="13"/>
              <line x1="12" y1="17" x2="12.01" y2="17"/>
            </svg>
          </div>
          <h3>Troubleshooting</h3>
          <p>Common issues and their solutions to help you resolve problems quickly.</p>
          <div class="category-stats">
            <span class="article-count">
              <svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                <path d="M14 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V8z"/>
                <polyline points="14,2 14,8 20,8"/>
                <line x1="16" y1="13" x2="8" y2="13"/>
                <line x1="16" y1="17" x2="8" y2="17"/>
                <polyline points="10,9 9,9 8,9"/>
              </svg>
              15 articles
            </span>
          </div>
        </div>
      </div>
    </section>

    <!-- Zoho Desk Integration -->
    <section class="zoho-integration">
      <div class="zoho-content">
        <h2>Full Knowledge Base</h2>
        <p>Access our complete knowledge base powered by Zoho Desk. Find detailed articles, step-by-step guides, and comprehensive resources.</p>
        
        <div class="zoho-embed">
          <div class="zoho-placeholder">
            <svg viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
              <path d="M14 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V8z"/>
              <polyline points="14,2 14,8 20,8"/>
              <line x1="16" y1="13" x2="8" y2="13"/>
              <line x1="16" y1="17" x2="8" y2="17"/>
              <polyline points="10,9 9,9 8,9"/>
            </svg>
            <h4>Zoho Desk Knowledge Base</h4>
            <p>Embed your Zoho Desk knowledge base here</p>
            <p style="font-size: 0.875rem; opacity: 0.7;">Replace this placeholder with your Zoho Desk embed code</p>
          </div>
        </div>
      </div>
    </section>

    <!-- FAQ section -->
    <section class="faq-section">
      <h2 class="section-title">Frequently Asked Questions</h2>
      <div class="faq-item">
        <div class="faq-question" onclick="toggleFAQ(this)">
          <h3>How do I get started with QiAlly services?</h3>
          <div class="faq-toggle">+</div>
        </div>
        <div class="faq-answer">
          <p>Getting started is easy! Simply contact me through the contact form or email me directly. I'll schedule a consultation to discuss your needs and create a tailored plan for your project.</p>
        </div>
      </div>
      
      <div class="faq-item">
        <div class="faq-question" onclick="toggleFAQ(this)">
          <h3>What services do you offer?</h3>
          <div class="faq-toggle">+</div>
        </div>
        <div class="faq-answer">
          <p>I offer three main services: Strategic Scoping to define project boundaries and requirements, Voting Systems to implement effective decision-making processes, and Strategic Guidance to provide expert advice and direction.</p>
        </div>
      </div>
      
      <div class="faq-item">
        <div class="faq-question" onclick="toggleFAQ(this)">
          <h3>How do I access the client portal?</h3>
          <div class="faq-toggle">+</div>
        </div>
        <div class="faq-answer">
          <p>Once you become a client, you'll receive access credentials for the client portal. You can access it at portal.qially.com/client. If you need help with access, please contact me directly.</p>
        </div>
      </div>
      
      <div class="faq-item">
        <div class="faq-question" onclick="toggleFAQ(this)">
          <h3>What is your response time for support?</h3>
          <div class="faq-toggle">+</div>
        </div>
        <div class="faq-answer">
          <p>I typically respond to all inquiries within 24 hours. For urgent matters, please use the contact form or email me directly at support@qially.com.</p>
        </div>
      </div>
    </section>

    <!-- Contact support -->
    <section class="support-section">
      <div class="support-content">
        <h2>Still Need Help?</h2>
        <p>Can't find what you're looking for? I'm here to help. Reach out and I'll get back to you as soon as possible.</p>
        <div class="btn-group">
          <a href="https://crm.qially.com/bookings/qimoment" target="_blank" rel="noopener noreferrer" class="btn btn-primary">
            <svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" style="margin-right: 0.5rem;">
              <path d="M8 2v4"/>
              <path d="M16 2v4"/>
              <rect x="3" y="4" width="18" height="18" rx="2"/>
              <path d="M3 10h18"/>
            </svg>
            Book a Meeting
          </a>
          <a href="https://portal.qially.com/client" class="btn btn-secondary">
            <svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" style="margin-right: 0.5rem;">
              <path d="M15 3h4a2 2 0 0 1 2 2v14a2 2 0 0 1-2 2h-4"/>
              <polyline points="10,17 15,12 10,7"/>
              <line x1="15" y1="12" x2="3" y2="12"/>
            </svg>
            Client Portal
          </a>
        </div>
      </div>
    </section>
  </div>

  <!-- Footer -->
  <footer>
    <div class="footer-content">
      <div>
        <p>© <span id="year"></span> QiAlly. All rights reserved.</p>
      </div>
      <ul class="footer-links">
        <li><a href="/services.html">Services</a></li>
        <li><a href="/about.html">About</a></li>
        <li><a href="/contact.html">Contact</a></li>
        <li><a href="/knowledge-base.html">Knowledge Base</a></li>
      </ul>
    </div>
  </footer>

  <script>
    // Set current year
    document.getElementById('year').textContent = new Date().getFullYear();
    
    // Search functionality
    function searchKnowledgeBase() {
      const query = document.getElementById('searchInput').value;
      if (query.trim()) {
        // Here you would integrate with Zoho Desk search
        console.log('Searching for:', query);
        alert('Search functionality will be integrated with Zoho Desk');
      }
    }

    // Category navigation
    function openCategory(category) {
      // Here you would navigate to the specific category in Zoho Desk
      console.log('Opening category:', category);
      alert('Category navigation will be integrated with Zoho Desk');
    }

    // FAQ toggle functionality
    function toggleFAQ(element) {
      const faqItem = element.parentElement;
      const isActive = faqItem.classList.contains('active');
      
      // Close all FAQ items
      document.querySelectorAll('.faq-item').forEach(item => {
        item.classList.remove('active');
      });
      
      // Open clicked item if it wasn't active
      if (!isActive) {
        faqItem.classList.add('active');
      }
    }

    // Enter key search
    document.getElementById('searchInput').addEventListener('keypress', function(e) {
      if (e.key === 'Enter') {
        searchKnowledgeBase();
      }
    });
    
    // Add some interactive effects
    document.addEventListener('DOMContentLoaded', function() {
      // Smooth scrolling for navigation links
      document.querySelectorAll('a[href^="#"]').forEach(anchor => {
        anchor.addEventListener('click', function (e) {
          e.preventDefault();
          const target = document.querySelector(this.getAttribute('href'));
          if (target) {
            target.scrollIntoView({
              behavior: 'smooth',
              block: 'start'
            });
          }
        });
      });

      // Add scroll effect to navigation
      window.addEventListener('scroll', function() {
        const nav = document.querySelector('.nav');
        if (window.scrollY > 50) {
          nav.style.background = 'rgba(var(--panel), 0.95)';
        } else {
          nav.style.background = 'rgba(var(--panel), 0.8)';
        }
      });
    });
  </script>
</body>
</html>


================================================================================
END: D:\QiEOS\qially-coming-soon\qially.com\knowledge-base.html
================================================================================


================================================================================
FILE: D:\QiEOS\qially-coming-soon\qially.com\privacy-policy.html
================================================================================

<!doctype html>
<html lang="en">
<head>
  <meta charset="utf-8" />
  <title>Privacy Policy — QiAlly</title>
  <meta name="viewport" content="width=device-width,initial-scale=1" />
  <meta name="description" content="QiAlly's Privacy Policy. Learn how we collect, use, and protect your personal information when you use our services." />
  <meta name="keywords" content="QiAlly, privacy policy, data protection, personal information" />
  <meta name="author" content="QiAlly" />
  <link rel="canonical" href="https://qially.me/privacy-policy" />
  <meta property="og:title" content="Privacy Policy — QiAlly" />
  <meta property="og:description" content="QiAlly's Privacy Policy. Learn how we collect, use, and protect your personal information." />
  <meta property="og:url" content="https://qially.me/privacy-policy" />
  <meta property="og:image" content="https://res.cloudinary.com/dp5b5fymz/image/upload/v1755927329/qibird.svg" />
  <meta property="og:type" content="website" />
  <meta name="twitter:card" content="summary_large_image" />
  <meta name="twitter:title" content="Privacy Policy — QiAlly" />
  <meta name="twitter:description" content="QiAlly's Privacy Policy. Learn how we collect, use, and protect your personal information." />
  <meta name="twitter:image" content="https://res.cloudinary.com/dp5b5fymz/image/upload/v1755927329/qibird.svg" />
  <link rel="preconnect" href="https://fonts.googleapis.com">
  <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
  <link href="https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700&display=swap" rel="stylesheet">
  <style>
    /* CSS Variables matching QIPortal theme */
    :root {
      --bg: 15 23 42;
      --panel: 30 41 59;
      --text: 248 250 252;
      --subtext: 148 163 184;
      --ring: 51 65 85;
      --primary: 59 130 246;
      --accent: 147 51 234;
      --success: 34 197 94;
      --warning: 245 158 11;
    }

    * { 
      box-sizing: border-box;
      margin: 0;
      padding: 0;
    }

    html, body { 
      height: 100%;
      font-family: 'Inter', ui-sans-serif, system-ui, sans-serif;
      background-color: rgb(var(--bg));
      color: rgb(var(--text));
      overflow-x: hidden;
    }

    /* Animated background with stars */
    body::before {
      content: '';
      position: fixed;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      background-image: 
        radial-gradient(2px 2px at 20px 30px, rgba(255,255,255,0.3), transparent),
        radial-gradient(2px 2px at 40px 70px, rgba(255,255,255,0.4), transparent),
        radial-gradient(1px 1px at 90px 40px, rgba(255,255,255,0.2), transparent),
        radial-gradient(1px 1px at 130px 80px, rgba(255,255,255,0.3), transparent),
        radial-gradient(2px 2px at 160px 30px, rgba(255,255,255,0.2), transparent),
        radial-gradient(1px 1px at 200px 120px, rgba(255,255,255,0.3), transparent),
        radial-gradient(2px 2px at 240px 60px, rgba(255,255,255,0.2), transparent),
        radial-gradient(1px 1px at 280px 100px, rgba(255,255,255,0.3), transparent);
      background-repeat: repeat;
      background-size: 300px 200px;
      animation: twinkle 4s ease-in-out infinite;
      z-index: -2;
    }

    /* Hero gradient overlay */
    body::after {
      content: '';
      position: fixed;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      background: linear-gradient(135deg, rgb(15 23 42) 0%, rgb(30 58 138) 50%, rgb(88 28 135) 100%);
      opacity: 0.8;
      z-index: -1;
    }

    /* Glow radial effect */
    .glow-radial {
      position: fixed;
      top: 0;
      left: 0;
      width: 100%;
      height: 50%;
      background: radial-gradient(circle at 50% 0%, rgba(59, 130, 246, 0.15) 0%, transparent 70%);
      pointer-events: none;
      z-index: -1;
    }

    /* Floating blobs */
    .blob {
      position: fixed;
      border-radius: 50%;
      filter: blur(40px);
      opacity: 0.3;
      z-index: -1;
    }

    .blob-1 {
      width: 300px;
      height: 300px;
      background: radial-gradient(circle, rgba(59, 130, 246, 0.4) 0%, transparent 70%);
      top: 20%;
      left: 10%;
      animation: blob 7s infinite;
    }

    .blob-2 {
      width: 250px;
      height: 250px;
      background: radial-gradient(circle, rgba(147, 51, 234, 0.3) 0%, transparent 70%);
      top: 60%;
      right: 15%;
      animation: blob 7s infinite 2s;
    }

    .blob-3 {
      width: 200px;
      height: 200px;
      background: radial-gradient(circle, rgba(34, 211, 238, 0.3) 0%, transparent 70%);
      bottom: 20%;
      left: 20%;
      animation: blob 7s infinite 4s;
    }

    /* Navigation */
    .nav {
      position: fixed;
      top: 0;
      left: 0;
      right: 0;
      z-index: 100;
      background: rgba(var(--panel), 0.8);
      -webkit-backdrop-filter: blur(24px);
      backdrop-filter: blur(24px);
      border-bottom: 1px solid rgba(var(--ring), 0.3);
      padding: 1rem 2rem;
    }

    .nav-container {
      max-width: 1200px;
      margin: 0 auto;
      display: flex;
      justify-content: space-between;
      align-items: center;
    }

    .nav-brand {
      display: flex;
      align-items: center;
      gap: 0.75rem;
      text-decoration: none;
      color: rgb(var(--text));
    }

    .nav-brand img {
      width: 32px;
      height: 32px;
      filter: brightness(0) invert(1);
    }

    .nav-brand span {
      font-weight: 600;
      font-size: 1.25rem;
    }

    .nav-links {
      display: flex;
      gap: 2rem;
      list-style: none;
    }

    .nav-links a {
      color: rgb(var(--subtext));
      text-decoration: none;
      font-weight: 500;
      transition: color 0.2s ease;
    }

    .nav-links a:hover {
      color: rgb(var(--text));
    }

    .nav-links a.active {
      color: rgb(var(--primary));
    }

    /* Main container */
    .container {
      min-height: 100vh;
      padding-top: 80px;
      position: relative;
      z-index: 1;
    }

    /* Content section */
    .content {
      max-width: 800px;
      margin: 0 auto;
      padding: 2rem;
    }

    .content h1 {
      font-size: 2.5rem;
      font-weight: 700;
      margin-bottom: 1rem;
      background: linear-gradient(135deg, rgb(var(--text)), rgb(var(--primary)));
      -webkit-background-clip: text;
      -webkit-text-fill-color: transparent;
      background-clip: text;
    }

    .content h2 {
      font-size: 1.5rem;
      font-weight: 600;
      margin: 2rem 0 1rem 0;
      color: rgb(var(--text));
    }

    .content h3 {
      font-size: 1.25rem;
      font-weight: 600;
      margin: 1.5rem 0 0.75rem 0;
      color: rgb(var(--text));
    }

    .content p {
      color: rgb(var(--subtext));
      line-height: 1.6;
      margin-bottom: 1rem;
    }

    .content ul {
      color: rgb(var(--subtext));
      line-height: 1.6;
      margin-bottom: 1rem;
      padding-left: 1.5rem;
    }

    .content li {
      margin-bottom: 0.5rem;
    }

    .content a {
      color: rgb(var(--primary));
      text-decoration: none;
      transition: color 0.2s ease;
    }

    .content a:hover {
      color: rgb(var(--accent));
    }

    .last-updated {
      background: rgba(var(--panel), 0.8);
      -webkit-backdrop-filter: blur(24px);
      backdrop-filter: blur(24px);
      border: 1px solid rgba(var(--ring), 0.5);
      border-radius: 0.75rem;
      padding: 1rem;
      margin-bottom: 2rem;
      color: rgb(var(--subtext));
      font-size: 0.875rem;
    }

    /* Footer */
    footer {
      background: rgba(var(--panel), 0.8);
      border-top: 1px solid rgba(var(--ring), 0.3);
      padding: 2rem;
      color: rgb(var(--subtext));
      margin-top: 4rem;
    }

    .footer-content {
      max-width: 1200px;
      margin: 0 auto;
      display: grid;
      grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
      gap: 2rem;
      align-items: start;
    }

    .footer-section {
      display: flex;
      flex-direction: column;
    }

    .footer-brand {
      display: flex;
      align-items: center;
    }

    .footer-links {
      display: flex;
      flex-direction: column;
      gap: 0.5rem;
      list-style: none;
    }

    .footer-links a {
      color: rgb(var(--subtext));
      text-decoration: none;
      transition: color 0.2s ease;
      font-size: 0.875rem;
    }

    .footer-links a:hover {
      color: rgb(var(--primary));
    }

    .social-links {
      display: flex;
      gap: 1rem;
      margin-bottom: 1rem;
    }

    .social-link {
      display: flex;
      align-items: center;
      justify-content: center;
      width: 40px;
      height: 40px;
      background: rgba(var(--panel), 0.8);
      border: 1px solid rgba(var(--ring), 0.5);
      border-radius: 0.5rem;
      color: rgb(var(--subtext));
      text-decoration: none;
      transition: all 0.2s ease;
    }

    .social-link:hover {
      background: rgba(var(--primary), 0.1);
      border-color: rgba(var(--primary), 0.3);
      color: rgb(var(--primary));
      transform: translateY(-2px);
    }

    .contact-info p {
      display: flex;
      align-items: center;
      margin-bottom: 0.5rem;
    }

    /* Animations */
    @keyframes twinkle {
      0%, 100% { opacity: 0.3; }
      50% { opacity: 1; }
    }

    @keyframes blob {
      0% { transform: translate(0) scale(1); }
      33% { transform: translate(30px, -50px) scale(1.1); }
      66% { transform: translate(-20px, 20px) scale(0.9); }
      100% { transform: translate(0) scale(1); }
    }

    @keyframes fadeIn {
      from {
        opacity: 0;
        transform: translateY(20px);
      }
      to {
        opacity: 1;
        transform: translateY(0);
      }
    }

    /* Loading animation for content */
    .fade-in {
      animation: fadeIn 0.8s ease-out;
    }

    /* Responsive design */
    @media (max-width: 768px) {
      .nav {
        padding: 1rem;
      }

      .nav-links {
        display: none;
      }

      .content {
        padding: 1rem;
      }

      .content h1 {
        font-size: 2rem;
      }

      .content h2 {
        font-size: 1.25rem;
      }

      .content h3 {
        font-size: 1.125rem;
      }

      .footer-content {
        grid-template-columns: 1fr;
        text-align: center;
        gap: 1.5rem;
      }

      .footer-section {
        align-items: center;
      }

      .social-links {
        justify-content: center;
      }
    }
  </style>
</head>
<body>
  <!-- Background effects -->
  <div class="glow-radial"></div>
  <div class="blob blob-1"></div>
  <div class="blob blob-2"></div>
  <div class="blob blob-3"></div>

  <!-- Navigation -->
  <nav class="nav">
    <div class="nav-container">
      <a href="/" class="nav-brand">
        <img src="https://res.cloudinary.com/dp5b5fymz/image/upload/v1755927329/qibird.svg" alt="QiAlly">
        <span>QiAlly</span>
      </a>
      <ul class="nav-links">
        <li><a href="/">Home</a></li>
        <li><a href="/services.html">Services</a></li>
        <li><a href="/about-me.html">About</a></li>
        <li><a href="/contact.html">Contact</a></li>
        <li><a href="/knowledge-base.html">Help Center</a></li>
        <li><a href="https://portal.qially.com/client" target="_blank" rel="noopener noreferrer">Client Portal</a></li>
      </ul>
    </div>
  </nav>

  <div class="container">
    <div class="content fade-in">
      <div class="last-updated">
        <strong>Last Updated:</strong> January 2025
      </div>

      <h1>Privacy Policy</h1>
      
      <p>At QiAlly, we are committed to protecting your privacy and ensuring the security of your personal information. This Privacy Policy explains how we collect, use, disclose, and safeguard your information when you visit our website or use our services.</p>

      <h2>Information We Collect</h2>
      
      <h3>Personal Information</h3>
      <p>We may collect personal information that you voluntarily provide to us when you:</p>
      <ul>
        <li>Contact us through our website</li>
        <li>Sign up for our services</li>
        <li>Request a consultation</li>
        <li>Subscribe to our newsletter</li>
        <li>Use our client portal</li>
      </ul>
      
      <p>This information may include:</p>
      <ul>
        <li>Name and contact information (email, phone number)</li>
        <li>Company information</li>
        <li>Project details and requirements</li>
        <li>Communication preferences</li>
      </ul>

      <h3>Automatically Collected Information</h3>
      <p>When you visit our website, we automatically collect certain information about your device, including:</p>
      <ul>
        <li>IP address</li>
        <li>Browser type and version</li>
        <li>Operating system</li>
        <li>Pages visited and time spent</li>
        <li>Referring website</li>
      </ul>

      <h2>How We Use Your Information</h2>
      <p>We use the information we collect to:</p>
      <ul>
        <li>Provide and improve our services</li>
        <li>Communicate with you about your projects</li>
        <li>Send you updates and newsletters (with your consent)</li>
        <li>Analyze website usage and improve user experience</li>
        <li>Comply with legal obligations</li>
      </ul>

      <h2>Information Sharing</h2>
      <p>We do not sell, trade, or otherwise transfer your personal information to third parties without your consent, except in the following circumstances:</p>
      <ul>
        <li>With your explicit permission</li>
        <li>To comply with legal requirements</li>
        <li>To protect our rights and safety</li>
        <li>With trusted service providers who assist us in operating our website and services</li>
      </ul>

      <h2>Data Security</h2>
      <p>We implement appropriate security measures to protect your personal information against unauthorized access, alteration, disclosure, or destruction. These measures include:</p>
      <ul>
        <li>Encryption of sensitive data</li>
        <li>Regular security assessments</li>
        <li>Access controls and authentication</li>
        <li>Secure data transmission protocols</li>
      </ul>

      <h2>Cookies and Tracking</h2>
      <p>Our website uses cookies and similar tracking technologies to enhance your browsing experience. You can control cookie settings through your browser preferences.</p>

      <h2>Your Rights</h2>
      <p>You have the right to:</p>
      <ul>
        <li>Access your personal information</li>
        <li>Correct inaccurate information</li>
        <li>Request deletion of your information</li>
        <li>Opt-out of marketing communications</li>
        <li>Lodge a complaint with relevant authorities</li>
      </ul>

      <h2>Third-Party Links</h2>
      <p>Our website may contain links to third-party websites. We are not responsible for the privacy practices of these external sites. We encourage you to review their privacy policies.</p>

      <h2>Children's Privacy</h2>
      <p>Our services are not intended for children under 13 years of age. We do not knowingly collect personal information from children under 13.</p>

      <h2>Changes to This Policy</h2>
      <p>We may update this Privacy Policy from time to time. We will notify you of any changes by posting the new policy on this page and updating the "Last Updated" date.</p>

      <h2>Contact Us</h2>
      <p>If you have any questions about this Privacy Policy or our privacy practices, please contact us:</p>
      <ul>
        <li>Email: <a href="mailto:Info@qially.me">Info@qially.me</a></li>
                    <li>Phone: <a href="tel:+17654434769">+1 (765) 443-4769</a></li>
        <li>Address: Indianapolis, IN - Available Worldwide</li>
      </ul>
    </div>
  </div>

  <!-- Footer -->
  <footer>
    <div class="footer-content">
      <div class="footer-section">
        <div class="footer-brand">
          <img src="https://res.cloudinary.com/dp5b5fymz/image/upload/v1755927329/qibird.svg" alt="QiAlly" style="width: 32px; height: 32px; filter: brightness(0) invert(1); margin-right: 0.75rem;">
          <span style="font-weight: 600; font-size: 1.25rem;">QiAlly</span>
        </div>
        <p style="margin-top: 1rem; color: rgb(var(--subtext));">Empower. Innovate. Grow.</p>
        <p style="margin-top: 0.5rem; color: rgb(var(--subtext)); font-size: 0.875rem;">© <span id="year"></span> QiAlly. All rights reserved.</p>
      </div>
      
      <div class="footer-section">
        <h4 style="color: rgb(var(--text)); margin-bottom: 1rem; font-weight: 600;">Quick Links</h4>
        <ul class="footer-links">
          <li><a href="/services.html">Services</a></li>
          <li><a href="/about-me.html">About</a></li>
          <li><a href="/contact.html">Contact</a></li>
          <li><a href="/knowledge-base.html">Help Center</a></li>
        </ul>
      </div>
      
      <div class="footer-section">
        <h4 style="color: rgb(var(--text)); margin-bottom: 1rem; font-weight: 600;">Connect With Us</h4>
        <div class="social-links">
          <a href="https://www.facebook.com/qially1/" target="_blank" rel="noopener noreferrer" class="social-link">
            <svg width="20" height="20" viewBox="0 0 24 24" fill="currentColor">
              <path d="M24 12.073c0-6.627-5.373-12-12-12s-12 5.373-12 12c0 5.99 4.388 10.954 10.125 11.854v-8.385H7.078v-3.47h3.047V9.43c0-3.007 1.792-4.669 4.533-4.669 1.312 0 2.686.235 2.686.235v2.953H15.83c-1.491 0-1.956.925-1.956 1.874v2.25h3.328l-.532 3.47h-2.796v8.385C19.612 23.027 24 18.062 24 12.073z"/>
            </svg>
          </a>
          <a href="https://x.com/QiAlly" target="_blank" rel="noopener noreferrer" class="social-link">
            <svg width="20" height="20" viewBox="0 0 24 24" fill="currentColor">
              <path d="M18.244 2.25h3.308l-7.227 8.26 8.502 11.24H16.17l-5.214-6.817L4.99 21.75H1.68l7.73-8.835L1.254 2.25H8.08l4.713 6.231zm-1.161 17.52h1.833L7.084 4.126H5.117z"/>
            </svg>
          </a>
          <a href="https://www.youtube.com/@qiallyme" target="_blank" rel="noopener noreferrer" class="social-link">
            <svg width="20" height="20" viewBox="0 0 24 24" fill="currentColor">
              <path d="M23.498 6.186a3.016 3.016 0 0 0-2.122-2.136C19.505 3.545 12 3.545 12 3.545s-7.505 0-9.377.505A3.017 3.017 0 0 0 .502 6.186C0 8.07 0 12 0 12s0 3.93.502 5.814a3.016 3.016 0 0 0 2.122 2.136c1.871.505 9.376.505 9.376.505s7.505 0 9.377-.505a3.015 3.015 0 0 0 2.122-2.136C24 15.93 24 12 24 12s0-3.93-.502-5.814zM9.545 15.568V8.432L15.818 12l-6.273 3.568z"/>
            </svg>
          </a>
        </div>
        <div class="contact-info" style="margin-top: 1rem;">
          <p style="color: rgb(var(--subtext)); font-size: 0.875rem; margin-bottom: 0.5rem;">
            <svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" style="margin-right: 0.5rem; display: inline;">
              <path d="M4 4h16c1.1 0 2 .9 2 2v12c0 1.1-.9 2-2 2H4c-1.1 0-2-.9-2-2V6c0-1.1.9-2 2-2z"/>
              <polyline points="22,6 12,13 2,6"/>
            </svg>
            Info@qially.me
          </p>
          <p style="color: rgb(var(--subtext)); font-size: 0.875rem;">
            <svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" style="margin-right: 0.5rem; display: inline;">
              <path d="M22 16.92v3a2 2 0 0 1-2.18 2 19.79 19.79 0 0 1-8.63-3.07 19.5 19.5 0 0 1-6-6 19.79 19.79 0 0 1-3.07-8.67A2 2 0 0 1 4.11 2h3a2 2 0 0 1 2 1.72 12.84 12.84 0 0 0 .7 2.81 2 2 0 0 1-.45 2.11L8.09 9.91a16 16 0 0 0 6 6l1.27-1.27a2 2 0 0 1 2.11-.45 12.84 12.84 0 0 0 2.81.7A2 2 0 0 1 22 16.92z"/>
            </svg>
            +1 (765) 443-4769
          </p>
        </div>
      </div>
    </div>
    
    <div class="footer-bottom" style="border-top: 1px solid rgba(var(--ring), 0.3); margin-top: 2rem; padding-top: 1rem; text-align: center;">
      <p style="color: rgb(var(--subtext)); font-size: 0.75rem;">
        This site uses cookies to improve your experience. By using this site you agree to our 
        <a href="/privacy-policy.html" style="color: rgb(var(--primary));">Privacy Policy</a> and 
        <a href="/terms-of-use.html" style="color: rgb(var(--primary));">Terms of Use</a>.
      </p>
    </div>
  </footer>

  <script>
    // Set current year
    document.getElementById('year').textContent = new Date().getFullYear();
    
    // Add some interactive effects
    document.addEventListener('DOMContentLoaded', function() {
      // Add scroll effect to navigation
      window.addEventListener('scroll', function() {
        const nav = document.querySelector('.nav');
        if (window.scrollY > 50) {
          nav.style.background = 'rgba(var(--panel), 0.95)';
        } else {
          nav.style.background = 'rgba(var(--panel), 0.8)';
        }
      });
    });
  </script>
</body>
</html>


================================================================================
END: D:\QiEOS\qially-coming-soon\qially.com\privacy-policy.html
================================================================================


================================================================================
FILE: D:\QiEOS\qially-coming-soon\qially.com\README.md
================================================================================

# QiAlly Website

A modern, responsive website for QiAlly professional services, featuring systems optimization, process improvement, and strategic guidance.

## 🚀 Features

- **Modern Design**: Clean, professional design with animated backgrounds and glass-morphism effects
- **Mobile-First**: Fully responsive design optimized for all devices
- **Performance**: Fast loading with optimized assets and minimal dependencies
- **SEO Optimized**: Proper meta tags, structured data, and semantic HTML
- **Accessibility**: WCAG compliant with proper contrast ratios and keyboard navigation
- **Cross-Browser**: Compatible with all modern browsers including Safari

## 📁 File Structure

```
qially.com/
├── index.html              # Homepage with hero section and services overview
├── about-me.html           # About page with Cody's background and resume
├── services.html           # Services page with detailed offerings
├── contact.html            # Contact page with form and information
├── knowledge-base.html     # Public knowledge base and documentation
├── privacy-policy.html     # Privacy policy page
├── terms-of-use.html       # Terms of use page
├── 404.html               # Custom 404 error page
├── cody_rice_velasquez_resume.pdf  # Cody's resume (PDF)
├── scripts/
│   └── obsidian-sync.js   # Obsidian integration helper
└── README.md              # This file
```

## 🎨 Design System

### Color Palette
- **Primary**: Blue (#3B82F6)
- **Accent**: Purple (#9333EA)
- **Background**: Dark blue (#0F172A)
- **Panel**: Slate (#1E293B)
- **Text**: Light gray (#F8FAFC)
- **Subtext**: Gray (#94A3B8)

### Typography
- **Font Family**: Inter (Google Fonts)
- **Weights**: 300, 400, 500, 600, 700

### Components
- Glass-morphism cards with backdrop blur
- Animated star background
- Floating blob animations
- Gradient text effects
- Hover animations and transitions

## 🔧 Setup & Deployment

### Local Development
1. Clone the repository
2. Navigate to the `qially.com` directory
3. Start a local server:
   ```bash
   python -m http.server 8000
   ```
4. Open `http://localhost:8000` in your browser

### Cloudflare Pages Deployment
1. Connect your repository to Cloudflare Pages
2. Set build settings:
   - **Framework Preset**: None
   - **Build Command**: (leave empty)
   - **Output Directory**: (leave empty)
   - **Root Directory**: qially.com
3. Deploy

## 📝 Content Management

### Adding New Pages
1. Create a new HTML file following the existing structure
2. Include the standard navigation and footer
3. Use the established CSS variables and classes
4. Add proper meta tags and SEO elements

### Updating Content
- **Homepage**: Edit `index.html` hero section and main content
- **Services**: Update `services.html` with new service offerings
- **About**: Modify `about-me.html` for personal information
- **Contact**: Update `contact.html` with new contact details

### Knowledge Base Integration
The knowledge base is designed for easy integration with Obsidian:
1. Use the `obsidian-sync.js` script for markdown conversion
2. Articles are stored as JSON and can be imported/exported
3. Categories and tags are supported for organization
4. Search functionality is built-in

## 🔗 Navigation Structure

### Main Navigation
- **Home** (`/`) - Landing page with services overview
- **Services** (`/services.html`) - Detailed service offerings
- **About** (`/about-me.html`) - Cody's background and resume
- **Contact** (`/contact.html`) - Contact form and information
- **Knowledge Base** (`/knowledge-base.html`) - Public documentation
- **Client Portal** (`https://portal.qially.com/client`) - External client portal

### Footer Links
- Quick links to all main pages
- Social media links (Facebook, X, YouTube)
- Contact information
- Legal pages (Privacy Policy, Terms of Use)

## 📱 Mobile Optimization

The website is fully responsive with:
- Mobile-first CSS approach
- Flexible grid layouts
- Touch-friendly navigation
- Optimized typography scaling
- Reduced animations on mobile devices

## 🔍 SEO Features

- Semantic HTML structure
- Proper heading hierarchy
- Meta descriptions and keywords
- Open Graph and Twitter Card tags
- Canonical URLs
- Structured data markup
- Fast loading times

## 🛠️ Maintenance

### Regular Tasks
1. **Content Updates**: Keep service offerings and contact information current
2. **Security**: Regularly update dependencies and check for vulnerabilities
3. **Performance**: Monitor loading times and optimize images
4. **Analytics**: Track user engagement and page performance

### Browser Testing
Test regularly on:
- Chrome (latest)
- Firefox (latest)
- Safari (latest)
- Edge (latest)
- Mobile browsers (iOS Safari, Chrome Mobile)

## 📞 Contact Information

- **Email**: Info@qially.me
- **Phone**: +1 (765) 443-4769
- **Location**: Indianapolis, IN - Available Worldwide
- **Social Media**: 
  - Facebook: https://www.facebook.com/qially1/
  - X: https://x.com/QiAlly
  - YouTube: https://www.youtube.com/@qiallyme

## 📄 Legal Pages

- **Privacy Policy**: `/privacy-policy.html`
- **Terms of Use**: `/terms-of-use.html`

## 🚀 Performance Tips

1. **Image Optimization**: Use WebP format when possible
2. **Minification**: Minify CSS and JavaScript for production
3. **Caching**: Implement proper cache headers
4. **CDN**: Use Cloudflare CDN for global distribution
5. **Compression**: Enable GZIP compression

## 🔧 Troubleshooting

### Common Issues
1. **Backdrop Filter**: Ensure `-webkit-backdrop-filter` is included for Safari
2. **Font Loading**: Check Google Fonts connection
3. **Mobile Navigation**: Test touch interactions
4. **Form Submission**: Verify contact form functionality

### Browser Compatibility
- All modern browsers supported
- Graceful degradation for older browsers
- Polyfills included where necessary

## 📈 Analytics & Monitoring

Consider implementing:
- Google Analytics 4
- Google Search Console
- Page speed monitoring
- Uptime monitoring
- Error tracking

## 🤝 Contributing

1. Follow the existing code style
2. Test on multiple devices and browsers
3. Update documentation as needed
4. Ensure accessibility compliance
5. Optimize for performance

---

**Last Updated**: January 2025  
**Version**: 1.0.0  
**Maintainer**: QiAlly Team


================================================================================
END: D:\QiEOS\qially-coming-soon\qially.com\README.md
================================================================================


================================================================================
FILE: D:\QiEOS\qially-coming-soon\qially.com\services.html
================================================================================

<!doctype html>
<html lang="en">
<head>
  <meta charset="utf-8" />
  <title>Services — QiAlly | Professional Solutions & Strategic Guidance</title>
  <meta name="viewport" content="width=device-width,initial-scale=1" />
  <meta name="description" content="QiAlly provides comprehensive professional services including process improvement, workforce optimization, tech integration, and financial acumen. Transform your operations today." />
  <meta name="keywords" content="QiAlly, services, process improvement, workforce optimization, tech integration, financial acumen, professional services" />
  <meta name="author" content="QiAlly" />
  <link rel="canonical" href="https://qially.me/services" />
  <meta property="og:title" content="Services — QiAlly | Professional Solutions & Strategic Guidance" />
  <meta property="og:description" content="QiAlly provides comprehensive professional services including process improvement, workforce optimization, tech integration, and financial acumen." />
  <meta property="og:url" content="https://qially.me/services" />
  <meta property="og:image" content="https://res.cloudinary.com/dp5b5fymz/image/upload/v1755927329/qibird.svg" />
  <meta property="og:type" content="website" />
  <meta name="twitter:card" content="summary_large_image" />
  <meta name="twitter:title" content="Services — QiAlly | Professional Solutions & Strategic Guidance" />
  <meta name="twitter:description" content="QiAlly provides comprehensive professional services including process improvement, workforce optimization, tech integration, and financial acumen." />
  <meta name="twitter:image" content="https://res.cloudinary.com/dp5b5fymz/image/upload/v1755927329/qibird.svg" />
  <link rel="preconnect" href="https://fonts.googleapis.com">
  <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
  <link href="https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700&display=swap" rel="stylesheet">
  <style>
    /* CSS Variables matching QIPortal theme */
    :root {
      --bg: 15 23 42;
      --panel: 30 41 59;
      --text: 248 250 252;
      --subtext: 148 163 184;
      --ring: 51 65 85;
      --primary: 59 130 246;
      --accent: 147 51 234;
      --success: 34 197 94;
      --warning: 245 158 11;
    }

    * { 
      box-sizing: border-box;
      margin: 0;
      padding: 0;
    }

    html, body { 
      height: 100%;
      font-family: 'Inter', ui-sans-serif, system-ui, sans-serif;
      background-color: rgb(var(--bg));
      color: rgb(var(--text));
      overflow-x: hidden;
    }

    /* Animated background with stars */
    body::before {
      content: '';
      position: fixed;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      background-image: 
        radial-gradient(2px 2px at 20px 30px, rgba(255,255,255,0.3), transparent),
        radial-gradient(2px 2px at 40px 70px, rgba(255,255,255,0.4), transparent),
        radial-gradient(1px 1px at 90px 40px, rgba(255,255,255,0.2), transparent),
        radial-gradient(1px 1px at 130px 80px, rgba(255,255,255,0.3), transparent),
        radial-gradient(2px 2px at 160px 30px, rgba(255,255,255,0.2), transparent),
        radial-gradient(1px 1px at 200px 120px, rgba(255,255,255,0.3), transparent),
        radial-gradient(2px 2px at 240px 60px, rgba(255,255,255,0.2), transparent),
        radial-gradient(1px 1px at 280px 100px, rgba(255,255,255,0.3), transparent);
      background-repeat: repeat;
      background-size: 300px 200px;
      animation: twinkle 4s ease-in-out infinite;
      z-index: -2;
    }

    /* Hero gradient overlay */
    body::after {
      content: '';
      position: fixed;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      background: linear-gradient(135deg, rgb(15 23 42) 0%, rgb(30 58 138) 50%, rgb(88 28 135) 100%);
      opacity: 0.8;
      z-index: -1;
    }

    /* Glow radial effect */
    .glow-radial {
      position: fixed;
      top: 0;
      left: 0;
      width: 100%;
      height: 50%;
      background: radial-gradient(circle at 50% 0%, rgba(59, 130, 246, 0.15) 0%, transparent 70%);
      pointer-events: none;
      z-index: -1;
    }

    /* Floating blobs */
    .blob {
      position: fixed;
      border-radius: 50%;
      filter: blur(40px);
      opacity: 0.3;
      z-index: -1;
    }

    .blob-1 {
      width: 300px;
      height: 300px;
      background: radial-gradient(circle, rgba(59, 130, 246, 0.4) 0%, transparent 70%);
      top: 20%;
      left: 10%;
      animation: blob 7s infinite;
    }

    .blob-2 {
      width: 250px;
      height: 250px;
      background: radial-gradient(circle, rgba(147, 51, 234, 0.3) 0%, transparent 70%);
      top: 60%;
      right: 15%;
      animation: blob 7s infinite 2s;
    }

    .blob-3 {
      width: 200px;
      height: 200px;
      background: radial-gradient(circle, rgba(34, 211, 238, 0.3) 0%, transparent 70%);
      bottom: 20%;
      left: 20%;
      animation: blob 7s infinite 4s;
    }

    /* Navigation */
    .nav {
      position: fixed;
      top: 0;
      left: 0;
      right: 0;
      z-index: 100;
      background: rgba(var(--panel), 0.8);
      -webkit-backdrop-filter: blur(24px);
      backdrop-filter: blur(24px);
      border-bottom: 1px solid rgba(var(--ring), 0.3);
      padding: 1rem 2rem;
    }

    .nav-container {
      max-width: 1200px;
      margin: 0 auto;
      display: flex;
      justify-content: space-between;
      align-items: center;
    }

    .nav-brand {
      display: flex;
      align-items: center;
      gap: 0.75rem;
      text-decoration: none;
      color: rgb(var(--text));
    }

    .nav-brand img {
      width: 32px;
      height: 32px;
      filter: brightness(0) invert(1);
    }

    .nav-brand span {
      font-weight: 600;
      font-size: 1.25rem;
    }

    .nav-links {
      display: flex;
      gap: 2rem;
      list-style: none;
    }

    .nav-links a {
      color: rgb(var(--subtext));
      text-decoration: none;
      font-weight: 500;
      transition: color 0.2s ease;
    }

    .nav-links a:hover {
      color: rgb(var(--text));
    }

    .nav-links a.active {
      color: rgb(var(--primary));
    }

    /* Main container */
    .container {
      min-height: 100vh;
      padding-top: 80px;
      position: relative;
      z-index: 1;
    }

    /* Hero section */
    .hero {
      display: flex;
      align-items: center;
      justify-content: center;
      min-height: calc(100vh - 80px);
      padding: 2rem;
      text-align: center;
    }

    .hero-content {
      max-width: 800px;
    }

    .hero h1 {
      font-size: 3.5rem;
      font-weight: 700;
      margin-bottom: 1.5rem;
      background: linear-gradient(135deg, rgb(var(--text)), rgb(var(--primary)));
      -webkit-background-clip: text;
      -webkit-text-fill-color: transparent;
      background-clip: text;
      line-height: 1.2;
    }

    .hero-subtitle {
      font-size: 1.5rem;
      color: rgb(var(--primary));
      margin-bottom: 1rem;
      font-weight: 500;
    }

    .hero-description {
      font-size: 1.125rem;
      color: rgb(var(--subtext));
      margin-bottom: 2rem;
      line-height: 1.6;
      max-width: 700px;
      margin-left: auto;
      margin-right: auto;
    }

    /* Services section */
    .services {
      padding: 4rem 2rem;
      max-width: 1200px;
      margin: 0 auto;
    }

    .section-title {
      text-align: center;
      font-size: 2.5rem;
      font-weight: 600;
      margin-bottom: 3rem;
      background: linear-gradient(135deg, rgb(var(--text)), rgb(var(--subtext)));
      -webkit-background-clip: text;
      -webkit-text-fill-color: transparent;
      background-clip: text;
    }

    .section-subtitle {
      font-size: 1.25rem;
      color: rgb(var(--primary));
      margin-bottom: 1rem;
      font-weight: 500;
      text-align: center;
    }

    .section-description {
      color: rgb(var(--subtext));
      font-size: 1.125rem;
      line-height: 1.6;
      margin-bottom: 3rem;
      text-align: center;
      max-width: 800px;
      margin-left: auto;
      margin-right: auto;
    }

    .services-grid {
      display: grid;
      grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
      gap: 2rem;
      margin-bottom: 3rem;
    }

    .service-card {
      background: rgba(var(--panel), 0.8);
      -webkit-backdrop-filter: blur(24px);
      backdrop-filter: blur(24px);
      border: 1px solid rgba(var(--ring), 0.5);
      border-radius: 1rem;
      padding: 2rem;
      transition: all 0.3s ease;
      position: relative;
      overflow: hidden;
    }

    .service-card::before {
      content: '';
      position: absolute;
      top: 0;
      left: 0;
      right: 0;
      height: 1px;
      background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.1), transparent);
    }

    .service-card:hover {
      transform: translateY(-5px);
      border-color: rgba(var(--primary), 0.3);
      box-shadow: 0 10px 30px rgba(0, 0, 0, 0.2);
    }

    .service-icon {
      width: 48px;
      height: 48px;
      background: linear-gradient(135deg, rgb(var(--primary)), rgb(var(--accent)));
      border-radius: 0.75rem;
      display: flex;
      align-items: center;
      justify-content: center;
      margin-bottom: 1rem;
    }

    .service-icon svg {
      width: 24px;
      height: 24px;
      color: white;
    }

    .service-card h3 {
      font-size: 1.25rem;
      font-weight: 600;
      margin-bottom: 0.75rem;
      color: rgb(var(--text));
    }

    .service-card p {
      color: rgb(var(--subtext));
      line-height: 1.6;
      margin-bottom: 1rem;
    }

    .service-features {
      list-style: none;
      margin-top: 1rem;
    }

    .service-features li {
      color: rgb(var(--subtext));
      margin-bottom: 0.5rem;
      display: flex;
      align-items: center;
      gap: 0.5rem;
    }

    .service-features li::before {
      content: '✓';
      color: rgb(var(--success));
      font-weight: bold;
    }

    /* Case studies section */
    .case-studies {
      padding: 4rem 2rem;
      background: rgba(var(--panel), 0.3);
      margin: 2rem 0;
    }

    .case-studies-content {
      max-width: 1200px;
      margin: 0 auto;
    }

    .case-studies-grid {
      display: grid;
      grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
      gap: 2rem;
      margin-top: 3rem;
    }

    .case-study-card {
      background: rgba(var(--panel), 0.8);
      -webkit-backdrop-filter: blur(24px);
      backdrop-filter: blur(24px);
      border: 1px solid rgba(var(--ring), 0.5);
      border-radius: 1rem;
      padding: 2rem;
      transition: all 0.3s ease;
      position: relative;
    }

    .case-study-card:hover {
      transform: translateY(-5px);
      border-color: rgba(var(--primary), 0.3);
      box-shadow: 0 10px 30px rgba(0, 0, 0, 0.2);
    }

    .case-study-number {
      position: absolute;
      top: -10px;
      left: 20px;
      background: linear-gradient(135deg, rgb(var(--primary)), rgb(var(--accent)));
      color: white;
      width: 40px;
      height: 40px;
      border-radius: 50%;
      display: flex;
      align-items: center;
      justify-content: center;
      font-weight: 700;
      font-size: 1.125rem;
    }

    .case-study-card h3 {
      font-size: 1.25rem;
      font-weight: 600;
      margin-bottom: 1rem;
      color: rgb(var(--text));
      margin-top: 1rem;
    }

    .case-study-card p {
      color: rgb(var(--subtext));
      line-height: 1.6;
    }

    /* CTA section */
    .cta-section {
      text-align: center;
      padding: 4rem 2rem;
      background: rgba(var(--panel), 0.3);
      margin: 2rem 0;
    }

    .cta-content {
      max-width: 600px;
      margin: 0 auto;
    }

    .cta-content h2 {
      font-size: 2rem;
      font-weight: 600;
      margin-bottom: 1rem;
      color: rgb(var(--text));
    }

    .cta-content p {
      color: rgb(var(--subtext));
      margin-bottom: 2rem;
      line-height: 1.6;
    }

    /* Buttons */
    .btn {
      display: inline-flex;
      align-items: center;
      justify-content: center;
      padding: 0.75rem 1.5rem;
      border-radius: 0.75rem;
      font-weight: 500;
      font-size: 0.875rem;
      text-decoration: none;
      transition: all 0.2s ease;
      border: 1px solid transparent;
      cursor: pointer;
      position: relative;
      overflow: hidden;
    }

    .btn::before {
      content: '';
      position: absolute;
      top: 0;
      left: -100%;
      width: 100%;
      height: 100%;
      background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.1), transparent);
      transition: left 0.5s ease;
    }

    .btn:hover::before {
      left: 100%;
    }

    .btn-primary {
      background: linear-gradient(135deg, rgb(var(--primary)), rgb(var(--accent)));
      color: white;
      box-shadow: 0 4px 12px rgba(59, 130, 246, 0.3);
    }

    .btn-primary:hover {
      transform: translateY(-2px);
      box-shadow: 0 8px 20px rgba(59, 130, 246, 0.4);
    }

    .btn-secondary {
      background: rgba(var(--panel), 0.8);
      color: rgb(var(--text));
      border-color: rgba(var(--ring), 0.5);
    }

    .btn-secondary:hover {
      background: rgba(var(--panel), 1);
      border-color: rgba(var(--ring), 0.8);
      transform: translateY(-1px);
    }

    .btn-group {
      display: flex;
      gap: 1rem;
      justify-content: center;
      flex-wrap: wrap;
    }

    /* Footer */
    footer {
      background: rgba(var(--panel), 0.8);
      border-top: 1px solid rgba(var(--ring), 0.3);
      padding: 2rem;
      color: rgb(var(--subtext));
    }

    .footer-content {
      max-width: 1200px;
      margin: 0 auto;
      display: grid;
      grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
      gap: 2rem;
      align-items: start;
    }

    .footer-section {
      display: flex;
      flex-direction: column;
    }

    .footer-brand {
      display: flex;
      align-items: center;
    }

    .footer-links {
      display: flex;
      flex-direction: column;
      gap: 0.5rem;
      list-style: none;
    }

    .footer-links a {
      color: rgb(var(--subtext));
      text-decoration: none;
      transition: color 0.2s ease;
      font-size: 0.875rem;
    }

    .footer-links a:hover {
      color: rgb(var(--primary));
    }

    .social-links {
      display: flex;
      gap: 1rem;
      margin-bottom: 1rem;
    }

    .social-link {
      display: flex;
      align-items: center;
      justify-content: center;
      width: 40px;
      height: 40px;
      background: rgba(var(--panel), 0.8);
      border: 1px solid rgba(var(--ring), 0.5);
      border-radius: 0.5rem;
      color: rgb(var(--subtext));
      text-decoration: none;
      transition: all 0.2s ease;
    }

    .social-link:hover {
      background: rgba(var(--primary), 0.1);
      border-color: rgba(var(--primary), 0.3);
      color: rgb(var(--primary));
      transform: translateY(-2px);
    }

    .contact-info p {
      display: flex;
      align-items: center;
      margin-bottom: 0.5rem;
    }

    /* Animations */
    @keyframes twinkle {
      0%, 100% { opacity: 0.3; }
      50% { opacity: 1; }
    }

    @keyframes blob {
      0% { transform: translate(0) scale(1); }
      33% { transform: translate(30px, -50px) scale(1.1); }
      66% { transform: translate(-20px, 20px) scale(0.9); }
      100% { transform: translate(0) scale(1); }
    }

    @keyframes fadeIn {
      from {
        opacity: 0;
        transform: translateY(20px);
      }
      to {
        opacity: 1;
        transform: translateY(0);
      }
    }

    /* Loading animation for content */
    .fade-in {
      animation: fadeIn 0.8s ease-out;
    }

    /* Responsive design */
    @media (max-width: 768px) {
      .nav {
        padding: 1rem;
      }

      .nav-links {
        display: none;
      }

      .hero h1 {
        font-size: 2.5rem;
      }

      .hero-subtitle {
        font-size: 1.25rem;
      }

      .hero-description {
        font-size: 1rem;
      }

      .services {
        padding: 2rem 1rem;
      }

      .section-title {
        font-size: 2rem;
      }

      .section-subtitle {
        font-size: 1.125rem;
      }

      .section-description {
        font-size: 1rem;
      }

      .services-grid {
        grid-template-columns: 1fr;
      }

      .case-studies-grid {
        grid-template-columns: 1fr;
      }

      .btn-group {
        flex-direction: column;
        align-items: center;
      }

      .footer-content {
        grid-template-columns: 1fr;
        text-align: center;
        gap: 1.5rem;
      }

      .footer-section {
        align-items: center;
      }

      .social-links {
        justify-content: center;
      }
    }
  </style>
</head>
<body>
  <!-- Background effects -->
  <div class="glow-radial"></div>
  <div class="blob blob-1"></div>
  <div class="blob blob-2"></div>
  <div class="blob blob-3"></div>

  <!-- Navigation -->
  <nav class="nav">
    <div class="nav-container">
      <a href="/" class="nav-brand">
        <img src="https://res.cloudinary.com/dp5b5fymz/image/upload/v1755927329/qibird.svg" alt="QiAlly">
        <span>QiAlly</span>
      </a>
      <ul class="nav-links">
        <li><a href="/">Home</a></li>
        <li><a href="/services.html" class="active">Services</a></li>
        <li><a href="/about-me.html">About</a></li>
        <li><a href="/contact.html">Contact</a></li>
        <li><a href="/knowledge-base.html">Help Center</a></li>
        <li><a href="https://portal.qially.com/client" target="_blank" rel="noopener noreferrer">Client Portal</a></li>
      </ul>
    </div>
  </nav>

  <div class="container">
    <!-- Hero section -->
    <section class="hero fade-in">
      <div class="hero-content">
        <h1>Professional Services</h1>
        <p class="hero-subtitle">Transform Your Operations with Strategic Solutions</p>
        <p class="hero-description">
          I take what works, spot hidden savings, and drive sustainable growth by fusing finance, HR, technology, and operations into seamless end-to-end solutions.
        </p>
        <div class="btn-group">
          <a href="/contact.html" class="btn btn-primary">
            <svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" style="margin-right: 0.5rem;">
              <path d="M21 15a2 2 0 0 1-2 2H7l-4 4V5a2 2 0 0 1 2-2h14a2 2 0 0 1 2 2z"/>
            </svg>
            Get Started
          </a>
          <a href="https://portal.qially.com/client" target="_blank" rel="noopener noreferrer" class="btn btn-secondary">
            <svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" style="margin-right: 0.5rem;">
              <path d="M15 3h4a2 2 0 0 1 2 2v14a2 2 0 0 1-2 2h-4"/>
              <polyline points="10,17 15,12 10,7"/>
              <line x1="15" y1="12" x2="3" y2="12"/>
            </svg>
            Client Portal
          </a>
        </div>
      </div>
    </section>

    <!-- Services section -->
    <section class="services">
      <h2 class="section-title">Why QiAlly Matters</h2>
      <p class="section-subtitle">Empower your operations to succeed</p>
      <p class="section-description">I uncover efficiency gains and maximize ROI. By integrating financial insight, workforce strategy, tech innovation, and process excellence, I deliver holistic solutions that last.</p>
      
      <div class="services-grid">
        <div class="service-card">
          <div class="service-icon">
            <svg viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
              <path d="M9 12l2 2 4-4"/>
              <path d="M21 12c-1 0-2-1-2-2s1-2 2-2 2 1 2 2-1 2-2 2z"/>
              <path d="M3 12c1 0 2-1 2-2s-1-2-2-2-2 1-2 2 1 2 2 2z"/>
            </svg>
          </div>
          <h3>Process Improvement</h3>
          <p>Streamline workflows and eliminate bottlenecks to achieve peak operational performance.</p>
          <ul class="service-features">
            <li>Workflow optimization</li>
            <li>Bottleneck identification</li>
            <li>Efficiency analysis</li>
            <li>Performance metrics</li>
          </ul>
        </div>

        <div class="service-card">
          <div class="service-icon">
            <svg viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
              <path d="M17 21v-2a4 4 0 0 0-4-4H5a4 4 0 0 0-4 4v2"/>
              <circle cx="9" cy="7" r="4"/>
              <path d="M23 21v-2a4 4 0 0 0-3-3.87"/>
              <path d="M16 3.13a4 4 0 0 1 0 7.75"/>
            </svg>
          </div>
          <h3>Workforce Optimization</h3>
          <p>Maximize team productivity through strategic HR solutions and talent management.</p>
          <ul class="service-features">
            <li>Talent management</li>
            <li>HR strategy development</li>
            <li>Team productivity analysis</li>
            <li>Performance optimization</li>
          </ul>
        </div>

        <div class="service-card">
          <div class="service-icon">
            <svg viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
              <path d="M18 10h-1.26A8 8 0 1 0 9 20h9a5 5 0 0 0 0-10z"/>
            </svg>
          </div>
          <h3>Tech Integration</h3>
          <p>Seamlessly integrate technology solutions to enhance efficiency and drive innovation.</p>
          <ul class="service-features">
            <li>Technology assessment</li>
            <li>System integration</li>
            <li>Digital transformation</li>
            <li>Innovation strategy</li>
          </ul>
        </div>

        <div class="service-card">
          <div class="service-icon">
            <svg viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
              <path d="M12 1v22"/>
              <path d="M17 5H9.5a3.5 3.5 0 0 0 0 7h5a3.5 3.5 0 0 1 0 7H6"/>
            </svg>
          </div>
          <h3>Financial Acumen</h3>
          <p>Leverage financial insights to identify cost savings and maximize return on investment.</p>
          <ul class="service-features">
            <li>Cost analysis</li>
            <li>ROI optimization</li>
            <li>Financial strategy</li>
            <li>Budget optimization</li>
          </ul>
        </div>
      </div>
    </section>

    <!-- Case Studies section -->
    <section class="case-studies">
      <div class="case-studies-content">
        <h2 class="section-title">Case Studies</h2>
        <p class="section-subtitle">Explore our diverse range of successful projects</p>
        <p class="section-description">These case studies highlight our commitment to creativity, innovation, and delivering exceptional results for our valued clients.</p>
        
        <div class="case-studies-grid">
          <div class="case-study-card">
            <div class="case-study-number">1</div>
            <h3>Operational Workflow Overhaul</h3>
            <p>Integrated finance and tech workflows, cutting process time by 40% and improving cross-departmental collaboration.</p>
          </div>

          <div class="case-study-card">
            <div class="case-study-number">2</div>
            <h3>HR Tech Implementation</h3>
            <p>Deployed an HRIS that boosted onboarding efficiency by 60% and streamlined employee management processes.</p>
          </div>

          <div class="case-study-card">
            <div class="case-study-number">3</div>
            <h3>Reporting Automation</h3>
            <p>Automated financial reports, saving 200 man-hours per quarter and improving data accuracy and timeliness.</p>
          </div>

          <div class="case-study-card">
            <div class="case-study-number">4</div>
            <h3>Process Mapping & Optimization</h3>
            <p>Uncovered $250K in annual savings through comprehensive process mapping and optimization strategies.</p>
          </div>
        </div>
      </div>
    </section>

    <!-- CTA section -->
    <section class="cta-section">
      <div class="cta-content">
        <h2>Ready to Transform Your Operations?</h2>
        <p>Have processes that need a makeover or systems that deserve to thrive? Let's bring your systems to life with strategic solutions tailored to your unique needs.</p>
        <div class="btn-group">
          <a href="https://crm.qially.com/bookings/qimoment" target="_blank" rel="noopener noreferrer" class="btn btn-primary">
            <svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" style="margin-right: 0.5rem;">
              <path d="M8 2v4"/>
              <path d="M16 2v4"/>
              <rect x="3" y="4" width="18" height="18" rx="2"/>
              <path d="M3 10h18"/>
            </svg>
            Book a Meeting
          </a>
          <a href="https://portal.qially.com/client" target="_blank" rel="noopener noreferrer" class="btn btn-secondary">
            <svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" style="margin-right: 0.5rem;">
              <path d="M15 3h4a2 2 0 0 1 2 2v14a2 2 0 0 1-2 2h-4"/>
              <polyline points="10,17 15,12 10,7"/>
              <line x1="15" y1="12" x2="3" y2="12"/>
            </svg>
            Client Portal
          </a>
        </div>
      </div>
    </section>
  </div>

  <!-- Footer -->
  <footer>
    <div class="footer-content">
      <div class="footer-section">
        <div class="footer-brand">
          <img src="https://res.cloudinary.com/dp5b5fymz/image/upload/v1755927329/qibird.svg" alt="QiAlly" style="width: 32px; height: 32px; filter: brightness(0) invert(1); margin-right: 0.75rem;">
          <span style="font-weight: 600; font-size: 1.25rem;">QiAlly</span>
        </div>
        <p style="margin-top: 1rem; color: rgb(var(--subtext));">Empower. Innovate. Grow.</p>
        <p style="margin-top: 0.5rem; color: rgb(var(--subtext)); font-size: 0.875rem;">© <span id="year"></span> QiAlly. All rights reserved.</p>
      </div>
      
      <div class="footer-section">
        <h4 style="color: rgb(var(--text)); margin-bottom: 1rem; font-weight: 600;">Quick Links</h4>
        <ul class="footer-links">
          <li><a href="/services.html">Services</a></li>
          <li><a href="/about-me.html">About</a></li>
          <li><a href="/contact.html">Contact</a></li>
          <li><a href="/knowledge-base.html">Help Center</a></li>
        </ul>
      </div>
      
      <div class="footer-section">
        <h4 style="color: rgb(var(--text)); margin-bottom: 1rem; font-weight: 600;">Connect With Us</h4>
        <div class="social-links">
          <a href="https://www.facebook.com/qially1/" target="_blank" rel="noopener noreferrer" class="social-link">
            <svg width="20" height="20" viewBox="0 0 24 24" fill="currentColor">
              <path d="M24 12.073c0-6.627-5.373-12-12-12s-12 5.373-12 12c0 5.99 4.388 10.954 10.125 11.854v-8.385H7.078v-3.47h3.047V9.43c0-3.007 1.792-4.669 4.533-4.669 1.312 0 2.686.235 2.686.235v2.953H15.83c-1.491 0-1.956.925-1.956 1.874v2.25h3.328l-.532 3.47h-2.796v8.385C19.612 23.027 24 18.062 24 12.073z"/>
            </svg>
          </a>
          <a href="https://x.com/QiAlly" target="_blank" rel="noopener noreferrer" class="social-link">
            <svg width="20" height="20" viewBox="0 0 24 24" fill="currentColor">
              <path d="M18.244 2.25h3.308l-7.227 8.26 8.502 11.24H16.17l-5.214-6.817L4.99 21.75H1.68l7.73-8.835L1.254 2.25H8.08l4.713 6.231zm-1.161 17.52h1.833L7.084 4.126H5.117z"/>
            </svg>
          </a>
          <a href="https://www.youtube.com/@qiallyme" target="_blank" rel="noopener noreferrer" class="social-link">
            <svg width="20" height="20" viewBox="0 0 24 24" fill="currentColor">
              <path d="M23.498 6.186a3.016 3.016 0 0 0-2.122-2.136C19.505 3.545 12 3.545 12 3.545s-7.505 0-9.377.505A3.017 3.017 0 0 0 .502 6.186C0 8.07 0 12 0 12s0 3.93.502 5.814a3.016 3.016 0 0 0 2.122 2.136c1.871.505 9.376.505 9.376.505s7.505 0 9.377-.505a3.015 3.015 0 0 0 2.122-2.136C24 15.93 24 12 24 12s0-3.93-.502-5.814zM9.545 15.568V8.432L15.818 12l-6.273 3.568z"/>
            </svg>
          </a>
        </div>
        <div class="contact-info" style="margin-top: 1rem;">
          <p style="color: rgb(var(--subtext)); font-size: 0.875rem; margin-bottom: 0.5rem;">
            <svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" style="margin-right: 0.5rem; display: inline;">
              <path d="M4 4h16c1.1 0 2 .9 2 2v12c0 1.1-.9 2-2 2H4c-1.1 0-2-.9-2-2V6c0-1.1.9-2 2-2z"/>
              <polyline points="22,6 12,13 2,6"/>
            </svg>
            Info@qially.me
          </p>
          <p style="color: rgb(var(--subtext)); font-size: 0.875rem;">
            <svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" style="margin-right: 0.5rem; display: inline;">
              <path d="M22 16.92v3a2 2 0 0 1-2.18 2 19.79 19.79 0 0 1-8.63-3.07 19.5 19.5 0 0 1-6-6 19.79 19.79 0 0 1-3.07-8.67A2 2 0 0 1 4.11 2h3a2 2 0 0 1 2 1.72 12.84 12.84 0 0 0 .7 2.81 2 2 0 0 1-.45 2.11L8.09 9.91a16 16 0 0 0 6 6l1.27-1.27a2 2 0 0 1 2.11-.45 12.84 12.84 0 0 0 2.81.7A2 2 0 0 1 22 16.92z"/>
            </svg>
            +1 (765) 443-4769
          </p>
        </div>
      </div>
    </div>
    
    <div class="footer-bottom" style="border-top: 1px solid rgba(var(--ring), 0.3); margin-top: 2rem; padding-top: 1rem; text-align: center;">
      <p style="color: rgb(var(--subtext)); font-size: 0.75rem;">
        This site uses cookies to improve your experience. By using this site you agree to our 
        <a href="/privacy-policy.html" style="color: rgb(var(--primary));">Privacy Policy</a> and 
        <a href="/terms-of-use.html" style="color: rgb(var(--primary));">Terms of Use</a>.
      </p>
    </div>
  </footer>

  <script>
    // Set current year
    document.getElementById('year').textContent = new Date().getFullYear();
    
    // Add some interactive effects
    document.addEventListener('DOMContentLoaded', function() {
      // Add scroll effect to navigation
      window.addEventListener('scroll', function() {
        const nav = document.querySelector('.nav');
        if (window.scrollY > 50) {
          nav.style.background = 'rgba(var(--panel), 0.95)';
        } else {
          nav.style.background = 'rgba(var(--panel), 0.8)';
        }
      });
    });
  </script>
</body>
</html>


================================================================================
END: D:\QiEOS\qially-coming-soon\qially.com\services.html
================================================================================


================================================================================
FILE: D:\QiEOS\qially-coming-soon\qially.com\terms-of-use.html
================================================================================

<!doctype html>
<html lang="en">
<head>
  <meta charset="utf-8" />
  <title>Terms of Use — QiAlly</title>
  <meta name="viewport" content="width=device-width,initial-scale=1" />
  <meta name="description" content="QiAlly's Terms of Use. Read our terms and conditions for using our website and services." />
  <meta name="keywords" content="QiAlly, terms of use, terms and conditions, legal" />
  <meta name="author" content="QiAlly" />
  <link rel="canonical" href="https://qially.me/terms-of-use" />
  <meta property="og:title" content="Terms of Use — QiAlly" />
  <meta property="og:description" content="QiAlly's Terms of Use. Read our terms and conditions for using our website and services." />
  <meta property="og:url" content="https://qially.me/terms-of-use" />
  <meta property="og:image" content="https://res.cloudinary.com/dp5b5fymz/image/upload/v1755927329/qibird.svg" />
  <meta property="og:type" content="website" />
  <meta name="twitter:card" content="summary_large_image" />
  <meta name="twitter:title" content="Terms of Use — QiAlly" />
  <meta name="twitter:description" content="QiAlly's Terms of Use. Read our terms and conditions for using our website and services." />
  <meta name="twitter:image" content="https://res.cloudinary.com/dp5b5fymz/image/upload/v1755927329/qibird.svg" />
  <link rel="preconnect" href="https://fonts.googleapis.com">
  <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
  <link href="https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700&display=swap" rel="stylesheet">
  <style>
    /* CSS Variables matching QIPortal theme */
    :root {
      --bg: 15 23 42;
      --panel: 30 41 59;
      --text: 248 250 252;
      --subtext: 148 163 184;
      --ring: 51 65 85;
      --primary: 59 130 246;
      --accent: 147 51 234;
      --success: 34 197 94;
      --warning: 245 158 11;
    }

    * { 
      box-sizing: border-box;
      margin: 0;
      padding: 0;
    }

    html, body { 
      height: 100%;
      font-family: 'Inter', ui-sans-serif, system-ui, sans-serif;
      background-color: rgb(var(--bg));
      color: rgb(var(--text));
      overflow-x: hidden;
    }

    /* Animated background with stars */
    body::before {
      content: '';
      position: fixed;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      background-image: 
        radial-gradient(2px 2px at 20px 30px, rgba(255,255,255,0.3), transparent),
        radial-gradient(2px 2px at 40px 70px, rgba(255,255,255,0.4), transparent),
        radial-gradient(1px 1px at 90px 40px, rgba(255,255,255,0.2), transparent),
        radial-gradient(1px 1px at 130px 80px, rgba(255,255,255,0.3), transparent),
        radial-gradient(2px 2px at 160px 30px, rgba(255,255,255,0.2), transparent),
        radial-gradient(1px 1px at 200px 120px, rgba(255,255,255,0.3), transparent),
        radial-gradient(2px 2px at 240px 60px, rgba(255,255,255,0.2), transparent),
        radial-gradient(1px 1px at 280px 100px, rgba(255,255,255,0.3), transparent);
      background-repeat: repeat;
      background-size: 300px 200px;
      animation: twinkle 4s ease-in-out infinite;
      z-index: -2;
    }

    /* Hero gradient overlay */
    body::after {
      content: '';
      position: fixed;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      background: linear-gradient(135deg, rgb(15 23 42) 0%, rgb(30 58 138) 50%, rgb(88 28 135) 100%);
      opacity: 0.8;
      z-index: -1;
    }

    /* Glow radial effect */
    .glow-radial {
      position: fixed;
      top: 0;
      left: 0;
      width: 100%;
      height: 50%;
      background: radial-gradient(circle at 50% 0%, rgba(59, 130, 246, 0.15) 0%, transparent 70%);
      pointer-events: none;
      z-index: -1;
    }

    /* Floating blobs */
    .blob {
      position: fixed;
      border-radius: 50%;
      filter: blur(40px);
      opacity: 0.3;
      z-index: -1;
    }

    .blob-1 {
      width: 300px;
      height: 300px;
      background: radial-gradient(circle, rgba(59, 130, 246, 0.4) 0%, transparent 70%);
      top: 20%;
      left: 10%;
      animation: blob 7s infinite;
    }

    .blob-2 {
      width: 250px;
      height: 250px;
      background: radial-gradient(circle, rgba(147, 51, 234, 0.3) 0%, transparent 70%);
      top: 60%;
      right: 15%;
      animation: blob 7s infinite 2s;
    }

    .blob-3 {
      width: 200px;
      height: 200px;
      background: radial-gradient(circle, rgba(34, 211, 238, 0.3) 0%, transparent 70%);
      bottom: 20%;
      left: 20%;
      animation: blob 7s infinite 4s;
    }

    /* Navigation */
    .nav {
      position: fixed;
      top: 0;
      left: 0;
      right: 0;
      z-index: 100;
      background: rgba(var(--panel), 0.8);
      -webkit-backdrop-filter: blur(24px);
      backdrop-filter: blur(24px);
      border-bottom: 1px solid rgba(var(--ring), 0.3);
      padding: 1rem 2rem;
    }

    .nav-container {
      max-width: 1200px;
      margin: 0 auto;
      display: flex;
      justify-content: space-between;
      align-items: center;
    }

    .nav-brand {
      display: flex;
      align-items: center;
      gap: 0.75rem;
      text-decoration: none;
      color: rgb(var(--text));
    }

    .nav-brand img {
      width: 32px;
      height: 32px;
      filter: brightness(0) invert(1);
    }

    .nav-brand span {
      font-weight: 600;
      font-size: 1.25rem;
    }

    .nav-links {
      display: flex;
      gap: 2rem;
      list-style: none;
    }

    .nav-links a {
      color: rgb(var(--subtext));
      text-decoration: none;
      font-weight: 500;
      transition: color 0.2s ease;
    }

    .nav-links a:hover {
      color: rgb(var(--text));
    }

    .nav-links a.active {
      color: rgb(var(--primary));
    }

    /* Main container */
    .container {
      min-height: 100vh;
      padding-top: 80px;
      position: relative;
      z-index: 1;
    }

    /* Content section */
    .content {
      max-width: 800px;
      margin: 0 auto;
      padding: 2rem;
    }

    .content h1 {
      font-size: 2.5rem;
      font-weight: 700;
      margin-bottom: 1rem;
      background: linear-gradient(135deg, rgb(var(--text)), rgb(var(--primary)));
      -webkit-background-clip: text;
      -webkit-text-fill-color: transparent;
      background-clip: text;
    }

    .content h2 {
      font-size: 1.5rem;
      font-weight: 600;
      margin: 2rem 0 1rem 0;
      color: rgb(var(--text));
    }

    .content h3 {
      font-size: 1.25rem;
      font-weight: 600;
      margin: 1.5rem 0 0.75rem 0;
      color: rgb(var(--text));
    }

    .content p {
      color: rgb(var(--subtext));
      line-height: 1.6;
      margin-bottom: 1rem;
    }

    .content ul {
      color: rgb(var(--subtext));
      line-height: 1.6;
      margin-bottom: 1rem;
      padding-left: 1.5rem;
    }

    .content li {
      margin-bottom: 0.5rem;
    }

    .content a {
      color: rgb(var(--primary));
      text-decoration: none;
      transition: color 0.2s ease;
    }

    .content a:hover {
      color: rgb(var(--accent));
    }

    .last-updated {
      background: rgba(var(--panel), 0.8);
      -webkit-backdrop-filter: blur(24px);
      backdrop-filter: blur(24px);
      border: 1px solid rgba(var(--ring), 0.5);
      border-radius: 0.75rem;
      padding: 1rem;
      margin-bottom: 2rem;
      color: rgb(var(--subtext));
      font-size: 0.875rem;
    }

    /* Footer */
    footer {
      background: rgba(var(--panel), 0.8);
      border-top: 1px solid rgba(var(--ring), 0.3);
      padding: 2rem;
      color: rgb(var(--subtext));
      margin-top: 4rem;
    }

    .footer-content {
      max-width: 1200px;
      margin: 0 auto;
      display: grid;
      grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
      gap: 2rem;
      align-items: start;
    }

    .footer-section {
      display: flex;
      flex-direction: column;
    }

    .footer-brand {
      display: flex;
      align-items: center;
    }

    .footer-links {
      display: flex;
      flex-direction: column;
      gap: 0.5rem;
      list-style: none;
    }

    .footer-links a {
      color: rgb(var(--subtext));
      text-decoration: none;
      transition: color 0.2s ease;
      font-size: 0.875rem;
    }

    .footer-links a:hover {
      color: rgb(var(--primary));
    }

    .social-links {
      display: flex;
      gap: 1rem;
      margin-bottom: 1rem;
    }

    .social-link {
      display: flex;
      align-items: center;
      justify-content: center;
      width: 40px;
      height: 40px;
      background: rgba(var(--panel), 0.8);
      border: 1px solid rgba(var(--ring), 0.5);
      border-radius: 0.5rem;
      color: rgb(var(--subtext));
      text-decoration: none;
      transition: all 0.2s ease;
    }

    .social-link:hover {
      background: rgba(var(--primary), 0.1);
      border-color: rgba(var(--primary), 0.3);
      color: rgb(var(--primary));
      transform: translateY(-2px);
    }

    .contact-info p {
      display: flex;
      align-items: center;
      margin-bottom: 0.5rem;
    }

    /* Animations */
    @keyframes twinkle {
      0%, 100% { opacity: 0.3; }
      50% { opacity: 1; }
    }

    @keyframes blob {
      0% { transform: translate(0) scale(1); }
      33% { transform: translate(30px, -50px) scale(1.1); }
      66% { transform: translate(-20px, 20px) scale(0.9); }
      100% { transform: translate(0) scale(1); }
    }

    @keyframes fadeIn {
      from {
        opacity: 0;
        transform: translateY(20px);
      }
      to {
        opacity: 1;
        transform: translateY(0);
      }
    }

    /* Loading animation for content */
    .fade-in {
      animation: fadeIn 0.8s ease-out;
    }

    /* Responsive design */
    @media (max-width: 768px) {
      .nav {
        padding: 1rem;
      }

      .nav-links {
        display: none;
      }

      .content {
        padding: 1rem;
      }

      .content h1 {
        font-size: 2rem;
      }

      .content h2 {
        font-size: 1.25rem;
      }

      .content h3 {
        font-size: 1.125rem;
      }

      .footer-content {
        grid-template-columns: 1fr;
        text-align: center;
        gap: 1.5rem;
      }

      .footer-section {
        align-items: center;
      }

      .social-links {
        justify-content: center;
      }
    }
  </style>
</head>
<body>
  <!-- Background effects -->
  <div class="glow-radial"></div>
  <div class="blob blob-1"></div>
  <div class="blob blob-2"></div>
  <div class="blob blob-3"></div>

  <!-- Navigation -->
  <nav class="nav">
    <div class="nav-container">
      <a href="/" class="nav-brand">
        <img src="https://res.cloudinary.com/dp5b5fymz/image/upload/v1755927329/qibird.svg" alt="QiAlly">
        <span>QiAlly</span>
      </a>
      <ul class="nav-links">
        <li><a href="/">Home</a></li>
        <li><a href="/services.html">Services</a></li>
        <li><a href="/about-me.html">About</a></li>
        <li><a href="/contact.html">Contact</a></li>
        <li><a href="/knowledge-base.html">Help Center</a></li>
        <li><a href="https://portal.qially.com/client" target="_blank" rel="noopener noreferrer">Client Portal</a></li>
      </ul>
    </div>
  </nav>

  <div class="container">
    <div class="content fade-in">
      <div class="last-updated">
        <strong>Last Updated:</strong> January 2025
      </div>

      <h1>Terms of Use</h1>
      
      <p>Welcome to QiAlly. These Terms of Use govern your use of our website and services. By accessing or using our website, you agree to be bound by these terms and conditions.</p>

      <h2>Acceptance of Terms</h2>
      <p>By accessing and using this website, you accept and agree to be bound by the terms and provision of this agreement. If you do not agree to abide by the above, please do not use this service.</p>

      <h2>Use License</h2>
      <p>Permission is granted to temporarily download one copy of the materials (information or software) on QiAlly's website for personal, non-commercial transitory viewing only. This is the grant of a license, not a transfer of title, and under this license you may not:</p>
      <ul>
        <li>Modify or copy the materials</li>
        <li>Use the materials for any commercial purpose or for any public display (commercial or non-commercial)</li>
        <li>Attempt to decompile or reverse engineer any software contained on QiAlly's website</li>
        <li>Remove any copyright or other proprietary notations from the materials</li>
        <li>Transfer the materials to another person or "mirror" the materials on any other server</li>
      </ul>

      <h2>Disclaimer</h2>
      <p>The materials on QiAlly's website are provided on an 'as is' basis. QiAlly makes no warranties, expressed or implied, and hereby disclaims and negates all other warranties including without limitation, implied warranties or conditions of merchantability, fitness for a particular purpose, or non-infringement of intellectual property or other violation of rights.</p>

      <h2>Limitations</h2>
      <p>In no event shall QiAlly or its suppliers be liable for any damages (including, without limitation, damages for loss of data or profit, or due to business interruption) arising out of the use or inability to use the materials on QiAlly's website, even if QiAlly or a QiAlly authorized representative has been notified orally or in writing of the possibility of such damage.</p>

      <h2>Accuracy of Materials</h2>
      <p>The materials appearing on QiAlly's website could include technical, typographical, or photographic errors. QiAlly does not warrant that any of the materials on its website are accurate, complete, or current. QiAlly may make changes to the materials contained on its website at any time without notice.</p>

      <h2>Links</h2>
      <p>QiAlly has not reviewed all of the sites linked to its website and is not responsible for the contents of any such linked site. The inclusion of any link does not imply endorsement by QiAlly of the site. Use of any such linked website is at the user's own risk.</p>

      <h2>Modifications</h2>
      <p>QiAlly may revise these terms of service for its website at any time without notice. By using this website you are agreeing to be bound by the then current version of these Terms of Service.</p>

      <h2>Governing Law</h2>
      <p>These terms and conditions are governed by and construed in accordance with the laws of the State of Indiana and you irrevocably submit to the exclusive jurisdiction of the courts in that State or location.</p>

      <h2>Intellectual Property</h2>
      <p>All content on this website, including but not limited to text, graphics, logos, images, and software, is the property of QiAlly and is protected by copyright laws. You may not reproduce, distribute, or create derivative works from this content without our express written permission.</p>

      <h2>User Conduct</h2>
      <p>When using our website and services, you agree not to:</p>
      <ul>
        <li>Violate any applicable laws or regulations</li>
        <li>Infringe upon the rights of others</li>
        <li>Transmit harmful, offensive, or inappropriate content</li>
        <li>Attempt to gain unauthorized access to our systems</li>
        <li>Interfere with the proper functioning of our website</li>
      </ul>

      <h2>Service Availability</h2>
      <p>We strive to maintain the availability of our website and services, but we do not guarantee uninterrupted access. We reserve the right to modify, suspend, or discontinue any part of our services at any time.</p>

      <h2>Contact Information</h2>
      <p>If you have any questions about these Terms of Use, please contact us:</p>
      <ul>
        <li>Email: <a href="mailto:Info@qially.me">Info@qially.me</a></li>
                    <li>Phone: <a href="tel:+17654434769">+1 (765) 443-4769</a></li>
        <li>Address: Indianapolis, IN - Available Worldwide</li>
      </ul>
    </div>
  </div>

  <!-- Footer -->
  <footer>
    <div class="footer-content">
      <div class="footer-section">
        <div class="footer-brand">
          <img src="https://res.cloudinary.com/dp5b5fymz/image/upload/v1755927329/qibird.svg" alt="QiAlly" style="width: 32px; height: 32px; filter: brightness(0) invert(1); margin-right: 0.75rem;">
          <span style="font-weight: 600; font-size: 1.25rem;">QiAlly</span>
        </div>
        <p style="margin-top: 1rem; color: rgb(var(--subtext));">Empower. Innovate. Grow.</p>
        <p style="margin-top: 0.5rem; color: rgb(var(--subtext)); font-size: 0.875rem;">© <span id="year"></span> QiAlly. All rights reserved.</p>
      </div>
      
      <div class="footer-section">
        <h4 style="color: rgb(var(--text)); margin-bottom: 1rem; font-weight: 600;">Quick Links</h4>
        <ul class="footer-links">
          <li><a href="/services.html">Services</a></li>
          <li><a href="/about-me.html">About</a></li>
          <li><a href="/contact.html">Contact</a></li>
          <li><a href="/knowledge-base.html">Help Center</a></li>
        </ul>
      </div>
      
      <div class="footer-section">
        <h4 style="color: rgb(var(--text)); margin-bottom: 1rem; font-weight: 600;">Connect With Us</h4>
        <div class="social-links">
          <a href="https://www.facebook.com/qially1/" target="_blank" rel="noopener noreferrer" class="social-link">
            <svg width="20" height="20" viewBox="0 0 24 24" fill="currentColor">
              <path d="M24 12.073c0-6.627-5.373-12-12-12s-12 5.373-12 12c0 5.99 4.388 10.954 10.125 11.854v-8.385H7.078v-3.47h3.047V9.43c0-3.007 1.792-4.669 4.533-4.669 1.312 0 2.686.235 2.686.235v2.953H15.83c-1.491 0-1.956.925-1.956 1.874v2.25h3.328l-.532 3.47h-2.796v8.385C19.612 23.027 24 18.062 24 12.073z"/>
            </svg>
          </a>
          <a href="https://x.com/QiAlly" target="_blank" rel="noopener noreferrer" class="social-link">
            <svg width="20" height="20" viewBox="0 0 24 24" fill="currentColor">
              <path d="M18.244 2.25h3.308l-7.227 8.26 8.502 11.24H16.17l-5.214-6.817L4.99 21.75H1.68l7.73-8.835L1.254 2.25H8.08l4.713 6.231zm-1.161 17.52h1.833L7.084 4.126H5.117z"/>
            </svg>
          </a>
          <a href="https://www.youtube.com/@qiallyme" target="_blank" rel="noopener noreferrer" class="social-link">
            <svg width="20" height="20" viewBox="0 0 24 24" fill="currentColor">
              <path d="M23.498 6.186a3.016 3.016 0 0 0-2.122-2.136C19.505 3.545 12 3.545 12 3.545s-7.505 0-9.377.505A3.017 3.017 0 0 0 .502 6.186C0 8.07 0 12 0 12s0 3.93.502 5.814a3.016 3.016 0 0 0 2.122 2.136c1.871.505 9.376.505 9.376.505s7.505 0 9.377-.505a3.015 3.015 0 0 0 2.122-2.136C24 15.93 24 12 24 12s0-3.93-.502-5.814zM9.545 15.568V8.432L15.818 12l-6.273 3.568z"/>
            </svg>
          </a>
        </div>
        <div class="contact-info" style="margin-top: 1rem;">
          <p style="color: rgb(var(--subtext)); font-size: 0.875rem; margin-bottom: 0.5rem;">
            <svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" style="margin-right: 0.5rem; display: inline;">
              <path d="M4 4h16c1.1 0 2 .9 2 2v12c0 1.1-.9 2-2 2H4c-1.1 0-2-.9-2-2V6c0-1.1.9-2 2-2z"/>
              <polyline points="22,6 12,13 2,6"/>
            </svg>
            Info@qially.me
          </p>
          <p style="color: rgb(var(--subtext)); font-size: 0.875rem;">
            <svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" style="margin-right: 0.5rem; display: inline;">
              <path d="M22 16.92v3a2 2 0 0 1-2.18 2 19.79 19.79 0 0 1-8.63-3.07 19.5 19.5 0 0 1-6-6 19.79 19.79 0 0 1-3.07-8.67A2 2 0 0 1 4.11 2h3a2 2 0 0 1 2 1.72 12.84 12.84 0 0 0 .7 2.81 2 2 0 0 1-.45 2.11L8.09 9.91a16 16 0 0 0 6 6l1.27-1.27a2 2 0 0 1 2.11-.45 12.84 12.84 0 0 0 2.81.7A2 2 0 0 1 22 16.92z"/>
            </svg>
            +1 (765) 443-4769
          </p>
        </div>
      </div>
    </div>
    
    <div class="footer-bottom" style="border-top: 1px solid rgba(var(--ring), 0.3); margin-top: 2rem; padding-top: 1rem; text-align: center;">
      <p style="color: rgb(var(--subtext)); font-size: 0.75rem;">
        This site uses cookies to improve your experience. By using this site you agree to our 
        <a href="/privacy-policy.html" style="color: rgb(var(--primary));">Privacy Policy</a> and 
        <a href="/terms-of-use.html" style="color: rgb(var(--primary));">Terms of Use</a>.
      </p>
    </div>
  </footer>

  <script>
    // Set current year
    document.getElementById('year').textContent = new Date().getFullYear();
    
    // Add some interactive effects
    document.addEventListener('DOMContentLoaded', function() {
      // Add scroll effect to navigation
      window.addEventListener('scroll', function() {
        const nav = document.querySelector('.nav');
        if (window.scrollY > 50) {
          nav.style.background = 'rgba(var(--panel), 0.95)';
        } else {
          nav.style.background = 'rgba(var(--panel), 0.8)';
        }
      });
    });
  </script>
</body>
</html>


================================================================================
END: D:\QiEOS\qially-coming-soon\qially.com\terms-of-use.html
================================================================================


================================================================================
FILE: D:\QiEOS\qially-coming-soon\qially.com\scripts\code_extractor.py
================================================================================

import os
from datetime import datetime

def should_ignore_directory(dir_name):
    """Check if directory should be ignored."""
    ignore_dirs = ['dist', 'node_modules']
    return dir_name.lower() in [d.lower() for d in ignore_dirs]

def get_file_extension(file_name):
    """Get file extension for determining if it's a code file."""
    return os.path.splitext(file_name)[1].lower()

def is_code_file(file_name):
    """Check if file is likely a code file based on extension."""
    # Files to explicitly ignore
    ignore_files = ['package-lock.json']
    if file_name in ignore_files:
        return False
    
    code_extensions = {
        '.py', '.js', '.jsx', '.ts', '.tsx', '.html', '.css', '.scss', '.sass',
        '.json', '.xml', '.yaml', '.yml', '.md', '.txt', '.sh', '.bat', '.ps1',
        '.vue', '.php', '.java', '.cpp', '.c', '.h', '.hpp', '.cs', '.rb',
        '.go', '.rs', '.swift', '.kt', '.scala', '.r', '.sql', '.pl', '.lua',
        '.config.js'  # Include config.js files
    }
    
    # Check for exact extension match
    if get_file_extension(file_name) in code_extensions:
        return True
    
    # Special check for .config.js files
    if file_name.endswith('.config.js'):
        return True
    
    return False

def print_directory_tree(root_dir, output_file, current_depth=0, prefix=''):
    """Recursively prints the directory tree structure and writes to output file."""
    
    try:
        # Get the list of items in the directory
        items = os.listdir(root_dir)
    except PermissionError:
        message = prefix + "└── [Permission Denied]"
        print(message)
        output_file.write(message + "\n")
        return
    except FileNotFoundError:
        message = prefix + "└── [Directory Not Found]"
        print(message)
        output_file.write(message + "\n")
        return

    # Sort items: directories first, then files
    items = sorted(items, key=lambda s: s.lower())
    directories = [item for item in items if os.path.isdir(os.path.join(root_dir, item))]
    files = [item for item in items if not os.path.isdir(os.path.join(root_dir, item))]

    # Filter out ignored directories and hidden files/directories
    directories = [item for item in directories if not should_ignore_directory(item) and not item.startswith('.')]
    files = [item for item in files if not item.startswith('.')]

    # Combine directories and files
    items = directories + files

    for index, item in enumerate(items):
        path = os.path.join(root_dir, item)
        
        # Determine tree connector style
        if index == len(items) - 1:
            connector = '└── '
            extension = '    '
        else:
            connector = '├── '
            extension = '│   '

        # Print and write to file
        message = prefix + connector + item
        print(message)
        output_file.write(message + "\n")

        # Recurse into directories (excluding ignored ones)
        if os.path.isdir(path):
            print_directory_tree(path, output_file, current_depth + 1, prefix + extension)

def extract_file_content(file_path, output_file):
    """Extract and write file content with header."""
    try:
        # Create header
        header = f"\n{'='*80}\n"
        header += f"FILE: {file_path}\n"
        header += f"TYPE: {get_file_extension(file_path)}\n"
        header += f"{'='*80}\n\n"
        
        print(header)
        output_file.write(header)
        
        # Read and write file content
        with open(file_path, 'r', encoding='utf-8', errors='ignore') as f:
            content = f.read()
            print(content)
            output_file.write(content)
            
        # Add footer
        footer = f"\n\n{'='*80}\nEND OF FILE: {file_path}\n{'='*80}\n\n"
        print(footer)
        output_file.write(footer)
        
    except Exception as e:
        error_msg = f"\nERROR READING FILE {file_path}: {str(e)}\n"
        print(error_msg)
        output_file.write(error_msg)

def scan_and_extract_files(root_dir, output_file):
    """Scan directory tree and extract content from all code files."""
    print(f"\n{'='*80}")
    print("STARTING FILE CONTENT EXTRACTION")
    print(f"{'='*80}\n")
    output_file.write(f"\n{'='*80}\n")
    output_file.write("STARTING FILE CONTENT EXTRACTION\n")
    output_file.write(f"{'='*80}\n\n")
    
    file_count = 0
    
    for root, dirs, files in os.walk(root_dir):
        # Filter out ignored directories from traversal
        dirs[:] = [d for d in dirs if not should_ignore_directory(d) and not d.startswith('.')]
        
        # Filter out hidden files and sort for consistent order
        files = [f for f in files if not f.startswith('.')]
        files = sorted(files, key=lambda s: s.lower())
        
        for file_name in files:
            file_path = os.path.join(root, file_name)
            
            # Only process code files
            if is_code_file(file_name):
                extract_file_content(file_path, output_file)
                file_count += 1
    
    return file_count

def main():
    """Main function to run the code extraction."""
    # Get the project root (current working directory)
    root_dir = os.getcwd()
    
    # Create output file in root directory
    timestamp = datetime.now().strftime("%Y-%m-%d_%H-%M-%S")
    output_filename = f"code_extraction_{timestamp}.txt"
    output_path = os.path.join(root_dir, output_filename)
    
    print(f"Starting code extraction from: {root_dir}")
    print(f"Output will be saved to: {output_path}")
    print(f"Ignoring directories: dist, node_modules")
    print(f"Ignoring files: package-lock.json")
    print(f"{'='*80}\n")
    
    with open(output_path, 'w', encoding='utf-8') as output_file:
        # Write header information
        header_info = f"CODE EXTRACTION REPORT\n"
        header_info += f"Generated: {datetime.now().strftime('%Y-%m-%d %H:%M:%S')}\n"
        header_info += f"Root Directory: {root_dir}\n"
        header_info += f"Ignored Directories: dist, node_modules\n"
        header_info += f"Ignored Files: package-lock.json\n"
        header_info += f"{'='*80}\n\n"
        
        print(header_info)
        output_file.write(header_info)
        
        # Print directory tree
        print("DIRECTORY TREE STRUCTURE:")
        print("-" * 40)
        output_file.write("DIRECTORY TREE STRUCTURE:\n")
        output_file.write("-" * 40 + "\n")
        
        print_directory_tree(root_dir, output_file)
        
        # Extract file contents
        file_count = scan_and_extract_files(root_dir, output_file)
        
        # Write footer
        footer = f"\n{'='*80}\n"
        footer += f"EXTRACTION COMPLETE\n"
        footer += f"Total files processed: {file_count}\n"
        footer += f"Output saved to: {output_path}\n"
        footer += f"{'='*80}\n"
        
        print(footer)
        output_file.write(footer)
    
    print(f"\nCode extraction completed successfully!")
    print(f"Output saved to: {output_path}")

if __name__ == "__main__":
    main()


================================================================================
END: D:\QiEOS\qially-coming-soon\qially.com\scripts\code_extractor.py
================================================================================


================================================================================
FILE: D:\QiEOS\qially-coming-soon\qially.com\scripts\directory_mapper.py
================================================================================

import os
import argparse
from datetime import datetime

def print_directory_tree(root_dir, show_files=True, max_depth=None, current_depth=0, prefix='', log_file=None, include_hidden=True, exclude_dirs=None):
    """
    Recursively prints the directory tree structure up to the specified depth and writes to a log file.
    """
    if exclude_dirs is None:
        exclude_dirs = [
            'venv', '__pycache__', 'data', 'logs',
            '.git', '.vscode', '.idea', '.pytest_cache',
            '.venv', '.DS_Store', '.env', '.env.local',
            '.env.development.local', '.env.test.local',
            '.env.production.local', 'Empty_Folders',
            '.docusaurus', '.docusaurus-plugin-content-docs-current',
            # Node / frontend bloat
            'node_modules', '.node_modules',
            # Tools/programs we don't want
            'mpc-hc', 'losslesscut', 'OCR', 'pdf-main', 'my-pdf-main',
            # Tests (ignore any folder containing these patterns)
            'test', 'tests', '__tests__',
            # Plugins and cache
            'plugins', '.local'
        ]

    if max_depth is not None and current_depth >= max_depth:
        return

    try:
        # Get the list of items in the directory
        items = os.listdir(root_dir)
    except PermissionError:
        message = prefix + "└── [Permission Denied]"
        print(message)
        if log_file:
            log_file.write(message + "\n")
        return
    except FileNotFoundError:
        message = prefix + "└── [Directory Not Found]"
        print(message)
        if log_file:
            log_file.write(message + "\n")
        return

    # Sort items: directories first, then files
    items = sorted(items, key=lambda s: s.lower())
    directories = [item for item in items if os.path.isdir(os.path.join(root_dir, item))]
    files = [item for item in items if not os.path.isdir(os.path.join(root_dir, item))]

    # Exclude directories that match or contain any exclude pattern
    directories = [
        item for item in directories
        if not any(ex.lower() in item.lower() for ex in exclude_dirs)
    ]

    # Show files or just folders
    items = directories if not show_files else directories + files

    for index, item in enumerate(items):
        if not include_hidden and item.startswith('.'):
            continue

        path = os.path.join(root_dir, item)
        # Determine tree connector style
        if index == len(items) - 1:
            connector = '└── '
            extension = '    '
        else:
            connector = '├── '
            extension = '│   '

        # Print and log
        message = prefix + connector + item
        print(message)
        if log_file:
            log_file.write(message + "\n")

        # Recurse into directories
        if os.path.isdir(path):
            print_directory_tree(path, show_files, max_depth, current_depth + 1,
                                 prefix + extension, log_file, include_hidden, exclude_dirs)

def create_log_file(filename_prefix, suffix=""):
    """Creates a timestamped log file in Downloads."""
    downloads_dir = os.path.join(os.path.expanduser("~"), "Downloads")

    sanitized_prefix = "".join(c for c in filename_prefix if c.isalnum() or c in (' ', '_', '-')).strip()
    if not sanitized_prefix:
        sanitized_prefix = "log"

    timestamp = datetime.now().strftime("%Y-%m-%d_%H-%M-%S")
    base_log_file_name = f"{sanitized_prefix}_{timestamp}{suffix}"
    log_file_name = f"{base_log_file_name}.txt"
    log_file_path = os.path.join(downloads_dir, log_file_name)

    counter = 1
    while os.path.exists(log_file_path):
        log_file_name = f"{base_log_file_name}_{counter}.txt"
        log_file_path = os.path.join(downloads_dir, log_file_name)
        counter += 1

    return open(log_file_path, "w", encoding="utf-8")

def main():
    """Main orchestrator for generating directory tree."""
    try:
        # Set default path to project root (current working directory)
        root_dir = os.getcwd()
        
        # Default settings: show both files and folders, no depth limit
        show_files = True
        max_depth = None

        log_file_tree = create_log_file(os.path.basename(root_dir), "_tree")
        print(f"Log file created: {log_file_tree.name}")
        print(f"Resolved path: {root_dir}")
        log_file_tree.write(f"Resolved path: {root_dir}\n")

        print_directory_tree(root_dir, show_files, max_depth, log_file=log_file_tree)
        log_file_tree.close()
        print(f"Directory structure logged in: {log_file_tree.name}")

    except Exception as e:
        print(f"An unexpected error occurred in main: {e}")

if __name__ == "__main__":
    main()


================================================================================
END: D:\QiEOS\qially-coming-soon\qially.com\scripts\directory_mapper.py
================================================================================


================================================================================
FILE: D:\QiEOS\qially-coming-soon\qially.com\scripts\obsidian-sync.js
================================================================================

// Obsidian Sync Helper for QiAlly Knowledge Base
// This script helps manage the integration between Obsidian vault and the website

class ObsidianSync {
  constructor() {
    this.vaultPath = '';
    this.websitePath = '';
    this.articles = [];
  }

  // Initialize the sync system
  init(vaultPath, websitePath) {
    this.vaultPath = vaultPath;
    this.websitePath = websitePath;
    console.log('Obsidian Sync initialized');
  }

  // Convert Obsidian markdown to HTML
  convertMarkdownToHTML(markdown) {
    // Basic markdown to HTML conversion
    let html = markdown
      // Headers
      .replace(/^### (.*$)/gim, '<h3>$1</h3>')
      .replace(/^## (.*$)/gim, '<h2>$1</h2>')
      .replace(/^# (.*$)/gim, '<h1>$1</h1>')
      // Bold and italic
      .replace(/\*\*(.*?)\*\*/g, '<strong>$1</strong>')
      .replace(/\*(.*?)\*/g, '<em>$1</em>')
      // Links
      .replace(/\[([^\]]+)\]\(([^)]+)\)/g, '<a href="$2">$1</a>')
      // Lists
      .replace(/^\* (.*$)/gim, '<li>$1</li>')
      .replace(/^- (.*$)/gim, '<li>$1</li>')
      // Code blocks
      .replace(/```([\s\S]*?)```/g, '<pre><code>$1</code></pre>')
      .replace(/`([^`]+)`/g, '<code>$1</code>')
      // Paragraphs
      .replace(/\n\n/g, '</p><p>');

    return `<p>${html}</p>`;
  }

  // Generate article HTML with QiAlly styling
  generateArticleHTML(title, content, category, tags = []) {
    const htmlContent = this.convertMarkdownToHTML(content);
    const tagsHTML = tags.map(tag => `<span class="tag">${tag}</span>`).join('');
    
    return `
      <article class="kb-article">
        <header class="article-header">
          <h1>${title}</h1>
          <div class="article-meta">
            <span class="category">${category}</span>
            <div class="tags">${tagsHTML}</div>
          </div>
        </header>
        <div class="article-content">
          ${htmlContent}
        </div>
        <footer class="article-footer">
          <p class="last-updated">Last updated: ${new Date().toLocaleDateString()}</p>
        </footer>
      </article>
    `;
  }

  // Create a new article
  createArticle(title, content, category, tags = []) {
    const article = {
      id: this.generateId(),
      title,
      content,
      category,
      tags,
      createdAt: new Date(),
      updatedAt: new Date()
    };

    this.articles.push(article);
    return article;
  }

  // Generate unique ID
  generateId() {
    return 'article_' + Date.now() + '_' + Math.random().toString(36).substr(2, 9);
  }

  // Search articles
  searchArticles(query) {
    const searchTerm = query.toLowerCase();
    return this.articles.filter(article => 
      article.title.toLowerCase().includes(searchTerm) ||
      article.content.toLowerCase().includes(searchTerm) ||
      article.tags.some(tag => tag.toLowerCase().includes(searchTerm))
    );
  }

  // Get articles by category
  getArticlesByCategory(category) {
    return this.articles.filter(article => article.category === category);
  }

  // Export articles to JSON
  exportArticles() {
    return JSON.stringify(this.articles, null, 2);
  }

  // Import articles from JSON
  importArticles(jsonData) {
    try {
      this.articles = JSON.parse(jsonData);
      console.log(`Imported ${this.articles.length} articles`);
    } catch (error) {
      console.error('Error importing articles:', error);
    }
  }
}

// Initialize the sync system
const obsidianSync = new ObsidianSync();

// Example usage:
// obsidianSync.init('/path/to/obsidian/vault', '/path/to/website');
// const article = obsidianSync.createArticle(
//   'Process Improvement Guide',
//   '# Process Improvement\n\nThis guide covers...',
//   'Process Improvement',
//   ['guide', 'process', 'improvement']
// );

// Export for use in other scripts
if (typeof module !== 'undefined' && module.exports) {
  module.exports = ObsidianSync;
} else {
  window.ObsidianSync = ObsidianSync;
  window.obsidianSync = obsidianSync;
}


================================================================================
END: D:\QiEOS\qially-coming-soon\qially.com\scripts\obsidian-sync.js
================================================================================


================================================================================
FILE: D:\QiEOS\qially-coming-soon\scripts\code_extractor.py
================================================================================

import os
from datetime import datetime

def should_ignore_directory(dir_name):
    """Check if directory should be ignored."""
    ignore_dirs = ['dist', 'node_modules']
    return dir_name.lower() in [d.lower() for d in ignore_dirs]

def get_file_extension(file_name):
    """Get file extension for determining if it's a code file."""
    return os.path.splitext(file_name)[1].lower()

def is_code_file(file_name):
    """Check if file is likely a code file based on extension."""
    # Files to explicitly ignore
    ignore_files = ['package-lock.json']
    if file_name in ignore_files:
        return False
    
    code_extensions = {
        '.py', '.js', '.jsx', '.ts', '.tsx', '.html', '.css', '.scss', '.sass',
        '.json', '.xml', '.yaml', '.yml', '.md', '.txt', '.sh', '.bat', '.ps1',
        '.vue', '.php', '.java', '.cpp', '.c', '.h', '.hpp', '.cs', '.rb',
        '.go', '.rs', '.swift', '.kt', '.scala', '.r', '.sql', '.pl', '.lua',
        '.config.js'  # Include config.js files
    }
    
    # Check for exact extension match
    if get_file_extension(file_name) in code_extensions:
        return True
    
    # Special check for .config.js files
    if file_name.endswith('.config.js'):
        return True
    
    return False

def print_directory_tree(root_dir, output_file, current_depth=0, prefix=''):
    """Recursively prints the directory tree structure and writes to output file."""
    
    try:
        # Get the list of items in the directory
        items = os.listdir(root_dir)
    except PermissionError:
        message = prefix + "└── [Permission Denied]"
        print(message)
        output_file.write(message + "\n")
        return
    except FileNotFoundError:
        message = prefix + "└── [Directory Not Found]"
        print(message)
        output_file.write(message + "\n")
        return

    # Sort items: directories first, then files
    items = sorted(items, key=lambda s: s.lower())
    directories = [item for item in items if os.path.isdir(os.path.join(root_dir, item))]
    files = [item for item in items if not os.path.isdir(os.path.join(root_dir, item))]

    # Filter out ignored directories and hidden files/directories
    directories = [item for item in directories if not should_ignore_directory(item) and not item.startswith('.')]
    files = [item for item in files if not item.startswith('.')]

    # Combine directories and files
    items = directories + files

    for index, item in enumerate(items):
        path = os.path.join(root_dir, item)
        
        # Determine tree connector style
        if index == len(items) - 1:
            connector = '└── '
            extension = '    '
        else:
            connector = '├── '
            extension = '│   '

        # Print and write to file
        message = prefix + connector + item
        print(message)
        output_file.write(message + "\n")

        # Recurse into directories (excluding ignored ones)
        if os.path.isdir(path):
            print_directory_tree(path, output_file, current_depth + 1, prefix + extension)

def extract_file_content(file_path, output_file):
    """Extract and write file content with header."""
    try:
        # Create header
        header = f"\n{'='*80}\n"
        header += f"FILE: {file_path}\n"
        header += f"TYPE: {get_file_extension(file_path)}\n"
        header += f"{'='*80}\n\n"
        
        print(header)
        output_file.write(header)
        
        # Read and write file content
        with open(file_path, 'r', encoding='utf-8', errors='ignore') as f:
            content = f.read()
            print(content)
            output_file.write(content)
            
        # Add footer
        footer = f"\n\n{'='*80}\nEND OF FILE: {file_path}\n{'='*80}\n\n"
        print(footer)
        output_file.write(footer)
        
    except Exception as e:
        error_msg = f"\nERROR READING FILE {file_path}: {str(e)}\n"
        print(error_msg)
        output_file.write(error_msg)

def scan_and_extract_files(root_dir, output_file):
    """Scan directory tree and extract content from all code files."""
    print(f"\n{'='*80}")
    print("STARTING FILE CONTENT EXTRACTION")
    print(f"{'='*80}\n")
    output_file.write(f"\n{'='*80}\n")
    output_file.write("STARTING FILE CONTENT EXTRACTION\n")
    output_file.write(f"{'='*80}\n\n")
    
    file_count = 0
    
    for root, dirs, files in os.walk(root_dir):
        # Filter out ignored directories from traversal
        dirs[:] = [d for d in dirs if not should_ignore_directory(d) and not d.startswith('.')]
        
        # Filter out hidden files and sort for consistent order
        files = [f for f in files if not f.startswith('.')]
        files = sorted(files, key=lambda s: s.lower())
        
        for file_name in files:
            file_path = os.path.join(root, file_name)
            
            # Only process code files
            if is_code_file(file_name):
                extract_file_content(file_path, output_file)
                file_count += 1
    
    return file_count

def main():
    """Main function to run the code extraction."""
    # Get the project root (current working directory)
    root_dir = os.getcwd()
    
    # Create output file in root directory
    timestamp = datetime.now().strftime("%Y-%m-%d_%H-%M-%S")
    output_filename = f"code_extraction_{timestamp}.txt"
    output_path = os.path.join(root_dir, output_filename)
    
    print(f"Starting code extraction from: {root_dir}")
    print(f"Output will be saved to: {output_path}")
    print(f"Ignoring directories: dist, node_modules")
    print(f"Ignoring files: package-lock.json")
    print(f"{'='*80}\n")
    
    with open(output_path, 'w', encoding='utf-8') as output_file:
        # Write header information
        header_info = f"CODE EXTRACTION REPORT\n"
        header_info += f"Generated: {datetime.now().strftime('%Y-%m-%d %H:%M:%S')}\n"
        header_info += f"Root Directory: {root_dir}\n"
        header_info += f"Ignored Directories: dist, node_modules\n"
        header_info += f"Ignored Files: package-lock.json\n"
        header_info += f"{'='*80}\n\n"
        
        print(header_info)
        output_file.write(header_info)
        
        # Print directory tree
        print("DIRECTORY TREE STRUCTURE:")
        print("-" * 40)
        output_file.write("DIRECTORY TREE STRUCTURE:\n")
        output_file.write("-" * 40 + "\n")
        
        print_directory_tree(root_dir, output_file)
        
        # Extract file contents
        file_count = scan_and_extract_files(root_dir, output_file)
        
        # Write footer
        footer = f"\n{'='*80}\n"
        footer += f"EXTRACTION COMPLETE\n"
        footer += f"Total files processed: {file_count}\n"
        footer += f"Output saved to: {output_path}\n"
        footer += f"{'='*80}\n"
        
        print(footer)
        output_file.write(footer)
    
    print(f"\nCode extraction completed successfully!")
    print(f"Output saved to: {output_path}")

if __name__ == "__main__":
    main()


================================================================================
END: D:\QiEOS\qially-coming-soon\scripts\code_extractor.py
================================================================================


================================================================================
FILE: D:\QiEOS\qially-coming-soon\scripts\directory_mapper.py
================================================================================

import os
import argparse
from datetime import datetime

def print_directory_tree(root_dir, show_files=True, max_depth=None, current_depth=0, prefix='', log_file=None, include_hidden=True, exclude_dirs=None):
    """
    Recursively prints the directory tree structure up to the specified depth and writes to a log file.
    """
    if exclude_dirs is None:
        exclude_dirs = [
            'venv', '__pycache__', 'data', 'logs',
            '.git', '.vscode', '.idea', '.pytest_cache',
            '.venv', '.DS_Store', '.env', '.env.local',
            '.env.development.local', '.env.test.local',
            '.env.production.local', 'Empty_Folders',
            '.docusaurus', '.docusaurus-plugin-content-docs-current',
            # Node / frontend bloat
            'node_modules', '.node_modules',
            # Tools/programs we don't want
            'mpc-hc', 'losslesscut', 'OCR', 'pdf-main', 'my-pdf-main',
            # Tests (ignore any folder containing these patterns)
            'test', 'tests', '__tests__',
            # Plugins and cache
            'plugins', '.local'
        ]

    if max_depth is not None and current_depth >= max_depth:
        return

    try:
        # Get the list of items in the directory
        items = os.listdir(root_dir)
    except PermissionError:
        message = prefix + "└── [Permission Denied]"
        print(message)
        if log_file:
            log_file.write(message + "\n")
        return
    except FileNotFoundError:
        message = prefix + "└── [Directory Not Found]"
        print(message)
        if log_file:
            log_file.write(message + "\n")
        return

    # Sort items: directories first, then files
    items = sorted(items, key=lambda s: s.lower())
    directories = [item for item in items if os.path.isdir(os.path.join(root_dir, item))]
    files = [item for item in items if not os.path.isdir(os.path.join(root_dir, item))]

    # Exclude directories that match or contain any exclude pattern
    directories = [
        item for item in directories
        if not any(ex.lower() in item.lower() for ex in exclude_dirs)
    ]

    # Show files or just folders
    items = directories if not show_files else directories + files

    for index, item in enumerate(items):
        if not include_hidden and item.startswith('.'):
            continue

        path = os.path.join(root_dir, item)
        # Determine tree connector style
        if index == len(items) - 1:
            connector = '└── '
            extension = '    '
        else:
            connector = '├── '
            extension = '│   '

        # Print and log
        message = prefix + connector + item
        print(message)
        if log_file:
            log_file.write(message + "\n")

        # Recurse into directories
        if os.path.isdir(path):
            print_directory_tree(path, show_files, max_depth, current_depth + 1,
                                 prefix + extension, log_file, include_hidden, exclude_dirs)

def create_log_file(filename_prefix, suffix=""):
    """Creates a timestamped log file in Downloads."""
    downloads_dir = os.path.join(os.path.expanduser("~"), "Downloads")

    sanitized_prefix = "".join(c for c in filename_prefix if c.isalnum() or c in (' ', '_', '-')).strip()
    if not sanitized_prefix:
        sanitized_prefix = "log"

    timestamp = datetime.now().strftime("%Y-%m-%d_%H-%M-%S")
    base_log_file_name = f"{sanitized_prefix}_{timestamp}{suffix}"
    log_file_name = f"{base_log_file_name}.txt"
    log_file_path = os.path.join(downloads_dir, log_file_name)

    counter = 1
    while os.path.exists(log_file_path):
        log_file_name = f"{base_log_file_name}_{counter}.txt"
        log_file_path = os.path.join(downloads_dir, log_file_name)
        counter += 1

    return open(log_file_path, "w", encoding="utf-8")

def main():
    """Main orchestrator for generating directory tree."""
    try:
        # Set default path to project root (current working directory)
        root_dir = os.getcwd()
        
        # Default settings: show both files and folders, no depth limit
        show_files = True
        max_depth = None

        log_file_tree = create_log_file(os.path.basename(root_dir), "_tree")
        print(f"Log file created: {log_file_tree.name}")
        print(f"Resolved path: {root_dir}")
        log_file_tree.write(f"Resolved path: {root_dir}\n")

        print_directory_tree(root_dir, show_files, max_depth, log_file=log_file_tree)
        log_file_tree.close()
        print(f"Directory structure logged in: {log_file_tree.name}")

    except Exception as e:
        print(f"An unexpected error occurred in main: {e}")

if __name__ == "__main__":
    main()


================================================================================
END: D:\QiEOS\qially-coming-soon\scripts\directory_mapper.py
================================================================================


================================================================================
FILE: D:\QiEOS\QiAllyPortal\components.json
================================================================================

{
    "$schema": "https://ui.shadcn.com/schema.json",
    "style": "new-york",
    "rsc": false,
    "tsx": true,
    "tailwind": {
      "config": "tailwind.config.ts",
      "css": "client/src/index.css",
      "baseColor": "neutral",
      "cssVariables": true,
      "prefix": ""
    },
    "aliases": {
      "components": "@/components",
      "utils": "@/lib/utils",
      "ui": "@/components/ui",
      "lib": "@/lib",
      "hooks": "@/hooks"
    }
}

================================================================================
END: D:\QiEOS\QiAllyPortal\components.json
================================================================================


================================================================================
FILE: D:\QiEOS\QiAllyPortal\drizzle.config.ts
================================================================================

import { defineConfig } from "drizzle-kit";

if (!process.env.DATABASE_URL) {
  throw new Error("DATABASE_URL, ensure the database is provisioned");
}

export default defineConfig({
  out: "./migrations",
  schema: "./shared/schema.ts",
  dialect: "postgresql",
  dbCredentials: {
    url: process.env.DATABASE_URL,
  },
});


================================================================================
END: D:\QiEOS\QiAllyPortal\drizzle.config.ts
================================================================================


================================================================================
FILE: D:\QiEOS\QiAllyPortal\kb-config.json
================================================================================

{
  "version": "1.0.0",
  "clients": {
    "acme-corp": {
      "name": "Acme Corp",
      "members": [
        "sarah@acmecorp.com"
      ],
      "access_rules": {
        "default_visibility": "private",
        "admin_override": true,
        "categories": [
          {
            "name": "Getting Started",
            "visibility": "private",
            "files": [
              "welcome.md",
              "brand-style-guide.md",
              "project-process.md"
            ]
          },
          {
            "name": "Design Resources",
            "visibility": "private", 
            "files": [
              "logo-guidelines.md",
              "color-palette.md",
              "typography-system.md"
            ]
          },
          {
            "name": "Communication",
            "visibility": "private",
            "files": [
              "feedback-process.md",
              "meeting-scheduling.md",
              "emergency-contacts.md"
            ]
          }
        ]
      },
      "ai_settings": {
        "enabled": true,
        "model": "gpt-5",
        "max_context_files": 5,
        "response_style": "professional"
      }
    },
    "tech-solutions": {
      "name": "Tech Solutions Inc",
      "members": [
        "contact@techsolutions.com"
      ],
      "access_rules": {
        "default_visibility": "private",
        "admin_override": true,
        "categories": [
          {
            "name": "Technical Documentation",
            "visibility": "private",
            "files": [
              "api-documentation.md",
              "integration-guide.md",
              "troubleshooting.md"
            ]
          }
        ]
      },
      "ai_settings": {
        "enabled": true,
        "model": "gpt-5",
        "max_context_files": 3,
        "response_style": "technical"
      }
    }
  },
  "global_settings": {
    "search_index_enabled": true,
    "auto_embed_content": true,
    "backup_enabled": true,
    "version_control": true
  },
  "build_settings": {
    "output_directory": "./public/kb",
    "static_generation": true,
    "search_integration": "fuse.js",
    "styling": "tailwindcss"
  }
}


================================================================================
END: D:\QiEOS\QiAllyPortal\kb-config.json
================================================================================


================================================================================
FILE: D:\QiEOS\QiAllyPortal\package.json
================================================================================

{
  "name": "rest-express",
  "version": "1.0.0",
  "type": "module",
  "license": "MIT",
  "scripts": {
    "dev": "NODE_ENV=development tsx server/index.ts",
    "build": "vite build && esbuild server/index.ts --platform=node --packages=external --bundle --format=esm --outdir=dist",
    "start": "NODE_ENV=production node dist/index.js",
    "check": "tsc",
    "db:push": "drizzle-kit push"
  },
  "dependencies": {
    "@hookform/resolvers": "^3.10.0",
    "@jridgewell/trace-mapping": "^0.3.25",
    "@neondatabase/serverless": "^0.10.4",
    "@radix-ui/react-accordion": "^1.2.4",
    "@radix-ui/react-alert-dialog": "^1.1.7",
    "@radix-ui/react-aspect-ratio": "^1.1.3",
    "@radix-ui/react-avatar": "^1.1.4",
    "@radix-ui/react-checkbox": "^1.1.5",
    "@radix-ui/react-collapsible": "^1.1.4",
    "@radix-ui/react-context-menu": "^2.2.7",
    "@radix-ui/react-dialog": "^1.1.7",
    "@radix-ui/react-dropdown-menu": "^2.1.7",
    "@radix-ui/react-hover-card": "^1.1.7",
    "@radix-ui/react-label": "^2.1.3",
    "@radix-ui/react-menubar": "^1.1.7",
    "@radix-ui/react-navigation-menu": "^1.2.6",
    "@radix-ui/react-popover": "^1.1.7",
    "@radix-ui/react-progress": "^1.1.3",
    "@radix-ui/react-radio-group": "^1.2.4",
    "@radix-ui/react-scroll-area": "^1.2.4",
    "@radix-ui/react-select": "^2.1.7",
    "@radix-ui/react-separator": "^1.1.3",
    "@radix-ui/react-slider": "^1.2.4",
    "@radix-ui/react-slot": "^1.2.0",
    "@radix-ui/react-switch": "^1.1.4",
    "@radix-ui/react-tabs": "^1.1.4",
    "@radix-ui/react-toast": "^1.2.7",
    "@radix-ui/react-toggle": "^1.1.3",
    "@radix-ui/react-toggle-group": "^1.1.3",
    "@radix-ui/react-tooltip": "^1.2.0",
    "@stripe/react-stripe-js": "^3.9.2",
    "@stripe/stripe-js": "^7.9.0",
    "@tanstack/react-query": "^5.60.5",
    "class-variance-authority": "^0.7.1",
    "clsx": "^2.1.1",
    "cmdk": "^1.1.1",
    "connect-pg-simple": "^10.0.0",
    "date-fns": "^3.6.0",
    "drizzle-orm": "^0.39.1",
    "drizzle-zod": "^0.7.0",
    "embla-carousel-react": "^8.6.0",
    "express": "^4.21.2",
    "express-session": "^1.18.1",
    "framer-motion": "^11.13.1",
    "input-otp": "^1.4.2",
    "lucide-react": "^0.453.0",
    "memorystore": "^1.6.7",
    "next-themes": "^0.4.6",
    "openai": "^5.16.0",
    "passport": "^0.7.0",
    "passport-local": "^1.0.0",
    "react": "^18.3.1",
    "react-day-picker": "^8.10.1",
    "react-dom": "^18.3.1",
    "react-hook-form": "^7.55.0",
    "react-icons": "^5.4.0",
    "react-resizable-panels": "^2.1.7",
    "recharts": "^2.15.2",
    "stripe": "^18.5.0",
    "tailwind-merge": "^2.6.0",
    "tailwindcss-animate": "^1.0.7",
    "tw-animate-css": "^1.2.5",
    "vaul": "^1.1.2",
    "wouter": "^3.3.5",
    "ws": "^8.18.0",
    "zod": "^3.24.2",
    "zod-validation-error": "^3.4.0"
  },
  "devDependencies": {
    "@replit/vite-plugin-cartographer": "^0.3.0",
    "@replit/vite-plugin-runtime-error-modal": "^0.0.3",
    "@tailwindcss/typography": "^0.5.15",
    "@tailwindcss/vite": "^4.1.3",
    "@types/connect-pg-simple": "^7.0.3",
    "@types/express": "4.17.21",
    "@types/express-session": "^1.18.0",
    "@types/node": "20.16.11",
    "@types/passport": "^1.0.16",
    "@types/passport-local": "^1.0.38",
    "@types/react": "^18.3.11",
    "@types/react-dom": "^18.3.1",
    "@types/ws": "^8.5.13",
    "@vitejs/plugin-react": "^4.3.2",
    "autoprefixer": "^10.4.20",
    "drizzle-kit": "^0.30.4",
    "esbuild": "^0.25.0",
    "postcss": "^8.4.47",
    "tailwindcss": "^3.4.17",
    "tsx": "^4.19.1",
    "typescript": "5.6.3",
    "vite": "^5.4.19"
  },
  "optionalDependencies": {
    "bufferutil": "^4.0.8"
  }
}


================================================================================
END: D:\QiEOS\QiAllyPortal\package.json
================================================================================


================================================================================
FILE: D:\QiEOS\QiAllyPortal\postcss.config.js
================================================================================

export default {
  plugins: {
    tailwindcss: {},
    autoprefixer: {},
  },
}


================================================================================
END: D:\QiEOS\QiAllyPortal\postcss.config.js
================================================================================


================================================================================
FILE: D:\QiEOS\QiAllyPortal\README.md
================================================================================

# QiAlly Portal - Multi-Tenant Client Portal

A comprehensive multi-tenant client portal featuring AI-powered knowledge bases, real-time collaboration, project management, and intelligent automation tools.

## 🚀 Features

### Core Functionality
- **Multi-Tenant Architecture** - Secure client isolation with customizable branding
- **AI-Powered Knowledge Base** - RAG-enabled chatbots with vector search
- **Real-Time Messaging** - WebSocket-powered communication system
- **Project Management** - Progress tracking with visualization
- **Payment Processing** - Stripe integration for invoicing and payments
- **Modular Design** - Feature flags control client access to modules

### Advanced Capabilities
- **RAG-Enabled Document Chat** - Intelligent document Q&A using OpenAI
- **Admin Dashboard** - Complete client management and "view as client" functionality
- **Role-Based Access Control** - Admin, team member, and client user roles
- **Real-Time Updates** - Live notifications and message synchronization
- **Responsive Design** - Mobile-first glassmorphism UI

## 🛠️ Tech Stack

### Frontend
- **React 19** with TypeScript
- **Vite** for build optimization
- **TailwindCSS** + **Framer Motion** for styling and animations
- **React Router (wouter)** for client-side routing
- **React Query** for state management and API caching
- **Stripe Elements** for payment processing
- **WebSocket** for real-time communication

### Backend
- **Node.js** with Express
- **Multi-tenant data architecture** with client isolation
- **OpenAI API** for RAG functionality (GPT-5)
- **Stripe API** for billing and payments
- **WebSocket Server** for real-time messaging
- **In-memory storage** with database-ready interface

### Key Integrations
- **OpenAI GPT-5** - Latest model for AI-powered responses
- **Stripe** - Payment processing and subscription management
- **Vector Search** - Document embedding for intelligent search
- **WebRTC** - Future video calling capabilities

## 📦 Installation & Setup

### Prerequisites
- Node.js 18+ 
- npm or yarn
- OpenAI API key (optional)
- Stripe keys (optional)

### Environment Variables
Create a `.env` file in the root directory:

```env
# Optional: OpenAI for AI chat functionality
OPENAI_API_KEY=your_openai_api_key

# Optional: Stripe for payment processing  
STRIPE_SECRET_KEY=sk_test_...
VITE_STRIPE_PUBLIC_KEY=pk_test_...

# Development
NODE_ENV=development
PORT=5000


================================================================================
END: D:\QiEOS\QiAllyPortal\README.md
================================================================================


================================================================================
FILE: D:\QiEOS\QiAllyPortal\replit.md
================================================================================

# QiAlly Portal - Multi-Tenant Client Portal

## Overview

QiAlly Portal is a comprehensive multi-tenant client portal platform designed for service providers to manage client relationships through AI-powered knowledge bases, real-time collaboration, and intelligent project management. The system features secure tenant isolation with customizable branding, RAG-enabled document chat using OpenAI GPT-5, WebSocket-powered real-time messaging, Stripe payment integration, and modular feature flags for client access control.

## User Preferences

Preferred communication style: Simple, everyday language.

## System Architecture

### Frontend Architecture
- **Framework Stack**: React 19 with TypeScript, Vite build system, TailwindCSS with Framer Motion for animations
- **Routing**: Wouter (lightweight React Router alternative) for client-side navigation
- **State Management**: React Query (TanStack Query) for server state and API caching, React Context for authentication state
- **Component Library**: Radix UI components with shadcn/ui styling system for consistent design
- **Design System**: Glassmorphism UI with responsive mobile-first approach, CSS variables for theming

### Backend Architecture
- **Runtime**: Node.js with Express.js framework
- **Data Layer**: In-memory storage with database-ready interface, designed for easy PostgreSQL migration
- **Multi-Tenancy**: Client slug-based tenant isolation with secure data separation
- **Real-Time Communication**: WebSocket server for live messaging and notifications
- **Session Management**: Simple token-based authentication with in-memory session storage

### Authentication & Authorization
- **Authentication**: Email/password with session-based tokens
- **Authorization**: Role-based access control (admin, team_member, client_user)
- **Tenant Security**: Client slug-based data isolation ensuring users only access their tenant's data
- **Admin Features**: "View as client" functionality for administrative oversight

### AI Integration
- **RAG System**: OpenAI GPT-5 integration for intelligent document Q&A
- **Vector Search**: Document embedding and similarity search for knowledge base queries
- **Context Management**: Configurable context file limits and response styling per client
- **Knowledge Base**: File-based markdown system with categorized access controls

### Payment Processing
- **Stripe Integration**: Complete payment processing with Elements for secure card handling
- **Invoice Management**: Automated invoice generation and payment tracking
- **Subscription Support**: Stripe customer and subscription management
- **Payment Intent Flow**: Secure payment confirmation with webhook handling

### Project Management
- **Status Tracking**: Multi-stage project workflow (pending, in_progress, completed, cancelled)
- **Progress Visualization**: Percentage-based progress tracking with visual indicators
- **Client Communication**: Integrated messaging tied to specific projects
- **Due Date Management**: Timeline tracking with automated notifications

### Knowledge Base System
- **File Organization**: Hierarchical category structure with markdown content
- **Access Control**: Per-file visibility settings (public/private) with admin override
- **Search Functionality**: Full-text search with Fuse.js integration
- **AI Chat Interface**: Contextual chatbot that references knowledge base content
- **Version Control**: File update tracking with timestamp management

### Real-Time Features
- **WebSocket Implementation**: Persistent connections for live updates
- **Message Synchronization**: Real-time message delivery with read status tracking
- **Notification System**: Live alerts for project updates, new messages, and system events
- **Connection Management**: Automatic reconnection and connection state monitoring

### UI/UX Design Patterns
- **Glassmorphism**: Modern translucent design with backdrop blur effects
- **Responsive Design**: Mobile-first approach with breakpoint-specific layouts
- **Animation System**: Framer Motion for smooth transitions and micro-interactions
- **Accessibility**: ARIA labels, keyboard navigation, and semantic HTML structure
- **Loading States**: Comprehensive loading indicators and skeleton screens

## External Dependencies

### Core Services
- **OpenAI GPT-5**: Latest AI model for RAG-enabled knowledge base chat and intelligent document processing
- **Stripe**: Payment processing platform for invoice management and subscription billing
- **WebSocket Protocol**: Real-time bidirectional communication for live messaging

### Database & Storage
- **PostgreSQL**: Primary database (configured via Drizzle ORM, currently using in-memory storage)
- **Neon Database**: Serverless PostgreSQL provider integration ready
- **File Storage**: Local file system for knowledge base markdown files and documents

### Development & Build Tools
- **TypeScript**: Type safety across frontend and backend
- **Vite**: Fast development server and optimized production builds
- **Drizzle ORM**: Type-safe database interactions with migration support
- **ESBuild**: Server-side bundling for production deployment

### UI Component Libraries
- **Radix UI**: Accessible component primitives for complex UI patterns
- **Lucide Icons**: Consistent iconography throughout the application
- **shadcn/ui**: Pre-built component library built on Radix UI
- **TailwindCSS**: Utility-first CSS framework for rapid styling

### Monitoring & Analytics
- **Replit Integration**: Development environment with runtime error overlay
- **Console Logging**: Structured logging for API requests and WebSocket events
- **Error Boundaries**: React error catching with graceful fallbacks

### Future Integrations
- **Supabase**: Prepared for migration from in-memory storage to Supabase backend
- **WebRTC**: Video calling capabilities for enhanced client communication
- **CDN Integration**: Asset delivery optimization for production deployments

================================================================================
END: D:\QiEOS\QiAllyPortal\replit.md
================================================================================


================================================================================
FILE: D:\QiEOS\QiAllyPortal\tailwind.config.ts
================================================================================

import type { Config } from "tailwindcss";

export default {
  darkMode: ["class"],
  content: ["./client/index.html", "./client/src/**/*.{js,jsx,ts,tsx}"],
  theme: {
    extend: {
      borderRadius: {
        lg: "var(--radius)",
        md: "calc(var(--radius) - 2px)",
        sm: "calc(var(--radius) - 4px)",
      },
      colors: {
        background: "var(--background)",
        foreground: "var(--foreground)",
        card: {
          DEFAULT: "var(--card)",
          foreground: "var(--card-foreground)",
        },
        popover: {
          DEFAULT: "var(--popover)",
          foreground: "var(--popover-foreground)",
        },
        primary: {
          DEFAULT: "var(--primary)",
          foreground: "var(--primary-foreground)",
        },
        secondary: {
          DEFAULT: "var(--secondary)",
          foreground: "var(--secondary-foreground)",
        },
        muted: {
          DEFAULT: "var(--muted)",
          foreground: "var(--muted-foreground)",
        },
        accent: {
          DEFAULT: "var(--accent)",
          foreground: "var(--accent-foreground)",
        },
        destructive: {
          DEFAULT: "var(--destructive)",
          foreground: "var(--destructive-foreground)",
        },
        border: "var(--border)",
        input: "var(--input)",
        ring: "var(--ring)",
        chart: {
          "1": "var(--chart-1)",
          "2": "var(--chart-2)",
          "3": "var(--chart-3)",
          "4": "var(--chart-4)",
          "5": "var(--chart-5)",
        },
        sidebar: {
          DEFAULT: "var(--sidebar)",
          foreground: "var(--sidebar-foreground)",
          primary: "var(--sidebar-primary)",
          "primary-foreground": "var(--sidebar-primary-foreground)",
          accent: "var(--sidebar-accent)",
          "accent-foreground": "var(--sidebar-accent-foreground)",
          border: "var(--sidebar-border)",
          ring: "var(--sidebar-ring)",
        },
      },
      fontFamily: {
        sans: ["var(--font-sans)"],
        serif: ["var(--font-serif)"],
        mono: ["var(--font-mono)"],
      },
      keyframes: {
        "accordion-down": {
          from: {
            height: "0",
          },
          to: {
            height: "var(--radix-accordion-content-height)",
          },
        },
        "accordion-up": {
          from: {
            height: "var(--radix-accordion-content-height)",
          },
          to: {
            height: "0",
          },
        },
      },
      animation: {
        "accordion-down": "accordion-down 0.2s ease-out",
        "accordion-up": "accordion-up 0.2s ease-out",
      },
    },
  },
  plugins: [require("tailwindcss-animate"), require("@tailwindcss/typography")],
} satisfies Config;


================================================================================
END: D:\QiEOS\QiAllyPortal\tailwind.config.ts
================================================================================


================================================================================
FILE: D:\QiEOS\QiAllyPortal\tsconfig.json
================================================================================

{
  "include": ["client/src/**/*", "shared/**/*", "server/**/*"],
  "exclude": ["node_modules", "build", "dist", "**/*.test.ts"],
  "compilerOptions": {
    "incremental": true,
    "tsBuildInfoFile": "./node_modules/typescript/tsbuildinfo",
    "noEmit": true,
    "module": "ESNext",
    "strict": true,
    "lib": ["esnext", "dom", "dom.iterable"],
    "jsx": "preserve",
    "esModuleInterop": true,
    "skipLibCheck": true,
    "allowImportingTsExtensions": true,
    "moduleResolution": "bundler",
    "baseUrl": ".",
    "types": ["node", "vite/client"],
    "paths": {
      "@/*": ["./client/src/*"],
      "@shared/*": ["./shared/*"]
    }
  }
}


================================================================================
END: D:\QiEOS\QiAllyPortal\tsconfig.json
================================================================================


================================================================================
FILE: D:\QiEOS\QiAllyPortal\vite.config.ts
================================================================================

import { defineConfig } from "vite";
import react from "@vitejs/plugin-react";
import path from "path";
import runtimeErrorOverlay from "@replit/vite-plugin-runtime-error-modal";

export default defineConfig({
  plugins: [
    react(),
    runtimeErrorOverlay(),
    ...(process.env.NODE_ENV !== "production" &&
    process.env.REPL_ID !== undefined
      ? [
          await import("@replit/vite-plugin-cartographer").then((m) =>
            m.cartographer(),
          ),
        ]
      : []),
  ],
  resolve: {
    alias: {
      "@": path.resolve(import.meta.dirname, "client", "src"),
      "@shared": path.resolve(import.meta.dirname, "shared"),
      "@assets": path.resolve(import.meta.dirname, "attached_assets"),
    },
  },
  root: path.resolve(import.meta.dirname, "client"),
  build: {
    outDir: path.resolve(import.meta.dirname, "dist/public"),
    emptyOutDir: true,
  },
  server: {
    fs: {
      strict: true,
      deny: ["**/.*"],
    },
  },
});


================================================================================
END: D:\QiEOS\QiAllyPortal\vite.config.ts
================================================================================


================================================================================
FILE: D:\QiEOS\QiAllyPortal\attached_assets\Pasted-Build-me-a-full-stack-modular-repo-for-the-QiAlly-Portal-with-these-specs-Frontend-F-1756676752783_1756676752784.txt
================================================================================

Build me a full-stack modular repo for the **QiAlly Portal** with these specs:

# 🌐 Frontend
- Framework: React 19 + Vite + TailwindCSS + Framer Motion
- Routing: React Router v7
- Structure:
  /src
    /components       → reusable UI (auth, layout, KB viewer, etc.)
    /pages            → Home, Dashboard, AdminPanel, KB, Messages, Projects
    /context          → UserContext for auth state
    /lib              → supabase.js, auth.js, kbApi.js, staticKbApi.js
    /utils            → helpers like auth guards
    App.jsx + main.jsx

- Features:
  - Public landing page (glassmorphism UI, responsive)
  - Supabase authentication (email/password)
  - Role-based access routes (admin, team_member, client_user)
  - Tenant-aware dashboards (each client sees only their KB + data)

# 📚 Knowledge Base System
- Directory: /kb-content/{client-slug}/*.md
- Config: kb-config.json mapping clients → members + access rules
- Scripts in /scripts:
  - build-kb.js → converts markdown to static HTML + JSON (search-index.json per client)
  - deploy-kb.js → deploy to dist/public/kb
- Output: /public/kb/{client-slug}/index.html with Fuse.js search + Tailwind styling
- Access control: access-control.json generated at build with members + public/private flags

# 🗄️ Backend (Supabase)
- Profiles table with id, email, client_slug, role
- kb_files table with client_slug, path, title, tags, visibility
- Row-Level Security:
  - users only see their client_slug
  - admins can see all
- Supabase Storage: private bucket for KB + documents

# 📦 Scripts
- directory_mapper.py → outputs repo tree
- code_extractor.py   → outputs all code for audit
- database_manager.py → SQLite mirror for local dev

# 🛠️ Dev / Ops
- package.json scripts:
  dev, build, build:kb, build:all, deploy:kb, deploy:kb-full, preview, lint
- ESLint, PostCSS, Tailwind config
- MIT LICENSE, README.md, SEED_FILE.md (overview + dev plan)
- Deployment: Cloudflare Pages (npm run build:all → dist)

# 📂 Final Directory Layout
qiportal-client/
├── apps/               # optional per-client wrappers
├── kb-content/         # markdown source per client
├── public/kb/          # static KB output
├── scripts/            # build + deploy scripts
├── sql/                # Supabase + SQLite schema + policies
├── src/                # React app
│   ├── components/
│   ├── pages/
│   ├── context/
│   ├── lib/
│   └── utils/
├── index.html
├── kb-config.json
├── package.json
├── README.md
└── vite.config.js

# ✅ Deliverables
- Fully working dev server (`npm run dev`)
- Static KB build + deploy working (`npm run build:kb && npm run deploy:kb`)
- Supabase auth + RLS integration
- Clean modular structure (easy to extend with Documents/Messages/Projects later)

================================================================================
END: D:\QiEOS\QiAllyPortal\attached_assets\Pasted-Build-me-a-full-stack-modular-repo-for-the-QiAlly-Portal-with-these-specs-Frontend-F-1756676752783_1756676752784.txt
================================================================================


================================================================================
FILE: D:\QiEOS\QiAllyPortal\client\index.html
================================================================================

<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1" />
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Architects+Daughter&family=DM+Sans:ital,opsz,wght@0,9..40,100..1000;1,9..40,100..1000&family=Fira+Code:wght@300..700&family=Geist+Mono:wght@100..900&family=Geist:wght@100..900&family=IBM+Plex+Mono:ital,wght@0,100;0,200;0,300;0,400;0,500;0,600;0,700;1,100;1,200;1,300;1,400;1,500;1,600;1,700&family=IBM+Plex+Sans:ital,wght@0,100..700;1,100..700&family=Inter:ital,opsz,wght@0,14..32,100..900;1,14..32,100..900&family=JetBrains+Mono:ital,wght@0,100..800;1,100..800&family=Libre+Baskerville:ital,wght@0,400;0,700;1,400&family=Lora:ital,wght@0,400..700;1,400..700&family=Merriweather:ital,opsz,wght@0,18..144,300..900;1,18..144,300..900&family=Montserrat:ital,wght@0,100..900;1,100..900&family=Open+Sans:ital,wght@0,300..800;1,300..800&family=Outfit:wght@100..900&family=Oxanium:wght@200..800&family=Playfair+Display:ital,wght@0,400..900;1,400..900&family=Plus+Jakarta+Sans:ital,wght@0,200..800;1,200..800&family=Poppins:ital,wght@0,100;0,200;0,300;0,400;0,500;0,600;0,700;0,800;0,900;1,100;1,200;1,300;1,400;1,500;1,600;1,700;1,800;1,900&family=Roboto+Mono:ital,wght@0,100..700;1,100..700&family=Roboto:ital,wght@0,100..900;1,100..900&family=Source+Code+Pro:ital,wght@0,200..900;1,200..900&family=Source+Serif+4:ital,opsz,wght@0,8..60,200..900;1,8..60,200..900&family=Space+Grotesk:wght@300..700&family=Space+Mono:ital,wght@0,400;0,700;1,400;1,700&display=swap" rel="stylesheet">
  </head>
  <body>
    <div id="root"></div>
    <script type="module" src="/src/main.tsx"></script>
    <!-- This is a replit script which adds a banner on the top of the page when opened in development mode outside the replit environment -->
    <script type="text/javascript" src="https://replit.com/public/js/replit-dev-banner.js"></script>
  </body>
</html>

================================================================================
END: D:\QiEOS\QiAllyPortal\client\index.html
================================================================================


================================================================================
FILE: D:\QiEOS\QiAllyPortal\client\src\App.tsx
================================================================================

import { Switch, Route } from "wouter";
import { queryClient } from "./lib/queryClient";
import { QueryClientProvider } from "@tanstack/react-query";
import { Toaster } from "@/components/ui/toaster";
import { TooltipProvider } from "@/components/ui/tooltip";
import { UserProvider } from "@/context/UserContext";
import NotFound from "@/pages/not-found";
import Landing from "@/pages/landing";
import AdminDashboard from "@/pages/admin-dashboard";
import ClientDashboard from "@/pages/client-dashboard";
import KnowledgeBase from "@/pages/knowledge-base";
import Messaging from "@/pages/messaging";
import InvoiceManagement from "@/pages/invoice-management";
import Checkout from "@/pages/checkout";

function Router() {
  return (
    <Switch>
      <Route path="/" component={Landing} />
      <Route path="/admin" component={AdminDashboard} />
      <Route path="/dashboard" component={ClientDashboard} />
      <Route path="/knowledge-base" component={KnowledgeBase} />
      <Route path="/messages" component={Messaging} />
      <Route path="/invoices" component={InvoiceManagement} />
      <Route path="/checkout/:invoiceId?" component={Checkout} />
      <Route component={NotFound} />
    </Switch>
  );
}

function App() {
  return (
    <QueryClientProvider client={queryClient}>
      <UserProvider>
        <TooltipProvider>
          <Toaster />
          <Router />
        </TooltipProvider>
      </UserProvider>
    </QueryClientProvider>
  );
}

export default App;


================================================================================
END: D:\QiEOS\QiAllyPortal\client\src\App.tsx
================================================================================


================================================================================
FILE: D:\QiEOS\QiAllyPortal\client\src\index.css
================================================================================

@tailwind base;
@tailwind components;
@tailwind utilities;

:root {
  --background: hsl(0 0% 100%);
  --foreground: hsl(220 100% 25%);
  --card: hsl(0 0% 100%);
  --card-foreground: hsl(220 100% 25%);
  --popover: hsl(0 0% 100%);
  --popover-foreground: hsl(220 100% 25%);
  --primary: hsl(220 100% 25%);
  --primary-foreground: hsl(0 0% 100%);
  --secondary: hsl(215 27% 95%);
  --secondary-foreground: hsl(220 100% 25%);
  --muted: hsl(215 27% 95%);
  --muted-foreground: hsl(220 100% 40%);
  --accent: hsl(270 100% 35%);
  --accent-foreground: hsl(0 0% 100%);
  --destructive: hsl(0 84% 60%);
  --destructive-foreground: hsl(0 0% 100%);
  --border: hsl(214 32% 91%);
  --input: hsl(214 32% 91%);
  --ring: hsl(220 100% 25%);
  --chart-1: hsl(236 87% 64%);
  --chart-2: hsl(159.7826 100% 36.0784%);
  --chart-3: hsl(42.0290 92.8251% 56.2745%);
  --chart-4: hsl(147.1429 78.5047% 41.9608%);
  --chart-5: hsl(341.4894 75.2000% 50.9804%);
  --sidebar: hsl(0 0% 100%);
  --sidebar-foreground: hsl(224 14% 15%);
  --sidebar-primary: hsl(236 87% 64%);
  --sidebar-primary-foreground: hsl(0 0% 100%);
  --sidebar-accent: hsl(270 81% 74%);
  --sidebar-accent-foreground: hsl(224 14% 15%);
  --sidebar-border: hsl(214 32% 91%);
  --sidebar-ring: hsl(236 87% 64%);
  --font-sans: "Inter", -apple-system, BlinkMacSystemFont, sans-serif;
  --font-serif: Georgia, serif;
  --font-mono: Menlo, monospace;
  --radius: 0.5rem;
  --shadow-2xs: 0px 2px 0px 0px hsl(236 87% 64% / 0.00);
  --shadow-xs: 0px 2px 0px 0px hsl(236 87% 64% / 0.00);
  --shadow-sm: 0px 2px 0px 0px hsl(236 87% 64% / 0.00), 0px 1px 2px -1px hsl(236 87% 64% / 0.00);
  --shadow: 0px 2px 0px 0px hsl(236 87% 64% / 0.00), 0px 1px 2px -1px hsl(236 87% 64% / 0.00);
  --shadow-md: 0px 2px 0px 0px hsl(236 87% 64% / 0.00), 0px 2px 4px -1px hsl(236 87% 64% / 0.00);
  --shadow-lg: 0px 2px 0px 0px hsl(236 87% 64% / 0.00), 0px 4px 6px -1px hsl(236 87% 64% / 0.00);
  --shadow-xl: 0px 2px 0px 0px hsl(236 87% 64% / 0.00), 0px 8px 10px -1px hsl(236 87% 64% / 0.00);
  --shadow-2xl: 0px 2px 0px 0px hsl(236 87% 64% / 0.00);
  --tracking-normal: 0em;
  --spacing: 0.25rem;
}

.dark {
  --background: hsl(224 15% 8%);
  --foreground: hsl(213 31% 91%);
  --card: hsl(224 12% 11%);
  --card-foreground: hsl(213 31% 91%);
  --popover: hsl(224 12% 11%);
  --popover-foreground: hsl(213 31% 91%);
  --primary: hsl(220 100% 25%);
  --primary-foreground: hsl(0 0% 100%);
  --secondary: hsl(223 12% 18%);
  --secondary-foreground: hsl(213 31% 91%);
  --muted: hsl(223 12% 18%);
  --muted-foreground: hsl(218 11% 65%);
  --accent: hsl(270 100% 35%);
  --accent-foreground: hsl(0 0% 100%);
  --destructive: hsl(0 62% 30%);
  --destructive-foreground: hsl(0 85% 97%);
  --border: hsl(223 12% 18%);
  --input: hsl(223 12% 18%);
  --ring: hsl(220 100% 25%);
  --chart-1: hsl(236 87% 64%);
  --chart-2: hsl(159.7826 100% 36.0784%);
  --chart-3: hsl(42.0290 92.8251% 56.2745%);
  --chart-4: hsl(147.1429 78.5047% 41.9608%);
  --chart-5: hsl(341.4894 75.2000% 50.9804%);
  --sidebar: hsl(224 12% 11%);
  --sidebar-foreground: hsl(213 31% 91%);
  --sidebar-primary: hsl(236 87% 64%);
  --sidebar-primary-foreground: hsl(0 0% 100%);
  --sidebar-accent: hsl(270 81% 74%);
  --sidebar-accent-foreground: hsl(224 14% 15%);
  --sidebar-border: hsl(223 12% 18%);
  --sidebar-ring: hsl(236 87% 64%);
  --font-sans: "Inter", -apple-system, BlinkMacSystemFont, sans-serif;
  --font-serif: Georgia, serif;
  --font-mono: Menlo, monospace;
  --radius: 0.5rem;
  --shadow-2xs: 0px 2px 0px 0px hsl(236 87% 64% / 0.00);
  --shadow-xs: 0px 2px 0px 0px hsl(236 87% 64% / 0.00);
  --shadow-sm: 0px 2px 0px 0px hsl(236 87% 64% / 0.00), 0px 1px 2px -1px hsl(236 87% 64% / 0.00);
  --shadow: 0px 2px 0px 0px hsl(236 87% 64% / 0.00), 0px 1px 2px -1px hsl(236 87% 64% / 0.00);
  --shadow-md: 0px 2px 0px 0px hsl(236 87% 64% / 0.00), 0px 2px 4px -1px hsl(236 87% 64% / 0.00);
  --shadow-lg: 0px 2px 0px 0px hsl(236 87% 64% / 0.00), 0px 4px 6px -1px hsl(236 87% 64% / 0.00);
  --shadow-xl: 0px 2px 0px 0px hsl(236 87% 64% / 0.00), 0px 8px 10px -1px hsl(236 87% 64% / 0.00);
  --shadow-2xl: 0px 2px 0px 0px hsl(236 87% 64% / 0.00);
}

.glassmorphism {
  background: rgba(255, 255, 255, 0.1);
  backdrop-filter: blur(10px);
  border: 1px solid rgba(255, 255, 255, 0.2);
}

.gradient-bg {
  background: linear-gradient(135deg, hsl(220 100% 25%) 0%, hsl(270 100% 35%) 100%);
}

/* Electric blue and plasma purple text effects */
.electric-text {
  background: linear-gradient(135deg, hsl(220 100% 25%) 0%, hsl(270 100% 35%) 100%);
  background-clip: text;
  -webkit-background-clip: text;
  -webkit-text-fill-color: transparent;
  text-shadow: 0 0 10px hsl(220 100% 50% / 0.3), 0 0 20px hsl(270 100% 50% / 0.2);
}

.plasma-shadow {
  text-shadow: 
    0 0 5px hsl(220 100% 50% / 0.4),
    0 0 10px hsl(270 100% 50% / 0.3),
    0 2px 4px hsl(220 100% 25% / 0.2);
}

.electric-glow {
  box-shadow: 
    0 0 10px hsl(220 100% 50% / 0.2),
    0 0 20px hsl(270 100% 50% / 0.1),
    0 4px 8px hsl(220 100% 25% / 0.1);
}

@layer base {
  * {
    @apply border-border;
  }

  body {
    @apply font-sans antialiased bg-background text-foreground;
    font-family: var(--font-sans);
  }

  h1, h2, h3 {
    @apply plasma-shadow;
  }
}


================================================================================
END: D:\QiEOS\QiAllyPortal\client\src\index.css
================================================================================


================================================================================
FILE: D:\QiEOS\QiAllyPortal\client\src\main.tsx
================================================================================

import { createRoot } from "react-dom/client";
import App from "./App";
import "./index.css";

createRoot(document.getElementById("root")!).render(<App />);


================================================================================
END: D:\QiEOS\QiAllyPortal\client\src\main.tsx
================================================================================


================================================================================
FILE: D:\QiEOS\QiAllyPortal\client\src\components\admin\AdminNavigation.tsx
================================================================================

import { useState } from "react";
import { Brain, Bell, Eye } from "lucide-react";
import { useUser } from "@/context/UserContext";
import { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from "@/components/ui/select";
import { Button } from "@/components/ui/button";

export function AdminNavigation() {
  const { user, logout } = useUser();
  const [selectedClient, setSelectedClient] = useState<string>("admin");

  const clients = [
    { value: "admin", label: "Admin View" },
    { value: "acme-corp", label: "Acme Corp" },
    { value: "tech-solutions", label: "Tech Solutions" },
    { value: "retail-plus", label: "Retail Plus" },
  ];

  const handleViewAsClient = () => {
    if (selectedClient !== "admin") {
      // Navigate to client view - this would be implemented with router
      console.log("Viewing as client:", selectedClient);
    }
  };

  return (
    <header className="bg-card border-b border-border">
      <div className="px-6 py-4">
        <div className="flex items-center justify-between">
          <div className="flex items-center space-x-4">
            <div className="w-8 h-8 bg-primary rounded-lg flex items-center justify-center">
              <Brain className="text-primary-foreground h-4 w-4" />
            </div>
            <h1 className="text-xl font-semibold text-foreground">QiAlly Admin</h1>
            
            {/* Client Switcher */}
            <div className="ml-8 flex items-center space-x-2">
              <span className="text-sm text-muted-foreground">Viewing as:</span>
              <Select value={selectedClient} onValueChange={setSelectedClient}>
                <SelectTrigger className="w-40" data-testid="select-client">
                  <SelectValue />
                </SelectTrigger>
                <SelectContent>
                  {clients.map((client) => (
                    <SelectItem key={client.value} value={client.value}>
                      {client.label}
                    </SelectItem>
                  ))}
                </SelectContent>
              </Select>
              <Button 
                onClick={handleViewAsClient}
                size="sm"
                variant="secondary"
                disabled={selectedClient === "admin"}
                data-testid="button-viewasclient"
              >
                <Eye className="mr-1 h-4 w-4" /> View as Client
              </Button>
            </div>
          </div>
          
          <div className="flex items-center space-x-4">
            <button className="relative p-2 text-muted-foreground hover:text-foreground" data-testid="button-notifications">
              <Bell className="h-5 w-5" />
              <span className="absolute -top-1 -right-1 w-3 h-3 bg-destructive rounded-full"></span>
            </button>
            <div className="flex items-center space-x-2">
              <div className="w-8 h-8 bg-primary rounded-full flex items-center justify-center">
                <span className="text-primary-foreground text-sm font-medium">
                  {user?.name?.charAt(0) || "U"}
                </span>
              </div>
              <span className="text-sm font-medium" data-testid="text-username">{user?.name}</span>
              <Button 
                onClick={logout} 
                variant="ghost" 
                size="sm"
                data-testid="button-logout"
              >
                Logout
              </Button>
            </div>
          </div>
        </div>
      </div>
    </header>
  );
}


================================================================================
END: D:\QiEOS\QiAllyPortal\client\src\components\admin\AdminNavigation.tsx
================================================================================


================================================================================
FILE: D:\QiEOS\QiAllyPortal\client\src\components\admin\AdminSidebar.tsx
================================================================================

import { 
  Home, 
  Building, 
  CheckSquare, 
  Book, 
  MessageSquare, 
  FileText, 
  Settings, 
  UserCog, 
  ClipboardList 
} from "lucide-react";

export function AdminSidebar() {
  const menuItems = [
    { icon: Home, label: "Overview", href: "#overview", active: true },
    { icon: Building, label: "Clients", href: "#clients" },
    { icon: CheckSquare, label: "Projects", href: "#projects" },
    { icon: Book, label: "Knowledge Base", href: "#knowledge-base" },
    { icon: MessageSquare, label: "Messages", href: "#messages", badge: "5" },
    { icon: FileText, label: "Invoices", href: "#invoices" },
    { icon: Settings, label: "Settings", href: "#settings" },
  ];

  const adminTools = [
    { icon: UserCog, label: "User Management", href: "#user-management" },
    { icon: ClipboardList, label: "System Logs", href: "#system-logs" },
  ];

  return (
    <aside className="w-64 bg-card border-r border-border h-screen sticky top-0">
      <nav className="p-6">
        <div className="space-y-2">
          {menuItems.map((item) => (
            <a
              key={item.href}
              href={item.href}
              className={`flex items-center space-x-3 px-3 py-2 rounded-lg transition-colors ${
                item.active 
                  ? "bg-primary text-primary-foreground" 
                  : "text-muted-foreground hover:text-foreground hover:bg-secondary"
              }`}
              data-testid={`nav-${item.label.toLowerCase().replace(' ', '-')}`}
            >
              <item.icon className="h-5 w-5" />
              <span>{item.label}</span>
              {item.badge && (
                <span className="ml-auto bg-destructive text-destructive-foreground text-xs px-2 py-1 rounded-full">
                  {item.badge}
                </span>
              )}
            </a>
          ))}
        </div>
        
        <div className="mt-8 pt-8 border-t border-border">
          <h4 className="text-xs font-medium text-muted-foreground uppercase tracking-wider mb-3">
            Admin Tools
          </h4>
          <div className="space-y-2">
            {adminTools.map((item) => (
              <a
                key={item.href}
                href={item.href}
                className="flex items-center space-x-3 px-3 py-2 rounded-lg text-muted-foreground hover:text-foreground hover:bg-secondary transition-colors"
                data-testid={`admin-${item.label.toLowerCase().replace(' ', '-')}`}
              >
                <item.icon className="h-5 w-5" />
                <span>{item.label}</span>
              </a>
            ))}
          </div>
        </div>
      </nav>
    </aside>
  );
}


================================================================================
END: D:\QiEOS\QiAllyPortal\client\src\components\admin\AdminSidebar.tsx
================================================================================


================================================================================
FILE: D:\QiEOS\QiAllyPortal\client\src\components\auth\AuthProvider.tsx
================================================================================

import { useState } from "react";
import { useUser } from "@/context/UserContext";
import { Button } from "@/components/ui/button";
import { Input } from "@/components/ui/input";
import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card";
import { Label } from "@/components/ui/label";
import { useToast } from "@/hooks/use-toast";

interface AuthProviderProps {
  mode: "login" | "register";
  onClose: () => void;
}

export function AuthProvider({ mode, onClose }: AuthProviderProps) {
  const [email, setEmail] = useState("");
  const [password, setPassword] = useState("");
  const [name, setName] = useState("");
  const [loading, setLoading] = useState(false);
  const { login } = useUser();
  const { toast } = useToast();

  const handleSubmit = async (e: React.FormEvent) => {
    e.preventDefault();
    setLoading(true);

    try {
      if (mode === "login") {
        await login(email, password);
      } else {
        // For demo, we'll implement register later
        await login(email, password);
      }
      onClose();
      toast({
        title: "Success",
        description: `Successfully ${mode === "login" ? "logged in" : "registered"}`,
      });
    } catch (error: any) {
      toast({
        title: "Error",
        description: error.message || `Failed to ${mode}`,
        variant: "destructive",
      });
    } finally {
      setLoading(false);
    }
  };

  return (
    <Card className="w-full max-w-md mx-auto" data-testid="auth-card">
      <CardHeader>
        <CardTitle data-testid="auth-title">
          {mode === "login" ? "Sign In" : "Create Account"}
        </CardTitle>
      </CardHeader>
      <CardContent>
        <form onSubmit={handleSubmit} className="space-y-4">
          {mode === "register" && (
            <div className="space-y-2">
              <Label htmlFor="name">Full Name</Label>
              <Input
                id="name"
                type="text"
                value={name}
                onChange={(e) => setName(e.target.value)}
                required
                data-testid="input-name"
              />
            </div>
          )}
          
          <div className="space-y-2">
            <Label htmlFor="email">Email</Label>
            <Input
              id="email"
              type="email"
              value={email}
              onChange={(e) => setEmail(e.target.value)}
              required
              data-testid="input-email"
            />
          </div>
          
          <div className="space-y-2">
            <Label htmlFor="password">Password</Label>
            <Input
              id="password"
              type="password"
              value={password}
              onChange={(e) => setPassword(e.target.value)}
              required
              data-testid="input-password"
            />
          </div>
          
          <div className="flex space-x-4">
            <Button 
              type="submit" 
              disabled={loading} 
              className="flex-1"
              data-testid="button-submit"
            >
              {loading ? "Loading..." : mode === "login" ? "Sign In" : "Create Account"}
            </Button>
            <Button 
              type="button" 
              variant="outline" 
              onClick={onClose}
              data-testid="button-cancel"
            >
              Cancel
            </Button>
          </div>
        </form>
        
        <div className="mt-4 text-center text-sm text-muted-foreground">
          Demo credentials: admin@qially.com / password or sarah@acmecorp.com / password
        </div>
      </CardContent>
    </Card>
  );
}


================================================================================
END: D:\QiEOS\QiAllyPortal\client\src\components\auth\AuthProvider.tsx
================================================================================


================================================================================
FILE: D:\QiEOS\QiAllyPortal\client\src\components\client\ClientNavigation.tsx
================================================================================

import { Brain, Bot, Bell } from "lucide-react";
import { useUser } from "@/context/UserContext";
import { Button } from "@/components/ui/button";

export function ClientNavigation() {
  const { user, logout } = useUser();

  const modules = [
    { key: "KB", active: true },
    { key: "Projects", active: true },
    { key: "Messages", active: true },
    { key: "Docs", active: false },
  ];

  return (
    <header className="bg-card border-b border-border">
      <div className="px-6 py-4">
        <div className="flex items-center justify-between">
          <div className="flex items-center space-x-4">
            <div className="w-8 h-8 bg-primary rounded-lg flex items-center justify-center">
              <Brain className="text-primary-foreground h-4 w-4" />
            </div>
            <h1 className="text-xl font-semibold text-foreground">
              {user?.clientSlug ? `${user.clientSlug.charAt(0).toUpperCase() + user.clientSlug.slice(1).replace('-', ' ')} Portal` : "Client Portal"}
            </h1>
            
            {/* Module Toggle Indicators */}
            <div className="hidden lg:flex items-center space-x-2 ml-8">
              <span className="text-xs text-muted-foreground">Modules:</span>
              <div className="flex space-x-1">
                {modules.map((module) => (
                  <span 
                    key={module.key}
                    className={`px-2 py-1 text-xs rounded-md ${
                      module.active 
                        ? "bg-primary/10 text-primary" 
                        : "bg-muted text-muted-foreground"
                    }`}
                    data-testid={`module-${module.key.toLowerCase()}`}
                  >
                    {module.key}
                  </span>
                ))}
              </div>
            </div>
          </div>
          
          <div className="flex items-center space-x-4">
            <button className="relative p-2 text-muted-foreground hover:text-foreground" data-testid="button-openchat">
              <Bot className="h-5 w-5" />
              <span className="absolute -top-1 -right-1 w-3 h-3 bg-accent rounded-full"></span>
            </button>
            <button className="relative p-2 text-muted-foreground hover:text-foreground" data-testid="button-notifications">
              <Bell className="h-5 w-5" />
            </button>
            <div className="flex items-center space-x-2">
              <div className="w-8 h-8 bg-accent rounded-full flex items-center justify-center">
                <span className="text-accent-foreground text-sm font-medium">
                  {user?.name?.charAt(0) || "U"}
                </span>
              </div>
              <span className="text-sm font-medium" data-testid="text-username">{user?.name}</span>
              <Button 
                onClick={logout} 
                variant="ghost" 
                size="sm"
                data-testid="button-logout"
              >
                Logout
              </Button>
            </div>
          </div>
        </div>
      </div>
    </header>
  );
}


================================================================================
END: D:\QiEOS\QiAllyPortal\client\src\components\client\ClientNavigation.tsx
================================================================================


================================================================================
FILE: D:\QiEOS\QiAllyPortal\client\src\components\client\ClientSidebar.tsx
================================================================================

import { 
  Home, 
  CheckSquare, 
  Book, 
  MessageSquare, 
  FileText, 
  Lock,
  Plus,
  Phone
} from "lucide-react";

export function ClientSidebar() {
  const menuItems = [
    { icon: Home, label: "Dashboard", href: "#dashboard", active: true },
    { icon: CheckSquare, label: "My Projects", href: "#projects", badge: "3" },
    { icon: Book, label: "Knowledge Base", href: "#knowledge-base" },
    { icon: MessageSquare, label: "Messages", href: "#messages", badge: "2" },
    { icon: FileText, label: "Documents", href: "#documents", disabled: true },
    { icon: FileText, label: "Invoices", href: "#invoices" },
  ];

  const quickActions = [
    { icon: Plus, label: "New Request", action: "newServiceRequest" },
    { icon: Phone, label: "Schedule Call", action: "scheduleCall" },
  ];

  return (
    <aside className="w-64 bg-card border-r border-border h-screen sticky top-0">
      <nav className="p-6">
        <div className="space-y-2">
          {menuItems.map((item) => (
            <a
              key={item.href}
              href={item.href}
              className={`flex items-center space-x-3 px-3 py-2 rounded-lg transition-colors ${
                item.disabled 
                  ? "opacity-50 cursor-not-allowed" 
                  : item.active 
                    ? "bg-primary text-primary-foreground" 
                    : "text-muted-foreground hover:text-foreground hover:bg-secondary"
              }`}
              data-testid={`nav-${item.label.toLowerCase().replace(' ', '-')}`}
            >
              <item.icon className="h-5 w-5" />
              <span>{item.label}</span>
              {item.disabled && <Lock className="h-3 w-3 ml-auto" />}
              {item.badge && !item.disabled && (
                <span className="ml-auto bg-destructive text-destructive-foreground text-xs px-2 py-1 rounded-full">
                  {item.badge}
                </span>
              )}
            </a>
          ))}
        </div>
        
        <div className="mt-8 pt-8 border-t border-border">
          <h4 className="text-xs font-medium text-muted-foreground uppercase tracking-wider mb-3">
            Quick Actions
          </h4>
          <div className="space-y-2">
            {quickActions.map((item) => (
              <button
                key={item.action}
                className="w-full flex items-center space-x-3 px-3 py-2 rounded-lg text-muted-foreground hover:text-foreground hover:bg-secondary transition-colors text-left"
                data-testid={`action-${item.action}`}
              >
                <item.icon className="h-5 w-5" />
                <span>{item.label}</span>
              </button>
            ))}
          </div>
        </div>
      </nav>
    </aside>
  );
}


================================================================================
END: D:\QiEOS\QiAllyPortal\client\src\components\client\ClientSidebar.tsx
================================================================================


================================================================================
FILE: D:\QiEOS\QiAllyPortal\client\src\components\kb\AiChatSidebar.tsx
================================================================================

import { useState } from "react";
import { Bot, Send, User } from "lucide-react";
import { Button } from "@/components/ui/button";
import { Input } from "@/components/ui/input";
import { kbApi } from "@/lib/kbApi";
import { useUser } from "@/context/UserContext";
import { useToast } from "@/hooks/use-toast";

interface ChatMessage {
  id: string;
  type: "user" | "ai";
  content: string;
  sources?: Array<{ title: string; path: string }>;
  timestamp: Date;
}

export function AiChatSidebar() {
  const [messages, setMessages] = useState<ChatMessage[]>([
    {
      id: "1",
      type: "ai",
      content: "Hello! I can help you find information in your knowledge base. What would you like to know about your brand guidelines?",
      timestamp: new Date()
    }
  ]);
  const [inputMessage, setInputMessage] = useState("");
  const [isLoading, setIsLoading] = useState(false);
  const { user } = useUser();
  const { toast } = useToast();

  const handleSendMessage = async () => {
    if (!inputMessage.trim() || isLoading) return;

    const userMessage: ChatMessage = {
      id: Date.now().toString(),
      type: "user",
      content: inputMessage,
      timestamp: new Date()
    };

    setMessages(prev => [...prev, userMessage]);
    setInputMessage("");
    setIsLoading(true);

    try {
      const response = await kbApi.chatWithAi(inputMessage, user?.clientSlug);
      
      const aiMessage: ChatMessage = {
        id: (Date.now() + 1).toString(),
        type: "ai",
        content: response.response,
        sources: response.sources,
        timestamp: new Date()
      };

      setMessages(prev => [...prev, aiMessage]);
    } catch (error: any) {
      toast({
        title: "Error",
        description: error.message || "Failed to get AI response",
        variant: "destructive"
      });
    } finally {
      setIsLoading(false);
    }
  };

  const handleKeyPress = (e: React.KeyboardEvent) => {
    if (e.key === "Enter" && !e.shiftKey) {
      e.preventDefault();
      handleSendMessage();
    }
  };

  return (
    <div className="w-96 bg-card border-l border-border flex flex-col">
      {/* Chat Header */}
      <div className="p-4 border-b border-border">
        <div className="flex items-center space-x-3">
          <div className="w-8 h-8 bg-accent rounded-full flex items-center justify-center">
            <Bot className="text-accent-foreground h-4 w-4" />
          </div>
          <div>
            <h3 className="font-medium text-foreground">AI Assistant</h3>
            <p className="text-xs text-muted-foreground">Ask questions about your resources</p>
          </div>
        </div>
      </div>
      
      {/* Chat Messages */}
      <div className="flex-1 p-4 overflow-y-auto space-y-4" data-testid="chat-messages">
        {messages.map((message) => (
          <div key={message.id} className={`flex items-start space-x-3 ${message.type === "user" ? "flex-row-reverse" : ""}`}>
            <div className={`w-6 h-6 rounded-full flex items-center justify-center ${
              message.type === "user" ? "bg-primary" : "bg-accent"
            }`}>
              {message.type === "user" ? (
                <User className="text-primary-foreground h-3 w-3" />
              ) : (
                <Bot className="text-accent-foreground h-3 w-3" />
              )}
            </div>
            <div className={`flex-1 max-w-sm ${message.type === "user" ? "text-right" : ""}`}>
              <div className={`rounded-lg p-3 ${
                message.type === "user" 
                  ? "bg-primary text-primary-foreground" 
                  : "bg-secondary text-foreground"
              }`}>
                <p className="text-sm whitespace-pre-wrap">{message.content}</p>
                {message.sources && message.sources.length > 0 && (
                  <div className="mt-2 pt-2 border-t border-border/20">
                    <p className="text-xs opacity-75 mb-1">Sources:</p>
                    {message.sources.map((source, index) => (
                      <p key={index} className="text-xs opacity-75">
                        • {source.title}
                      </p>
                    ))}
                  </div>
                )}
              </div>
              <p className="text-xs text-muted-foreground mt-1">
                {message.timestamp.toLocaleTimeString()}
              </p>
            </div>
          </div>
        ))}
        {isLoading && (
          <div className="flex items-start space-x-3">
            <div className="w-6 h-6 bg-accent rounded-full flex items-center justify-center">
              <Bot className="text-accent-foreground h-3 w-3" />
            </div>
            <div className="flex-1 bg-secondary rounded-lg p-3">
              <div className="flex space-x-1">
                <div className="w-2 h-2 bg-muted-foreground rounded-full animate-bounce"></div>
                <div className="w-2 h-2 bg-muted-foreground rounded-full animate-bounce" style={{ animationDelay: "0.1s" }}></div>
                <div className="w-2 h-2 bg-muted-foreground rounded-full animate-bounce" style={{ animationDelay: "0.2s" }}></div>
              </div>
            </div>
          </div>
        )}
      </div>
      
      {/* Chat Input */}
      <div className="p-4 border-t border-border">
        <div className="flex space-x-2">
          <Input
            type="text"
            placeholder="Ask about your knowledge base..."
            value={inputMessage}
            onChange={(e) => setInputMessage(e.target.value)}
            onKeyPress={handleKeyPress}
            disabled={isLoading}
            className="flex-1"
            data-testid="input-chat-message"
          />
          <Button 
            onClick={handleSendMessage}
            disabled={!inputMessage.trim() || isLoading}
            data-testid="button-send-message"
          >
            <Send className="h-4 w-4" />
          </Button>
        </div>
      </div>
    </div>
  );
}


================================================================================
END: D:\QiEOS\QiAllyPortal\client\src\components\kb\AiChatSidebar.tsx
================================================================================


================================================================================
FILE: D:\QiEOS\QiAllyPortal\client\src\components\kb\KnowledgeBaseSidebar.tsx
================================================================================

import { useState } from "react";
import { Search } from "lucide-react";
import { Input } from "@/components/ui/input";

export function KnowledgeBaseSidebar() {
  const [searchQuery, setSearchQuery] = useState("");

  const categories = [
    {
      title: "Getting Started",
      articles: [
        { title: "Welcome to Your Portal", active: false },
        { title: "Brand Style Guide", active: true },
        { title: "Project Process Overview", active: false },
      ]
    },
    {
      title: "Design Resources", 
      articles: [
        { title: "Logo Guidelines", active: false },
        { title: "Color Palette", active: false },
        { title: "Typography System", active: false },
      ]
    },
    {
      title: "Communication",
      articles: [
        { title: "How to Submit Feedback", active: false },
        { title: "Scheduling Meetings", active: false },
        { title: "Emergency Contact Info", active: false },
      ]
    }
  ];

  return (
    <aside className="w-80 bg-card border-r border-border h-screen sticky top-0 overflow-y-auto">
      <div className="p-6">
        {/* Search */}
        <div className="relative mb-6">
          <Search className="absolute left-3 top-1/2 transform -translate-y-1/2 text-muted-foreground h-4 w-4" />
          <Input
            type="text"
            placeholder="Search articles..."
            value={searchQuery}
            onChange={(e) => setSearchQuery(e.target.value)}
            className="pl-10"
            data-testid="input-search-articles"
          />
        </div>
        
        {/* Categories */}
        <div className="space-y-4">
          {categories.map((category, categoryIndex) => (
            <div key={categoryIndex}>
              <h3 className="text-sm font-medium text-foreground mb-3">{category.title}</h3>
              <div className="space-y-1">
                {category.articles.map((article, articleIndex) => (
                  <a
                    key={articleIndex}
                    href="#article"
                    className={`block px-3 py-2 text-sm rounded-lg transition-colors ${
                      article.active
                        ? "text-primary bg-primary/10"
                        : "text-muted-foreground hover:text-foreground hover:bg-secondary"
                    }`}
                    data-testid={`article-link-${categoryIndex}-${articleIndex}`}
                  >
                    {article.title}
                  </a>
                ))}
              </div>
            </div>
          ))}
        </div>
      </div>
    </aside>
  );
}


================================================================================
END: D:\QiEOS\QiAllyPortal\client\src\components\kb\KnowledgeBaseSidebar.tsx
================================================================================


================================================================================
FILE: D:\QiEOS\QiAllyPortal\client\src\components\layout\FeatureGrid.tsx
================================================================================

import { Bot, Users, TrendingUp } from "lucide-react";

export function FeatureGrid() {
  const features = [
    {
      icon: Bot,
      title: "AI-Powered Knowledge Base",
      description: "RAG-enabled chatbots provide instant answers from your knowledge base with intelligent document search.",
    },
    {
      icon: Users,
      title: "Multi-Tenant Architecture",
      description: "Secure client isolation with customizable branding and feature flags for each tenant.",
    },
    {
      icon: TrendingUp,
      title: "Project Intelligence",
      description: "Real-time project tracking with progress visualization and automated client updates.",
    },
  ];

  return (
    <div className="relative z-10 px-6 pb-20">
      <div className="max-w-7xl mx-auto">
        <div className="grid md:grid-cols-3 gap-8">
          {features.map((feature, index) => (
            <div 
              key={index}
              className="glassmorphism rounded-2xl p-8 hover:bg-white/15 transition-all duration-300"
              data-testid={`feature-card-${index}`}
            >
              <div className="w-12 h-12 bg-white/20 rounded-xl flex items-center justify-center mb-6">
                <feature.icon className="text-white h-6 w-6" />
              </div>
              <h3 className="text-xl font-semibold text-white mb-4">{feature.title}</h3>
              <p className="text-white/70">{feature.description}</p>
            </div>
          ))}
        </div>
      </div>
    </div>
  );
}


================================================================================
END: D:\QiEOS\QiAllyPortal\client\src\components\layout\FeatureGrid.tsx
================================================================================


================================================================================
FILE: D:\QiEOS\QiAllyPortal\client\src\components\layout\HeroSection.tsx
================================================================================

import { useState } from "react";
import { Play } from "lucide-react";
import { Dialog, DialogContent } from "@/components/ui/dialog";
import { AuthProvider } from "@/components/auth/AuthProvider";

export function HeroSection() {
  const [showAuth, setShowAuth] = useState(false);

  const handleStartTrial = () => {
    setShowAuth(true);
  };

  return (
    <>
      <div className="relative z-10 px-6 py-20">
        <div className="max-w-7xl mx-auto text-center">
          <h1 className="text-5xl md:text-7xl font-bold text-white mb-6 leading-tight">
            Intelligent Client
            <br />
            <span className="electric-text">Portal Platform</span>
          </h1>
          
          <p className="text-xl text-white/80 mb-12 max-w-3xl mx-auto leading-relaxed">
            Streamline client relationships with AI-powered knowledge bases, real-time collaboration, 
            and intelligent project management. Built for modern service providers.
          </p>
          
          <div className="flex flex-col sm:flex-row gap-4 justify-center items-center">
            <button 
              onClick={handleStartTrial}
              className="bg-white text-primary px-8 py-4 rounded-xl font-semibold text-lg hover:bg-white/90 transition-all duration-200 shadow-xl"
              data-testid="button-starttrial"
            >
              Start Free Trial
            </button>
            <button 
              className="glassmorphism text-white px-8 py-4 rounded-xl font-semibold text-lg hover:bg-white/20 transition-all duration-200"
              data-testid="button-viewdemo"
            >
              <Play className="inline mr-2 h-4 w-4" /> View Demo
            </button>
          </div>
        </div>
      </div>

      <Dialog open={showAuth} onOpenChange={setShowAuth}>
        <DialogContent className="max-w-md p-0 bg-transparent border-0 shadow-none">
          <AuthProvider mode="register" onClose={() => setShowAuth(false)} />
        </DialogContent>
      </Dialog>
    </>
  );
}


================================================================================
END: D:\QiEOS\QiAllyPortal\client\src\components\layout\HeroSection.tsx
================================================================================


================================================================================
FILE: D:\QiEOS\QiAllyPortal\client\src\components\layout\PublicNavigation.tsx
================================================================================

import { useState } from "react";
import { Brain } from "lucide-react";
import { Dialog, DialogContent } from "@/components/ui/dialog";
import { AuthProvider } from "@/components/auth/AuthProvider";

export function PublicNavigation() {
  const [showAuth, setShowAuth] = useState(false);
  const [authMode, setAuthMode] = useState<"login" | "register">("login");

  const handleShowLogin = () => {
    setAuthMode("login");
    setShowAuth(true);
  };

  const handleShowSignup = () => {
    setAuthMode("register");
    setShowAuth(true);
  };

  return (
    <>
      <nav className="relative z-10 px-6 py-4">
        <div className="max-w-7xl mx-auto flex items-center justify-between">
          <div className="flex items-center space-x-2">
            <div className="w-8 h-8 bg-white/20 rounded-lg flex items-center justify-center glassmorphism">
              <Brain className="text-white h-5 w-5" />
            </div>
            <span className="text-xl font-bold text-white">QiAlly Portal</span>
          </div>
          
          <div className="hidden md:flex items-center space-x-8">
            <a href="#features" className="text-white/90 hover:text-white transition-colors">Features</a>
            <a href="#pricing" className="text-white/90 hover:text-white transition-colors">Pricing</a>
            <a href="#contact" className="text-white/90 hover:text-white transition-colors">Contact</a>
          </div>
          
          <div className="flex items-center space-x-4">
            <button 
              onClick={handleShowLogin}
              className="text-white/90 hover:text-white transition-colors"
              data-testid="button-signin"
            >
              Sign In
            </button>
            <button 
              onClick={handleShowSignup}
              className="bg-white/20 hover:bg-white/30 text-white px-6 py-2 rounded-lg glassmorphism transition-all duration-200"
              data-testid="button-getstarted"
            >
              Get Started
            </button>
          </div>
        </div>
      </nav>

      <Dialog open={showAuth} onOpenChange={setShowAuth}>
        <DialogContent className="max-w-md p-0 bg-transparent border-0 shadow-none">
          <AuthProvider mode={authMode} onClose={() => setShowAuth(false)} />
        </DialogContent>
      </Dialog>
    </>
  );
}


================================================================================
END: D:\QiEOS\QiAllyPortal\client\src\components\layout\PublicNavigation.tsx
================================================================================


================================================================================
FILE: D:\QiEOS\QiAllyPortal\client\src\components\messaging\MessageContent.tsx
================================================================================

import { Phone, Video, Info, Paperclip, Send } from "lucide-react";
import { Button } from "@/components/ui/button";
import { Textarea } from "@/components/ui/textarea";

interface Message {
  id: string;
  senderId: string;
  content: string;
  messageType: string;
  createdAt: string;
  isRead: boolean;
}

interface MessageContentProps {
  conversation: any;
  messages: Message[];
  currentUserId: string;
  messageInput: string;
  onMessageInputChange: (value: string) => void;
  onSendMessage: () => void;
  onKeyPress: (e: React.KeyboardEvent) => void;
  isLoading: boolean;
}

export function MessageContent({
  conversation,
  messages,
  currentUserId,
  messageInput,
  onMessageInputChange,
  onSendMessage,
  onKeyPress,
  isLoading
}: MessageContentProps) {
  return (
    <main className="flex-1 flex flex-col">
      {/* Conversation Header */}
      <header className="p-4 border-b border-border bg-card">
        <div className="flex items-center justify-between">
          <div className="flex items-center space-x-3">
            <div className="w-10 h-10 bg-primary rounded-full flex items-center justify-center">
              <span className="text-primary-foreground text-sm font-medium">
                {conversation?.participants?.[0]?.charAt(0) || "U"}
              </span>
            </div>
            <div>
              <h3 className="text-sm font-medium text-foreground" data-testid="conversation-participant">
                {conversation?.title || "Conversation"}
              </h3>
              <p className="text-xs text-muted-foreground">Online now</p>
            </div>
          </div>
          
          <div className="flex items-center space-x-2">
            <Button variant="ghost" size="sm" data-testid="button-start-call">
              <Phone className="h-4 w-4" />
            </Button>
            <Button variant="ghost" size="sm" data-testid="button-start-video-call">
              <Video className="h-4 w-4" />
            </Button>
            <Button variant="ghost" size="sm" data-testid="button-view-project-details">
              <Info className="h-4 w-4" />
            </Button>
          </div>
        </div>
      </header>
      
      {/* Messages */}
      <div className="flex-1 overflow-y-auto p-4 space-y-4" data-testid="messages-container">
        {messages.map((message) => (
          <div 
            key={message.id} 
            className={`flex items-start space-x-3 ${
              message.senderId === currentUserId ? "flex-row-reverse" : ""
            }`}
          >
            <div className={`w-8 h-8 rounded-full flex items-center justify-center ${
              message.senderId === currentUserId ? "bg-accent" : "bg-primary"
            }`}>
              <span className="text-white text-xs font-medium">
                {message.senderId === currentUserId ? "Y" : "T"}
              </span>
            </div>
            <div className={`flex-1 max-w-md ${message.senderId === currentUserId ? "text-right" : ""}`}>
              <div className={`rounded-lg p-3 ${
                message.senderId === currentUserId 
                  ? "bg-primary text-primary-foreground" 
                  : "bg-secondary text-foreground"
              }`}>
                <p className="text-sm whitespace-pre-wrap">{message.content}</p>
              </div>
              <p className={`text-xs text-muted-foreground mt-1 ${
                message.senderId === currentUserId ? "text-right" : ""
              }`}>
                {new Date(message.createdAt).toLocaleTimeString()}
              </p>
            </div>
          </div>
        ))}
      </div>
      
      {/* Message Input */}
      <div className="p-4 border-t border-border bg-card">
        <div className="flex items-end space-x-2">
          <Button variant="ghost" size="sm" data-testid="button-attach-file">
            <Paperclip className="h-4 w-4" />
          </Button>
          <div className="flex-1">
            <Textarea
              placeholder="Type your message..."
              value={messageInput}
              onChange={(e) => onMessageInputChange(e.target.value)}
              onKeyPress={onKeyPress}
              rows={1}
              className="resize-none"
              data-testid="textarea-message-input"
            />
          </div>
          <Button 
            onClick={onSendMessage}
            disabled={!messageInput.trim() || isLoading}
            data-testid="button-send-message"
          >
            <Send className="h-4 w-4" />
          </Button>
        </div>
      </div>
    </main>
  );
}


================================================================================
END: D:\QiEOS\QiAllyPortal\client\src\components\messaging\MessageContent.tsx
================================================================================


================================================================================
FILE: D:\QiEOS\QiAllyPortal\client\src\components\messaging\MessageSidebar.tsx
================================================================================

import { useState } from "react";
import { Search } from "lucide-react";
import { Input } from "@/components/ui/input";

export function MessageSidebar() {
  const [searchQuery, setSearchQuery] = useState("");

  const conversations = [
    {
      id: "1",
      participant: { name: "John (PM)", initials: "JD", color: "bg-primary" },
      lastMessage: "Updated the wireframes for your homepage. Please review when you have...",
      time: "2h",
      project: "Website Redesign",
      unread: true,
      projectColor: "text-primary"
    },
    {
      id: "2", 
      participant: { name: "Alice (Designer)", initials: "AL", color: "bg-accent" },
      lastMessage: "Brand color palette has been finalized. Check the KB for the style guide.",
      time: "1d",
      project: "Brand Guidelines",
      unread: false,
      projectColor: "text-accent"
    },
    {
      id: "3",
      participant: { name: "Team Chat", initials: "TC", color: "bg-green-500" },
      lastMessage: "Meeting scheduled for tomorrow at 2 PM EST",
      time: "2d",
      project: "General",
      unread: false,
      projectColor: "text-green-600"
    }
  ];

  return (
    <aside className="w-80 bg-card border-r border-border flex flex-col">
      <div className="p-4 border-b border-border">
        <h2 className="text-lg font-semibold text-foreground mb-3">Messages</h2>
        <div className="relative">
          <Search className="absolute left-3 top-1/2 transform -translate-y-1/2 text-muted-foreground h-4 w-4" />
          <Input
            type="text"
            placeholder="Search conversations..."
            value={searchQuery}
            onChange={(e) => setSearchQuery(e.target.value)}
            className="pl-10"
            data-testid="input-search-conversations"
          />
        </div>
      </div>
      
      <div className="flex-1 overflow-y-auto">
        <div className="space-y-1 p-2">
          {conversations.map((conversation) => (
            <div 
              key={conversation.id}
              className={`p-3 rounded-lg hover:bg-secondary cursor-pointer transition-colors ${
                conversation.unread ? "bg-primary/10 border-l-2 border-primary" : ""
              }`}
              data-testid={`conversation-${conversation.id}`}
            >
              <div className="flex items-center justify-between mb-2">
                <div className="flex items-center space-x-2">
                  <div className={`w-8 h-8 ${conversation.participant.color} rounded-full flex items-center justify-center`}>
                    <span className="text-white text-xs font-medium">{conversation.participant.initials}</span>
                  </div>
                  <span className="text-sm font-medium text-foreground">{conversation.participant.name}</span>
                </div>
                <span className="text-xs text-muted-foreground">{conversation.time}</span>
              </div>
              <p className="text-sm text-muted-foreground line-clamp-2 mb-2">
                {conversation.lastMessage}
              </p>
              <div className="flex items-center justify-between">
                <span className={`text-xs ${conversation.projectColor}`}>
                  Project: {conversation.project}
                </span>
                {conversation.unread && (
                  <div className="w-2 h-2 bg-primary rounded-full"></div>
                )}
              </div>
            </div>
          ))}
        </div>
      </div>
    </aside>
  );
}


================================================================================
END: D:\QiEOS\QiAllyPortal\client\src\components\messaging\MessageSidebar.tsx
================================================================================


================================================================================
FILE: D:\QiEOS\QiAllyPortal\client\src\components\ui\accordion.tsx
================================================================================

import * as React from "react"
import * as AccordionPrimitive from "@radix-ui/react-accordion"
import { ChevronDown } from "lucide-react"

import { cn } from "@/lib/utils"

const Accordion = AccordionPrimitive.Root

const AccordionItem = React.forwardRef<
  React.ElementRef<typeof AccordionPrimitive.Item>,
  React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Item>
>(({ className, ...props }, ref) => (
  <AccordionPrimitive.Item
    ref={ref}
    className={cn("border-b", className)}
    {...props}
  />
))
AccordionItem.displayName = "AccordionItem"

const AccordionTrigger = React.forwardRef<
  React.ElementRef<typeof AccordionPrimitive.Trigger>,
  React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Trigger>
>(({ className, children, ...props }, ref) => (
  <AccordionPrimitive.Header className="flex">
    <AccordionPrimitive.Trigger
      ref={ref}
      className={cn(
        "flex flex-1 items-center justify-between py-4 font-medium transition-all hover:underline [&[data-state=open]>svg]:rotate-180",
        className
      )}
      {...props}
    >
      {children}
      <ChevronDown className="h-4 w-4 shrink-0 transition-transform duration-200" />
    </AccordionPrimitive.Trigger>
  </AccordionPrimitive.Header>
))
AccordionTrigger.displayName = AccordionPrimitive.Trigger.displayName

const AccordionContent = React.forwardRef<
  React.ElementRef<typeof AccordionPrimitive.Content>,
  React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Content>
>(({ className, children, ...props }, ref) => (
  <AccordionPrimitive.Content
    ref={ref}
    className="overflow-hidden text-sm transition-all data-[state=closed]:animate-accordion-up data-[state=open]:animate-accordion-down"
    {...props}
  >
    <div className={cn("pb-4 pt-0", className)}>{children}</div>
  </AccordionPrimitive.Content>
))

AccordionContent.displayName = AccordionPrimitive.Content.displayName

export { Accordion, AccordionItem, AccordionTrigger, AccordionContent }


================================================================================
END: D:\QiEOS\QiAllyPortal\client\src\components\ui\accordion.tsx
================================================================================


================================================================================
FILE: D:\QiEOS\QiAllyPortal\client\src\components\ui\alert-dialog.tsx
================================================================================

import * as React from "react"
import * as AlertDialogPrimitive from "@radix-ui/react-alert-dialog"

import { cn } from "@/lib/utils"
import { buttonVariants } from "@/components/ui/button"

const AlertDialog = AlertDialogPrimitive.Root

const AlertDialogTrigger = AlertDialogPrimitive.Trigger

const AlertDialogPortal = AlertDialogPrimitive.Portal

const AlertDialogOverlay = React.forwardRef<
  React.ElementRef<typeof AlertDialogPrimitive.Overlay>,
  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Overlay>
>(({ className, ...props }, ref) => (
  <AlertDialogPrimitive.Overlay
    className={cn(
      "fixed inset-0 z-50 bg-black/80  data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0",
      className
    )}
    {...props}
    ref={ref}
  />
))
AlertDialogOverlay.displayName = AlertDialogPrimitive.Overlay.displayName

const AlertDialogContent = React.forwardRef<
  React.ElementRef<typeof AlertDialogPrimitive.Content>,
  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Content>
>(({ className, ...props }, ref) => (
  <AlertDialogPortal>
    <AlertDialogOverlay />
    <AlertDialogPrimitive.Content
      ref={ref}
      className={cn(
        "fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg",
        className
      )}
      {...props}
    />
  </AlertDialogPortal>
))
AlertDialogContent.displayName = AlertDialogPrimitive.Content.displayName

const AlertDialogHeader = ({
  className,
  ...props
}: React.HTMLAttributes<HTMLDivElement>) => (
  <div
    className={cn(
      "flex flex-col space-y-2 text-center sm:text-left",
      className
    )}
    {...props}
  />
)
AlertDialogHeader.displayName = "AlertDialogHeader"

const AlertDialogFooter = ({
  className,
  ...props
}: React.HTMLAttributes<HTMLDivElement>) => (
  <div
    className={cn(
      "flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2",
      className
    )}
    {...props}
  />
)
AlertDialogFooter.displayName = "AlertDialogFooter"

const AlertDialogTitle = React.forwardRef<
  React.ElementRef<typeof AlertDialogPrimitive.Title>,
  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Title>
>(({ className, ...props }, ref) => (
  <AlertDialogPrimitive.Title
    ref={ref}
    className={cn("text-lg font-semibold", className)}
    {...props}
  />
))
AlertDialogTitle.displayName = AlertDialogPrimitive.Title.displayName

const AlertDialogDescription = React.forwardRef<
  React.ElementRef<typeof AlertDialogPrimitive.Description>,
  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Description>
>(({ className, ...props }, ref) => (
  <AlertDialogPrimitive.Description
    ref={ref}
    className={cn("text-sm text-muted-foreground", className)}
    {...props}
  />
))
AlertDialogDescription.displayName =
  AlertDialogPrimitive.Description.displayName

const AlertDialogAction = React.forwardRef<
  React.ElementRef<typeof AlertDialogPrimitive.Action>,
  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Action>
>(({ className, ...props }, ref) => (
  <AlertDialogPrimitive.Action
    ref={ref}
    className={cn(buttonVariants(), className)}
    {...props}
  />
))
AlertDialogAction.displayName = AlertDialogPrimitive.Action.displayName

const AlertDialogCancel = React.forwardRef<
  React.ElementRef<typeof AlertDialogPrimitive.Cancel>,
  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Cancel>
>(({ className, ...props }, ref) => (
  <AlertDialogPrimitive.Cancel
    ref={ref}
    className={cn(
      buttonVariants({ variant: "outline" }),
      "mt-2 sm:mt-0",
      className
    )}
    {...props}
  />
))
AlertDialogCancel.displayName = AlertDialogPrimitive.Cancel.displayName

export {
  AlertDialog,
  AlertDialogPortal,
  AlertDialogOverlay,
  AlertDialogTrigger,
  AlertDialogContent,
  AlertDialogHeader,
  AlertDialogFooter,
  AlertDialogTitle,
  AlertDialogDescription,
  AlertDialogAction,
  AlertDialogCancel,
}


================================================================================
END: D:\QiEOS\QiAllyPortal\client\src\components\ui\alert-dialog.tsx
================================================================================


================================================================================
FILE: D:\QiEOS\QiAllyPortal\client\src\components\ui\alert.tsx
================================================================================

import * as React from "react"
import { cva, type VariantProps } from "class-variance-authority"

import { cn } from "@/lib/utils"

const alertVariants = cva(
  "relative w-full rounded-lg border p-4 [&>svg~*]:pl-7 [&>svg+div]:translate-y-[-3px] [&>svg]:absolute [&>svg]:left-4 [&>svg]:top-4 [&>svg]:text-foreground",
  {
    variants: {
      variant: {
        default: "bg-background text-foreground",
        destructive:
          "border-destructive/50 text-destructive dark:border-destructive [&>svg]:text-destructive",
      },
    },
    defaultVariants: {
      variant: "default",
    },
  }
)

const Alert = React.forwardRef<
  HTMLDivElement,
  React.HTMLAttributes<HTMLDivElement> & VariantProps<typeof alertVariants>
>(({ className, variant, ...props }, ref) => (
  <div
    ref={ref}
    role="alert"
    className={cn(alertVariants({ variant }), className)}
    {...props}
  />
))
Alert.displayName = "Alert"

const AlertTitle = React.forwardRef<
  HTMLParagraphElement,
  React.HTMLAttributes<HTMLHeadingElement>
>(({ className, ...props }, ref) => (
  <h5
    ref={ref}
    className={cn("mb-1 font-medium leading-none tracking-tight", className)}
    {...props}
  />
))
AlertTitle.displayName = "AlertTitle"

const AlertDescription = React.forwardRef<
  HTMLParagraphElement,
  React.HTMLAttributes<HTMLParagraphElement>
>(({ className, ...props }, ref) => (
  <div
    ref={ref}
    className={cn("text-sm [&_p]:leading-relaxed", className)}
    {...props}
  />
))
AlertDescription.displayName = "AlertDescription"

export { Alert, AlertTitle, AlertDescription }


================================================================================
END: D:\QiEOS\QiAllyPortal\client\src\components\ui\alert.tsx
================================================================================


================================================================================
FILE: D:\QiEOS\QiAllyPortal\client\src\components\ui\aspect-ratio.tsx
================================================================================

import * as AspectRatioPrimitive from "@radix-ui/react-aspect-ratio"

const AspectRatio = AspectRatioPrimitive.Root

export { AspectRatio }


================================================================================
END: D:\QiEOS\QiAllyPortal\client\src\components\ui\aspect-ratio.tsx
================================================================================


================================================================================
FILE: D:\QiEOS\QiAllyPortal\client\src\components\ui\avatar.tsx
================================================================================

"use client"

import * as React from "react"
import * as AvatarPrimitive from "@radix-ui/react-avatar"

import { cn } from "@/lib/utils"

const Avatar = React.forwardRef<
  React.ElementRef<typeof AvatarPrimitive.Root>,
  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Root>
>(({ className, ...props }, ref) => (
  <AvatarPrimitive.Root
    ref={ref}
    className={cn(
      "relative flex h-10 w-10 shrink-0 overflow-hidden rounded-full",
      className
    )}
    {...props}
  />
))
Avatar.displayName = AvatarPrimitive.Root.displayName

const AvatarImage = React.forwardRef<
  React.ElementRef<typeof AvatarPrimitive.Image>,
  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Image>
>(({ className, ...props }, ref) => (
  <AvatarPrimitive.Image
    ref={ref}
    className={cn("aspect-square h-full w-full", className)}
    {...props}
  />
))
AvatarImage.displayName = AvatarPrimitive.Image.displayName

const AvatarFallback = React.forwardRef<
  React.ElementRef<typeof AvatarPrimitive.Fallback>,
  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Fallback>
>(({ className, ...props }, ref) => (
  <AvatarPrimitive.Fallback
    ref={ref}
    className={cn(
      "flex h-full w-full items-center justify-center rounded-full bg-muted",
      className
    )}
    {...props}
  />
))
AvatarFallback.displayName = AvatarPrimitive.Fallback.displayName

export { Avatar, AvatarImage, AvatarFallback }


================================================================================
END: D:\QiEOS\QiAllyPortal\client\src\components\ui\avatar.tsx
================================================================================


================================================================================
FILE: D:\QiEOS\QiAllyPortal\client\src\components\ui\badge.tsx
================================================================================

import * as React from "react"
import { cva, type VariantProps } from "class-variance-authority"

import { cn } from "@/lib/utils"

const badgeVariants = cva(
  "inline-flex items-center rounded-full border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2",
  {
    variants: {
      variant: {
        default:
          "border-transparent bg-primary text-primary-foreground hover:bg-primary/80",
        secondary:
          "border-transparent bg-secondary text-secondary-foreground hover:bg-secondary/80",
        destructive:
          "border-transparent bg-destructive text-destructive-foreground hover:bg-destructive/80",
        outline: "text-foreground",
      },
    },
    defaultVariants: {
      variant: "default",
    },
  }
)

export interface BadgeProps
  extends React.HTMLAttributes<HTMLDivElement>,
    VariantProps<typeof badgeVariants> {}

function Badge({ className, variant, ...props }: BadgeProps) {
  return (
    <div className={cn(badgeVariants({ variant }), className)} {...props} />
  )
}

export { Badge, badgeVariants }


================================================================================
END: D:\QiEOS\QiAllyPortal\client\src\components\ui\badge.tsx
================================================================================


================================================================================
FILE: D:\QiEOS\QiAllyPortal\client\src\components\ui\breadcrumb.tsx
================================================================================

import * as React from "react"
import { Slot } from "@radix-ui/react-slot"
import { ChevronRight, MoreHorizontal } from "lucide-react"

import { cn } from "@/lib/utils"

const Breadcrumb = React.forwardRef<
  HTMLElement,
  React.ComponentPropsWithoutRef<"nav"> & {
    separator?: React.ReactNode
  }
>(({ ...props }, ref) => <nav ref={ref} aria-label="breadcrumb" {...props} />)
Breadcrumb.displayName = "Breadcrumb"

const BreadcrumbList = React.forwardRef<
  HTMLOListElement,
  React.ComponentPropsWithoutRef<"ol">
>(({ className, ...props }, ref) => (
  <ol
    ref={ref}
    className={cn(
      "flex flex-wrap items-center gap-1.5 break-words text-sm text-muted-foreground sm:gap-2.5",
      className
    )}
    {...props}
  />
))
BreadcrumbList.displayName = "BreadcrumbList"

const BreadcrumbItem = React.forwardRef<
  HTMLLIElement,
  React.ComponentPropsWithoutRef<"li">
>(({ className, ...props }, ref) => (
  <li
    ref={ref}
    className={cn("inline-flex items-center gap-1.5", className)}
    {...props}
  />
))
BreadcrumbItem.displayName = "BreadcrumbItem"

const BreadcrumbLink = React.forwardRef<
  HTMLAnchorElement,
  React.ComponentPropsWithoutRef<"a"> & {
    asChild?: boolean
  }
>(({ asChild, className, ...props }, ref) => {
  const Comp = asChild ? Slot : "a"

  return (
    <Comp
      ref={ref}
      className={cn("transition-colors hover:text-foreground", className)}
      {...props}
    />
  )
})
BreadcrumbLink.displayName = "BreadcrumbLink"

const BreadcrumbPage = React.forwardRef<
  HTMLSpanElement,
  React.ComponentPropsWithoutRef<"span">
>(({ className, ...props }, ref) => (
  <span
    ref={ref}
    role="link"
    aria-disabled="true"
    aria-current="page"
    className={cn("font-normal text-foreground", className)}
    {...props}
  />
))
BreadcrumbPage.displayName = "BreadcrumbPage"

const BreadcrumbSeparator = ({
  children,
  className,
  ...props
}: React.ComponentProps<"li">) => (
  <li
    role="presentation"
    aria-hidden="true"
    className={cn("[&>svg]:w-3.5 [&>svg]:h-3.5", className)}
    {...props}
  >
    {children ?? <ChevronRight />}
  </li>
)
BreadcrumbSeparator.displayName = "BreadcrumbSeparator"

const BreadcrumbEllipsis = ({
  className,
  ...props
}: React.ComponentProps<"span">) => (
  <span
    role="presentation"
    aria-hidden="true"
    className={cn("flex h-9 w-9 items-center justify-center", className)}
    {...props}
  >
    <MoreHorizontal className="h-4 w-4" />
    <span className="sr-only">More</span>
  </span>
)
BreadcrumbEllipsis.displayName = "BreadcrumbElipssis"

export {
  Breadcrumb,
  BreadcrumbList,
  BreadcrumbItem,
  BreadcrumbLink,
  BreadcrumbPage,
  BreadcrumbSeparator,
  BreadcrumbEllipsis,
}


================================================================================
END: D:\QiEOS\QiAllyPortal\client\src\components\ui\breadcrumb.tsx
================================================================================


================================================================================
FILE: D:\QiEOS\QiAllyPortal\client\src\components\ui\button.tsx
================================================================================

import * as React from "react"
import { Slot } from "@radix-ui/react-slot"
import { cva, type VariantProps } from "class-variance-authority"

import { cn } from "@/lib/utils"

const buttonVariants = cva(
  "inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0",
  {
    variants: {
      variant: {
        default: "bg-primary text-primary-foreground hover:bg-primary/90",
        destructive:
          "bg-destructive text-destructive-foreground hover:bg-destructive/90",
        outline:
          "border border-input bg-background hover:bg-accent hover:text-accent-foreground",
        secondary:
          "bg-secondary text-secondary-foreground hover:bg-secondary/80",
        ghost: "hover:bg-accent hover:text-accent-foreground",
        link: "text-primary underline-offset-4 hover:underline",
      },
      size: {
        default: "h-10 px-4 py-2",
        sm: "h-9 rounded-md px-3",
        lg: "h-11 rounded-md px-8",
        icon: "h-10 w-10",
      },
    },
    defaultVariants: {
      variant: "default",
      size: "default",
    },
  }
)

export interface ButtonProps
  extends React.ButtonHTMLAttributes<HTMLButtonElement>,
    VariantProps<typeof buttonVariants> {
  asChild?: boolean
}

const Button = React.forwardRef<HTMLButtonElement, ButtonProps>(
  ({ className, variant, size, asChild = false, ...props }, ref) => {
    const Comp = asChild ? Slot : "button"
    return (
      <Comp
        className={cn(buttonVariants({ variant, size, className }))}
        ref={ref}
        {...props}
      />
    )
  }
)
Button.displayName = "Button"

export { Button, buttonVariants }


================================================================================
END: D:\QiEOS\QiAllyPortal\client\src\components\ui\button.tsx
================================================================================


================================================================================
FILE: D:\QiEOS\QiAllyPortal\client\src\components\ui\calendar.tsx
================================================================================

import * as React from "react"
import { ChevronLeft, ChevronRight } from "lucide-react"
import { DayPicker } from "react-day-picker"

import { cn } from "@/lib/utils"
import { buttonVariants } from "@/components/ui/button"

export type CalendarProps = React.ComponentProps<typeof DayPicker>

function Calendar({
  className,
  classNames,
  showOutsideDays = true,
  ...props
}: CalendarProps) {
  return (
    <DayPicker
      showOutsideDays={showOutsideDays}
      className={cn("p-3", className)}
      classNames={{
        months: "flex flex-col sm:flex-row space-y-4 sm:space-x-4 sm:space-y-0",
        month: "space-y-4",
        caption: "flex justify-center pt-1 relative items-center",
        caption_label: "text-sm font-medium",
        nav: "space-x-1 flex items-center",
        nav_button: cn(
          buttonVariants({ variant: "outline" }),
          "h-7 w-7 bg-transparent p-0 opacity-50 hover:opacity-100"
        ),
        nav_button_previous: "absolute left-1",
        nav_button_next: "absolute right-1",
        table: "w-full border-collapse space-y-1",
        head_row: "flex",
        head_cell:
          "text-muted-foreground rounded-md w-9 font-normal text-[0.8rem]",
        row: "flex w-full mt-2",
        cell: "h-9 w-9 text-center text-sm p-0 relative [&:has([aria-selected].day-range-end)]:rounded-r-md [&:has([aria-selected].day-outside)]:bg-accent/50 [&:has([aria-selected])]:bg-accent first:[&:has([aria-selected])]:rounded-l-md last:[&:has([aria-selected])]:rounded-r-md focus-within:relative focus-within:z-20",
        day: cn(
          buttonVariants({ variant: "ghost" }),
          "h-9 w-9 p-0 font-normal aria-selected:opacity-100"
        ),
        day_range_end: "day-range-end",
        day_selected:
          "bg-primary text-primary-foreground hover:bg-primary hover:text-primary-foreground focus:bg-primary focus:text-primary-foreground",
        day_today: "bg-accent text-accent-foreground",
        day_outside:
          "day-outside text-muted-foreground aria-selected:bg-accent/50 aria-selected:text-muted-foreground",
        day_disabled: "text-muted-foreground opacity-50",
        day_range_middle:
          "aria-selected:bg-accent aria-selected:text-accent-foreground",
        day_hidden: "invisible",
        ...classNames,
      }}
      components={{
        IconLeft: ({ className, ...props }) => (
          <ChevronLeft className={cn("h-4 w-4", className)} {...props} />
        ),
        IconRight: ({ className, ...props }) => (
          <ChevronRight className={cn("h-4 w-4", className)} {...props} />
        ),
      }}
      {...props}
    />
  )
}
Calendar.displayName = "Calendar"

export { Calendar }


================================================================================
END: D:\QiEOS\QiAllyPortal\client\src\components\ui\calendar.tsx
================================================================================


================================================================================
FILE: D:\QiEOS\QiAllyPortal\client\src\components\ui\card.tsx
================================================================================

import * as React from "react"

import { cn } from "@/lib/utils"

const Card = React.forwardRef<
  HTMLDivElement,
  React.HTMLAttributes<HTMLDivElement>
>(({ className, ...props }, ref) => (
  <div
    ref={ref}
    className={cn(
      "rounded-lg border bg-card text-card-foreground shadow-sm",
      className
    )}
    {...props}
  />
))
Card.displayName = "Card"

const CardHeader = React.forwardRef<
  HTMLDivElement,
  React.HTMLAttributes<HTMLDivElement>
>(({ className, ...props }, ref) => (
  <div
    ref={ref}
    className={cn("flex flex-col space-y-1.5 p-6", className)}
    {...props}
  />
))
CardHeader.displayName = "CardHeader"

const CardTitle = React.forwardRef<
  HTMLDivElement,
  React.HTMLAttributes<HTMLDivElement>
>(({ className, ...props }, ref) => (
  <div
    ref={ref}
    className={cn(
      "text-2xl font-semibold leading-none tracking-tight",
      className
    )}
    {...props}
  />
))
CardTitle.displayName = "CardTitle"

const CardDescription = React.forwardRef<
  HTMLDivElement,
  React.HTMLAttributes<HTMLDivElement>
>(({ className, ...props }, ref) => (
  <div
    ref={ref}
    className={cn("text-sm text-muted-foreground", className)}
    {...props}
  />
))
CardDescription.displayName = "CardDescription"

const CardContent = React.forwardRef<
  HTMLDivElement,
  React.HTMLAttributes<HTMLDivElement>
>(({ className, ...props }, ref) => (
  <div ref={ref} className={cn("p-6 pt-0", className)} {...props} />
))
CardContent.displayName = "CardContent"

const CardFooter = React.forwardRef<
  HTMLDivElement,
  React.HTMLAttributes<HTMLDivElement>
>(({ className, ...props }, ref) => (
  <div
    ref={ref}
    className={cn("flex items-center p-6 pt-0", className)}
    {...props}
  />
))
CardFooter.displayName = "CardFooter"

export { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }


================================================================================
END: D:\QiEOS\QiAllyPortal\client\src\components\ui\card.tsx
================================================================================


================================================================================
FILE: D:\QiEOS\QiAllyPortal\client\src\components\ui\carousel.tsx
================================================================================

import * as React from "react"
import useEmblaCarousel, {
  type UseEmblaCarouselType,
} from "embla-carousel-react"
import { ArrowLeft, ArrowRight } from "lucide-react"

import { cn } from "@/lib/utils"
import { Button } from "@/components/ui/button"

type CarouselApi = UseEmblaCarouselType[1]
type UseCarouselParameters = Parameters<typeof useEmblaCarousel>
type CarouselOptions = UseCarouselParameters[0]
type CarouselPlugin = UseCarouselParameters[1]

type CarouselProps = {
  opts?: CarouselOptions
  plugins?: CarouselPlugin
  orientation?: "horizontal" | "vertical"
  setApi?: (api: CarouselApi) => void
}

type CarouselContextProps = {
  carouselRef: ReturnType<typeof useEmblaCarousel>[0]
  api: ReturnType<typeof useEmblaCarousel>[1]
  scrollPrev: () => void
  scrollNext: () => void
  canScrollPrev: boolean
  canScrollNext: boolean
} & CarouselProps

const CarouselContext = React.createContext<CarouselContextProps | null>(null)

function useCarousel() {
  const context = React.useContext(CarouselContext)

  if (!context) {
    throw new Error("useCarousel must be used within a <Carousel />")
  }

  return context
}

const Carousel = React.forwardRef<
  HTMLDivElement,
  React.HTMLAttributes<HTMLDivElement> & CarouselProps
>(
  (
    {
      orientation = "horizontal",
      opts,
      setApi,
      plugins,
      className,
      children,
      ...props
    },
    ref
  ) => {
    const [carouselRef, api] = useEmblaCarousel(
      {
        ...opts,
        axis: orientation === "horizontal" ? "x" : "y",
      },
      plugins
    )
    const [canScrollPrev, setCanScrollPrev] = React.useState(false)
    const [canScrollNext, setCanScrollNext] = React.useState(false)

    const onSelect = React.useCallback((api: CarouselApi) => {
      if (!api) {
        return
      }

      setCanScrollPrev(api.canScrollPrev())
      setCanScrollNext(api.canScrollNext())
    }, [])

    const scrollPrev = React.useCallback(() => {
      api?.scrollPrev()
    }, [api])

    const scrollNext = React.useCallback(() => {
      api?.scrollNext()
    }, [api])

    const handleKeyDown = React.useCallback(
      (event: React.KeyboardEvent<HTMLDivElement>) => {
        if (event.key === "ArrowLeft") {
          event.preventDefault()
          scrollPrev()
        } else if (event.key === "ArrowRight") {
          event.preventDefault()
          scrollNext()
        }
      },
      [scrollPrev, scrollNext]
    )

    React.useEffect(() => {
      if (!api || !setApi) {
        return
      }

      setApi(api)
    }, [api, setApi])

    React.useEffect(() => {
      if (!api) {
        return
      }

      onSelect(api)
      api.on("reInit", onSelect)
      api.on("select", onSelect)

      return () => {
        api?.off("select", onSelect)
      }
    }, [api, onSelect])

    return (
      <CarouselContext.Provider
        value={{
          carouselRef,
          api: api,
          opts,
          orientation:
            orientation || (opts?.axis === "y" ? "vertical" : "horizontal"),
          scrollPrev,
          scrollNext,
          canScrollPrev,
          canScrollNext,
        }}
      >
        <div
          ref={ref}
          onKeyDownCapture={handleKeyDown}
          className={cn("relative", className)}
          role="region"
          aria-roledescription="carousel"
          {...props}
        >
          {children}
        </div>
      </CarouselContext.Provider>
    )
  }
)
Carousel.displayName = "Carousel"

const CarouselContent = React.forwardRef<
  HTMLDivElement,
  React.HTMLAttributes<HTMLDivElement>
>(({ className, ...props }, ref) => {
  const { carouselRef, orientation } = useCarousel()

  return (
    <div ref={carouselRef} className="overflow-hidden">
      <div
        ref={ref}
        className={cn(
          "flex",
          orientation === "horizontal" ? "-ml-4" : "-mt-4 flex-col",
          className
        )}
        {...props}
      />
    </div>
  )
})
CarouselContent.displayName = "CarouselContent"

const CarouselItem = React.forwardRef<
  HTMLDivElement,
  React.HTMLAttributes<HTMLDivElement>
>(({ className, ...props }, ref) => {
  const { orientation } = useCarousel()

  return (
    <div
      ref={ref}
      role="group"
      aria-roledescription="slide"
      className={cn(
        "min-w-0 shrink-0 grow-0 basis-full",
        orientation === "horizontal" ? "pl-4" : "pt-4",
        className
      )}
      {...props}
    />
  )
})
CarouselItem.displayName = "CarouselItem"

const CarouselPrevious = React.forwardRef<
  HTMLButtonElement,
  React.ComponentProps<typeof Button>
>(({ className, variant = "outline", size = "icon", ...props }, ref) => {
  const { orientation, scrollPrev, canScrollPrev } = useCarousel()

  return (
    <Button
      ref={ref}
      variant={variant}
      size={size}
      className={cn(
        "absolute  h-8 w-8 rounded-full",
        orientation === "horizontal"
          ? "-left-12 top-1/2 -translate-y-1/2"
          : "-top-12 left-1/2 -translate-x-1/2 rotate-90",
        className
      )}
      disabled={!canScrollPrev}
      onClick={scrollPrev}
      {...props}
    >
      <ArrowLeft className="h-4 w-4" />
      <span className="sr-only">Previous slide</span>
    </Button>
  )
})
CarouselPrevious.displayName = "CarouselPrevious"

const CarouselNext = React.forwardRef<
  HTMLButtonElement,
  React.ComponentProps<typeof Button>
>(({ className, variant = "outline", size = "icon", ...props }, ref) => {
  const { orientation, scrollNext, canScrollNext } = useCarousel()

  return (
    <Button
      ref={ref}
      variant={variant}
      size={size}
      className={cn(
        "absolute h-8 w-8 rounded-full",
        orientation === "horizontal"
          ? "-right-12 top-1/2 -translate-y-1/2"
          : "-bottom-12 left-1/2 -translate-x-1/2 rotate-90",
        className
      )}
      disabled={!canScrollNext}
      onClick={scrollNext}
      {...props}
    >
      <ArrowRight className="h-4 w-4" />
      <span className="sr-only">Next slide</span>
    </Button>
  )
})
CarouselNext.displayName = "CarouselNext"

export {
  type CarouselApi,
  Carousel,
  CarouselContent,
  CarouselItem,
  CarouselPrevious,
  CarouselNext,
}


================================================================================
END: D:\QiEOS\QiAllyPortal\client\src\components\ui\carousel.tsx
================================================================================


================================================================================
FILE: D:\QiEOS\QiAllyPortal\client\src\components\ui\chart.tsx
================================================================================

"use client"

import * as React from "react"
import * as RechartsPrimitive from "recharts"

import { cn } from "@/lib/utils"

// Format: { THEME_NAME: CSS_SELECTOR }
const THEMES = { light: "", dark: ".dark" } as const

export type ChartConfig = {
  [k in string]: {
    label?: React.ReactNode
    icon?: React.ComponentType
  } & (
    | { color?: string; theme?: never }
    | { color?: never; theme: Record<keyof typeof THEMES, string> }
  )
}

type ChartContextProps = {
  config: ChartConfig
}

const ChartContext = React.createContext<ChartContextProps | null>(null)

function useChart() {
  const context = React.useContext(ChartContext)

  if (!context) {
    throw new Error("useChart must be used within a <ChartContainer />")
  }

  return context
}

const ChartContainer = React.forwardRef<
  HTMLDivElement,
  React.ComponentProps<"div"> & {
    config: ChartConfig
    children: React.ComponentProps<
      typeof RechartsPrimitive.ResponsiveContainer
    >["children"]
  }
>(({ id, className, children, config, ...props }, ref) => {
  const uniqueId = React.useId()
  const chartId = `chart-${id || uniqueId.replace(/:/g, "")}`

  return (
    <ChartContext.Provider value={{ config }}>
      <div
        data-chart={chartId}
        ref={ref}
        className={cn(
          "flex aspect-video justify-center text-xs [&_.recharts-cartesian-axis-tick_text]:fill-muted-foreground [&_.recharts-cartesian-grid_line[stroke='#ccc']]:stroke-border/50 [&_.recharts-curve.recharts-tooltip-cursor]:stroke-border [&_.recharts-dot[stroke='#fff']]:stroke-transparent [&_.recharts-layer]:outline-none [&_.recharts-polar-grid_[stroke='#ccc']]:stroke-border [&_.recharts-radial-bar-background-sector]:fill-muted [&_.recharts-rectangle.recharts-tooltip-cursor]:fill-muted [&_.recharts-reference-line_[stroke='#ccc']]:stroke-border [&_.recharts-sector[stroke='#fff']]:stroke-transparent [&_.recharts-sector]:outline-none [&_.recharts-surface]:outline-none",
          className
        )}
        {...props}
      >
        <ChartStyle id={chartId} config={config} />
        <RechartsPrimitive.ResponsiveContainer>
          {children}
        </RechartsPrimitive.ResponsiveContainer>
      </div>
    </ChartContext.Provider>
  )
})
ChartContainer.displayName = "Chart"

const ChartStyle = ({ id, config }: { id: string; config: ChartConfig }) => {
  const colorConfig = Object.entries(config).filter(
    ([, config]) => config.theme || config.color
  )

  if (!colorConfig.length) {
    return null
  }

  return (
    <style
      dangerouslySetInnerHTML={{
        __html: Object.entries(THEMES)
          .map(
            ([theme, prefix]) => `
${prefix} [data-chart=${id}] {
${colorConfig
  .map(([key, itemConfig]) => {
    const color =
      itemConfig.theme?.[theme as keyof typeof itemConfig.theme] ||
      itemConfig.color
    return color ? `  --color-${key}: ${color};` : null
  })
  .join("\n")}
}
`
          )
          .join("\n"),
      }}
    />
  )
}

const ChartTooltip = RechartsPrimitive.Tooltip

const ChartTooltipContent = React.forwardRef<
  HTMLDivElement,
  React.ComponentProps<typeof RechartsPrimitive.Tooltip> &
    React.ComponentProps<"div"> & {
      hideLabel?: boolean
      hideIndicator?: boolean
      indicator?: "line" | "dot" | "dashed"
      nameKey?: string
      labelKey?: string
    }
>(
  (
    {
      active,
      payload,
      className,
      indicator = "dot",
      hideLabel = false,
      hideIndicator = false,
      label,
      labelFormatter,
      labelClassName,
      formatter,
      color,
      nameKey,
      labelKey,
    },
    ref
  ) => {
    const { config } = useChart()

    const tooltipLabel = React.useMemo(() => {
      if (hideLabel || !payload?.length) {
        return null
      }

      const [item] = payload
      const key = `${labelKey || item?.dataKey || item?.name || "value"}`
      const itemConfig = getPayloadConfigFromPayload(config, item, key)
      const value =
        !labelKey && typeof label === "string"
          ? config[label as keyof typeof config]?.label || label
          : itemConfig?.label

      if (labelFormatter) {
        return (
          <div className={cn("font-medium", labelClassName)}>
            {labelFormatter(value, payload)}
          </div>
        )
      }

      if (!value) {
        return null
      }

      return <div className={cn("font-medium", labelClassName)}>{value}</div>
    }, [
      label,
      labelFormatter,
      payload,
      hideLabel,
      labelClassName,
      config,
      labelKey,
    ])

    if (!active || !payload?.length) {
      return null
    }

    const nestLabel = payload.length === 1 && indicator !== "dot"

    return (
      <div
        ref={ref}
        className={cn(
          "grid min-w-[8rem] items-start gap-1.5 rounded-lg border border-border/50 bg-background px-2.5 py-1.5 text-xs shadow-xl",
          className
        )}
      >
        {!nestLabel ? tooltipLabel : null}
        <div className="grid gap-1.5">
          {payload.map((item, index) => {
            const key = `${nameKey || item.name || item.dataKey || "value"}`
            const itemConfig = getPayloadConfigFromPayload(config, item, key)
            const indicatorColor = color || item.payload.fill || item.color

            return (
              <div
                key={item.dataKey}
                className={cn(
                  "flex w-full flex-wrap items-stretch gap-2 [&>svg]:h-2.5 [&>svg]:w-2.5 [&>svg]:text-muted-foreground",
                  indicator === "dot" && "items-center"
                )}
              >
                {formatter && item?.value !== undefined && item.name ? (
                  formatter(item.value, item.name, item, index, item.payload)
                ) : (
                  <>
                    {itemConfig?.icon ? (
                      <itemConfig.icon />
                    ) : (
                      !hideIndicator && (
                        <div
                          className={cn(
                            "shrink-0 rounded-[2px] border-[--color-border] bg-[--color-bg]",
                            {
                              "h-2.5 w-2.5": indicator === "dot",
                              "w-1": indicator === "line",
                              "w-0 border-[1.5px] border-dashed bg-transparent":
                                indicator === "dashed",
                              "my-0.5": nestLabel && indicator === "dashed",
                            }
                          )}
                          style={
                            {
                              "--color-bg": indicatorColor,
                              "--color-border": indicatorColor,
                            } as React.CSSProperties
                          }
                        />
                      )
                    )}
                    <div
                      className={cn(
                        "flex flex-1 justify-between leading-none",
                        nestLabel ? "items-end" : "items-center"
                      )}
                    >
                      <div className="grid gap-1.5">
                        {nestLabel ? tooltipLabel : null}
                        <span className="text-muted-foreground">
                          {itemConfig?.label || item.name}
                        </span>
                      </div>
                      {item.value && (
                        <span className="font-mono font-medium tabular-nums text-foreground">
                          {item.value.toLocaleString()}
                        </span>
                      )}
                    </div>
                  </>
                )}
              </div>
            )
          })}
        </div>
      </div>
    )
  }
)
ChartTooltipContent.displayName = "ChartTooltip"

const ChartLegend = RechartsPrimitive.Legend

const ChartLegendContent = React.forwardRef<
  HTMLDivElement,
  React.ComponentProps<"div"> &
    Pick<RechartsPrimitive.LegendProps, "payload" | "verticalAlign"> & {
      hideIcon?: boolean
      nameKey?: string
    }
>(
  (
    { className, hideIcon = false, payload, verticalAlign = "bottom", nameKey },
    ref
  ) => {
    const { config } = useChart()

    if (!payload?.length) {
      return null
    }

    return (
      <div
        ref={ref}
        className={cn(
          "flex items-center justify-center gap-4",
          verticalAlign === "top" ? "pb-3" : "pt-3",
          className
        )}
      >
        {payload.map((item) => {
          const key = `${nameKey || item.dataKey || "value"}`
          const itemConfig = getPayloadConfigFromPayload(config, item, key)

          return (
            <div
              key={item.value}
              className={cn(
                "flex items-center gap-1.5 [&>svg]:h-3 [&>svg]:w-3 [&>svg]:text-muted-foreground"
              )}
            >
              {itemConfig?.icon && !hideIcon ? (
                <itemConfig.icon />
              ) : (
                <div
                  className="h-2 w-2 shrink-0 rounded-[2px]"
                  style={{
                    backgroundColor: item.color,
                  }}
                />
              )}
              {itemConfig?.label}
            </div>
          )
        })}
      </div>
    )
  }
)
ChartLegendContent.displayName = "ChartLegend"

// Helper to extract item config from a payload.
function getPayloadConfigFromPayload(
  config: ChartConfig,
  payload: unknown,
  key: string
) {
  if (typeof payload !== "object" || payload === null) {
    return undefined
  }

  const payloadPayload =
    "payload" in payload &&
    typeof payload.payload === "object" &&
    payload.payload !== null
      ? payload.payload
      : undefined

  let configLabelKey: string = key

  if (
    key in payload &&
    typeof payload[key as keyof typeof payload] === "string"
  ) {
    configLabelKey = payload[key as keyof typeof payload] as string
  } else if (
    payloadPayload &&
    key in payloadPayload &&
    typeof payloadPayload[key as keyof typeof payloadPayload] === "string"
  ) {
    configLabelKey = payloadPayload[
      key as keyof typeof payloadPayload
    ] as string
  }

  return configLabelKey in config
    ? config[configLabelKey]
    : config[key as keyof typeof config]
}

export {
  ChartContainer,
  ChartTooltip,
  ChartTooltipContent,
  ChartLegend,
  ChartLegendContent,
  ChartStyle,
}


================================================================================
END: D:\QiEOS\QiAllyPortal\client\src\components\ui\chart.tsx
================================================================================


================================================================================
FILE: D:\QiEOS\QiAllyPortal\client\src\components\ui\checkbox.tsx
================================================================================

import * as React from "react"
import * as CheckboxPrimitive from "@radix-ui/react-checkbox"
import { Check } from "lucide-react"

import { cn } from "@/lib/utils"

const Checkbox = React.forwardRef<
  React.ElementRef<typeof CheckboxPrimitive.Root>,
  React.ComponentPropsWithoutRef<typeof CheckboxPrimitive.Root>
>(({ className, ...props }, ref) => (
  <CheckboxPrimitive.Root
    ref={ref}
    className={cn(
      "peer h-4 w-4 shrink-0 rounded-sm border border-primary ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 data-[state=checked]:bg-primary data-[state=checked]:text-primary-foreground",
      className
    )}
    {...props}
  >
    <CheckboxPrimitive.Indicator
      className={cn("flex items-center justify-center text-current")}
    >
      <Check className="h-4 w-4" />
    </CheckboxPrimitive.Indicator>
  </CheckboxPrimitive.Root>
))
Checkbox.displayName = CheckboxPrimitive.Root.displayName

export { Checkbox }


================================================================================
END: D:\QiEOS\QiAllyPortal\client\src\components\ui\checkbox.tsx
================================================================================


================================================================================
FILE: D:\QiEOS\QiAllyPortal\client\src\components\ui\collapsible.tsx
================================================================================

"use client"

import * as CollapsiblePrimitive from "@radix-ui/react-collapsible"

const Collapsible = CollapsiblePrimitive.Root

const CollapsibleTrigger = CollapsiblePrimitive.CollapsibleTrigger

const CollapsibleContent = CollapsiblePrimitive.CollapsibleContent

export { Collapsible, CollapsibleTrigger, CollapsibleContent }


================================================================================
END: D:\QiEOS\QiAllyPortal\client\src\components\ui\collapsible.tsx
================================================================================


================================================================================
FILE: D:\QiEOS\QiAllyPortal\client\src\components\ui\command.tsx
================================================================================

import * as React from "react"
import { type DialogProps } from "@radix-ui/react-dialog"
import { Command as CommandPrimitive } from "cmdk"
import { Search } from "lucide-react"

import { cn } from "@/lib/utils"
import { Dialog, DialogContent } from "@/components/ui/dialog"

const Command = React.forwardRef<
  React.ElementRef<typeof CommandPrimitive>,
  React.ComponentPropsWithoutRef<typeof CommandPrimitive>
>(({ className, ...props }, ref) => (
  <CommandPrimitive
    ref={ref}
    className={cn(
      "flex h-full w-full flex-col overflow-hidden rounded-md bg-popover text-popover-foreground",
      className
    )}
    {...props}
  />
))
Command.displayName = CommandPrimitive.displayName

const CommandDialog = ({ children, ...props }: DialogProps) => {
  return (
    <Dialog {...props}>
      <DialogContent className="overflow-hidden p-0 shadow-lg">
        <Command className="[&_[cmdk-group-heading]]:px-2 [&_[cmdk-group-heading]]:font-medium [&_[cmdk-group-heading]]:text-muted-foreground [&_[cmdk-group]:not([hidden])_~[cmdk-group]]:pt-0 [&_[cmdk-group]]:px-2 [&_[cmdk-input-wrapper]_svg]:h-5 [&_[cmdk-input-wrapper]_svg]:w-5 [&_[cmdk-input]]:h-12 [&_[cmdk-item]]:px-2 [&_[cmdk-item]]:py-3 [&_[cmdk-item]_svg]:h-5 [&_[cmdk-item]_svg]:w-5">
          {children}
        </Command>
      </DialogContent>
    </Dialog>
  )
}

const CommandInput = React.forwardRef<
  React.ElementRef<typeof CommandPrimitive.Input>,
  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Input>
>(({ className, ...props }, ref) => (
  <div className="flex items-center border-b px-3" cmdk-input-wrapper="">
    <Search className="mr-2 h-4 w-4 shrink-0 opacity-50" />
    <CommandPrimitive.Input
      ref={ref}
      className={cn(
        "flex h-11 w-full rounded-md bg-transparent py-3 text-sm outline-none placeholder:text-muted-foreground disabled:cursor-not-allowed disabled:opacity-50",
        className
      )}
      {...props}
    />
  </div>
))

CommandInput.displayName = CommandPrimitive.Input.displayName

const CommandList = React.forwardRef<
  React.ElementRef<typeof CommandPrimitive.List>,
  React.ComponentPropsWithoutRef<typeof CommandPrimitive.List>
>(({ className, ...props }, ref) => (
  <CommandPrimitive.List
    ref={ref}
    className={cn("max-h-[300px] overflow-y-auto overflow-x-hidden", className)}
    {...props}
  />
))

CommandList.displayName = CommandPrimitive.List.displayName

const CommandEmpty = React.forwardRef<
  React.ElementRef<typeof CommandPrimitive.Empty>,
  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Empty>
>((props, ref) => (
  <CommandPrimitive.Empty
    ref={ref}
    className="py-6 text-center text-sm"
    {...props}
  />
))

CommandEmpty.displayName = CommandPrimitive.Empty.displayName

const CommandGroup = React.forwardRef<
  React.ElementRef<typeof CommandPrimitive.Group>,
  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Group>
>(({ className, ...props }, ref) => (
  <CommandPrimitive.Group
    ref={ref}
    className={cn(
      "overflow-hidden p-1 text-foreground [&_[cmdk-group-heading]]:px-2 [&_[cmdk-group-heading]]:py-1.5 [&_[cmdk-group-heading]]:text-xs [&_[cmdk-group-heading]]:font-medium [&_[cmdk-group-heading]]:text-muted-foreground",
      className
    )}
    {...props}
  />
))

CommandGroup.displayName = CommandPrimitive.Group.displayName

const CommandSeparator = React.forwardRef<
  React.ElementRef<typeof CommandPrimitive.Separator>,
  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Separator>
>(({ className, ...props }, ref) => (
  <CommandPrimitive.Separator
    ref={ref}
    className={cn("-mx-1 h-px bg-border", className)}
    {...props}
  />
))
CommandSeparator.displayName = CommandPrimitive.Separator.displayName

const CommandItem = React.forwardRef<
  React.ElementRef<typeof CommandPrimitive.Item>,
  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Item>
>(({ className, ...props }, ref) => (
  <CommandPrimitive.Item
    ref={ref}
    className={cn(
      "relative flex cursor-default gap-2 select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none data-[disabled=true]:pointer-events-none data-[selected='true']:bg-accent data-[selected=true]:text-accent-foreground data-[disabled=true]:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0",
      className
    )}
    {...props}
  />
))

CommandItem.displayName = CommandPrimitive.Item.displayName

const CommandShortcut = ({
  className,
  ...props
}: React.HTMLAttributes<HTMLSpanElement>) => {
  return (
    <span
      className={cn(
        "ml-auto text-xs tracking-widest text-muted-foreground",
        className
      )}
      {...props}
    />
  )
}
CommandShortcut.displayName = "CommandShortcut"

export {
  Command,
  CommandDialog,
  CommandInput,
  CommandList,
  CommandEmpty,
  CommandGroup,
  CommandItem,
  CommandShortcut,
  CommandSeparator,
}


================================================================================
END: D:\QiEOS\QiAllyPortal\client\src\components\ui\command.tsx
================================================================================


================================================================================
FILE: D:\QiEOS\QiAllyPortal\client\src\components\ui\context-menu.tsx
================================================================================

import * as React from "react"
import * as ContextMenuPrimitive from "@radix-ui/react-context-menu"
import { Check, ChevronRight, Circle } from "lucide-react"

import { cn } from "@/lib/utils"

const ContextMenu = ContextMenuPrimitive.Root

const ContextMenuTrigger = ContextMenuPrimitive.Trigger

const ContextMenuGroup = ContextMenuPrimitive.Group

const ContextMenuPortal = ContextMenuPrimitive.Portal

const ContextMenuSub = ContextMenuPrimitive.Sub

const ContextMenuRadioGroup = ContextMenuPrimitive.RadioGroup

const ContextMenuSubTrigger = React.forwardRef<
  React.ElementRef<typeof ContextMenuPrimitive.SubTrigger>,
  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.SubTrigger> & {
    inset?: boolean
  }
>(({ className, inset, children, ...props }, ref) => (
  <ContextMenuPrimitive.SubTrigger
    ref={ref}
    className={cn(
      "flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[state=open]:bg-accent data-[state=open]:text-accent-foreground",
      inset && "pl-8",
      className
    )}
    {...props}
  >
    {children}
    <ChevronRight className="ml-auto h-4 w-4" />
  </ContextMenuPrimitive.SubTrigger>
))
ContextMenuSubTrigger.displayName = ContextMenuPrimitive.SubTrigger.displayName

const ContextMenuSubContent = React.forwardRef<
  React.ElementRef<typeof ContextMenuPrimitive.SubContent>,
  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.SubContent>
>(({ className, ...props }, ref) => (
  <ContextMenuPrimitive.SubContent
    ref={ref}
    className={cn(
      "z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-context-menu-content-transform-origin]",
      className
    )}
    {...props}
  />
))
ContextMenuSubContent.displayName = ContextMenuPrimitive.SubContent.displayName

const ContextMenuContent = React.forwardRef<
  React.ElementRef<typeof ContextMenuPrimitive.Content>,
  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Content>
>(({ className, ...props }, ref) => (
  <ContextMenuPrimitive.Portal>
    <ContextMenuPrimitive.Content
      ref={ref}
      className={cn(
        "z-50 max-h-[--radix-context-menu-content-available-height] min-w-[8rem] overflow-y-auto overflow-x-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md animate-in fade-in-80 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-context-menu-content-transform-origin]",
        className
      )}
      {...props}
    />
  </ContextMenuPrimitive.Portal>
))
ContextMenuContent.displayName = ContextMenuPrimitive.Content.displayName

const ContextMenuItem = React.forwardRef<
  React.ElementRef<typeof ContextMenuPrimitive.Item>,
  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Item> & {
    inset?: boolean
  }
>(({ className, inset, ...props }, ref) => (
  <ContextMenuPrimitive.Item
    ref={ref}
    className={cn(
      "relative flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50",
      inset && "pl-8",
      className
    )}
    {...props}
  />
))
ContextMenuItem.displayName = ContextMenuPrimitive.Item.displayName

const ContextMenuCheckboxItem = React.forwardRef<
  React.ElementRef<typeof ContextMenuPrimitive.CheckboxItem>,
  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.CheckboxItem>
>(({ className, children, checked, ...props }, ref) => (
  <ContextMenuPrimitive.CheckboxItem
    ref={ref}
    className={cn(
      "relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50",
      className
    )}
    checked={checked}
    {...props}
  >
    <span className="absolute left-2 flex h-3.5 w-3.5 items-center justify-center">
      <ContextMenuPrimitive.ItemIndicator>
        <Check className="h-4 w-4" />
      </ContextMenuPrimitive.ItemIndicator>
    </span>
    {children}
  </ContextMenuPrimitive.CheckboxItem>
))
ContextMenuCheckboxItem.displayName =
  ContextMenuPrimitive.CheckboxItem.displayName

const ContextMenuRadioItem = React.forwardRef<
  React.ElementRef<typeof ContextMenuPrimitive.RadioItem>,
  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.RadioItem>
>(({ className, children, ...props }, ref) => (
  <ContextMenuPrimitive.RadioItem
    ref={ref}
    className={cn(
      "relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50",
      className
    )}
    {...props}
  >
    <span className="absolute left-2 flex h-3.5 w-3.5 items-center justify-center">
      <ContextMenuPrimitive.ItemIndicator>
        <Circle className="h-2 w-2 fill-current" />
      </ContextMenuPrimitive.ItemIndicator>
    </span>
    {children}
  </ContextMenuPrimitive.RadioItem>
))
ContextMenuRadioItem.displayName = ContextMenuPrimitive.RadioItem.displayName

const ContextMenuLabel = React.forwardRef<
  React.ElementRef<typeof ContextMenuPrimitive.Label>,
  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Label> & {
    inset?: boolean
  }
>(({ className, inset, ...props }, ref) => (
  <ContextMenuPrimitive.Label
    ref={ref}
    className={cn(
      "px-2 py-1.5 text-sm font-semibold text-foreground",
      inset && "pl-8",
      className
    )}
    {...props}
  />
))
ContextMenuLabel.displayName = ContextMenuPrimitive.Label.displayName

const ContextMenuSeparator = React.forwardRef<
  React.ElementRef<typeof ContextMenuPrimitive.Separator>,
  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Separator>
>(({ className, ...props }, ref) => (
  <ContextMenuPrimitive.Separator
    ref={ref}
    className={cn("-mx-1 my-1 h-px bg-border", className)}
    {...props}
  />
))
ContextMenuSeparator.displayName = ContextMenuPrimitive.Separator.displayName

const ContextMenuShortcut = ({
  className,
  ...props
}: React.HTMLAttributes<HTMLSpanElement>) => {
  return (
    <span
      className={cn(
        "ml-auto text-xs tracking-widest text-muted-foreground",
        className
      )}
      {...props}
    />
  )
}
ContextMenuShortcut.displayName = "ContextMenuShortcut"

export {
  ContextMenu,
  ContextMenuTrigger,
  ContextMenuContent,
  ContextMenuItem,
  ContextMenuCheckboxItem,
  ContextMenuRadioItem,
  ContextMenuLabel,
  ContextMenuSeparator,
  ContextMenuShortcut,
  ContextMenuGroup,
  ContextMenuPortal,
  ContextMenuSub,
  ContextMenuSubContent,
  ContextMenuSubTrigger,
  ContextMenuRadioGroup,
}


================================================================================
END: D:\QiEOS\QiAllyPortal\client\src\components\ui\context-menu.tsx
================================================================================


================================================================================
FILE: D:\QiEOS\QiAllyPortal\client\src\components\ui\dialog.tsx
================================================================================

"use client"

import * as React from "react"
import * as DialogPrimitive from "@radix-ui/react-dialog"
import { X } from "lucide-react"

import { cn } from "@/lib/utils"

const Dialog = DialogPrimitive.Root

const DialogTrigger = DialogPrimitive.Trigger

const DialogPortal = DialogPrimitive.Portal

const DialogClose = DialogPrimitive.Close

const DialogOverlay = React.forwardRef<
  React.ElementRef<typeof DialogPrimitive.Overlay>,
  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Overlay>
>(({ className, ...props }, ref) => (
  <DialogPrimitive.Overlay
    ref={ref}
    className={cn(
      "fixed inset-0 z-50 bg-black/80 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0",
      className
    )}
    {...props}
  />
))
DialogOverlay.displayName = DialogPrimitive.Overlay.displayName

const DialogContent = React.forwardRef<
  React.ElementRef<typeof DialogPrimitive.Content>,
  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Content>
>(({ className, children, ...props }, ref) => (
  <DialogPortal>
    <DialogOverlay />
    <DialogPrimitive.Content
      ref={ref}
      className={cn(
        "fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg",
        className
      )}
      {...props}
    >
      {children}
      <DialogPrimitive.Close className="absolute right-4 top-4 rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-accent data-[state=open]:text-muted-foreground">
        <X className="h-4 w-4" />
        <span className="sr-only">Close</span>
      </DialogPrimitive.Close>
    </DialogPrimitive.Content>
  </DialogPortal>
))
DialogContent.displayName = DialogPrimitive.Content.displayName

const DialogHeader = ({
  className,
  ...props
}: React.HTMLAttributes<HTMLDivElement>) => (
  <div
    className={cn(
      "flex flex-col space-y-1.5 text-center sm:text-left",
      className
    )}
    {...props}
  />
)
DialogHeader.displayName = "DialogHeader"

const DialogFooter = ({
  className,
  ...props
}: React.HTMLAttributes<HTMLDivElement>) => (
  <div
    className={cn(
      "flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2",
      className
    )}
    {...props}
  />
)
DialogFooter.displayName = "DialogFooter"

const DialogTitle = React.forwardRef<
  React.ElementRef<typeof DialogPrimitive.Title>,
  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Title>
>(({ className, ...props }, ref) => (
  <DialogPrimitive.Title
    ref={ref}
    className={cn(
      "text-lg font-semibold leading-none tracking-tight",
      className
    )}
    {...props}
  />
))
DialogTitle.displayName = DialogPrimitive.Title.displayName

const DialogDescription = React.forwardRef<
  React.ElementRef<typeof DialogPrimitive.Description>,
  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Description>
>(({ className, ...props }, ref) => (
  <DialogPrimitive.Description
    ref={ref}
    className={cn("text-sm text-muted-foreground", className)}
    {...props}
  />
))
DialogDescription.displayName = DialogPrimitive.Description.displayName

export {
  Dialog,
  DialogPortal,
  DialogOverlay,
  DialogClose,
  DialogTrigger,
  DialogContent,
  DialogHeader,
  DialogFooter,
  DialogTitle,
  DialogDescription,
}


================================================================================
END: D:\QiEOS\QiAllyPortal\client\src\components\ui\dialog.tsx
================================================================================


================================================================================
FILE: D:\QiEOS\QiAllyPortal\client\src\components\ui\drawer.tsx
================================================================================

"use client"

import * as React from "react"
import { Drawer as DrawerPrimitive } from "vaul"

import { cn } from "@/lib/utils"

const Drawer = ({
  shouldScaleBackground = true,
  ...props
}: React.ComponentProps<typeof DrawerPrimitive.Root>) => (
  <DrawerPrimitive.Root
    shouldScaleBackground={shouldScaleBackground}
    {...props}
  />
)
Drawer.displayName = "Drawer"

const DrawerTrigger = DrawerPrimitive.Trigger

const DrawerPortal = DrawerPrimitive.Portal

const DrawerClose = DrawerPrimitive.Close

const DrawerOverlay = React.forwardRef<
  React.ElementRef<typeof DrawerPrimitive.Overlay>,
  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Overlay>
>(({ className, ...props }, ref) => (
  <DrawerPrimitive.Overlay
    ref={ref}
    className={cn("fixed inset-0 z-50 bg-black/80", className)}
    {...props}
  />
))
DrawerOverlay.displayName = DrawerPrimitive.Overlay.displayName

const DrawerContent = React.forwardRef<
  React.ElementRef<typeof DrawerPrimitive.Content>,
  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Content>
>(({ className, children, ...props }, ref) => (
  <DrawerPortal>
    <DrawerOverlay />
    <DrawerPrimitive.Content
      ref={ref}
      className={cn(
        "fixed inset-x-0 bottom-0 z-50 mt-24 flex h-auto flex-col rounded-t-[10px] border bg-background",
        className
      )}
      {...props}
    >
      <div className="mx-auto mt-4 h-2 w-[100px] rounded-full bg-muted" />
      {children}
    </DrawerPrimitive.Content>
  </DrawerPortal>
))
DrawerContent.displayName = "DrawerContent"

const DrawerHeader = ({
  className,
  ...props
}: React.HTMLAttributes<HTMLDivElement>) => (
  <div
    className={cn("grid gap-1.5 p-4 text-center sm:text-left", className)}
    {...props}
  />
)
DrawerHeader.displayName = "DrawerHeader"

const DrawerFooter = ({
  className,
  ...props
}: React.HTMLAttributes<HTMLDivElement>) => (
  <div
    className={cn("mt-auto flex flex-col gap-2 p-4", className)}
    {...props}
  />
)
DrawerFooter.displayName = "DrawerFooter"

const DrawerTitle = React.forwardRef<
  React.ElementRef<typeof DrawerPrimitive.Title>,
  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Title>
>(({ className, ...props }, ref) => (
  <DrawerPrimitive.Title
    ref={ref}
    className={cn(
      "text-lg font-semibold leading-none tracking-tight",
      className
    )}
    {...props}
  />
))
DrawerTitle.displayName = DrawerPrimitive.Title.displayName

const DrawerDescription = React.forwardRef<
  React.ElementRef<typeof DrawerPrimitive.Description>,
  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Description>
>(({ className, ...props }, ref) => (
  <DrawerPrimitive.Description
    ref={ref}
    className={cn("text-sm text-muted-foreground", className)}
    {...props}
  />
))
DrawerDescription.displayName = DrawerPrimitive.Description.displayName

export {
  Drawer,
  DrawerPortal,
  DrawerOverlay,
  DrawerTrigger,
  DrawerClose,
  DrawerContent,
  DrawerHeader,
  DrawerFooter,
  DrawerTitle,
  DrawerDescription,
}


================================================================================
END: D:\QiEOS\QiAllyPortal\client\src\components\ui\drawer.tsx
================================================================================


================================================================================
FILE: D:\QiEOS\QiAllyPortal\client\src\components\ui\dropdown-menu.tsx
================================================================================

import * as React from "react"
import * as DropdownMenuPrimitive from "@radix-ui/react-dropdown-menu"
import { Check, ChevronRight, Circle } from "lucide-react"

import { cn } from "@/lib/utils"

const DropdownMenu = DropdownMenuPrimitive.Root

const DropdownMenuTrigger = DropdownMenuPrimitive.Trigger

const DropdownMenuGroup = DropdownMenuPrimitive.Group

const DropdownMenuPortal = DropdownMenuPrimitive.Portal

const DropdownMenuSub = DropdownMenuPrimitive.Sub

const DropdownMenuRadioGroup = DropdownMenuPrimitive.RadioGroup

const DropdownMenuSubTrigger = React.forwardRef<
  React.ElementRef<typeof DropdownMenuPrimitive.SubTrigger>,
  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.SubTrigger> & {
    inset?: boolean
  }
>(({ className, inset, children, ...props }, ref) => (
  <DropdownMenuPrimitive.SubTrigger
    ref={ref}
    className={cn(
      "flex cursor-default select-none items-center gap-2 rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent data-[state=open]:bg-accent [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0",
      inset && "pl-8",
      className
    )}
    {...props}
  >
    {children}
    <ChevronRight className="ml-auto" />
  </DropdownMenuPrimitive.SubTrigger>
))
DropdownMenuSubTrigger.displayName =
  DropdownMenuPrimitive.SubTrigger.displayName

const DropdownMenuSubContent = React.forwardRef<
  React.ElementRef<typeof DropdownMenuPrimitive.SubContent>,
  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.SubContent>
>(({ className, ...props }, ref) => (
  <DropdownMenuPrimitive.SubContent
    ref={ref}
    className={cn(
      "z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-lg data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-dropdown-menu-content-transform-origin]",
      className
    )}
    {...props}
  />
))
DropdownMenuSubContent.displayName =
  DropdownMenuPrimitive.SubContent.displayName

const DropdownMenuContent = React.forwardRef<
  React.ElementRef<typeof DropdownMenuPrimitive.Content>,
  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Content>
>(({ className, sideOffset = 4, ...props }, ref) => (
  <DropdownMenuPrimitive.Portal>
    <DropdownMenuPrimitive.Content
      ref={ref}
      sideOffset={sideOffset}
      className={cn(
        "z-50 max-h-[var(--radix-dropdown-menu-content-available-height)] min-w-[8rem] overflow-y-auto overflow-x-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-dropdown-menu-content-transform-origin]",
        className
      )}
      {...props}
    />
  </DropdownMenuPrimitive.Portal>
))
DropdownMenuContent.displayName = DropdownMenuPrimitive.Content.displayName

const DropdownMenuItem = React.forwardRef<
  React.ElementRef<typeof DropdownMenuPrimitive.Item>,
  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Item> & {
    inset?: boolean
  }
>(({ className, inset, ...props }, ref) => (
  <DropdownMenuPrimitive.Item
    ref={ref}
    className={cn(
      "relative flex cursor-default select-none items-center gap-2 rounded-sm px-2 py-1.5 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0",
      inset && "pl-8",
      className
    )}
    {...props}
  />
))
DropdownMenuItem.displayName = DropdownMenuPrimitive.Item.displayName

const DropdownMenuCheckboxItem = React.forwardRef<
  React.ElementRef<typeof DropdownMenuPrimitive.CheckboxItem>,
  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.CheckboxItem>
>(({ className, children, checked, ...props }, ref) => (
  <DropdownMenuPrimitive.CheckboxItem
    ref={ref}
    className={cn(
      "relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50",
      className
    )}
    checked={checked}
    {...props}
  >
    <span className="absolute left-2 flex h-3.5 w-3.5 items-center justify-center">
      <DropdownMenuPrimitive.ItemIndicator>
        <Check className="h-4 w-4" />
      </DropdownMenuPrimitive.ItemIndicator>
    </span>
    {children}
  </DropdownMenuPrimitive.CheckboxItem>
))
DropdownMenuCheckboxItem.displayName =
  DropdownMenuPrimitive.CheckboxItem.displayName

const DropdownMenuRadioItem = React.forwardRef<
  React.ElementRef<typeof DropdownMenuPrimitive.RadioItem>,
  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.RadioItem>
>(({ className, children, ...props }, ref) => (
  <DropdownMenuPrimitive.RadioItem
    ref={ref}
    className={cn(
      "relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50",
      className
    )}
    {...props}
  >
    <span className="absolute left-2 flex h-3.5 w-3.5 items-center justify-center">
      <DropdownMenuPrimitive.ItemIndicator>
        <Circle className="h-2 w-2 fill-current" />
      </DropdownMenuPrimitive.ItemIndicator>
    </span>
    {children}
  </DropdownMenuPrimitive.RadioItem>
))
DropdownMenuRadioItem.displayName = DropdownMenuPrimitive.RadioItem.displayName

const DropdownMenuLabel = React.forwardRef<
  React.ElementRef<typeof DropdownMenuPrimitive.Label>,
  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Label> & {
    inset?: boolean
  }
>(({ className, inset, ...props }, ref) => (
  <DropdownMenuPrimitive.Label
    ref={ref}
    className={cn(
      "px-2 py-1.5 text-sm font-semibold",
      inset && "pl-8",
      className
    )}
    {...props}
  />
))
DropdownMenuLabel.displayName = DropdownMenuPrimitive.Label.displayName

const DropdownMenuSeparator = React.forwardRef<
  React.ElementRef<typeof DropdownMenuPrimitive.Separator>,
  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Separator>
>(({ className, ...props }, ref) => (
  <DropdownMenuPrimitive.Separator
    ref={ref}
    className={cn("-mx-1 my-1 h-px bg-muted", className)}
    {...props}
  />
))
DropdownMenuSeparator.displayName = DropdownMenuPrimitive.Separator.displayName

const DropdownMenuShortcut = ({
  className,
  ...props
}: React.HTMLAttributes<HTMLSpanElement>) => {
  return (
    <span
      className={cn("ml-auto text-xs tracking-widest opacity-60", className)}
      {...props}
    />
  )
}
DropdownMenuShortcut.displayName = "DropdownMenuShortcut"

export {
  DropdownMenu,
  DropdownMenuTrigger,
  DropdownMenuContent,
  DropdownMenuItem,
  DropdownMenuCheckboxItem,
  DropdownMenuRadioItem,
  DropdownMenuLabel,
  DropdownMenuSeparator,
  DropdownMenuShortcut,
  DropdownMenuGroup,
  DropdownMenuPortal,
  DropdownMenuSub,
  DropdownMenuSubContent,
  DropdownMenuSubTrigger,
  DropdownMenuRadioGroup,
}


================================================================================
END: D:\QiEOS\QiAllyPortal\client\src\components\ui\dropdown-menu.tsx
================================================================================


================================================================================
FILE: D:\QiEOS\QiAllyPortal\client\src\components\ui\form.tsx
================================================================================

"use client"

import * as React from "react"
import * as LabelPrimitive from "@radix-ui/react-label"
import { Slot } from "@radix-ui/react-slot"
import {
  Controller,
  FormProvider,
  useFormContext,
  type ControllerProps,
  type FieldPath,
  type FieldValues,
} from "react-hook-form"

import { cn } from "@/lib/utils"
import { Label } from "@/components/ui/label"

const Form = FormProvider

type FormFieldContextValue<
  TFieldValues extends FieldValues = FieldValues,
  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>
> = {
  name: TName
}

const FormFieldContext = React.createContext<FormFieldContextValue>(
  {} as FormFieldContextValue
)

const FormField = <
  TFieldValues extends FieldValues = FieldValues,
  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>
>({
  ...props
}: ControllerProps<TFieldValues, TName>) => {
  return (
    <FormFieldContext.Provider value={{ name: props.name }}>
      <Controller {...props} />
    </FormFieldContext.Provider>
  )
}

const useFormField = () => {
  const fieldContext = React.useContext(FormFieldContext)
  const itemContext = React.useContext(FormItemContext)
  const { getFieldState, formState } = useFormContext()

  const fieldState = getFieldState(fieldContext.name, formState)

  if (!fieldContext) {
    throw new Error("useFormField should be used within <FormField>")
  }

  const { id } = itemContext

  return {
    id,
    name: fieldContext.name,
    formItemId: `${id}-form-item`,
    formDescriptionId: `${id}-form-item-description`,
    formMessageId: `${id}-form-item-message`,
    ...fieldState,
  }
}

type FormItemContextValue = {
  id: string
}

const FormItemContext = React.createContext<FormItemContextValue>(
  {} as FormItemContextValue
)

const FormItem = React.forwardRef<
  HTMLDivElement,
  React.HTMLAttributes<HTMLDivElement>
>(({ className, ...props }, ref) => {
  const id = React.useId()

  return (
    <FormItemContext.Provider value={{ id }}>
      <div ref={ref} className={cn("space-y-2", className)} {...props} />
    </FormItemContext.Provider>
  )
})
FormItem.displayName = "FormItem"

const FormLabel = React.forwardRef<
  React.ElementRef<typeof LabelPrimitive.Root>,
  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root>
>(({ className, ...props }, ref) => {
  const { error, formItemId } = useFormField()

  return (
    <Label
      ref={ref}
      className={cn(error && "text-destructive", className)}
      htmlFor={formItemId}
      {...props}
    />
  )
})
FormLabel.displayName = "FormLabel"

const FormControl = React.forwardRef<
  React.ElementRef<typeof Slot>,
  React.ComponentPropsWithoutRef<typeof Slot>
>(({ ...props }, ref) => {
  const { error, formItemId, formDescriptionId, formMessageId } = useFormField()

  return (
    <Slot
      ref={ref}
      id={formItemId}
      aria-describedby={
        !error
          ? `${formDescriptionId}`
          : `${formDescriptionId} ${formMessageId}`
      }
      aria-invalid={!!error}
      {...props}
    />
  )
})
FormControl.displayName = "FormControl"

const FormDescription = React.forwardRef<
  HTMLParagraphElement,
  React.HTMLAttributes<HTMLParagraphElement>
>(({ className, ...props }, ref) => {
  const { formDescriptionId } = useFormField()

  return (
    <p
      ref={ref}
      id={formDescriptionId}
      className={cn("text-sm text-muted-foreground", className)}
      {...props}
    />
  )
})
FormDescription.displayName = "FormDescription"

const FormMessage = React.forwardRef<
  HTMLParagraphElement,
  React.HTMLAttributes<HTMLParagraphElement>
>(({ className, children, ...props }, ref) => {
  const { error, formMessageId } = useFormField()
  const body = error ? String(error?.message ?? "") : children

  if (!body) {
    return null
  }

  return (
    <p
      ref={ref}
      id={formMessageId}
      className={cn("text-sm font-medium text-destructive", className)}
      {...props}
    >
      {body}
    </p>
  )
})
FormMessage.displayName = "FormMessage"

export {
  useFormField,
  Form,
  FormItem,
  FormLabel,
  FormControl,
  FormDescription,
  FormMessage,
  FormField,
}


================================================================================
END: D:\QiEOS\QiAllyPortal\client\src\components\ui\form.tsx
================================================================================


================================================================================
FILE: D:\QiEOS\QiAllyPortal\client\src\components\ui\hover-card.tsx
================================================================================

"use client"

import * as React from "react"
import * as HoverCardPrimitive from "@radix-ui/react-hover-card"

import { cn } from "@/lib/utils"

const HoverCard = HoverCardPrimitive.Root

const HoverCardTrigger = HoverCardPrimitive.Trigger

const HoverCardContent = React.forwardRef<
  React.ElementRef<typeof HoverCardPrimitive.Content>,
  React.ComponentPropsWithoutRef<typeof HoverCardPrimitive.Content>
>(({ className, align = "center", sideOffset = 4, ...props }, ref) => (
  <HoverCardPrimitive.Content
    ref={ref}
    align={align}
    sideOffset={sideOffset}
    className={cn(
      "z-50 w-64 rounded-md border bg-popover p-4 text-popover-foreground shadow-md outline-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-hover-card-content-transform-origin]",
      className
    )}
    {...props}
  />
))
HoverCardContent.displayName = HoverCardPrimitive.Content.displayName

export { HoverCard, HoverCardTrigger, HoverCardContent }


================================================================================
END: D:\QiEOS\QiAllyPortal\client\src\components\ui\hover-card.tsx
================================================================================


================================================================================
FILE: D:\QiEOS\QiAllyPortal\client\src\components\ui\input-otp.tsx
================================================================================

import * as React from "react"
import { OTPInput, OTPInputContext } from "input-otp"
import { Dot } from "lucide-react"

import { cn } from "@/lib/utils"

const InputOTP = React.forwardRef<
  React.ElementRef<typeof OTPInput>,
  React.ComponentPropsWithoutRef<typeof OTPInput>
>(({ className, containerClassName, ...props }, ref) => (
  <OTPInput
    ref={ref}
    containerClassName={cn(
      "flex items-center gap-2 has-[:disabled]:opacity-50",
      containerClassName
    )}
    className={cn("disabled:cursor-not-allowed", className)}
    {...props}
  />
))
InputOTP.displayName = "InputOTP"

const InputOTPGroup = React.forwardRef<
  React.ElementRef<"div">,
  React.ComponentPropsWithoutRef<"div">
>(({ className, ...props }, ref) => (
  <div ref={ref} className={cn("flex items-center", className)} {...props} />
))
InputOTPGroup.displayName = "InputOTPGroup"

const InputOTPSlot = React.forwardRef<
  React.ElementRef<"div">,
  React.ComponentPropsWithoutRef<"div"> & { index: number }
>(({ index, className, ...props }, ref) => {
  const inputOTPContext = React.useContext(OTPInputContext)
  const { char, hasFakeCaret, isActive } = inputOTPContext.slots[index]

  return (
    <div
      ref={ref}
      className={cn(
        "relative flex h-10 w-10 items-center justify-center border-y border-r border-input text-sm transition-all first:rounded-l-md first:border-l last:rounded-r-md",
        isActive && "z-10 ring-2 ring-ring ring-offset-background",
        className
      )}
      {...props}
    >
      {char}
      {hasFakeCaret && (
        <div className="pointer-events-none absolute inset-0 flex items-center justify-center">
          <div className="h-4 w-px animate-caret-blink bg-foreground duration-1000" />
        </div>
      )}
    </div>
  )
})
InputOTPSlot.displayName = "InputOTPSlot"

const InputOTPSeparator = React.forwardRef<
  React.ElementRef<"div">,
  React.ComponentPropsWithoutRef<"div">
>(({ ...props }, ref) => (
  <div ref={ref} role="separator" {...props}>
    <Dot />
  </div>
))
InputOTPSeparator.displayName = "InputOTPSeparator"

export { InputOTP, InputOTPGroup, InputOTPSlot, InputOTPSeparator }


================================================================================
END: D:\QiEOS\QiAllyPortal\client\src\components\ui\input-otp.tsx
================================================================================


================================================================================
FILE: D:\QiEOS\QiAllyPortal\client\src\components\ui\input.tsx
================================================================================

import * as React from "react"

import { cn } from "@/lib/utils"

const Input = React.forwardRef<HTMLInputElement, React.ComponentProps<"input">>(
  ({ className, type, ...props }, ref) => {
    return (
      <input
        type={type}
        className={cn(
          "flex h-10 w-full rounded-md border border-input bg-background px-3 py-2 text-base ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium file:text-foreground placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 md:text-sm",
          className
        )}
        ref={ref}
        {...props}
      />
    )
  }
)
Input.displayName = "Input"

export { Input }


================================================================================
END: D:\QiEOS\QiAllyPortal\client\src\components\ui\input.tsx
================================================================================


================================================================================
FILE: D:\QiEOS\QiAllyPortal\client\src\components\ui\label.tsx
================================================================================

import * as React from "react"
import * as LabelPrimitive from "@radix-ui/react-label"
import { cva, type VariantProps } from "class-variance-authority"

import { cn } from "@/lib/utils"

const labelVariants = cva(
  "text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70"
)

const Label = React.forwardRef<
  React.ElementRef<typeof LabelPrimitive.Root>,
  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root> &
    VariantProps<typeof labelVariants>
>(({ className, ...props }, ref) => (
  <LabelPrimitive.Root
    ref={ref}
    className={cn(labelVariants(), className)}
    {...props}
  />
))
Label.displayName = LabelPrimitive.Root.displayName

export { Label }


================================================================================
END: D:\QiEOS\QiAllyPortal\client\src\components\ui\label.tsx
================================================================================


================================================================================
FILE: D:\QiEOS\QiAllyPortal\client\src\components\ui\menubar.tsx
================================================================================

"use client"

import * as React from "react"
import * as MenubarPrimitive from "@radix-ui/react-menubar"
import { Check, ChevronRight, Circle } from "lucide-react"

import { cn } from "@/lib/utils"

function MenubarMenu({
  ...props
}: React.ComponentProps<typeof MenubarPrimitive.Menu>) {
  return <MenubarPrimitive.Menu {...props} />
}

function MenubarGroup({
  ...props
}: React.ComponentProps<typeof MenubarPrimitive.Group>) {
  return <MenubarPrimitive.Group {...props} />
}

function MenubarPortal({
  ...props
}: React.ComponentProps<typeof MenubarPrimitive.Portal>) {
  return <MenubarPrimitive.Portal {...props} />
}

function MenubarRadioGroup({
  ...props
}: React.ComponentProps<typeof MenubarPrimitive.RadioGroup>) {
  return <MenubarPrimitive.RadioGroup {...props} />
}

function MenubarSub({
  ...props
}: React.ComponentProps<typeof MenubarPrimitive.Sub>) {
  return <MenubarPrimitive.Sub data-slot="menubar-sub" {...props} />
}

const Menubar = React.forwardRef<
  React.ElementRef<typeof MenubarPrimitive.Root>,
  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Root>
>(({ className, ...props }, ref) => (
  <MenubarPrimitive.Root
    ref={ref}
    className={cn(
      "flex h-10 items-center space-x-1 rounded-md border bg-background p-1",
      className
    )}
    {...props}
  />
))
Menubar.displayName = MenubarPrimitive.Root.displayName

const MenubarTrigger = React.forwardRef<
  React.ElementRef<typeof MenubarPrimitive.Trigger>,
  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Trigger>
>(({ className, ...props }, ref) => (
  <MenubarPrimitive.Trigger
    ref={ref}
    className={cn(
      "flex cursor-default select-none items-center rounded-sm px-3 py-1.5 text-sm font-medium outline-none focus:bg-accent focus:text-accent-foreground data-[state=open]:bg-accent data-[state=open]:text-accent-foreground",
      className
    )}
    {...props}
  />
))
MenubarTrigger.displayName = MenubarPrimitive.Trigger.displayName

const MenubarSubTrigger = React.forwardRef<
  React.ElementRef<typeof MenubarPrimitive.SubTrigger>,
  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.SubTrigger> & {
    inset?: boolean
  }
>(({ className, inset, children, ...props }, ref) => (
  <MenubarPrimitive.SubTrigger
    ref={ref}
    className={cn(
      "flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[state=open]:bg-accent data-[state=open]:text-accent-foreground",
      inset && "pl-8",
      className
    )}
    {...props}
  >
    {children}
    <ChevronRight className="ml-auto h-4 w-4" />
  </MenubarPrimitive.SubTrigger>
))
MenubarSubTrigger.displayName = MenubarPrimitive.SubTrigger.displayName

const MenubarSubContent = React.forwardRef<
  React.ElementRef<typeof MenubarPrimitive.SubContent>,
  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.SubContent>
>(({ className, ...props }, ref) => (
  <MenubarPrimitive.SubContent
    ref={ref}
    className={cn(
      "z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-menubar-content-transform-origin]",
      className
    )}
    {...props}
  />
))
MenubarSubContent.displayName = MenubarPrimitive.SubContent.displayName

const MenubarContent = React.forwardRef<
  React.ElementRef<typeof MenubarPrimitive.Content>,
  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Content>
>(
  (
    { className, align = "start", alignOffset = -4, sideOffset = 8, ...props },
    ref
  ) => (
    <MenubarPrimitive.Portal>
      <MenubarPrimitive.Content
        ref={ref}
        align={align}
        alignOffset={alignOffset}
        sideOffset={sideOffset}
        className={cn(
          "z-50 min-w-[12rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-menubar-content-transform-origin]",
          className
        )}
        {...props}
      />
    </MenubarPrimitive.Portal>
  )
)
MenubarContent.displayName = MenubarPrimitive.Content.displayName

const MenubarItem = React.forwardRef<
  React.ElementRef<typeof MenubarPrimitive.Item>,
  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Item> & {
    inset?: boolean
  }
>(({ className, inset, ...props }, ref) => (
  <MenubarPrimitive.Item
    ref={ref}
    className={cn(
      "relative flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50",
      inset && "pl-8",
      className
    )}
    {...props}
  />
))
MenubarItem.displayName = MenubarPrimitive.Item.displayName

const MenubarCheckboxItem = React.forwardRef<
  React.ElementRef<typeof MenubarPrimitive.CheckboxItem>,
  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.CheckboxItem>
>(({ className, children, checked, ...props }, ref) => (
  <MenubarPrimitive.CheckboxItem
    ref={ref}
    className={cn(
      "relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50",
      className
    )}
    checked={checked}
    {...props}
  >
    <span className="absolute left-2 flex h-3.5 w-3.5 items-center justify-center">
      <MenubarPrimitive.ItemIndicator>
        <Check className="h-4 w-4" />
      </MenubarPrimitive.ItemIndicator>
    </span>
    {children}
  </MenubarPrimitive.CheckboxItem>
))
MenubarCheckboxItem.displayName = MenubarPrimitive.CheckboxItem.displayName

const MenubarRadioItem = React.forwardRef<
  React.ElementRef<typeof MenubarPrimitive.RadioItem>,
  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.RadioItem>
>(({ className, children, ...props }, ref) => (
  <MenubarPrimitive.RadioItem
    ref={ref}
    className={cn(
      "relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50",
      className
    )}
    {...props}
  >
    <span className="absolute left-2 flex h-3.5 w-3.5 items-center justify-center">
      <MenubarPrimitive.ItemIndicator>
        <Circle className="h-2 w-2 fill-current" />
      </MenubarPrimitive.ItemIndicator>
    </span>
    {children}
  </MenubarPrimitive.RadioItem>
))
MenubarRadioItem.displayName = MenubarPrimitive.RadioItem.displayName

const MenubarLabel = React.forwardRef<
  React.ElementRef<typeof MenubarPrimitive.Label>,
  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Label> & {
    inset?: boolean
  }
>(({ className, inset, ...props }, ref) => (
  <MenubarPrimitive.Label
    ref={ref}
    className={cn(
      "px-2 py-1.5 text-sm font-semibold",
      inset && "pl-8",
      className
    )}
    {...props}
  />
))
MenubarLabel.displayName = MenubarPrimitive.Label.displayName

const MenubarSeparator = React.forwardRef<
  React.ElementRef<typeof MenubarPrimitive.Separator>,
  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Separator>
>(({ className, ...props }, ref) => (
  <MenubarPrimitive.Separator
    ref={ref}
    className={cn("-mx-1 my-1 h-px bg-muted", className)}
    {...props}
  />
))
MenubarSeparator.displayName = MenubarPrimitive.Separator.displayName

const MenubarShortcut = ({
  className,
  ...props
}: React.HTMLAttributes<HTMLSpanElement>) => {
  return (
    <span
      className={cn(
        "ml-auto text-xs tracking-widest text-muted-foreground",
        className
      )}
      {...props}
    />
  )
}
MenubarShortcut.displayname = "MenubarShortcut"

export {
  Menubar,
  MenubarMenu,
  MenubarTrigger,
  MenubarContent,
  MenubarItem,
  MenubarSeparator,
  MenubarLabel,
  MenubarCheckboxItem,
  MenubarRadioGroup,
  MenubarRadioItem,
  MenubarPortal,
  MenubarSubContent,
  MenubarSubTrigger,
  MenubarGroup,
  MenubarSub,
  MenubarShortcut,
}


================================================================================
END: D:\QiEOS\QiAllyPortal\client\src\components\ui\menubar.tsx
================================================================================


================================================================================
FILE: D:\QiEOS\QiAllyPortal\client\src\components\ui\navigation-menu.tsx
================================================================================

import * as React from "react"
import * as NavigationMenuPrimitive from "@radix-ui/react-navigation-menu"
import { cva } from "class-variance-authority"
import { ChevronDown } from "lucide-react"

import { cn } from "@/lib/utils"

const NavigationMenu = React.forwardRef<
  React.ElementRef<typeof NavigationMenuPrimitive.Root>,
  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Root>
>(({ className, children, ...props }, ref) => (
  <NavigationMenuPrimitive.Root
    ref={ref}
    className={cn(
      "relative z-10 flex max-w-max flex-1 items-center justify-center",
      className
    )}
    {...props}
  >
    {children}
    <NavigationMenuViewport />
  </NavigationMenuPrimitive.Root>
))
NavigationMenu.displayName = NavigationMenuPrimitive.Root.displayName

const NavigationMenuList = React.forwardRef<
  React.ElementRef<typeof NavigationMenuPrimitive.List>,
  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.List>
>(({ className, ...props }, ref) => (
  <NavigationMenuPrimitive.List
    ref={ref}
    className={cn(
      "group flex flex-1 list-none items-center justify-center space-x-1",
      className
    )}
    {...props}
  />
))
NavigationMenuList.displayName = NavigationMenuPrimitive.List.displayName

const NavigationMenuItem = NavigationMenuPrimitive.Item

const navigationMenuTriggerStyle = cva(
  "group inline-flex h-10 w-max items-center justify-center rounded-md bg-background px-4 py-2 text-sm font-medium transition-colors hover:bg-accent hover:text-accent-foreground focus:bg-accent focus:text-accent-foreground focus:outline-none disabled:pointer-events-none disabled:opacity-50 data-[state=open]:text-accent-foreground data-[state=open]:bg-accent/50 data-[state=open]:hover:bg-accent data-[state=open]:focus:bg-accent"
)

const NavigationMenuTrigger = React.forwardRef<
  React.ElementRef<typeof NavigationMenuPrimitive.Trigger>,
  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Trigger>
>(({ className, children, ...props }, ref) => (
  <NavigationMenuPrimitive.Trigger
    ref={ref}
    className={cn(navigationMenuTriggerStyle(), "group", className)}
    {...props}
  >
    {children}{" "}
    <ChevronDown
      className="relative top-[1px] ml-1 h-3 w-3 transition duration-200 group-data-[state=open]:rotate-180"
      aria-hidden="true"
    />
  </NavigationMenuPrimitive.Trigger>
))
NavigationMenuTrigger.displayName = NavigationMenuPrimitive.Trigger.displayName

const NavigationMenuContent = React.forwardRef<
  React.ElementRef<typeof NavigationMenuPrimitive.Content>,
  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Content>
>(({ className, ...props }, ref) => (
  <NavigationMenuPrimitive.Content
    ref={ref}
    className={cn(
      "left-0 top-0 w-full data-[motion^=from-]:animate-in data-[motion^=to-]:animate-out data-[motion^=from-]:fade-in data-[motion^=to-]:fade-out data-[motion=from-end]:slide-in-from-right-52 data-[motion=from-start]:slide-in-from-left-52 data-[motion=to-end]:slide-out-to-right-52 data-[motion=to-start]:slide-out-to-left-52 md:absolute md:w-auto ",
      className
    )}
    {...props}
  />
))
NavigationMenuContent.displayName = NavigationMenuPrimitive.Content.displayName

const NavigationMenuLink = NavigationMenuPrimitive.Link

const NavigationMenuViewport = React.forwardRef<
  React.ElementRef<typeof NavigationMenuPrimitive.Viewport>,
  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Viewport>
>(({ className, ...props }, ref) => (
  <div className={cn("absolute left-0 top-full flex justify-center")}>
    <NavigationMenuPrimitive.Viewport
      className={cn(
        "origin-top-center relative mt-1.5 h-[var(--radix-navigation-menu-viewport-height)] w-full overflow-hidden rounded-md border bg-popover text-popover-foreground shadow-lg data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-90 md:w-[var(--radix-navigation-menu-viewport-width)]",
        className
      )}
      ref={ref}
      {...props}
    />
  </div>
))
NavigationMenuViewport.displayName =
  NavigationMenuPrimitive.Viewport.displayName

const NavigationMenuIndicator = React.forwardRef<
  React.ElementRef<typeof NavigationMenuPrimitive.Indicator>,
  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Indicator>
>(({ className, ...props }, ref) => (
  <NavigationMenuPrimitive.Indicator
    ref={ref}
    className={cn(
      "top-full z-[1] flex h-1.5 items-end justify-center overflow-hidden data-[state=visible]:animate-in data-[state=hidden]:animate-out data-[state=hidden]:fade-out data-[state=visible]:fade-in",
      className
    )}
    {...props}
  >
    <div className="relative top-[60%] h-2 w-2 rotate-45 rounded-tl-sm bg-border shadow-md" />
  </NavigationMenuPrimitive.Indicator>
))
NavigationMenuIndicator.displayName =
  NavigationMenuPrimitive.Indicator.displayName

export {
  navigationMenuTriggerStyle,
  NavigationMenu,
  NavigationMenuList,
  NavigationMenuItem,
  NavigationMenuContent,
  NavigationMenuTrigger,
  NavigationMenuLink,
  NavigationMenuIndicator,
  NavigationMenuViewport,
}


================================================================================
END: D:\QiEOS\QiAllyPortal\client\src\components\ui\navigation-menu.tsx
================================================================================


================================================================================
FILE: D:\QiEOS\QiAllyPortal\client\src\components\ui\pagination.tsx
================================================================================

import * as React from "react"
import { ChevronLeft, ChevronRight, MoreHorizontal } from "lucide-react"

import { cn } from "@/lib/utils"
import { ButtonProps, buttonVariants } from "@/components/ui/button"

const Pagination = ({ className, ...props }: React.ComponentProps<"nav">) => (
  <nav
    role="navigation"
    aria-label="pagination"
    className={cn("mx-auto flex w-full justify-center", className)}
    {...props}
  />
)
Pagination.displayName = "Pagination"

const PaginationContent = React.forwardRef<
  HTMLUListElement,
  React.ComponentProps<"ul">
>(({ className, ...props }, ref) => (
  <ul
    ref={ref}
    className={cn("flex flex-row items-center gap-1", className)}
    {...props}
  />
))
PaginationContent.displayName = "PaginationContent"

const PaginationItem = React.forwardRef<
  HTMLLIElement,
  React.ComponentProps<"li">
>(({ className, ...props }, ref) => (
  <li ref={ref} className={cn("", className)} {...props} />
))
PaginationItem.displayName = "PaginationItem"

type PaginationLinkProps = {
  isActive?: boolean
} & Pick<ButtonProps, "size"> &
  React.ComponentProps<"a">

const PaginationLink = ({
  className,
  isActive,
  size = "icon",
  ...props
}: PaginationLinkProps) => (
  <a
    aria-current={isActive ? "page" : undefined}
    className={cn(
      buttonVariants({
        variant: isActive ? "outline" : "ghost",
        size,
      }),
      className
    )}
    {...props}
  />
)
PaginationLink.displayName = "PaginationLink"

const PaginationPrevious = ({
  className,
  ...props
}: React.ComponentProps<typeof PaginationLink>) => (
  <PaginationLink
    aria-label="Go to previous page"
    size="default"
    className={cn("gap-1 pl-2.5", className)}
    {...props}
  >
    <ChevronLeft className="h-4 w-4" />
    <span>Previous</span>
  </PaginationLink>
)
PaginationPrevious.displayName = "PaginationPrevious"

const PaginationNext = ({
  className,
  ...props
}: React.ComponentProps<typeof PaginationLink>) => (
  <PaginationLink
    aria-label="Go to next page"
    size="default"
    className={cn("gap-1 pr-2.5", className)}
    {...props}
  >
    <span>Next</span>
    <ChevronRight className="h-4 w-4" />
  </PaginationLink>
)
PaginationNext.displayName = "PaginationNext"

const PaginationEllipsis = ({
  className,
  ...props
}: React.ComponentProps<"span">) => (
  <span
    aria-hidden
    className={cn("flex h-9 w-9 items-center justify-center", className)}
    {...props}
  >
    <MoreHorizontal className="h-4 w-4" />
    <span className="sr-only">More pages</span>
  </span>
)
PaginationEllipsis.displayName = "PaginationEllipsis"

export {
  Pagination,
  PaginationContent,
  PaginationEllipsis,
  PaginationItem,
  PaginationLink,
  PaginationNext,
  PaginationPrevious,
}


================================================================================
END: D:\QiEOS\QiAllyPortal\client\src\components\ui\pagination.tsx
================================================================================


================================================================================
FILE: D:\QiEOS\QiAllyPortal\client\src\components\ui\popover.tsx
================================================================================

import * as React from "react"
import * as PopoverPrimitive from "@radix-ui/react-popover"

import { cn } from "@/lib/utils"

const Popover = PopoverPrimitive.Root

const PopoverTrigger = PopoverPrimitive.Trigger

const PopoverContent = React.forwardRef<
  React.ElementRef<typeof PopoverPrimitive.Content>,
  React.ComponentPropsWithoutRef<typeof PopoverPrimitive.Content>
>(({ className, align = "center", sideOffset = 4, ...props }, ref) => (
  <PopoverPrimitive.Portal>
    <PopoverPrimitive.Content
      ref={ref}
      align={align}
      sideOffset={sideOffset}
      className={cn(
        "z-50 w-72 rounded-md border bg-popover p-4 text-popover-foreground shadow-md outline-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-popover-content-transform-origin]",
        className
      )}
      {...props}
    />
  </PopoverPrimitive.Portal>
))
PopoverContent.displayName = PopoverPrimitive.Content.displayName

export { Popover, PopoverTrigger, PopoverContent }


================================================================================
END: D:\QiEOS\QiAllyPortal\client\src\components\ui\popover.tsx
================================================================================


================================================================================
FILE: D:\QiEOS\QiAllyPortal\client\src\components\ui\progress.tsx
================================================================================

"use client"

import * as React from "react"
import * as ProgressPrimitive from "@radix-ui/react-progress"

import { cn } from "@/lib/utils"

const Progress = React.forwardRef<
  React.ElementRef<typeof ProgressPrimitive.Root>,
  React.ComponentPropsWithoutRef<typeof ProgressPrimitive.Root>
>(({ className, value, ...props }, ref) => (
  <ProgressPrimitive.Root
    ref={ref}
    className={cn(
      "relative h-4 w-full overflow-hidden rounded-full bg-secondary",
      className
    )}
    {...props}
  >
    <ProgressPrimitive.Indicator
      className="h-full w-full flex-1 bg-primary transition-all"
      style={{ transform: `translateX(-${100 - (value || 0)}%)` }}
    />
  </ProgressPrimitive.Root>
))
Progress.displayName = ProgressPrimitive.Root.displayName

export { Progress }


================================================================================
END: D:\QiEOS\QiAllyPortal\client\src\components\ui\progress.tsx
================================================================================


================================================================================
FILE: D:\QiEOS\QiAllyPortal\client\src\components\ui\radio-group.tsx
================================================================================

import * as React from "react"
import * as RadioGroupPrimitive from "@radix-ui/react-radio-group"
import { Circle } from "lucide-react"

import { cn } from "@/lib/utils"

const RadioGroup = React.forwardRef<
  React.ElementRef<typeof RadioGroupPrimitive.Root>,
  React.ComponentPropsWithoutRef<typeof RadioGroupPrimitive.Root>
>(({ className, ...props }, ref) => {
  return (
    <RadioGroupPrimitive.Root
      className={cn("grid gap-2", className)}
      {...props}
      ref={ref}
    />
  )
})
RadioGroup.displayName = RadioGroupPrimitive.Root.displayName

const RadioGroupItem = React.forwardRef<
  React.ElementRef<typeof RadioGroupPrimitive.Item>,
  React.ComponentPropsWithoutRef<typeof RadioGroupPrimitive.Item>
>(({ className, ...props }, ref) => {
  return (
    <RadioGroupPrimitive.Item
      ref={ref}
      className={cn(
        "aspect-square h-4 w-4 rounded-full border border-primary text-primary ring-offset-background focus:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50",
        className
      )}
      {...props}
    >
      <RadioGroupPrimitive.Indicator className="flex items-center justify-center">
        <Circle className="h-2.5 w-2.5 fill-current text-current" />
      </RadioGroupPrimitive.Indicator>
    </RadioGroupPrimitive.Item>
  )
})
RadioGroupItem.displayName = RadioGroupPrimitive.Item.displayName

export { RadioGroup, RadioGroupItem }


================================================================================
END: D:\QiEOS\QiAllyPortal\client\src\components\ui\radio-group.tsx
================================================================================


================================================================================
FILE: D:\QiEOS\QiAllyPortal\client\src\components\ui\resizable.tsx
================================================================================

"use client"

import { GripVertical } from "lucide-react"
import * as ResizablePrimitive from "react-resizable-panels"

import { cn } from "@/lib/utils"

const ResizablePanelGroup = ({
  className,
  ...props
}: React.ComponentProps<typeof ResizablePrimitive.PanelGroup>) => (
  <ResizablePrimitive.PanelGroup
    className={cn(
      "flex h-full w-full data-[panel-group-direction=vertical]:flex-col",
      className
    )}
    {...props}
  />
)

const ResizablePanel = ResizablePrimitive.Panel

const ResizableHandle = ({
  withHandle,
  className,
  ...props
}: React.ComponentProps<typeof ResizablePrimitive.PanelResizeHandle> & {
  withHandle?: boolean
}) => (
  <ResizablePrimitive.PanelResizeHandle
    className={cn(
      "relative flex w-px items-center justify-center bg-border after:absolute after:inset-y-0 after:left-1/2 after:w-1 after:-translate-x-1/2 focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring focus-visible:ring-offset-1 data-[panel-group-direction=vertical]:h-px data-[panel-group-direction=vertical]:w-full data-[panel-group-direction=vertical]:after:left-0 data-[panel-group-direction=vertical]:after:h-1 data-[panel-group-direction=vertical]:after:w-full data-[panel-group-direction=vertical]:after:-translate-y-1/2 data-[panel-group-direction=vertical]:after:translate-x-0 [&[data-panel-group-direction=vertical]>div]:rotate-90",
      className
    )}
    {...props}
  >
    {withHandle && (
      <div className="z-10 flex h-4 w-3 items-center justify-center rounded-sm border bg-border">
        <GripVertical className="h-2.5 w-2.5" />
      </div>
    )}
  </ResizablePrimitive.PanelResizeHandle>
)

export { ResizablePanelGroup, ResizablePanel, ResizableHandle }


================================================================================
END: D:\QiEOS\QiAllyPortal\client\src\components\ui\resizable.tsx
================================================================================


================================================================================
FILE: D:\QiEOS\QiAllyPortal\client\src\components\ui\scroll-area.tsx
================================================================================

import * as React from "react"
import * as ScrollAreaPrimitive from "@radix-ui/react-scroll-area"

import { cn } from "@/lib/utils"

const ScrollArea = React.forwardRef<
  React.ElementRef<typeof ScrollAreaPrimitive.Root>,
  React.ComponentPropsWithoutRef<typeof ScrollAreaPrimitive.Root>
>(({ className, children, ...props }, ref) => (
  <ScrollAreaPrimitive.Root
    ref={ref}
    className={cn("relative overflow-hidden", className)}
    {...props}
  >
    <ScrollAreaPrimitive.Viewport className="h-full w-full rounded-[inherit]">
      {children}
    </ScrollAreaPrimitive.Viewport>
    <ScrollBar />
    <ScrollAreaPrimitive.Corner />
  </ScrollAreaPrimitive.Root>
))
ScrollArea.displayName = ScrollAreaPrimitive.Root.displayName

const ScrollBar = React.forwardRef<
  React.ElementRef<typeof ScrollAreaPrimitive.ScrollAreaScrollbar>,
  React.ComponentPropsWithoutRef<typeof ScrollAreaPrimitive.ScrollAreaScrollbar>
>(({ className, orientation = "vertical", ...props }, ref) => (
  <ScrollAreaPrimitive.ScrollAreaScrollbar
    ref={ref}
    orientation={orientation}
    className={cn(
      "flex touch-none select-none transition-colors",
      orientation === "vertical" &&
        "h-full w-2.5 border-l border-l-transparent p-[1px]",
      orientation === "horizontal" &&
        "h-2.5 flex-col border-t border-t-transparent p-[1px]",
      className
    )}
    {...props}
  >
    <ScrollAreaPrimitive.ScrollAreaThumb className="relative flex-1 rounded-full bg-border" />
  </ScrollAreaPrimitive.ScrollAreaScrollbar>
))
ScrollBar.displayName = ScrollAreaPrimitive.ScrollAreaScrollbar.displayName

export { ScrollArea, ScrollBar }


================================================================================
END: D:\QiEOS\QiAllyPortal\client\src\components\ui\scroll-area.tsx
================================================================================


================================================================================
FILE: D:\QiEOS\QiAllyPortal\client\src\components\ui\select.tsx
================================================================================

"use client"

import * as React from "react"
import * as SelectPrimitive from "@radix-ui/react-select"
import { Check, ChevronDown, ChevronUp } from "lucide-react"

import { cn } from "@/lib/utils"

const Select = SelectPrimitive.Root

const SelectGroup = SelectPrimitive.Group

const SelectValue = SelectPrimitive.Value

const SelectTrigger = React.forwardRef<
  React.ElementRef<typeof SelectPrimitive.Trigger>,
  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Trigger>
>(({ className, children, ...props }, ref) => (
  <SelectPrimitive.Trigger
    ref={ref}
    className={cn(
      "flex h-10 w-full items-center justify-between rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background data-[placeholder]:text-muted-foreground focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 [&>span]:line-clamp-1",
      className
    )}
    {...props}
  >
    {children}
    <SelectPrimitive.Icon asChild>
      <ChevronDown className="h-4 w-4 opacity-50" />
    </SelectPrimitive.Icon>
  </SelectPrimitive.Trigger>
))
SelectTrigger.displayName = SelectPrimitive.Trigger.displayName

const SelectScrollUpButton = React.forwardRef<
  React.ElementRef<typeof SelectPrimitive.ScrollUpButton>,
  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollUpButton>
>(({ className, ...props }, ref) => (
  <SelectPrimitive.ScrollUpButton
    ref={ref}
    className={cn(
      "flex cursor-default items-center justify-center py-1",
      className
    )}
    {...props}
  >
    <ChevronUp className="h-4 w-4" />
  </SelectPrimitive.ScrollUpButton>
))
SelectScrollUpButton.displayName = SelectPrimitive.ScrollUpButton.displayName

const SelectScrollDownButton = React.forwardRef<
  React.ElementRef<typeof SelectPrimitive.ScrollDownButton>,
  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollDownButton>
>(({ className, ...props }, ref) => (
  <SelectPrimitive.ScrollDownButton
    ref={ref}
    className={cn(
      "flex cursor-default items-center justify-center py-1",
      className
    )}
    {...props}
  >
    <ChevronDown className="h-4 w-4" />
  </SelectPrimitive.ScrollDownButton>
))
SelectScrollDownButton.displayName =
  SelectPrimitive.ScrollDownButton.displayName

const SelectContent = React.forwardRef<
  React.ElementRef<typeof SelectPrimitive.Content>,
  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Content>
>(({ className, children, position = "popper", ...props }, ref) => (
  <SelectPrimitive.Portal>
    <SelectPrimitive.Content
      ref={ref}
      className={cn(
        "relative z-50 max-h-[--radix-select-content-available-height] min-w-[8rem] overflow-y-auto overflow-x-hidden rounded-md border bg-popover text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-select-content-transform-origin]",
        position === "popper" &&
          "data-[side=bottom]:translate-y-1 data-[side=left]:-translate-x-1 data-[side=right]:translate-x-1 data-[side=top]:-translate-y-1",
        className
      )}
      position={position}
      {...props}
    >
      <SelectScrollUpButton />
      <SelectPrimitive.Viewport
        className={cn(
          "p-1",
          position === "popper" &&
            "h-[var(--radix-select-trigger-height)] w-full min-w-[var(--radix-select-trigger-width)]"
        )}
      >
        {children}
      </SelectPrimitive.Viewport>
      <SelectScrollDownButton />
    </SelectPrimitive.Content>
  </SelectPrimitive.Portal>
))
SelectContent.displayName = SelectPrimitive.Content.displayName

const SelectLabel = React.forwardRef<
  React.ElementRef<typeof SelectPrimitive.Label>,
  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Label>
>(({ className, ...props }, ref) => (
  <SelectPrimitive.Label
    ref={ref}
    className={cn("py-1.5 pl-8 pr-2 text-sm font-semibold", className)}
    {...props}
  />
))
SelectLabel.displayName = SelectPrimitive.Label.displayName

const SelectItem = React.forwardRef<
  React.ElementRef<typeof SelectPrimitive.Item>,
  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Item>
>(({ className, children, ...props }, ref) => (
  <SelectPrimitive.Item
    ref={ref}
    className={cn(
      "relative flex w-full cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50",
      className
    )}
    {...props}
  >
    <span className="absolute left-2 flex h-3.5 w-3.5 items-center justify-center">
      <SelectPrimitive.ItemIndicator>
        <Check className="h-4 w-4" />
      </SelectPrimitive.ItemIndicator>
    </span>

    <SelectPrimitive.ItemText>{children}</SelectPrimitive.ItemText>
  </SelectPrimitive.Item>
))
SelectItem.displayName = SelectPrimitive.Item.displayName

const SelectSeparator = React.forwardRef<
  React.ElementRef<typeof SelectPrimitive.Separator>,
  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Separator>
>(({ className, ...props }, ref) => (
  <SelectPrimitive.Separator
    ref={ref}
    className={cn("-mx-1 my-1 h-px bg-muted", className)}
    {...props}
  />
))
SelectSeparator.displayName = SelectPrimitive.Separator.displayName

export {
  Select,
  SelectGroup,
  SelectValue,
  SelectTrigger,
  SelectContent,
  SelectLabel,
  SelectItem,
  SelectSeparator,
  SelectScrollUpButton,
  SelectScrollDownButton,
}


================================================================================
END: D:\QiEOS\QiAllyPortal\client\src\components\ui\select.tsx
================================================================================


================================================================================
FILE: D:\QiEOS\QiAllyPortal\client\src\components\ui\separator.tsx
================================================================================

import * as React from "react"
import * as SeparatorPrimitive from "@radix-ui/react-separator"

import { cn } from "@/lib/utils"

const Separator = React.forwardRef<
  React.ElementRef<typeof SeparatorPrimitive.Root>,
  React.ComponentPropsWithoutRef<typeof SeparatorPrimitive.Root>
>(
  (
    { className, orientation = "horizontal", decorative = true, ...props },
    ref
  ) => (
    <SeparatorPrimitive.Root
      ref={ref}
      decorative={decorative}
      orientation={orientation}
      className={cn(
        "shrink-0 bg-border",
        orientation === "horizontal" ? "h-[1px] w-full" : "h-full w-[1px]",
        className
      )}
      {...props}
    />
  )
)
Separator.displayName = SeparatorPrimitive.Root.displayName

export { Separator }


================================================================================
END: D:\QiEOS\QiAllyPortal\client\src\components\ui\separator.tsx
================================================================================


================================================================================
FILE: D:\QiEOS\QiAllyPortal\client\src\components\ui\sheet.tsx
================================================================================

"use client"

import * as React from "react"
import * as SheetPrimitive from "@radix-ui/react-dialog"
import { cva, type VariantProps } from "class-variance-authority"
import { X } from "lucide-react"

import { cn } from "@/lib/utils"

const Sheet = SheetPrimitive.Root

const SheetTrigger = SheetPrimitive.Trigger

const SheetClose = SheetPrimitive.Close

const SheetPortal = SheetPrimitive.Portal

const SheetOverlay = React.forwardRef<
  React.ElementRef<typeof SheetPrimitive.Overlay>,
  React.ComponentPropsWithoutRef<typeof SheetPrimitive.Overlay>
>(({ className, ...props }, ref) => (
  <SheetPrimitive.Overlay
    className={cn(
      "fixed inset-0 z-50 bg-black/80  data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0",
      className
    )}
    {...props}
    ref={ref}
  />
))
SheetOverlay.displayName = SheetPrimitive.Overlay.displayName

const sheetVariants = cva(
  "fixed z-50 gap-4 bg-background p-6 shadow-lg transition ease-in-out data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:duration-300 data-[state=open]:duration-500",
  {
    variants: {
      side: {
        top: "inset-x-0 top-0 border-b data-[state=closed]:slide-out-to-top data-[state=open]:slide-in-from-top",
        bottom:
          "inset-x-0 bottom-0 border-t data-[state=closed]:slide-out-to-bottom data-[state=open]:slide-in-from-bottom",
        left: "inset-y-0 left-0 h-full w-3/4 border-r data-[state=closed]:slide-out-to-left data-[state=open]:slide-in-from-left sm:max-w-sm",
        right:
          "inset-y-0 right-0 h-full w-3/4  border-l data-[state=closed]:slide-out-to-right data-[state=open]:slide-in-from-right sm:max-w-sm",
      },
    },
    defaultVariants: {
      side: "right",
    },
  }
)

interface SheetContentProps
  extends React.ComponentPropsWithoutRef<typeof SheetPrimitive.Content>,
    VariantProps<typeof sheetVariants> {}

const SheetContent = React.forwardRef<
  React.ElementRef<typeof SheetPrimitive.Content>,
  SheetContentProps
>(({ side = "right", className, children, ...props }, ref) => (
  <SheetPortal>
    <SheetOverlay />
    <SheetPrimitive.Content
      ref={ref}
      className={cn(sheetVariants({ side }), className)}
      {...props}
    >
      {children}
      <SheetPrimitive.Close className="absolute right-4 top-4 rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-secondary">
        <X className="h-4 w-4" />
        <span className="sr-only">Close</span>
      </SheetPrimitive.Close>
    </SheetPrimitive.Content>
  </SheetPortal>
))
SheetContent.displayName = SheetPrimitive.Content.displayName

const SheetHeader = ({
  className,
  ...props
}: React.HTMLAttributes<HTMLDivElement>) => (
  <div
    className={cn(
      "flex flex-col space-y-2 text-center sm:text-left",
      className
    )}
    {...props}
  />
)
SheetHeader.displayName = "SheetHeader"

const SheetFooter = ({
  className,
  ...props
}: React.HTMLAttributes<HTMLDivElement>) => (
  <div
    className={cn(
      "flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2",
      className
    )}
    {...props}
  />
)
SheetFooter.displayName = "SheetFooter"

const SheetTitle = React.forwardRef<
  React.ElementRef<typeof SheetPrimitive.Title>,
  React.ComponentPropsWithoutRef<typeof SheetPrimitive.Title>
>(({ className, ...props }, ref) => (
  <SheetPrimitive.Title
    ref={ref}
    className={cn("text-lg font-semibold text-foreground", className)}
    {...props}
  />
))
SheetTitle.displayName = SheetPrimitive.Title.displayName

const SheetDescription = React.forwardRef<
  React.ElementRef<typeof SheetPrimitive.Description>,
  React.ComponentPropsWithoutRef<typeof SheetPrimitive.Description>
>(({ className, ...props }, ref) => (
  <SheetPrimitive.Description
    ref={ref}
    className={cn("text-sm text-muted-foreground", className)}
    {...props}
  />
))
SheetDescription.displayName = SheetPrimitive.Description.displayName

export {
  Sheet,
  SheetPortal,
  SheetOverlay,
  SheetTrigger,
  SheetClose,
  SheetContent,
  SheetHeader,
  SheetFooter,
  SheetTitle,
  SheetDescription,
}


================================================================================
END: D:\QiEOS\QiAllyPortal\client\src\components\ui\sheet.tsx
================================================================================


================================================================================
FILE: D:\QiEOS\QiAllyPortal\client\src\components\ui\sidebar.tsx
================================================================================

import * as React from "react"
import { Slot } from "@radix-ui/react-slot"
import { VariantProps, cva } from "class-variance-authority"
import { PanelLeft } from "lucide-react"

import { useIsMobile } from "@/hooks/use-mobile"
import { cn } from "@/lib/utils"
import { Button } from "@/components/ui/button"
import { Input } from "@/components/ui/input"
import { Separator } from "@/components/ui/separator"
import {
  Sheet,
  SheetContent,
  SheetDescription,
  SheetHeader,
  SheetTitle,
} from "@/components/ui/sheet"
import { Skeleton } from "@/components/ui/skeleton"
import {
  Tooltip,
  TooltipContent,
  TooltipProvider,
  TooltipTrigger,
} from "@/components/ui/tooltip"

const SIDEBAR_COOKIE_NAME = "sidebar_state"
const SIDEBAR_COOKIE_MAX_AGE = 60 * 60 * 24 * 7
const SIDEBAR_WIDTH = "16rem"
const SIDEBAR_WIDTH_MOBILE = "18rem"
const SIDEBAR_WIDTH_ICON = "3rem"
const SIDEBAR_KEYBOARD_SHORTCUT = "b"

type SidebarContextProps = {
  state: "expanded" | "collapsed"
  open: boolean
  setOpen: (open: boolean) => void
  openMobile: boolean
  setOpenMobile: (open: boolean) => void
  isMobile: boolean
  toggleSidebar: () => void
}

const SidebarContext = React.createContext<SidebarContextProps | null>(null)

function useSidebar() {
  const context = React.useContext(SidebarContext)
  if (!context) {
    throw new Error("useSidebar must be used within a SidebarProvider.")
  }

  return context
}

const SidebarProvider = React.forwardRef<
  HTMLDivElement,
  React.ComponentProps<"div"> & {
    defaultOpen?: boolean
    open?: boolean
    onOpenChange?: (open: boolean) => void
  }
>(
  (
    {
      defaultOpen = true,
      open: openProp,
      onOpenChange: setOpenProp,
      className,
      style,
      children,
      ...props
    },
    ref
  ) => {
    const isMobile = useIsMobile()
    const [openMobile, setOpenMobile] = React.useState(false)

    // This is the internal state of the sidebar.
    // We use openProp and setOpenProp for control from outside the component.
    const [_open, _setOpen] = React.useState(defaultOpen)
    const open = openProp ?? _open
    const setOpen = React.useCallback(
      (value: boolean | ((value: boolean) => boolean)) => {
        const openState = typeof value === "function" ? value(open) : value
        if (setOpenProp) {
          setOpenProp(openState)
        } else {
          _setOpen(openState)
        }

        // This sets the cookie to keep the sidebar state.
        document.cookie = `${SIDEBAR_COOKIE_NAME}=${openState}; path=/; max-age=${SIDEBAR_COOKIE_MAX_AGE}`
      },
      [setOpenProp, open]
    )

    // Helper to toggle the sidebar.
    const toggleSidebar = React.useCallback(() => {
      return isMobile
        ? setOpenMobile((open) => !open)
        : setOpen((open) => !open)
    }, [isMobile, setOpen, setOpenMobile])

    // Adds a keyboard shortcut to toggle the sidebar.
    React.useEffect(() => {
      const handleKeyDown = (event: KeyboardEvent) => {
        if (
          event.key === SIDEBAR_KEYBOARD_SHORTCUT &&
          (event.metaKey || event.ctrlKey)
        ) {
          event.preventDefault()
          toggleSidebar()
        }
      }

      window.addEventListener("keydown", handleKeyDown)
      return () => window.removeEventListener("keydown", handleKeyDown)
    }, [toggleSidebar])

    // We add a state so that we can do data-state="expanded" or "collapsed".
    // This makes it easier to style the sidebar with Tailwind classes.
    const state = open ? "expanded" : "collapsed"

    const contextValue = React.useMemo<SidebarContextProps>(
      () => ({
        state,
        open,
        setOpen,
        isMobile,
        openMobile,
        setOpenMobile,
        toggleSidebar,
      }),
      [state, open, setOpen, isMobile, openMobile, setOpenMobile, toggleSidebar]
    )

    return (
      <SidebarContext.Provider value={contextValue}>
        <TooltipProvider delayDuration={0}>
          <div
            style={
              {
                "--sidebar-width": SIDEBAR_WIDTH,
                "--sidebar-width-icon": SIDEBAR_WIDTH_ICON,
                ...style,
              } as React.CSSProperties
            }
            className={cn(
              "group/sidebar-wrapper flex min-h-svh w-full has-[[data-variant=inset]]:bg-sidebar",
              className
            )}
            ref={ref}
            {...props}
          >
            {children}
          </div>
        </TooltipProvider>
      </SidebarContext.Provider>
    )
  }
)
SidebarProvider.displayName = "SidebarProvider"

const Sidebar = React.forwardRef<
  HTMLDivElement,
  React.ComponentProps<"div"> & {
    side?: "left" | "right"
    variant?: "sidebar" | "floating" | "inset"
    collapsible?: "offcanvas" | "icon" | "none"
  }
>(
  (
    {
      side = "left",
      variant = "sidebar",
      collapsible = "offcanvas",
      className,
      children,
      ...props
    },
    ref
  ) => {
    const { isMobile, state, openMobile, setOpenMobile } = useSidebar()

    if (collapsible === "none") {
      return (
        <div
          className={cn(
            "flex h-full w-[--sidebar-width] flex-col bg-sidebar text-sidebar-foreground",
            className
          )}
          ref={ref}
          {...props}
        >
          {children}
        </div>
      )
    }

    if (isMobile) {
      return (
        <Sheet open={openMobile} onOpenChange={setOpenMobile} {...props}>
          <SheetContent
            data-sidebar="sidebar"
            data-mobile="true"
            className="w-[--sidebar-width] bg-sidebar p-0 text-sidebar-foreground [&>button]:hidden"
            style={
              {
                "--sidebar-width": SIDEBAR_WIDTH_MOBILE,
              } as React.CSSProperties
            }
            side={side}
          >
            <SheetHeader className="sr-only">
              <SheetTitle>Sidebar</SheetTitle>
              <SheetDescription>Displays the mobile sidebar.</SheetDescription>
            </SheetHeader>
            <div className="flex h-full w-full flex-col">{children}</div>
          </SheetContent>
        </Sheet>
      )
    }

    return (
      <div
        ref={ref}
        className="group peer hidden text-sidebar-foreground md:block"
        data-state={state}
        data-collapsible={state === "collapsed" ? collapsible : ""}
        data-variant={variant}
        data-side={side}
      >
        {/* This is what handles the sidebar gap on desktop */}
        <div
          className={cn(
            "relative w-[--sidebar-width] bg-transparent transition-[width] duration-200 ease-linear",
            "group-data-[collapsible=offcanvas]:w-0",
            "group-data-[side=right]:rotate-180",
            variant === "floating" || variant === "inset"
              ? "group-data-[collapsible=icon]:w-[calc(var(--sidebar-width-icon)_+_theme(spacing.4))]"
              : "group-data-[collapsible=icon]:w-[--sidebar-width-icon]"
          )}
        />
        <div
          className={cn(
            "fixed inset-y-0 z-10 hidden h-svh w-[--sidebar-width] transition-[left,right,width] duration-200 ease-linear md:flex",
            side === "left"
              ? "left-0 group-data-[collapsible=offcanvas]:left-[calc(var(--sidebar-width)*-1)]"
              : "right-0 group-data-[collapsible=offcanvas]:right-[calc(var(--sidebar-width)*-1)]",
            // Adjust the padding for floating and inset variants.
            variant === "floating" || variant === "inset"
              ? "p-2 group-data-[collapsible=icon]:w-[calc(var(--sidebar-width-icon)_+_theme(spacing.4)_+2px)]"
              : "group-data-[collapsible=icon]:w-[--sidebar-width-icon] group-data-[side=left]:border-r group-data-[side=right]:border-l",
            className
          )}
          {...props}
        >
          <div
            data-sidebar="sidebar"
            className="flex h-full w-full flex-col bg-sidebar group-data-[variant=floating]:rounded-lg group-data-[variant=floating]:border group-data-[variant=floating]:border-sidebar-border group-data-[variant=floating]:shadow"
          >
            {children}
          </div>
        </div>
      </div>
    )
  }
)
Sidebar.displayName = "Sidebar"

const SidebarTrigger = React.forwardRef<
  React.ElementRef<typeof Button>,
  React.ComponentProps<typeof Button>
>(({ className, onClick, ...props }, ref) => {
  const { toggleSidebar } = useSidebar()

  return (
    <Button
      ref={ref}
      data-sidebar="trigger"
      variant="ghost"
      size="icon"
      className={cn("h-7 w-7", className)}
      onClick={(event) => {
        onClick?.(event)
        toggleSidebar()
      }}
      {...props}
    >
      <PanelLeft />
      <span className="sr-only">Toggle Sidebar</span>
    </Button>
  )
})
SidebarTrigger.displayName = "SidebarTrigger"

const SidebarRail = React.forwardRef<
  HTMLButtonElement,
  React.ComponentProps<"button">
>(({ className, ...props }, ref) => {
  const { toggleSidebar } = useSidebar()

  return (
    <button
      ref={ref}
      data-sidebar="rail"
      aria-label="Toggle Sidebar"
      tabIndex={-1}
      onClick={toggleSidebar}
      title="Toggle Sidebar"
      className={cn(
        "absolute inset-y-0 z-20 hidden w-4 -translate-x-1/2 transition-all ease-linear after:absolute after:inset-y-0 after:left-1/2 after:w-[2px] hover:after:bg-sidebar-border group-data-[side=left]:-right-4 group-data-[side=right]:left-0 sm:flex",
        "[[data-side=left]_&]:cursor-w-resize [[data-side=right]_&]:cursor-e-resize",
        "[[data-side=left][data-state=collapsed]_&]:cursor-e-resize [[data-side=right][data-state=collapsed]_&]:cursor-w-resize",
        "group-data-[collapsible=offcanvas]:translate-x-0 group-data-[collapsible=offcanvas]:after:left-full group-data-[collapsible=offcanvas]:hover:bg-sidebar",
        "[[data-side=left][data-collapsible=offcanvas]_&]:-right-2",
        "[[data-side=right][data-collapsible=offcanvas]_&]:-left-2",
        className
      )}
      {...props}
    />
  )
})
SidebarRail.displayName = "SidebarRail"

const SidebarInset = React.forwardRef<
  HTMLDivElement,
  React.ComponentProps<"main">
>(({ className, ...props }, ref) => {
  return (
    <main
      ref={ref}
      className={cn(
        "relative flex w-full flex-1 flex-col bg-background",
        "md:peer-data-[variant=inset]:m-2 md:peer-data-[state=collapsed]:peer-data-[variant=inset]:ml-2 md:peer-data-[variant=inset]:ml-0 md:peer-data-[variant=inset]:rounded-xl md:peer-data-[variant=inset]:shadow",
        className
      )}
      {...props}
    />
  )
})
SidebarInset.displayName = "SidebarInset"

const SidebarInput = React.forwardRef<
  React.ElementRef<typeof Input>,
  React.ComponentProps<typeof Input>
>(({ className, ...props }, ref) => {
  return (
    <Input
      ref={ref}
      data-sidebar="input"
      className={cn(
        "h-8 w-full bg-background shadow-none focus-visible:ring-2 focus-visible:ring-sidebar-ring",
        className
      )}
      {...props}
    />
  )
})
SidebarInput.displayName = "SidebarInput"

const SidebarHeader = React.forwardRef<
  HTMLDivElement,
  React.ComponentProps<"div">
>(({ className, ...props }, ref) => {
  return (
    <div
      ref={ref}
      data-sidebar="header"
      className={cn("flex flex-col gap-2 p-2", className)}
      {...props}
    />
  )
})
SidebarHeader.displayName = "SidebarHeader"

const SidebarFooter = React.forwardRef<
  HTMLDivElement,
  React.ComponentProps<"div">
>(({ className, ...props }, ref) => {
  return (
    <div
      ref={ref}
      data-sidebar="footer"
      className={cn("flex flex-col gap-2 p-2", className)}
      {...props}
    />
  )
})
SidebarFooter.displayName = "SidebarFooter"

const SidebarSeparator = React.forwardRef<
  React.ElementRef<typeof Separator>,
  React.ComponentProps<typeof Separator>
>(({ className, ...props }, ref) => {
  return (
    <Separator
      ref={ref}
      data-sidebar="separator"
      className={cn("mx-2 w-auto bg-sidebar-border", className)}
      {...props}
    />
  )
})
SidebarSeparator.displayName = "SidebarSeparator"

const SidebarContent = React.forwardRef<
  HTMLDivElement,
  React.ComponentProps<"div">
>(({ className, ...props }, ref) => {
  return (
    <div
      ref={ref}
      data-sidebar="content"
      className={cn(
        "flex min-h-0 flex-1 flex-col gap-2 overflow-auto group-data-[collapsible=icon]:overflow-hidden",
        className
      )}
      {...props}
    />
  )
})
SidebarContent.displayName = "SidebarContent"

const SidebarGroup = React.forwardRef<
  HTMLDivElement,
  React.ComponentProps<"div">
>(({ className, ...props }, ref) => {
  return (
    <div
      ref={ref}
      data-sidebar="group"
      className={cn("relative flex w-full min-w-0 flex-col p-2", className)}
      {...props}
    />
  )
})
SidebarGroup.displayName = "SidebarGroup"

const SidebarGroupLabel = React.forwardRef<
  HTMLDivElement,
  React.ComponentProps<"div"> & { asChild?: boolean }
>(({ className, asChild = false, ...props }, ref) => {
  const Comp = asChild ? Slot : "div"

  return (
    <Comp
      ref={ref}
      data-sidebar="group-label"
      className={cn(
        "flex h-8 shrink-0 items-center rounded-md px-2 text-xs font-medium text-sidebar-foreground/70 outline-none ring-sidebar-ring transition-[margin,opacity] duration-200 ease-linear focus-visible:ring-2 [&>svg]:size-4 [&>svg]:shrink-0",
        "group-data-[collapsible=icon]:-mt-8 group-data-[collapsible=icon]:opacity-0",
        className
      )}
      {...props}
    />
  )
})
SidebarGroupLabel.displayName = "SidebarGroupLabel"

const SidebarGroupAction = React.forwardRef<
  HTMLButtonElement,
  React.ComponentProps<"button"> & { asChild?: boolean }
>(({ className, asChild = false, ...props }, ref) => {
  const Comp = asChild ? Slot : "button"

  return (
    <Comp
      ref={ref}
      data-sidebar="group-action"
      className={cn(
        "absolute right-3 top-3.5 flex aspect-square w-5 items-center justify-center rounded-md p-0 text-sidebar-foreground outline-none ring-sidebar-ring transition-transform hover:bg-sidebar-accent hover:text-sidebar-accent-foreground focus-visible:ring-2 [&>svg]:size-4 [&>svg]:shrink-0",
        // Increases the hit area of the button on mobile.
        "after:absolute after:-inset-2 after:md:hidden",
        "group-data-[collapsible=icon]:hidden",
        className
      )}
      {...props}
    />
  )
})
SidebarGroupAction.displayName = "SidebarGroupAction"

const SidebarGroupContent = React.forwardRef<
  HTMLDivElement,
  React.ComponentProps<"div">
>(({ className, ...props }, ref) => (
  <div
    ref={ref}
    data-sidebar="group-content"
    className={cn("w-full text-sm", className)}
    {...props}
  />
))
SidebarGroupContent.displayName = "SidebarGroupContent"

const SidebarMenu = React.forwardRef<
  HTMLUListElement,
  React.ComponentProps<"ul">
>(({ className, ...props }, ref) => (
  <ul
    ref={ref}
    data-sidebar="menu"
    className={cn("flex w-full min-w-0 flex-col gap-1", className)}
    {...props}
  />
))
SidebarMenu.displayName = "SidebarMenu"

const SidebarMenuItem = React.forwardRef<
  HTMLLIElement,
  React.ComponentProps<"li">
>(({ className, ...props }, ref) => (
  <li
    ref={ref}
    data-sidebar="menu-item"
    className={cn("group/menu-item relative", className)}
    {...props}
  />
))
SidebarMenuItem.displayName = "SidebarMenuItem"

const sidebarMenuButtonVariants = cva(
  "peer/menu-button flex w-full items-center gap-2 overflow-hidden rounded-md p-2 text-left text-sm outline-none ring-sidebar-ring transition-[width,height,padding] hover:bg-sidebar-accent hover:text-sidebar-accent-foreground focus-visible:ring-2 active:bg-sidebar-accent active:text-sidebar-accent-foreground disabled:pointer-events-none disabled:opacity-50 group-has-[[data-sidebar=menu-action]]/menu-item:pr-8 aria-disabled:pointer-events-none aria-disabled:opacity-50 data-[active=true]:bg-sidebar-accent data-[active=true]:font-medium data-[active=true]:text-sidebar-accent-foreground data-[state=open]:hover:bg-sidebar-accent data-[state=open]:hover:text-sidebar-accent-foreground group-data-[collapsible=icon]:!size-8 group-data-[collapsible=icon]:!p-2 [&>span:last-child]:truncate [&>svg]:size-4 [&>svg]:shrink-0",
  {
    variants: {
      variant: {
        default: "hover:bg-sidebar-accent hover:text-sidebar-accent-foreground",
        outline:
          "bg-background shadow-[0_0_0_1px_hsl(var(--sidebar-border))] hover:bg-sidebar-accent hover:text-sidebar-accent-foreground hover:shadow-[0_0_0_1px_hsl(var(--sidebar-accent))]",
      },
      size: {
        default: "h-8 text-sm",
        sm: "h-7 text-xs",
        lg: "h-12 text-sm group-data-[collapsible=icon]:!p-0",
      },
    },
    defaultVariants: {
      variant: "default",
      size: "default",
    },
  }
)

const SidebarMenuButton = React.forwardRef<
  HTMLButtonElement,
  React.ComponentProps<"button"> & {
    asChild?: boolean
    isActive?: boolean
    tooltip?: string | React.ComponentProps<typeof TooltipContent>
  } & VariantProps<typeof sidebarMenuButtonVariants>
>(
  (
    {
      asChild = false,
      isActive = false,
      variant = "default",
      size = "default",
      tooltip,
      className,
      ...props
    },
    ref
  ) => {
    const Comp = asChild ? Slot : "button"
    const { isMobile, state } = useSidebar()

    const button = (
      <Comp
        ref={ref}
        data-sidebar="menu-button"
        data-size={size}
        data-active={isActive}
        className={cn(sidebarMenuButtonVariants({ variant, size }), className)}
        {...props}
      />
    )

    if (!tooltip) {
      return button
    }

    if (typeof tooltip === "string") {
      tooltip = {
        children: tooltip,
      }
    }

    return (
      <Tooltip>
        <TooltipTrigger asChild>{button}</TooltipTrigger>
        <TooltipContent
          side="right"
          align="center"
          hidden={state !== "collapsed" || isMobile}
          {...tooltip}
        />
      </Tooltip>
    )
  }
)
SidebarMenuButton.displayName = "SidebarMenuButton"

const SidebarMenuAction = React.forwardRef<
  HTMLButtonElement,
  React.ComponentProps<"button"> & {
    asChild?: boolean
    showOnHover?: boolean
  }
>(({ className, asChild = false, showOnHover = false, ...props }, ref) => {
  const Comp = asChild ? Slot : "button"

  return (
    <Comp
      ref={ref}
      data-sidebar="menu-action"
      className={cn(
        "absolute right-1 top-1.5 flex aspect-square w-5 items-center justify-center rounded-md p-0 text-sidebar-foreground outline-none ring-sidebar-ring transition-transform hover:bg-sidebar-accent hover:text-sidebar-accent-foreground focus-visible:ring-2 peer-hover/menu-button:text-sidebar-accent-foreground [&>svg]:size-4 [&>svg]:shrink-0",
        // Increases the hit area of the button on mobile.
        "after:absolute after:-inset-2 after:md:hidden",
        "peer-data-[size=sm]/menu-button:top-1",
        "peer-data-[size=default]/menu-button:top-1.5",
        "peer-data-[size=lg]/menu-button:top-2.5",
        "group-data-[collapsible=icon]:hidden",
        showOnHover &&
          "group-focus-within/menu-item:opacity-100 group-hover/menu-item:opacity-100 data-[state=open]:opacity-100 peer-data-[active=true]/menu-button:text-sidebar-accent-foreground md:opacity-0",
        className
      )}
      {...props}
    />
  )
})
SidebarMenuAction.displayName = "SidebarMenuAction"

const SidebarMenuBadge = React.forwardRef<
  HTMLDivElement,
  React.ComponentProps<"div">
>(({ className, ...props }, ref) => (
  <div
    ref={ref}
    data-sidebar="menu-badge"
    className={cn(
      "pointer-events-none absolute right-1 flex h-5 min-w-5 select-none items-center justify-center rounded-md px-1 text-xs font-medium tabular-nums text-sidebar-foreground",
      "peer-hover/menu-button:text-sidebar-accent-foreground peer-data-[active=true]/menu-button:text-sidebar-accent-foreground",
      "peer-data-[size=sm]/menu-button:top-1",
      "peer-data-[size=default]/menu-button:top-1.5",
      "peer-data-[size=lg]/menu-button:top-2.5",
      "group-data-[collapsible=icon]:hidden",
      className
    )}
    {...props}
  />
))
SidebarMenuBadge.displayName = "SidebarMenuBadge"

const SidebarMenuSkeleton = React.forwardRef<
  HTMLDivElement,
  React.ComponentProps<"div"> & {
    showIcon?: boolean
  }
>(({ className, showIcon = false, ...props }, ref) => {
  // Random width between 50 to 90%.
  const width = React.useMemo(() => {
    return `${Math.floor(Math.random() * 40) + 50}%`
  }, [])

  return (
    <div
      ref={ref}
      data-sidebar="menu-skeleton"
      className={cn("flex h-8 items-center gap-2 rounded-md px-2", className)}
      {...props}
    >
      {showIcon && (
        <Skeleton
          className="size-4 rounded-md"
          data-sidebar="menu-skeleton-icon"
        />
      )}
      <Skeleton
        className="h-4 max-w-[--skeleton-width] flex-1"
        data-sidebar="menu-skeleton-text"
        style={
          {
            "--skeleton-width": width,
          } as React.CSSProperties
        }
      />
    </div>
  )
})
SidebarMenuSkeleton.displayName = "SidebarMenuSkeleton"

const SidebarMenuSub = React.forwardRef<
  HTMLUListElement,
  React.ComponentProps<"ul">
>(({ className, ...props }, ref) => (
  <ul
    ref={ref}
    data-sidebar="menu-sub"
    className={cn(
      "mx-3.5 flex min-w-0 translate-x-px flex-col gap-1 border-l border-sidebar-border px-2.5 py-0.5",
      "group-data-[collapsible=icon]:hidden",
      className
    )}
    {...props}
  />
))
SidebarMenuSub.displayName = "SidebarMenuSub"

const SidebarMenuSubItem = React.forwardRef<
  HTMLLIElement,
  React.ComponentProps<"li">
>(({ ...props }, ref) => <li ref={ref} {...props} />)
SidebarMenuSubItem.displayName = "SidebarMenuSubItem"

const SidebarMenuSubButton = React.forwardRef<
  HTMLAnchorElement,
  React.ComponentProps<"a"> & {
    asChild?: boolean
    size?: "sm" | "md"
    isActive?: boolean
  }
>(({ asChild = false, size = "md", isActive, className, ...props }, ref) => {
  const Comp = asChild ? Slot : "a"

  return (
    <Comp
      ref={ref}
      data-sidebar="menu-sub-button"
      data-size={size}
      data-active={isActive}
      className={cn(
        "flex h-7 min-w-0 -translate-x-px items-center gap-2 overflow-hidden rounded-md px-2 text-sidebar-foreground outline-none ring-sidebar-ring hover:bg-sidebar-accent hover:text-sidebar-accent-foreground focus-visible:ring-2 active:bg-sidebar-accent active:text-sidebar-accent-foreground disabled:pointer-events-none disabled:opacity-50 aria-disabled:pointer-events-none aria-disabled:opacity-50 [&>span:last-child]:truncate [&>svg]:size-4 [&>svg]:shrink-0 [&>svg]:text-sidebar-accent-foreground",
        "data-[active=true]:bg-sidebar-accent data-[active=true]:text-sidebar-accent-foreground",
        size === "sm" && "text-xs",
        size === "md" && "text-sm",
        "group-data-[collapsible=icon]:hidden",
        className
      )}
      {...props}
    />
  )
})
SidebarMenuSubButton.displayName = "SidebarMenuSubButton"

export {
  Sidebar,
  SidebarContent,
  SidebarFooter,
  SidebarGroup,
  SidebarGroupAction,
  SidebarGroupContent,
  SidebarGroupLabel,
  SidebarHeader,
  SidebarInput,
  SidebarInset,
  SidebarMenu,
  SidebarMenuAction,
  SidebarMenuBadge,
  SidebarMenuButton,
  SidebarMenuItem,
  SidebarMenuSkeleton,
  SidebarMenuSub,
  SidebarMenuSubButton,
  SidebarMenuSubItem,
  SidebarProvider,
  SidebarRail,
  SidebarSeparator,
  SidebarTrigger,
  useSidebar,
}


================================================================================
END: D:\QiEOS\QiAllyPortal\client\src\components\ui\sidebar.tsx
================================================================================


================================================================================
FILE: D:\QiEOS\QiAllyPortal\client\src\components\ui\skeleton.tsx
================================================================================

import { cn } from "@/lib/utils"

function Skeleton({
  className,
  ...props
}: React.HTMLAttributes<HTMLDivElement>) {
  return (
    <div
      className={cn("animate-pulse rounded-md bg-muted", className)}
      {...props}
    />
  )
}

export { Skeleton }


================================================================================
END: D:\QiEOS\QiAllyPortal\client\src\components\ui\skeleton.tsx
================================================================================


================================================================================
FILE: D:\QiEOS\QiAllyPortal\client\src\components\ui\slider.tsx
================================================================================

import * as React from "react"
import * as SliderPrimitive from "@radix-ui/react-slider"

import { cn } from "@/lib/utils"

const Slider = React.forwardRef<
  React.ElementRef<typeof SliderPrimitive.Root>,
  React.ComponentPropsWithoutRef<typeof SliderPrimitive.Root>
>(({ className, ...props }, ref) => (
  <SliderPrimitive.Root
    ref={ref}
    className={cn(
      "relative flex w-full touch-none select-none items-center",
      className
    )}
    {...props}
  >
    <SliderPrimitive.Track className="relative h-2 w-full grow overflow-hidden rounded-full bg-secondary">
      <SliderPrimitive.Range className="absolute h-full bg-primary" />
    </SliderPrimitive.Track>
    <SliderPrimitive.Thumb className="block h-5 w-5 rounded-full border-2 border-primary bg-background ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50" />
  </SliderPrimitive.Root>
))
Slider.displayName = SliderPrimitive.Root.displayName

export { Slider }


================================================================================
END: D:\QiEOS\QiAllyPortal\client\src\components\ui\slider.tsx
================================================================================


================================================================================
FILE: D:\QiEOS\QiAllyPortal\client\src\components\ui\switch.tsx
================================================================================

import * as React from "react"
import * as SwitchPrimitives from "@radix-ui/react-switch"

import { cn } from "@/lib/utils"

const Switch = React.forwardRef<
  React.ElementRef<typeof SwitchPrimitives.Root>,
  React.ComponentPropsWithoutRef<typeof SwitchPrimitives.Root>
>(({ className, ...props }, ref) => (
  <SwitchPrimitives.Root
    className={cn(
      "peer inline-flex h-6 w-11 shrink-0 cursor-pointer items-center rounded-full border-2 border-transparent transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 focus-visible:ring-offset-background disabled:cursor-not-allowed disabled:opacity-50 data-[state=checked]:bg-primary data-[state=unchecked]:bg-input",
      className
    )}
    {...props}
    ref={ref}
  >
    <SwitchPrimitives.Thumb
      className={cn(
        "pointer-events-none block h-5 w-5 rounded-full bg-background shadow-lg ring-0 transition-transform data-[state=checked]:translate-x-5 data-[state=unchecked]:translate-x-0"
      )}
    />
  </SwitchPrimitives.Root>
))
Switch.displayName = SwitchPrimitives.Root.displayName

export { Switch }


================================================================================
END: D:\QiEOS\QiAllyPortal\client\src\components\ui\switch.tsx
================================================================================


================================================================================
FILE: D:\QiEOS\QiAllyPortal\client\src\components\ui\table.tsx
================================================================================

import * as React from "react"

import { cn } from "@/lib/utils"

const Table = React.forwardRef<
  HTMLTableElement,
  React.HTMLAttributes<HTMLTableElement>
>(({ className, ...props }, ref) => (
  <div className="relative w-full overflow-auto">
    <table
      ref={ref}
      className={cn("w-full caption-bottom text-sm", className)}
      {...props}
    />
  </div>
))
Table.displayName = "Table"

const TableHeader = React.forwardRef<
  HTMLTableSectionElement,
  React.HTMLAttributes<HTMLTableSectionElement>
>(({ className, ...props }, ref) => (
  <thead ref={ref} className={cn("[&_tr]:border-b", className)} {...props} />
))
TableHeader.displayName = "TableHeader"

const TableBody = React.forwardRef<
  HTMLTableSectionElement,
  React.HTMLAttributes<HTMLTableSectionElement>
>(({ className, ...props }, ref) => (
  <tbody
    ref={ref}
    className={cn("[&_tr:last-child]:border-0", className)}
    {...props}
  />
))
TableBody.displayName = "TableBody"

const TableFooter = React.forwardRef<
  HTMLTableSectionElement,
  React.HTMLAttributes<HTMLTableSectionElement>
>(({ className, ...props }, ref) => (
  <tfoot
    ref={ref}
    className={cn(
      "border-t bg-muted/50 font-medium [&>tr]:last:border-b-0",
      className
    )}
    {...props}
  />
))
TableFooter.displayName = "TableFooter"

const TableRow = React.forwardRef<
  HTMLTableRowElement,
  React.HTMLAttributes<HTMLTableRowElement>
>(({ className, ...props }, ref) => (
  <tr
    ref={ref}
    className={cn(
      "border-b transition-colors hover:bg-muted/50 data-[state=selected]:bg-muted",
      className
    )}
    {...props}
  />
))
TableRow.displayName = "TableRow"

const TableHead = React.forwardRef<
  HTMLTableCellElement,
  React.ThHTMLAttributes<HTMLTableCellElement>
>(({ className, ...props }, ref) => (
  <th
    ref={ref}
    className={cn(
      "h-12 px-4 text-left align-middle font-medium text-muted-foreground [&:has([role=checkbox])]:pr-0",
      className
    )}
    {...props}
  />
))
TableHead.displayName = "TableHead"

const TableCell = React.forwardRef<
  HTMLTableCellElement,
  React.TdHTMLAttributes<HTMLTableCellElement>
>(({ className, ...props }, ref) => (
  <td
    ref={ref}
    className={cn("p-4 align-middle [&:has([role=checkbox])]:pr-0", className)}
    {...props}
  />
))
TableCell.displayName = "TableCell"

const TableCaption = React.forwardRef<
  HTMLTableCaptionElement,
  React.HTMLAttributes<HTMLTableCaptionElement>
>(({ className, ...props }, ref) => (
  <caption
    ref={ref}
    className={cn("mt-4 text-sm text-muted-foreground", className)}
    {...props}
  />
))
TableCaption.displayName = "TableCaption"

export {
  Table,
  TableHeader,
  TableBody,
  TableFooter,
  TableHead,
  TableRow,
  TableCell,
  TableCaption,
}


================================================================================
END: D:\QiEOS\QiAllyPortal\client\src\components\ui\table.tsx
================================================================================


================================================================================
FILE: D:\QiEOS\QiAllyPortal\client\src\components\ui\tabs.tsx
================================================================================

import * as React from "react"
import * as TabsPrimitive from "@radix-ui/react-tabs"

import { cn } from "@/lib/utils"

const Tabs = TabsPrimitive.Root

const TabsList = React.forwardRef<
  React.ElementRef<typeof TabsPrimitive.List>,
  React.ComponentPropsWithoutRef<typeof TabsPrimitive.List>
>(({ className, ...props }, ref) => (
  <TabsPrimitive.List
    ref={ref}
    className={cn(
      "inline-flex h-10 items-center justify-center rounded-md bg-muted p-1 text-muted-foreground",
      className
    )}
    {...props}
  />
))
TabsList.displayName = TabsPrimitive.List.displayName

const TabsTrigger = React.forwardRef<
  React.ElementRef<typeof TabsPrimitive.Trigger>,
  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Trigger>
>(({ className, ...props }, ref) => (
  <TabsPrimitive.Trigger
    ref={ref}
    className={cn(
      "inline-flex items-center justify-center whitespace-nowrap rounded-sm px-3 py-1.5 text-sm font-medium ring-offset-background transition-all focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 data-[state=active]:bg-background data-[state=active]:text-foreground data-[state=active]:shadow-sm",
      className
    )}
    {...props}
  />
))
TabsTrigger.displayName = TabsPrimitive.Trigger.displayName

const TabsContent = React.forwardRef<
  React.ElementRef<typeof TabsPrimitive.Content>,
  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Content>
>(({ className, ...props }, ref) => (
  <TabsPrimitive.Content
    ref={ref}
    className={cn(
      "mt-2 ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2",
      className
    )}
    {...props}
  />
))
TabsContent.displayName = TabsPrimitive.Content.displayName

export { Tabs, TabsList, TabsTrigger, TabsContent }


================================================================================
END: D:\QiEOS\QiAllyPortal\client\src\components\ui\tabs.tsx
================================================================================


================================================================================
FILE: D:\QiEOS\QiAllyPortal\client\src\components\ui\textarea.tsx
================================================================================

import * as React from "react"

import { cn } from "@/lib/utils"

const Textarea = React.forwardRef<
  HTMLTextAreaElement,
  React.ComponentProps<"textarea">
>(({ className, ...props }, ref) => {
  return (
    <textarea
      className={cn(
        "flex min-h-[80px] w-full rounded-md border border-input bg-background px-3 py-2 text-base ring-offset-background placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 md:text-sm",
        className
      )}
      ref={ref}
      {...props}
    />
  )
})
Textarea.displayName = "Textarea"

export { Textarea }


================================================================================
END: D:\QiEOS\QiAllyPortal\client\src\components\ui\textarea.tsx
================================================================================


================================================================================
FILE: D:\QiEOS\QiAllyPortal\client\src\components\ui\toast.tsx
================================================================================

import * as React from "react"
import * as ToastPrimitives from "@radix-ui/react-toast"
import { cva, type VariantProps } from "class-variance-authority"
import { X } from "lucide-react"

import { cn } from "@/lib/utils"

const ToastProvider = ToastPrimitives.Provider

const ToastViewport = React.forwardRef<
  React.ElementRef<typeof ToastPrimitives.Viewport>,
  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Viewport>
>(({ className, ...props }, ref) => (
  <ToastPrimitives.Viewport
    ref={ref}
    className={cn(
      "fixed top-0 z-[100] flex max-h-screen w-full flex-col-reverse p-4 sm:bottom-0 sm:right-0 sm:top-auto sm:flex-col md:max-w-[420px]",
      className
    )}
    {...props}
  />
))
ToastViewport.displayName = ToastPrimitives.Viewport.displayName

const toastVariants = cva(
  "group pointer-events-auto relative flex w-full items-center justify-between space-x-4 overflow-hidden rounded-md border p-6 pr-8 shadow-lg transition-all data-[swipe=cancel]:translate-x-0 data-[swipe=end]:translate-x-[var(--radix-toast-swipe-end-x)] data-[swipe=move]:translate-x-[var(--radix-toast-swipe-move-x)] data-[swipe=move]:transition-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[swipe=end]:animate-out data-[state=closed]:fade-out-80 data-[state=closed]:slide-out-to-right-full data-[state=open]:slide-in-from-top-full data-[state=open]:sm:slide-in-from-bottom-full",
  {
    variants: {
      variant: {
        default: "border bg-background text-foreground",
        destructive:
          "destructive group border-destructive bg-destructive text-destructive-foreground",
      },
    },
    defaultVariants: {
      variant: "default",
    },
  }
)

const Toast = React.forwardRef<
  React.ElementRef<typeof ToastPrimitives.Root>,
  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Root> &
    VariantProps<typeof toastVariants>
>(({ className, variant, ...props }, ref) => {
  return (
    <ToastPrimitives.Root
      ref={ref}
      className={cn(toastVariants({ variant }), className)}
      {...props}
    />
  )
})
Toast.displayName = ToastPrimitives.Root.displayName

const ToastAction = React.forwardRef<
  React.ElementRef<typeof ToastPrimitives.Action>,
  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Action>
>(({ className, ...props }, ref) => (
  <ToastPrimitives.Action
    ref={ref}
    className={cn(
      "inline-flex h-8 shrink-0 items-center justify-center rounded-md border bg-transparent px-3 text-sm font-medium ring-offset-background transition-colors hover:bg-secondary focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 group-[.destructive]:border-muted/40 group-[.destructive]:hover:border-destructive/30 group-[.destructive]:hover:bg-destructive group-[.destructive]:hover:text-destructive-foreground group-[.destructive]:focus:ring-destructive",
      className
    )}
    {...props}
  />
))
ToastAction.displayName = ToastPrimitives.Action.displayName

const ToastClose = React.forwardRef<
  React.ElementRef<typeof ToastPrimitives.Close>,
  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Close>
>(({ className, ...props }, ref) => (
  <ToastPrimitives.Close
    ref={ref}
    className={cn(
      "absolute right-2 top-2 rounded-md p-1 text-foreground/50 opacity-0 transition-opacity hover:text-foreground focus:opacity-100 focus:outline-none focus:ring-2 group-hover:opacity-100 group-[.destructive]:text-red-300 group-[.destructive]:hover:text-red-50 group-[.destructive]:focus:ring-red-400 group-[.destructive]:focus:ring-offset-red-600",
      className
    )}
    toast-close=""
    {...props}
  >
    <X className="h-4 w-4" />
  </ToastPrimitives.Close>
))
ToastClose.displayName = ToastPrimitives.Close.displayName

const ToastTitle = React.forwardRef<
  React.ElementRef<typeof ToastPrimitives.Title>,
  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Title>
>(({ className, ...props }, ref) => (
  <ToastPrimitives.Title
    ref={ref}
    className={cn("text-sm font-semibold", className)}
    {...props}
  />
))
ToastTitle.displayName = ToastPrimitives.Title.displayName

const ToastDescription = React.forwardRef<
  React.ElementRef<typeof ToastPrimitives.Description>,
  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Description>
>(({ className, ...props }, ref) => (
  <ToastPrimitives.Description
    ref={ref}
    className={cn("text-sm opacity-90", className)}
    {...props}
  />
))
ToastDescription.displayName = ToastPrimitives.Description.displayName

type ToastProps = React.ComponentPropsWithoutRef<typeof Toast>

type ToastActionElement = React.ReactElement<typeof ToastAction>

export {
  type ToastProps,
  type ToastActionElement,
  ToastProvider,
  ToastViewport,
  Toast,
  ToastTitle,
  ToastDescription,
  ToastClose,
  ToastAction,
}


================================================================================
END: D:\QiEOS\QiAllyPortal\client\src\components\ui\toast.tsx
================================================================================


================================================================================
FILE: D:\QiEOS\QiAllyPortal\client\src\components\ui\toaster.tsx
================================================================================

import { useToast } from "@/hooks/use-toast"
import {
  Toast,
  ToastClose,
  ToastDescription,
  ToastProvider,
  ToastTitle,
  ToastViewport,
} from "@/components/ui/toast"

export function Toaster() {
  const { toasts } = useToast()

  return (
    <ToastProvider>
      {toasts.map(function ({ id, title, description, action, ...props }) {
        return (
          <Toast key={id} {...props}>
            <div className="grid gap-1">
              {title && <ToastTitle>{title}</ToastTitle>}
              {description && (
                <ToastDescription>{description}</ToastDescription>
              )}
            </div>
            {action}
            <ToastClose />
          </Toast>
        )
      })}
      <ToastViewport />
    </ToastProvider>
  )
}


================================================================================
END: D:\QiEOS\QiAllyPortal\client\src\components\ui\toaster.tsx
================================================================================


================================================================================
FILE: D:\QiEOS\QiAllyPortal\client\src\components\ui\toggle-group.tsx
================================================================================

"use client"

import * as React from "react"
import * as ToggleGroupPrimitive from "@radix-ui/react-toggle-group"
import { type VariantProps } from "class-variance-authority"

import { cn } from "@/lib/utils"
import { toggleVariants } from "@/components/ui/toggle"

const ToggleGroupContext = React.createContext<
  VariantProps<typeof toggleVariants>
>({
  size: "default",
  variant: "default",
})

const ToggleGroup = React.forwardRef<
  React.ElementRef<typeof ToggleGroupPrimitive.Root>,
  React.ComponentPropsWithoutRef<typeof ToggleGroupPrimitive.Root> &
    VariantProps<typeof toggleVariants>
>(({ className, variant, size, children, ...props }, ref) => (
  <ToggleGroupPrimitive.Root
    ref={ref}
    className={cn("flex items-center justify-center gap-1", className)}
    {...props}
  >
    <ToggleGroupContext.Provider value={{ variant, size }}>
      {children}
    </ToggleGroupContext.Provider>
  </ToggleGroupPrimitive.Root>
))

ToggleGroup.displayName = ToggleGroupPrimitive.Root.displayName

const ToggleGroupItem = React.forwardRef<
  React.ElementRef<typeof ToggleGroupPrimitive.Item>,
  React.ComponentPropsWithoutRef<typeof ToggleGroupPrimitive.Item> &
    VariantProps<typeof toggleVariants>
>(({ className, children, variant, size, ...props }, ref) => {
  const context = React.useContext(ToggleGroupContext)

  return (
    <ToggleGroupPrimitive.Item
      ref={ref}
      className={cn(
        toggleVariants({
          variant: context.variant || variant,
          size: context.size || size,
        }),
        className
      )}
      {...props}
    >
      {children}
    </ToggleGroupPrimitive.Item>
  )
})

ToggleGroupItem.displayName = ToggleGroupPrimitive.Item.displayName

export { ToggleGroup, ToggleGroupItem }


================================================================================
END: D:\QiEOS\QiAllyPortal\client\src\components\ui\toggle-group.tsx
================================================================================


================================================================================
FILE: D:\QiEOS\QiAllyPortal\client\src\components\ui\toggle.tsx
================================================================================

import * as React from "react"
import * as TogglePrimitive from "@radix-ui/react-toggle"
import { cva, type VariantProps } from "class-variance-authority"

import { cn } from "@/lib/utils"

const toggleVariants = cva(
  "inline-flex items-center justify-center rounded-md text-sm font-medium ring-offset-background transition-colors hover:bg-muted hover:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 data-[state=on]:bg-accent data-[state=on]:text-accent-foreground [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0 gap-2",
  {
    variants: {
      variant: {
        default: "bg-transparent",
        outline:
          "border border-input bg-transparent hover:bg-accent hover:text-accent-foreground",
      },
      size: {
        default: "h-10 px-3 min-w-10",
        sm: "h-9 px-2.5 min-w-9",
        lg: "h-11 px-5 min-w-11",
      },
    },
    defaultVariants: {
      variant: "default",
      size: "default",
    },
  }
)

const Toggle = React.forwardRef<
  React.ElementRef<typeof TogglePrimitive.Root>,
  React.ComponentPropsWithoutRef<typeof TogglePrimitive.Root> &
    VariantProps<typeof toggleVariants>
>(({ className, variant, size, ...props }, ref) => (
  <TogglePrimitive.Root
    ref={ref}
    className={cn(toggleVariants({ variant, size, className }))}
    {...props}
  />
))

Toggle.displayName = TogglePrimitive.Root.displayName

export { Toggle, toggleVariants }


================================================================================
END: D:\QiEOS\QiAllyPortal\client\src\components\ui\toggle.tsx
================================================================================


================================================================================
FILE: D:\QiEOS\QiAllyPortal\client\src\components\ui\tooltip.tsx
================================================================================

"use client"

import * as React from "react"
import * as TooltipPrimitive from "@radix-ui/react-tooltip"

import { cn } from "@/lib/utils"

const TooltipProvider = TooltipPrimitive.Provider

const Tooltip = TooltipPrimitive.Root

const TooltipTrigger = TooltipPrimitive.Trigger

const TooltipContent = React.forwardRef<
  React.ElementRef<typeof TooltipPrimitive.Content>,
  React.ComponentPropsWithoutRef<typeof TooltipPrimitive.Content>
>(({ className, sideOffset = 4, ...props }, ref) => (
  <TooltipPrimitive.Content
    ref={ref}
    sideOffset={sideOffset}
    className={cn(
      "z-50 overflow-hidden rounded-md border bg-popover px-3 py-1.5 text-sm text-popover-foreground shadow-md animate-in fade-in-0 zoom-in-95 data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=closed]:zoom-out-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-tooltip-content-transform-origin]",
      className
    )}
    {...props}
  />
))
TooltipContent.displayName = TooltipPrimitive.Content.displayName

export { Tooltip, TooltipTrigger, TooltipContent, TooltipProvider }


================================================================================
END: D:\QiEOS\QiAllyPortal\client\src\components\ui\tooltip.tsx
================================================================================


================================================================================
FILE: D:\QiEOS\QiAllyPortal\client\src\context\UserContext.tsx
================================================================================

import { createContext, useContext, useState, useEffect, ReactNode } from "react";
import { authApi } from "@/lib/auth";

interface User {
  id: string;
  email: string;
  role: string;
  clientSlug?: string;
  name: string;
}

interface UserContextType {
  user: User | null;
  loading: boolean;
  login: (email: string, password: string) => Promise<void>;
  logout: () => Promise<void>;
  isAdmin: boolean;
  isClient: boolean;
}

const UserContext = createContext<UserContextType | undefined>(undefined);

interface UserProviderProps {
  children: ReactNode;
}

export function UserProvider({ children }: UserProviderProps) {
  const [user, setUser] = useState<User | null>(null);
  const [loading, setLoading] = useState(true);

  const isAdmin = user?.role === "admin";
  const isClient = user?.role === "client_user" || user?.role === "team_member";

  useEffect(() => {
    const checkAuth = async () => {
      try {
        const sessionId = localStorage.getItem("sessionId");
        if (sessionId) {
          const userData = await authApi.me();
          setUser(userData);
        }
      } catch (error) {
        localStorage.removeItem("sessionId");
      } finally {
        setLoading(false);
      }
    };

    checkAuth();
  }, []);

  const login = async (email: string, password: string) => {
    const { sessionId, user: userData } = await authApi.login(email, password);
    localStorage.setItem("sessionId", sessionId);
    setUser(userData);
  };

  const logout = async () => {
    await authApi.logout();
    localStorage.removeItem("sessionId");
    setUser(null);
  };

  return (
    <UserContext.Provider value={{ user, loading, login, logout, isAdmin, isClient }}>
      {children}
    </UserContext.Provider>
  );
}

export function useUser() {
  const context = useContext(UserContext);
  if (context === undefined) {
    throw new Error("useUser must be used within a UserProvider");
  }
  return context;
}


================================================================================
END: D:\QiEOS\QiAllyPortal\client\src\context\UserContext.tsx
================================================================================


================================================================================
FILE: D:\QiEOS\QiAllyPortal\client\src\hooks\use-mobile.tsx
================================================================================

import * as React from "react"

const MOBILE_BREAKPOINT = 768

export function useIsMobile() {
  const [isMobile, setIsMobile] = React.useState<boolean | undefined>(undefined)

  React.useEffect(() => {
    const mql = window.matchMedia(`(max-width: ${MOBILE_BREAKPOINT - 1}px)`)
    const onChange = () => {
      setIsMobile(window.innerWidth < MOBILE_BREAKPOINT)
    }
    mql.addEventListener("change", onChange)
    setIsMobile(window.innerWidth < MOBILE_BREAKPOINT)
    return () => mql.removeEventListener("change", onChange)
  }, [])

  return !!isMobile
}


================================================================================
END: D:\QiEOS\QiAllyPortal\client\src\hooks\use-mobile.tsx
================================================================================


================================================================================
FILE: D:\QiEOS\QiAllyPortal\client\src\hooks\use-toast.ts
================================================================================

import * as React from "react"

import type {
  ToastActionElement,
  ToastProps,
} from "@/components/ui/toast"

const TOAST_LIMIT = 1
const TOAST_REMOVE_DELAY = 1000000

type ToasterToast = ToastProps & {
  id: string
  title?: React.ReactNode
  description?: React.ReactNode
  action?: ToastActionElement
}

const actionTypes = {
  ADD_TOAST: "ADD_TOAST",
  UPDATE_TOAST: "UPDATE_TOAST",
  DISMISS_TOAST: "DISMISS_TOAST",
  REMOVE_TOAST: "REMOVE_TOAST",
} as const

let count = 0

function genId() {
  count = (count + 1) % Number.MAX_SAFE_INTEGER
  return count.toString()
}

type ActionType = typeof actionTypes

type Action =
  | {
      type: ActionType["ADD_TOAST"]
      toast: ToasterToast
    }
  | {
      type: ActionType["UPDATE_TOAST"]
      toast: Partial<ToasterToast>
    }
  | {
      type: ActionType["DISMISS_TOAST"]
      toastId?: ToasterToast["id"]
    }
  | {
      type: ActionType["REMOVE_TOAST"]
      toastId?: ToasterToast["id"]
    }

interface State {
  toasts: ToasterToast[]
}

const toastTimeouts = new Map<string, ReturnType<typeof setTimeout>>()

const addToRemoveQueue = (toastId: string) => {
  if (toastTimeouts.has(toastId)) {
    return
  }

  const timeout = setTimeout(() => {
    toastTimeouts.delete(toastId)
    dispatch({
      type: "REMOVE_TOAST",
      toastId: toastId,
    })
  }, TOAST_REMOVE_DELAY)

  toastTimeouts.set(toastId, timeout)
}

export const reducer = (state: State, action: Action): State => {
  switch (action.type) {
    case "ADD_TOAST":
      return {
        ...state,
        toasts: [action.toast, ...state.toasts].slice(0, TOAST_LIMIT),
      }

    case "UPDATE_TOAST":
      return {
        ...state,
        toasts: state.toasts.map((t) =>
          t.id === action.toast.id ? { ...t, ...action.toast } : t
        ),
      }

    case "DISMISS_TOAST": {
      const { toastId } = action

      // ! Side effects ! - This could be extracted into a dismissToast() action,
      // but I'll keep it here for simplicity
      if (toastId) {
        addToRemoveQueue(toastId)
      } else {
        state.toasts.forEach((toast) => {
          addToRemoveQueue(toast.id)
        })
      }

      return {
        ...state,
        toasts: state.toasts.map((t) =>
          t.id === toastId || toastId === undefined
            ? {
                ...t,
                open: false,
              }
            : t
        ),
      }
    }
    case "REMOVE_TOAST":
      if (action.toastId === undefined) {
        return {
          ...state,
          toasts: [],
        }
      }
      return {
        ...state,
        toasts: state.toasts.filter((t) => t.id !== action.toastId),
      }
  }
}

const listeners: Array<(state: State) => void> = []

let memoryState: State = { toasts: [] }

function dispatch(action: Action) {
  memoryState = reducer(memoryState, action)
  listeners.forEach((listener) => {
    listener(memoryState)
  })
}

type Toast = Omit<ToasterToast, "id">

function toast({ ...props }: Toast) {
  const id = genId()

  const update = (props: ToasterToast) =>
    dispatch({
      type: "UPDATE_TOAST",
      toast: { ...props, id },
    })
  const dismiss = () => dispatch({ type: "DISMISS_TOAST", toastId: id })

  dispatch({
    type: "ADD_TOAST",
    toast: {
      ...props,
      id,
      open: true,
      onOpenChange: (open) => {
        if (!open) dismiss()
      },
    },
  })

  return {
    id: id,
    dismiss,
    update,
  }
}

function useToast() {
  const [state, setState] = React.useState<State>(memoryState)

  React.useEffect(() => {
    listeners.push(setState)
    return () => {
      const index = listeners.indexOf(setState)
      if (index > -1) {
        listeners.splice(index, 1)
      }
    }
  }, [state])

  return {
    ...state,
    toast,
    dismiss: (toastId?: string) => dispatch({ type: "DISMISS_TOAST", toastId }),
  }
}

export { useToast, toast }


================================================================================
END: D:\QiEOS\QiAllyPortal\client\src\hooks\use-toast.ts
================================================================================


================================================================================
FILE: D:\QiEOS\QiAllyPortal\client\src\hooks\useWebSocket.ts
================================================================================

import { useEffect, useRef, useState } from "react";
import { useUser } from "@/context/UserContext";

interface WebSocketMessage {
  type: string;
  data: any;
}

export function useWebSocket() {
  const [isConnected, setIsConnected] = useState(false);
  const [messages, setMessages] = useState<WebSocketMessage[]>([]);
  const ws = useRef<WebSocket | null>(null);
  const { user } = useUser();

  useEffect(() => {
    if (!user) return;

    const protocol = window.location.protocol === "https:" ? "wss:" : "ws:";
    const wsUrl = `${protocol}//${window.location.host}/ws`;
    
    ws.current = new WebSocket(wsUrl);

    ws.current.onopen = () => {
      setIsConnected(true);
    };

    ws.current.onmessage = (event) => {
      try {
        const message = JSON.parse(event.data);
        setMessages(prev => [...prev, message]);
      } catch (error) {
        console.error("WebSocket message parse error:", error);
      }
    };

    ws.current.onclose = () => {
      setIsConnected(false);
    };

    ws.current.onerror = (error) => {
      console.error("WebSocket error:", error);
    };

    return () => {
      if (ws.current) {
        ws.current.close();
      }
    };
  }, [user]);

  const sendMessage = (message: WebSocketMessage) => {
    if (ws.current && ws.current.readyState === WebSocket.OPEN) {
      ws.current.send(JSON.stringify(message));
    }
  };

  return { isConnected, messages, sendMessage };
}


================================================================================
END: D:\QiEOS\QiAllyPortal\client\src\hooks\useWebSocket.ts
================================================================================


================================================================================
FILE: D:\QiEOS\QiAllyPortal\client\src\lib\auth.ts
================================================================================

import { apiRequest } from "./queryClient";

export interface LoginResponse {
  sessionId: string;
  user: {
    id: string;
    email: string;
    role: string;
    clientSlug?: string;
    name: string;
  };
}

export const authApi = {
  async login(email: string, password: string): Promise<LoginResponse> {
    const res = await apiRequest("POST", "/api/auth/login", { email, password });
    return res.json();
  },

  async register(userData: {
    email: string;
    password: string;
    name: string;
    role?: string;
    clientSlug?: string;
  }): Promise<LoginResponse> {
    const res = await apiRequest("POST", "/api/auth/register", userData);
    return res.json();
  },

  async logout(): Promise<void> {
    await apiRequest("POST", "/api/auth/logout");
  },

  async me(): Promise<LoginResponse["user"]> {
    const res = await apiRequest("GET", "/api/user/me");
    return res.json();
  },
};


================================================================================
END: D:\QiEOS\QiAllyPortal\client\src\lib\auth.ts
================================================================================


================================================================================
FILE: D:\QiEOS\QiAllyPortal\client\src\lib\kbApi.ts
================================================================================

import { apiRequest } from "./queryClient";

export interface KbFile {
  id: string;
  clientSlug: string;
  path: string;
  title: string;
  content?: string;
  tags?: string[];
  visibility: string;
  createdAt: string;
  updatedAt: string;
}

export interface AiChatResponse {
  response: string;
  sources: Array<{
    title: string;
    path: string;
  }>;
}

export const kbApi = {
  async getFiles(clientSlug?: string): Promise<KbFile[]> {
    const params = new URLSearchParams();
    if (clientSlug) params.append("clientSlug", clientSlug);
    
    const res = await apiRequest("GET", `/api/kb?${params}`);
    return res.json();
  },

  async searchFiles(query: string, clientSlug?: string): Promise<KbFile[]> {
    const params = new URLSearchParams({ q: query });
    if (clientSlug) params.append("clientSlug", clientSlug);
    
    const res = await apiRequest("GET", `/api/kb/search?${params}`);
    return res.json();
  },

  async createFile(fileData: {
    clientSlug: string;
    path: string;
    title: string;
    content: string;
    tags?: string[];
    visibility?: string;
  }): Promise<KbFile> {
    const res = await apiRequest("POST", "/api/kb", fileData);
    return res.json();
  },

  async chatWithAi(message: string, clientSlug?: string): Promise<AiChatResponse> {
    const res = await apiRequest("POST", "/api/ai/chat", { message, clientSlug });
    return res.json();
  },
};


================================================================================
END: D:\QiEOS\QiAllyPortal\client\src\lib\kbApi.ts
================================================================================


================================================================================
FILE: D:\QiEOS\QiAllyPortal\client\src\lib\queryClient.ts
================================================================================

import { QueryClient, QueryFunction } from "@tanstack/react-query";

async function throwIfResNotOk(res: Response) {
  if (!res.ok) {
    const text = (await res.text()) || res.statusText;
    throw new Error(`${res.status}: ${text}`);
  }
}

export async function apiRequest(
  method: string,
  url: string,
  data?: unknown | undefined,
): Promise<Response> {
  const res = await fetch(url, {
    method,
    headers: data ? { "Content-Type": "application/json" } : {},
    body: data ? JSON.stringify(data) : undefined,
    credentials: "include",
  });

  await throwIfResNotOk(res);
  return res;
}

type UnauthorizedBehavior = "returnNull" | "throw";
export const getQueryFn: <T>(options: {
  on401: UnauthorizedBehavior;
}) => QueryFunction<T> =
  ({ on401: unauthorizedBehavior }) =>
  async ({ queryKey }) => {
    const res = await fetch(queryKey.join("/") as string, {
      credentials: "include",
    });

    if (unauthorizedBehavior === "returnNull" && res.status === 401) {
      return null;
    }

    await throwIfResNotOk(res);
    return await res.json();
  };

export const queryClient = new QueryClient({
  defaultOptions: {
    queries: {
      queryFn: getQueryFn({ on401: "throw" }),
      refetchInterval: false,
      refetchOnWindowFocus: false,
      staleTime: Infinity,
      retry: false,
    },
    mutations: {
      retry: false,
    },
  },
});


================================================================================
END: D:\QiEOS\QiAllyPortal\client\src\lib\queryClient.ts
================================================================================


================================================================================
FILE: D:\QiEOS\QiAllyPortal\client\src\lib\supabase.ts
================================================================================

// Note: This file provides a placeholder for Supabase integration
// Since we're using the existing storage system, this would be used
// for future Supabase migration if needed

export interface SupabaseConfig {
  url: string;
  anonKey: string;
}

// Placeholder for Supabase client initialization
// This would be implemented when migrating to Supabase
export const createSupabaseClient = (config: SupabaseConfig) => {
  // Implementation would go here when using Supabase
  console.log("Supabase client would be initialized with:", config);
  return null;
};

// Row Level Security policies would be defined here
export const RLS_POLICIES = {
  // Users can only see their own client data
  TENANT_ISOLATION: `
    CREATE POLICY "tenant_isolation" ON table_name
    FOR ALL USING (client_slug = auth.jwt() ->> 'client_slug')
  `,
  
  // Admins can see all data
  ADMIN_ACCESS: `
    CREATE POLICY "admin_access" ON table_name
    FOR ALL USING (auth.jwt() ->> 'role' = 'admin')
  `,
};

// Supabase storage bucket configuration
export const STORAGE_BUCKETS = {
  KB_FILES: "kb-files",
  DOCUMENTS: "documents",
  AVATARS: "avatars",
};


================================================================================
END: D:\QiEOS\QiAllyPortal\client\src\lib\supabase.ts
================================================================================


================================================================================
FILE: D:\QiEOS\QiAllyPortal\client\src\lib\utils.ts
================================================================================

import { clsx, type ClassValue } from "clsx"
import { twMerge } from "tailwind-merge"

export function cn(...inputs: ClassValue[]) {
  return twMerge(clsx(inputs))
}


================================================================================
END: D:\QiEOS\QiAllyPortal\client\src\lib\utils.ts
================================================================================


================================================================================
FILE: D:\QiEOS\QiAllyPortal\client\src\pages\admin-dashboard.tsx
================================================================================

import { AdminNavigation } from "@/components/admin/AdminNavigation";
import { AdminSidebar } from "@/components/admin/AdminSidebar";
import { useRequireAdmin } from "@/utils/authGuards";
import { Building, CheckSquare, DollarSign, MessageSquare, FileText, ExternalLink, Check } from "lucide-react";

export default function AdminDashboard() {
  const { user, loading } = useRequireAdmin();

  if (loading) {
    return (
      <div className="min-h-screen flex items-center justify-center">
        <div className="animate-spin w-8 h-8 border-4 border-primary border-t-transparent rounded-full"></div>
      </div>
    );
  }

  if (!user) {
    return null;
  }

  const stats = [
    { icon: Building, label: "Total Clients", value: "24", change: "+3 this month", color: "text-primary" },
    { icon: CheckSquare, label: "Active Projects", value: "147", change: "+12 this week", color: "text-accent" },
    { icon: DollarSign, label: "Monthly Revenue", value: "$89.5k", change: "+18% from last month", color: "text-green-600" },
    { icon: MessageSquare, label: "Unread Messages", value: "43", change: "Requires attention", color: "text-orange-600" },
  ];

  const recentActivity = [
    { 
      icon: FileText, 
      message: "New project started for Acme Corp", 
      time: "2 hours ago",
      iconColor: "text-primary bg-primary/10"
    },
    { 
      icon: MessageSquare, 
      message: "Message from Tech Solutions", 
      time: "4 hours ago",
      iconColor: "text-accent bg-accent/10"
    },
    { 
      icon: Check, 
      message: "Invoice paid by Retail Plus", 
      time: "1 day ago",
      iconColor: "text-green-600 bg-green-500/10"
    },
  ];

  const clients = [
    { name: "Acme Corp", initials: "AC", projects: "5 active projects", color: "bg-primary" },
    { name: "Tech Solutions", initials: "TS", projects: "2 active projects", color: "bg-accent" },
    { name: "Retail Plus", initials: "RP", projects: "1 active project", color: "bg-green-500" },
  ];

  return (
    <section className="min-h-screen bg-background">
      <AdminNavigation />
      
      <div className="flex">
        <AdminSidebar />
        
        <main className="flex-1 p-6">
          <div className="mb-8">
            <h2 className="text-2xl font-bold text-foreground mb-6">Admin Overview</h2>
            
            {/* Stats Grid */}
            <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6 mb-8">
              {stats.map((stat, index) => (
                <div key={index} className="bg-card rounded-xl p-6 border border-border shadow-sm" data-testid={`stat-${stat.label.toLowerCase().replace(' ', '-')}`}>
                  <div className="flex items-center justify-between mb-4">
                    <div className={`w-10 h-10 rounded-lg flex items-center justify-center ${stat.color.replace('text-', 'bg-')}/10`}>
                      <stat.icon className={`h-5 w-5 ${stat.color}`} />
                    </div>
                    <span className="text-2xl font-bold text-foreground">{stat.value}</span>
                  </div>
                  <h3 className="text-sm font-medium text-muted-foreground">{stat.label}</h3>
                  <p className={`text-xs ${stat.color}`}>{stat.change}</p>
                </div>
              ))}
            </div>

            {/* Recent Activity & Client Management */}
            <div className="grid lg:grid-cols-2 gap-8">
              {/* Recent Activity */}
              <div className="bg-card rounded-xl p-6 border border-border shadow-sm">
                <h3 className="text-lg font-semibold text-foreground mb-4">Recent Activity</h3>
                <div className="space-y-4">
                  {recentActivity.map((activity, index) => (
                    <div key={index} className="flex items-start space-x-3" data-testid={`activity-${index}`}>
                      <div className={`w-8 h-8 rounded-full flex items-center justify-center mt-1 ${activity.iconColor}`}>
                        <activity.icon className="h-4 w-4" />
                      </div>
                      <div className="flex-1">
                        <p className="text-sm text-foreground">{activity.message}</p>
                        <p className="text-xs text-muted-foreground">{activity.time}</p>
                      </div>
                    </div>
                  ))}
                </div>
              </div>

              {/* Client Quick Access */}
              <div className="bg-card rounded-xl p-6 border border-border shadow-sm">
                <h3 className="text-lg font-semibold text-foreground mb-4">Client Quick Access</h3>
                <div className="space-y-3">
                  {clients.map((client, index) => (
                    <div key={index} className="flex items-center justify-between p-3 bg-secondary rounded-lg" data-testid={`client-${client.name.toLowerCase().replace(' ', '-')}`}>
                      <div className="flex items-center space-x-3">
                        <div className={`w-10 h-10 ${client.color} rounded-lg flex items-center justify-center`}>
                          <span className="text-white text-sm font-medium">{client.initials}</span>
                        </div>
                        <div>
                          <p className="text-sm font-medium text-foreground">{client.name}</p>
                          <p className="text-xs text-muted-foreground">{client.projects}</p>
                        </div>
                      </div>
                      <button className="text-primary hover:text-primary/80 text-sm" data-testid={`view-client-${index}`}>
                        <ExternalLink className="h-4 w-4" />
                      </button>
                    </div>
                  ))}
                </div>
              </div>
            </div>
          </div>
        </main>
      </div>
    </section>
  );
}


================================================================================
END: D:\QiEOS\QiAllyPortal\client\src\pages\admin-dashboard.tsx
================================================================================


================================================================================
FILE: D:\QiEOS\QiAllyPortal\client\src\pages\checkout.tsx
================================================================================

import { useStripe, Elements, PaymentElement, useElements } from '@stripe/react-stripe-js';
import { loadStripe } from '@stripe/stripe-js';
import { useEffect, useState } from 'react';
import { useParams, useLocation } from 'wouter';
import { useQuery, useMutation } from '@tanstack/react-query';
import { apiRequest } from "@/lib/queryClient";
import { useToast } from "@/hooks/use-toast";
import { useRequireAuth } from "@/utils/authGuards";
import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card";
import { Button } from "@/components/ui/button";
import { ArrowLeft } from "lucide-react";

// Make sure to call `loadStripe` outside of a component's render to avoid
// recreating the `Stripe` object on every render.
const stripePromise = import.meta.env.VITE_STRIPE_PUBLIC_KEY 
  ? loadStripe(import.meta.env.VITE_STRIPE_PUBLIC_KEY)
  : null;

const CheckoutForm = ({ invoice }: { invoice: any }) => {
  const stripe = useStripe();
  const elements = useElements();
  const { toast } = useToast();
  const [, setLocation] = useLocation();
  const [isProcessing, setIsProcessing] = useState(false);

  const payInvoiceMutation = useMutation({
    mutationFn: async (paymentIntentId: string) => {
      const res = await apiRequest("POST", `/api/invoices/${invoice.id}/pay`, { paymentIntentId });
      return res.json();
    },
    onSuccess: () => {
      toast({
        title: "Payment Successful",
        description: "Thank you for your payment!",
      });
      setLocation("/invoices");
    },
    onError: (error: any) => {
      toast({
        title: "Payment Processing Failed",
        description: error.message,
        variant: "destructive",
      });
    }
  });

  const handleSubmit = async (e: React.FormEvent) => {
    e.preventDefault();
    
    if (!stripe || !elements) {
      return;
    }

    setIsProcessing(true);

    try {
      const { error, paymentIntent } = await stripe.confirmPayment({
        elements,
        confirmParams: {
          return_url: `${window.location.origin}/invoices`,
        },
        redirect: "if_required",
      });

      if (error) {
        toast({
          title: "Payment Failed",
          description: error.message,
          variant: "destructive",
        });
      } else if (paymentIntent && paymentIntent.status === "succeeded") {
        await payInvoiceMutation.mutateAsync(paymentIntent.id);
      }
    } catch (error: any) {
      toast({
        title: "Payment Error",
        description: error.message,
        variant: "destructive",
      });
    } finally {
      setIsProcessing(false);
    }
  };

  return (
    <form onSubmit={handleSubmit} className="space-y-6">
      <div className="bg-secondary rounded-lg p-4">
        <h3 className="font-medium text-foreground mb-2">Payment Details</h3>
        <div className="space-y-2 text-sm">
          <div className="flex justify-between">
            <span className="text-muted-foreground">Invoice:</span>
            <span className="text-foreground">{invoice.invoiceNumber}</span>
          </div>
          <div className="flex justify-between">
            <span className="text-muted-foreground">Amount:</span>
            <span className="text-foreground font-medium">${parseFloat(invoice.amount).toFixed(2)}</span>
          </div>
          <div className="flex justify-between">
            <span className="text-muted-foreground">Due Date:</span>
            <span className="text-foreground">{new Date(invoice.dueDate).toLocaleDateString()}</span>
          </div>
        </div>
      </div>

      <div>
        <PaymentElement />
      </div>

      <Button 
        type="submit" 
        disabled={!stripe || isProcessing || payInvoiceMutation.isPending}
        className="w-full"
        data-testid="button-submit-payment"
      >
        {isProcessing || payInvoiceMutation.isPending ? "Processing..." : `Pay $${parseFloat(invoice.amount).toFixed(2)}`}
      </Button>
    </form>
  );
};

export default function Checkout() {
  const { invoiceId } = useParams();
  const [, setLocation] = useLocation();
  const { user, loading: authLoading } = useRequireAuth();
  const [clientSecret, setClientSecret] = useState("");

  const { data: invoice, isLoading: invoiceLoading } = useQuery({
    queryKey: ["/api/invoices", invoiceId],
    enabled: !!invoiceId && !!user,
    queryFn: async () => {
      const res = await apiRequest("GET", `/api/invoices`);
      const invoices = await res.json();
      return invoices.find((inv: any) => inv.id === invoiceId);
    }
  });

  useEffect(() => {
    if (!invoice) return;

    // Create PaymentIntent as soon as the invoice loads
    apiRequest("POST", "/api/create-payment-intent", { 
      amount: parseFloat(invoice.amount),
      invoiceId: invoice.id 
    })
      .then((res) => res.json())
      .then((data) => {
        setClientSecret(data.clientSecret);
      })
      .catch((error) => {
        console.error("Error creating payment intent:", error);
      });
  }, [invoice]);

  if (authLoading || invoiceLoading) {
    return (
      <div className="min-h-screen flex items-center justify-center">
        <div className="animate-spin w-8 h-8 border-4 border-primary border-t-transparent rounded-full" aria-label="Loading"/>
      </div>
    );
  }

  if (!user) {
    return null;
  }

  if (!invoice) {
    return (
      <div className="min-h-screen flex items-center justify-center">
        <Card className="w-full max-w-md">
          <CardContent className="pt-6 text-center">
            <h2 className="text-lg font-semibold text-foreground mb-2">Invoice Not Found</h2>
            <p className="text-muted-foreground mb-4">The requested invoice could not be found.</p>
            <Button onClick={() => setLocation("/invoices")}>
              <ArrowLeft className="mr-2 h-4 w-4" /> Back to Invoices
            </Button>
          </CardContent>
        </Card>
      </div>
    );
  }

  if (!import.meta.env.VITE_STRIPE_PUBLIC_KEY) {
    return (
      <div className="min-h-screen bg-background flex items-center justify-center p-6">
        <Card className="w-full max-w-md">
          <CardContent className="pt-6 text-center">
            <h2 className="text-lg font-semibold text-foreground mb-2">Payment Not Available</h2>
            <p className="text-muted-foreground mb-4">Stripe payment processing is not configured.</p>
            <Button onClick={() => setLocation("/invoices")}>
              <ArrowLeft className="mr-2 h-4 w-4" /> Back to Invoices
            </Button>
          </CardContent>
        </Card>
      </div>
    );
  }

  if (!clientSecret) {
    return (
      <div className="min-h-screen flex items-center justify-center">
        <div className="animate-spin w-8 h-8 border-4 border-primary border-t-transparent rounded-full" aria-label="Loading"/>
      </div>
    );
  }

  return (
    <div className="min-h-screen bg-background flex items-center justify-center p-6">
      <Card className="w-full max-w-md">
        <CardHeader>
          <div className="flex items-center space-x-2">
            <Button 
              variant="ghost" 
              size="sm"
              onClick={() => setLocation("/invoices")}
              data-testid="button-back"
            >
              <ArrowLeft className="h-4 w-4" />
            </Button>
            <CardTitle>Payment Checkout</CardTitle>
          </div>
        </CardHeader>
        <CardContent>
          {/* Make SURE to wrap the form in <Elements> which provides the stripe context. */}
          {stripePromise && (
            <Elements stripe={stripePromise} options={{ clientSecret }}>
              <CheckoutForm invoice={invoice} />
            </Elements>
          )}
        </CardContent>
      </Card>
    </div>
  );
}


================================================================================
END: D:\QiEOS\QiAllyPortal\client\src\pages\checkout.tsx
================================================================================


================================================================================
FILE: D:\QiEOS\QiAllyPortal\client\src\pages\client-dashboard.tsx
================================================================================

import { ClientNavigation } from "@/components/client/ClientNavigation";
import { ClientSidebar } from "@/components/client/ClientSidebar";
import { useRequireClient } from "@/utils/authGuards";
import { useQuery } from "@tanstack/react-query";
import { apiRequest } from "@/lib/queryClient";
import { Plus, ExternalLink } from "lucide-react";
import { Button } from "@/components/ui/button";

export default function ClientDashboard() {
  const { user, loading } = useRequireClient();

  const { data: projects = [] } = useQuery({
    queryKey: ["/api/projects"],
    enabled: !!user,
  });

  if (loading) {
    return (
      <div className="min-h-screen flex items-center justify-center">
        <div className="animate-spin w-8 h-8 border-4 border-primary border-t-transparent rounded-full"></div>
      </div>
    );
  }

  if (!user) {
    return null;
  }

  const projectProgress = (projects as any[])?.map((project: any) => ({
    ...project,
    color: project.status === "completed" ? "bg-green-500" : 
           project.status === "in_progress" ? "bg-primary" : "bg-orange-500"
  })) || [];

  const recentMessages = [
    {
      sender: "John (Project Manager)",
      initials: "JD",
      message: "Updated the wireframes for your homepage. Please review when you have a chance.",
      time: "2h ago",
      color: "bg-primary"
    },
    {
      sender: "Alice (Designer)",
      initials: "AL",
      message: "Brand color palette has been finalized. Check the KB for the style guide.",
      time: "1d ago",
      color: "bg-accent"
    },
  ];

  const recentKbArticles = [
    { title: "Brand Style Guide", description: "Logo usage, colors, typography guidelines..." },
    { title: "Project Timeline", description: "Milestones and deliverables overview..." },
    { title: "Communication Best Practices", description: "How to effectively collaborate with our team..." },
  ];

  return (
    <section className="min-h-screen bg-background">
      <ClientNavigation />
      
      <div className="flex">
        <ClientSidebar />
        
        <main className="flex-1 p-6">
          {/* Welcome Section */}
          <div className="mb-8">
            <div className="flex items-center justify-between mb-6">
              <div>
                <h2 className="text-2xl font-bold text-foreground">
                  Welcome back, <span data-testid="text-welcome-name">{user.name?.split(' ')[0]}</span>
                </h2>
                <p className="text-muted-foreground">Here's what's happening with your projects</p>
              </div>
              <Button data-testid="button-new-service-request">
                <Plus className="mr-2 h-4 w-4" /> New Service Request
              </Button>
            </div>

            {/* Project Progress Cards */}
            <div className="grid md:grid-cols-2 lg:grid-cols-3 gap-6 mb-8">
              {projectProgress.slice(0, 3).map((project: any) => (
                <div 
                  key={project.id} 
                  className="bg-card rounded-xl p-6 border border-border shadow-sm hover:shadow-md transition-shadow"
                  data-testid={`project-card-${project.id}`}
                >
                  <div className="flex items-center justify-between mb-4">
                    <h3 className="font-semibold text-foreground">{project.title}</h3>
                    <span className={`px-2 py-1 text-xs rounded-md ${
                      project.status === "completed" ? "bg-green-500/10 text-green-600" :
                      project.status === "in_progress" ? "bg-accent/10 text-accent" :
                      "bg-orange-500/10 text-orange-600"
                    }`}>
                      {project.status === "in_progress" ? "In Progress" : 
                       project.status === "completed" ? "Completed" : "Pending"}
                    </span>
                  </div>
                  <div className="mb-4">
                    <div className="flex justify-between text-sm mb-2">
                      <span className="text-muted-foreground">Progress</span>
                      <span className="text-foreground font-medium">{project.progress || 0}%</span>
                    </div>
                    <div className="w-full bg-secondary rounded-full h-2">
                      <div 
                        className={`h-2 rounded-full transition-all duration-300 ${project.color}`}
                        style={{ width: `${project.progress || 0}%` }}
                      ></div>
                    </div>
                  </div>
                  <div className="flex items-center justify-between text-sm">
                    <span className="text-muted-foreground">
                      Due: {project.dueDate ? new Date(project.dueDate).toLocaleDateString() : "TBD"}
                    </span>
                    <button className="text-primary hover:text-primary/80" data-testid={`view-project-${project.id}`}>
                      View Details
                    </button>
                  </div>
                </div>
              ))}
            </div>

            {/* Recent Messages & Knowledge Base Access */}
            <div className="grid lg:grid-cols-2 gap-8">
              {/* Recent Messages */}
              <div className="bg-card rounded-xl p-6 border border-border shadow-sm">
                <div className="flex items-center justify-between mb-4">
                  <h3 className="text-lg font-semibold text-foreground">Recent Messages</h3>
                  <button className="text-primary hover:text-primary/80 text-sm" data-testid="button-view-all-messages">
                    View All
                  </button>
                </div>
                <div className="space-y-4">
                  {recentMessages.map((message, index) => (
                    <div key={index} className="flex items-start space-x-3 p-3 bg-secondary rounded-lg" data-testid={`message-${index}`}>
                      <div className={`w-8 h-8 ${message.color} rounded-full flex items-center justify-center`}>
                        <span className="text-white text-xs font-medium">{message.initials}</span>
                      </div>
                      <div className="flex-1">
                        <div className="flex items-center justify-between mb-1">
                          <p className="text-sm font-medium text-foreground">{message.sender}</p>
                          <span className="text-xs text-muted-foreground">{message.time}</span>
                        </div>
                        <p className="text-sm text-muted-foreground">{message.message}</p>
                      </div>
                    </div>
                  ))}
                </div>
              </div>

              {/* Knowledge Base Quick Access */}
              <div className="bg-card rounded-xl p-6 border border-border shadow-sm">
                <div className="flex items-center justify-between mb-4">
                  <h3 className="text-lg font-semibold text-foreground">Knowledge Base</h3>
                  <button className="text-primary hover:text-primary/80 text-sm" data-testid="button-browse-kb">
                    Browse All
                  </button>
                </div>
                
                {/* Search Bar */}
                <div className="relative mb-4">
                  <input 
                    type="text" 
                    placeholder="Search your knowledge base..." 
                    className="w-full pl-10 pr-4 py-2 bg-input border border-border rounded-lg text-foreground placeholder-muted-foreground focus:outline-none focus:ring-2 focus:ring-ring"
                    data-testid="input-kb-search"
                  />
                </div>
                
                {/* Recent KB Articles */}
                <div className="space-y-3">
                  {recentKbArticles.map((article, index) => (
                    <div 
                      key={index}
                      className="p-3 bg-secondary rounded-lg hover:bg-secondary/80 transition-colors cursor-pointer"
                      data-testid={`kb-article-${index}`}
                    >
                      <div className="flex items-start justify-between">
                        <div className="flex-1">
                          <h4 className="text-sm font-medium text-foreground mb-1">{article.title}</h4>
                          <p className="text-xs text-muted-foreground">{article.description}</p>
                        </div>
                        <ExternalLink className="h-3 w-3 text-muted-foreground ml-2 mt-1" />
                      </div>
                    </div>
                  ))}
                </div>
              </div>
            </div>
          </div>
        </main>
      </div>
    </section>
  );
}


================================================================================
END: D:\QiEOS\QiAllyPortal\client\src\pages\client-dashboard.tsx
================================================================================


================================================================================
FILE: D:\QiEOS\QiAllyPortal\client\src\pages\invoice-management.tsx
================================================================================

import { useRequireAuth } from "@/utils/authGuards";
import { useQuery } from "@tanstack/react-query";
import { useLocation } from "wouter";
import { Download, CreditCard, Calendar, Check, Clock, FileText } from "lucide-react";
import { Button } from "@/components/ui/button";
import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card";

export default function InvoiceManagement() {
  const { user, loading } = useRequireAuth();
  const [, setLocation] = useLocation();

  const { data: invoices = [], isLoading } = useQuery({
    queryKey: ["/api/invoices"],
    enabled: !!user,
  });

  if (loading || isLoading) {
    return (
      <div className="min-h-screen flex items-center justify-center">
        <div className="animate-spin w-8 h-8 border-4 border-primary border-t-transparent rounded-full"></div>
      </div>
    );
  }

  if (!user) {
    return null;
  }

  const totalPaid = (invoices as any[])
    ?.filter((inv: any) => inv.status === "paid")
    ?.reduce((sum: number, inv: any) => sum + parseFloat(inv.amount), 0) || 0;

  const totalPending = (invoices as any[])
    ?.filter((inv: any) => inv.status === "pending")
    ?.reduce((sum: number, inv: any) => sum + parseFloat(inv.amount), 0) || 0;

  const nextDueInvoice = (invoices as any[])
    ?.filter((inv: any) => inv.status === "pending")
    ?.sort((a: any, b: any) => new Date(a.dueDate).getTime() - new Date(b.dueDate).getTime())[0];

  const handlePayInvoice = (invoiceId: string) => {
    setLocation(`/checkout/${invoiceId}`);
  };

  const handleDownloadInvoice = (invoiceId: string) => {
    // Implementation for downloading invoice
    console.log("Downloading invoice:", invoiceId);
  };

  return (
    <section className="min-h-screen bg-background">
      <div className="p-6">
        <div className="max-w-7xl mx-auto">
          {/* Invoice Header */}
          <div className="flex items-center justify-between mb-8">
            <div>
              <h2 className="text-2xl font-bold text-foreground">Invoices & Payments</h2>
              <p className="text-muted-foreground">Manage your billing and payment history</p>
            </div>
            <div className="flex items-center space-x-4">
              <Button variant="ghost" data-testid="button-download-all">
                <Download className="mr-2 h-4 w-4" /> Download All
              </Button>
              <Button variant="secondary" data-testid="button-payment-methods">
                <CreditCard className="mr-2 h-4 w-4" /> Payment Methods
              </Button>
            </div>
          </div>

          {/* Payment Summary Cards */}
          <div className="grid md:grid-cols-3 gap-6 mb-8">
            <Card>
              <CardContent className="pt-6">
                <div className="flex items-center justify-between mb-4">
                  <div className="w-10 h-10 bg-green-500/10 rounded-lg flex items-center justify-center">
                    <Check className="text-green-600 h-5 w-5" />
                  </div>
                  <span className="text-2xl font-bold text-foreground" data-testid="total-paid">
                    ${totalPaid.toLocaleString()}
                  </span>
                </div>
                <h3 className="text-sm font-medium text-muted-foreground">Total Paid</h3>
                <p className="text-xs text-green-600">All invoices current</p>
              </CardContent>
            </Card>
            
            <Card>
              <CardContent className="pt-6">
                <div className="flex items-center justify-between mb-4">
                  <div className="w-10 h-10 bg-orange-500/10 rounded-lg flex items-center justify-center">
                    <Clock className="text-orange-600 h-5 w-5" />
                  </div>
                  <span className="text-2xl font-bold text-foreground" data-testid="total-pending">
                    ${totalPending.toLocaleString()}
                  </span>
                </div>
                <h3 className="text-sm font-medium text-muted-foreground">Pending</h3>
                <p className="text-xs text-orange-600">
                  {(invoices as any[])?.filter((inv: any) => inv.status === "pending").length || 0} invoice(s) due soon
                </p>
              </CardContent>
            </Card>
            
            <Card>
              <CardContent className="pt-6">
                <div className="flex items-center justify-between mb-4">
                  <div className="w-10 h-10 bg-primary/10 rounded-lg flex items-center justify-center">
                    <Calendar className="text-primary h-5 w-5" />
                  </div>
                  <span className="text-2xl font-bold text-foreground" data-testid="next-due-date">
                    {nextDueInvoice ? new Date(nextDueInvoice.dueDate).toLocaleDateString() : "None"}
                  </span>
                </div>
                <h3 className="text-sm font-medium text-muted-foreground">Next Due Date</h3>
                <p className="text-xs text-primary">
                  {nextDueInvoice 
                    ? `${Math.ceil((new Date(nextDueInvoice.dueDate).getTime() - Date.now()) / (1000 * 60 * 60 * 24))} days remaining`
                    : "No pending invoices"
                  }
                </p>
              </CardContent>
            </Card>
          </div>

          {/* Invoice List */}
          <Card>
            <CardHeader>
              <CardTitle>Recent Invoices</CardTitle>
            </CardHeader>
            <CardContent className="p-0">
              <div className="overflow-x-auto">
                <table className="w-full">
                  <thead className="bg-secondary">
                    <tr>
                      <th className="text-left py-3 px-6 text-sm font-medium text-muted-foreground">Invoice</th>
                      <th className="text-left py-3 px-6 text-sm font-medium text-muted-foreground">Date</th>
                      <th className="text-left py-3 px-6 text-sm font-medium text-muted-foreground">Amount</th>
                      <th className="text-left py-3 px-6 text-sm font-medium text-muted-foreground">Status</th>
                      <th className="text-left py-3 px-6 text-sm font-medium text-muted-foreground">Actions</th>
                    </tr>
                  </thead>
                  <tbody>
                    {(invoices as any[])?.map((invoice: any) => (
                      <tr 
                        key={invoice.id} 
                        className="border-b border-border hover:bg-secondary/50 transition-colors"
                        data-testid={`invoice-row-${invoice.id}`}
                      >
                        <td className="py-4 px-6">
                          <div className="flex items-center space-x-3">
                            <div className={`w-8 h-8 rounded-lg flex items-center justify-center ${
                              invoice.status === "paid" ? "bg-green-500/10" : "bg-primary/10"
                            }`}>
                              {invoice.status === "paid" ? (
                                <Check className="text-green-600 h-4 w-4" />
                              ) : (
                                <FileText className="text-primary h-4 w-4" />
                              )}
                            </div>
                            <div>
                              <p className="text-sm font-medium text-foreground">{invoice.invoiceNumber}</p>
                              <p className="text-xs text-muted-foreground">
                                {invoice.projectId ? `Project Invoice` : "Service Invoice"}
                              </p>
                            </div>
                          </div>
                        </td>
                        <td className="py-4 px-6 text-sm text-muted-foreground">
                          {new Date(invoice.createdAt).toLocaleDateString()}
                        </td>
                        <td className="py-4 px-6 text-sm font-medium text-foreground">
                          ${parseFloat(invoice.amount).toFixed(2)}
                        </td>
                        <td className="py-4 px-6">
                          <span className={`px-2 py-1 text-xs rounded-md ${
                            invoice.status === "paid" 
                              ? "bg-green-500/10 text-green-600"
                              : invoice.status === "pending"
                                ? "bg-orange-500/10 text-orange-600"
                                : "bg-red-500/10 text-red-600"
                          }`}>
                            {invoice.status.charAt(0).toUpperCase() + invoice.status.slice(1)}
                          </span>
                        </td>
                        <td className="py-4 px-6">
                          <div className="flex items-center space-x-2">
                            {invoice.status === "pending" && (
                              <Button 
                                size="sm"
                                onClick={() => handlePayInvoice(invoice.id)}
                                data-testid={`button-pay-${invoice.id}`}
                              >
                                Pay Now
                              </Button>
                            )}
                            <Button 
                              variant="ghost" 
                              size="sm"
                              onClick={() => handleDownloadInvoice(invoice.id)}
                              data-testid={`button-download-${invoice.id}`}
                            >
                              <Download className="h-4 w-4" />
                            </Button>
                          </div>
                        </td>
                      </tr>
                    ))}
                    {(!invoices || (invoices as any[]).length === 0) && (
                      <tr>
                        <td colSpan={5} className="py-8 text-center text-muted-foreground">
                          No invoices found
                        </td>
                      </tr>
                    )}
                  </tbody>
                </table>
              </div>
            </CardContent>
          </Card>
        </div>
      </div>
    </section>
  );
}


================================================================================
END: D:\QiEOS\QiAllyPortal\client\src\pages\invoice-management.tsx
================================================================================


================================================================================
FILE: D:\QiEOS\QiAllyPortal\client\src\pages\knowledge-base.tsx
================================================================================

import { useState } from "react";
import { ArrowLeft, Bot } from "lucide-react";
import { useLocation } from "wouter";
import { KnowledgeBaseSidebar } from "@/components/kb/KnowledgeBaseSidebar";
import { AiChatSidebar } from "@/components/kb/AiChatSidebar";
import { useRequireAuth } from "@/utils/authGuards";
import { Button } from "@/components/ui/button";

export default function KnowledgeBase() {
  const { user, loading } = useRequireAuth();
  const [, setLocation] = useLocation();
  const [showChatBot, setShowChatBot] = useState(true);

  if (loading) {
    return (
      <div className="min-h-screen flex items-center justify-center">
        <div className="animate-spin w-8 h-8 border-4 border-primary border-t-transparent rounded-full"></div>
      </div>
    );
  }

  if (!user) {
    return null;
  }

  return (
    <section className="min-h-screen bg-background">
      {/* KB Header */}
      <header className="bg-card border-b border-border">
        <div className="px-6 py-4">
          <div className="flex items-center justify-between">
            <div className="flex items-center space-x-4">
              <Button
                variant="ghost"
                size="sm"
                onClick={() => setLocation("/dashboard")}
                data-testid="button-go-back"
              >
                <ArrowLeft className="h-4 w-4" />
              </Button>
              <div>
                <h1 className="text-xl font-semibold text-foreground">Knowledge Base</h1>
                <p className="text-sm text-muted-foreground">
                  {user.clientSlug ? `${user.clientSlug.charAt(0).toUpperCase() + user.clientSlug.slice(1).replace('-', ' ')} Resources` : "Resources"}
                </p>
              </div>
            </div>
            
            <div className="flex items-center space-x-4">
              <Button
                onClick={() => setShowChatBot(!showChatBot)}
                variant={showChatBot ? "default" : "secondary"}
                data-testid="button-toggle-chatbot"
              >
                <Bot className="mr-2 h-4 w-4" /> AI Assistant
              </Button>
            </div>
          </div>
        </div>
      </header>

      <div className="flex">
        <KnowledgeBaseSidebar />
        
        {/* KB Main Content */}
        <main className={`flex-1 flex ${showChatBot ? "" : "mr-96"}`}>
          {/* Article Content */}
          <div className="flex-1 p-8">
            <article className="max-w-4xl mx-auto">
              <header className="mb-8">
                <h1 className="text-3xl font-bold text-foreground mb-4" data-testid="article-title">
                  Brand Style Guide
                </h1>
                <div className="flex items-center space-x-4 text-sm text-muted-foreground">
                  <span>Last updated: <span data-testid="text-last-updated">Dec 1, 2024</span></span>
                  <span>•</span>
                  <span>5 min read</span>
                  <span>•</span>
                  <span className="px-2 py-1 bg-primary/10 text-primary rounded-md">Design</span>
                </div>
              </header>
              
              <div className="prose prose-gray max-w-none">
                <p className="text-lg text-muted-foreground mb-6">
                  This guide outlines the visual identity and brand standards for your organization. 
                  Please refer to these guidelines when creating any marketing materials or communications.
                </p>
                
                <h2 className="text-xl font-semibold text-foreground mb-4">Logo Usage</h2>
                <div className="bg-secondary rounded-lg p-6 mb-6">
                  <div className="grid md:grid-cols-2 gap-6">
                    <div className="text-center">
                      <div className="w-32 h-32 bg-primary rounded-lg mx-auto mb-4 flex items-center justify-center">
                        <span className="text-primary-foreground text-2xl font-bold">LOGO</span>
                      </div>
                      <p className="text-sm text-muted-foreground">Primary Logo</p>
                    </div>
                    <div className="text-center">
                      <div className="w-32 h-32 bg-card border-2 border-border rounded-lg mx-auto mb-4 flex items-center justify-center">
                        <span className="text-foreground text-2xl font-bold">LOGO</span>
                      </div>
                      <p className="text-sm text-muted-foreground">Secondary Logo</p>
                    </div>
                  </div>
                </div>
                
                <h2 className="text-xl font-semibold text-foreground mb-4">Color Palette</h2>
                <div className="grid grid-cols-2 md:grid-cols-4 gap-4 mb-6">
                  {[
                    { name: "Primary", color: "bg-primary", hex: "#6366F1" },
                    { name: "Accent", color: "bg-accent", hex: "#A855F7" },
                    { name: "Success", color: "bg-green-500", hex: "#10B981" },
                    { name: "Warning", color: "bg-orange-500", hex: "#F59E0B" },
                  ].map((colorInfo, index) => (
                    <div key={index} className="text-center">
                      <div className={`w-16 h-16 ${colorInfo.color} rounded-lg mx-auto mb-2`}></div>
                      <p className="text-xs text-muted-foreground">{colorInfo.name}</p>
                      <p className="text-xs font-mono text-foreground">{colorInfo.hex}</p>
                    </div>
                  ))}
                </div>
                
                <h2 className="text-xl font-semibold text-foreground mb-4">Typography</h2>
                <div className="space-y-4 mb-6">
                  <div className="p-4 bg-secondary rounded-lg">
                    <h3 className="text-2xl font-bold text-foreground mb-2">Heading Font</h3>
                    <p className="text-muted-foreground">Used for titles and headings throughout the brand</p>
                  </div>
                  <div className="p-4 bg-secondary rounded-lg">
                    <p className="text-lg text-foreground mb-2">Body Text Font</p>
                    <p className="text-muted-foreground">Used for paragraphs and body text content</p>
                  </div>
                </div>
              </div>
            </article>
          </div>

          {/* AI Chat Sidebar */}
          {showChatBot && <AiChatSidebar />}
        </main>
      </div>
    </section>
  );
}


================================================================================
END: D:\QiEOS\QiAllyPortal\client\src\pages\knowledge-base.tsx
================================================================================


================================================================================
FILE: D:\QiEOS\QiAllyPortal\client\src\pages\landing.tsx
================================================================================

import { PublicNavigation } from "@/components/layout/PublicNavigation";
import { HeroSection } from "@/components/layout/HeroSection";
import { FeatureGrid } from "@/components/layout/FeatureGrid";

export default function Landing() {
  return (
    <section className="relative min-h-screen overflow-hidden">
      {/* Background with gradient */}
      <div className="absolute inset-0 gradient-bg"></div>
      
      {/* Glassmorphism overlay */}
      <div className="absolute inset-0 bg-gradient-to-br from-white/10 to-transparent"></div>
      
      <PublicNavigation />
      <HeroSection />
      <FeatureGrid />
    </section>
  );
}


================================================================================
END: D:\QiEOS\QiAllyPortal\client\src\pages\landing.tsx
================================================================================


================================================================================
FILE: D:\QiEOS\QiAllyPortal\client\src\pages\messaging.tsx
================================================================================

import { useState } from "react";
import { Phone, Video, Info, Paperclip, Send } from "lucide-react";
import { useRequireAuth } from "@/utils/authGuards";
import { useQuery, useMutation, useQueryClient } from "@tanstack/react-query";
import { apiRequest } from "@/lib/queryClient";
import { useWebSocket } from "@/hooks/useWebSocket";
import { MessageSidebar } from "@/components/messaging/MessageSidebar";
import { MessageContent } from "@/components/messaging/MessageContent";
import { Button } from "@/components/ui/button";
import { Input } from "@/components/ui/input";
import { Textarea } from "@/components/ui/textarea";
import { useToast } from "@/hooks/use-toast";

export default function Messaging() {
  const { user, loading } = useRequireAuth();
  const [selectedConversationId, setSelectedConversationId] = useState<string | null>("1");
  const [messageInput, setMessageInput] = useState("");
  const { messages: wsMessages } = useWebSocket();
  const { toast } = useToast();
  const queryClient = useQueryClient();

  const { data: conversations = [] } = useQuery({
    queryKey: ["/api/conversations"],
    enabled: !!user,
  });

  const { data: messages = [] } = useQuery({
    queryKey: ["/api/conversations", selectedConversationId, "messages"],
    enabled: !!selectedConversationId,
  });

  const sendMessageMutation = useMutation({
    mutationFn: async (messageData: { content: string; messageType?: string }) => {
      const res = await apiRequest("POST", `/api/conversations/${selectedConversationId}/messages`, messageData);
      return res.json();
    },
    onSuccess: () => {
      queryClient.invalidateQueries({ queryKey: ["/api/conversations", selectedConversationId, "messages"] });
      setMessageInput("");
    },
    onError: (error: any) => {
      toast({
        title: "Error",
        description: error.message || "Failed to send message",
        variant: "destructive"
      });
    }
  });

  if (loading) {
    return (
      <div className="min-h-screen flex items-center justify-center">
        <div className="animate-spin w-8 h-8 border-4 border-primary border-t-transparent rounded-full"></div>
      </div>
    );
  }

  if (!user) {
    return null;
  }

  const handleSendMessage = () => {
    if (!messageInput.trim() || !selectedConversationId) return;
    
    sendMessageMutation.mutate({
      content: messageInput,
      messageType: "text"
    });
  };

  const handleKeyPress = (e: React.KeyboardEvent) => {
    if (e.key === "Enter" && !e.shiftKey) {
      e.preventDefault();
      handleSendMessage();
    }
  };

  const selectedConversation = (conversations as any[])?.find((c: any) => c.id === selectedConversationId);

  return (
    <section className="min-h-screen bg-background">
      <div className="flex h-screen">
        <MessageSidebar />
        
        {selectedConversationId ? (
          <main className="flex-1 flex flex-col">
            {/* Conversation Header */}
            <header className="p-4 border-b border-border bg-card">
              <div className="flex items-center justify-between">
                <div className="flex items-center space-x-3">
                  <div className="w-10 h-10 bg-primary rounded-full flex items-center justify-center">
                    <span className="text-primary-foreground text-sm font-medium">
                      {selectedConversation?.participants?.[0]?.charAt(0) || "U"}
                    </span>
                  </div>
                  <div>
                    <h3 className="text-sm font-medium text-foreground" data-testid="conversation-participant">
                      {selectedConversation?.title || "Conversation"}
                    </h3>
                    <p className="text-xs text-muted-foreground">Online now</p>
                  </div>
                </div>
                
                <div className="flex items-center space-x-2">
                  <Button variant="ghost" size="sm" data-testid="button-start-call">
                    <Phone className="h-4 w-4" />
                  </Button>
                  <Button variant="ghost" size="sm" data-testid="button-start-video-call">
                    <Video className="h-4 w-4" />
                  </Button>
                  <Button variant="ghost" size="sm" data-testid="button-view-project-details">
                    <Info className="h-4 w-4" />
                  </Button>
                </div>
              </div>
            </header>
            
            {/* Messages */}
            <div className="flex-1 overflow-y-auto p-4 space-y-4" data-testid="messages-container">
              {(messages as any[])?.map((message: any) => (
                <div 
                  key={message.id} 
                  className={`flex items-start space-x-3 ${
                    message.senderId === user.id ? "flex-row-reverse" : ""
                  }`}
                >
                  <div className={`w-8 h-8 rounded-full flex items-center justify-center ${
                    message.senderId === user.id ? "bg-accent" : "bg-primary"
                  }`}>
                    <span className="text-white text-xs font-medium">
                      {message.senderId === user.id ? user.name?.charAt(0) : "T"}
                    </span>
                  </div>
                  <div className={`flex-1 max-w-md ${message.senderId === user.id ? "text-right" : ""}`}>
                    <div className={`rounded-lg p-3 ${
                      message.senderId === user.id 
                        ? "bg-primary text-primary-foreground" 
                        : "bg-secondary text-foreground"
                    }`}>
                      <p className="text-sm whitespace-pre-wrap">{message.content}</p>
                    </div>
                    <p className={`text-xs text-muted-foreground mt-1 ${
                      message.senderId === user.id ? "text-right" : ""
                    }`}>
                      {new Date(message.createdAt).toLocaleTimeString()}
                    </p>
                  </div>
                </div>
              ))}
            </div>
            
            {/* Message Input */}
            <div className="p-4 border-t border-border bg-card">
              <div className="flex items-end space-x-2">
                <Button variant="ghost" size="sm" data-testid="button-attach-file">
                  <Paperclip className="h-4 w-4" />
                </Button>
                <div className="flex-1">
                  <Textarea
                    placeholder="Type your message..."
                    value={messageInput}
                    onChange={(e) => setMessageInput(e.target.value)}
                    onKeyPress={handleKeyPress}
                    rows={1}
                    className="resize-none"
                    data-testid="textarea-message-input"
                  />
                </div>
                <Button 
                  onClick={handleSendMessage}
                  disabled={!messageInput.trim() || sendMessageMutation.isPending}
                  data-testid="button-send-message"
                >
                  <Send className="h-4 w-4" />
                </Button>
              </div>
            </div>
          </main>
        ) : (
          <div className="flex-1 flex items-center justify-center bg-muted/10">
            <div className="text-center">
              <h3 className="text-lg font-medium text-foreground mb-2">Select a conversation</h3>
              <p className="text-muted-foreground">Choose a conversation from the sidebar to start messaging</p>
            </div>
          </div>
        )}
      </div>
    </section>
  );
}


================================================================================
END: D:\QiEOS\QiAllyPortal\client\src\pages\messaging.tsx
================================================================================


================================================================================
FILE: D:\QiEOS\QiAllyPortal\client\src\pages\not-found.tsx
================================================================================

import { Card, CardContent } from "@/components/ui/card";
import { AlertCircle } from "lucide-react";

export default function NotFound() {
  return (
    <div className="min-h-screen w-full flex items-center justify-center bg-gray-50">
      <Card className="w-full max-w-md mx-4">
        <CardContent className="pt-6">
          <div className="flex mb-4 gap-2">
            <AlertCircle className="h-8 w-8 text-red-500" />
            <h1 className="text-2xl font-bold text-gray-900">404 Page Not Found</h1>
          </div>

          <p className="mt-4 text-sm text-gray-600">
            Did you forget to add the page to the router?
          </p>
        </CardContent>
      </Card>
    </div>
  );
}


================================================================================
END: D:\QiEOS\QiAllyPortal\client\src\pages\not-found.tsx
================================================================================


================================================================================
FILE: D:\QiEOS\QiAllyPortal\client\src\utils\authGuards.ts
================================================================================

import { useUser } from "@/context/UserContext";
import { useEffect } from "react";
import { useLocation } from "wouter";

export function useRequireAuth() {
  const { user, loading } = useUser();
  const [, setLocation] = useLocation();

  useEffect(() => {
    if (!loading && !user) {
      setLocation("/");
    }
  }, [user, loading, setLocation]);

  return { user, loading };
}

export function useRequireAdmin() {
  const { user, loading, isAdmin } = useUser();
  const [, setLocation] = useLocation();

  useEffect(() => {
    if (!loading && (!user || !isAdmin)) {
      setLocation("/");
    }
  }, [user, loading, isAdmin, setLocation]);

  return { user, loading, isAdmin };
}

export function useRequireClient() {
  const { user, loading, isClient } = useUser();
  const [, setLocation] = useLocation();

  useEffect(() => {
    if (!loading && (!user || !isClient)) {
      setLocation("/");
    }
  }, [user, loading, isClient, setLocation]);

  return { user, loading, isClient };
}


================================================================================
END: D:\QiEOS\QiAllyPortal\client\src\utils\authGuards.ts
================================================================================


================================================================================
FILE: D:\QiEOS\QiAllyPortal\server\index.ts
================================================================================

import express, { type Request, Response, NextFunction } from "express";
import { registerRoutes } from "./routes";
import { setupVite, serveStatic, log } from "./vite";

const app = express();
app.use(express.json());
app.use(express.urlencoded({ extended: false }));

app.use((req, res, next) => {
  const start = Date.now();
  const path = req.path;
  let capturedJsonResponse: Record<string, any> | undefined = undefined;

  const originalResJson = res.json;
  res.json = function (bodyJson, ...args) {
    capturedJsonResponse = bodyJson;
    return originalResJson.apply(res, [bodyJson, ...args]);
  };

  res.on("finish", () => {
    const duration = Date.now() - start;
    if (path.startsWith("/api")) {
      let logLine = `${req.method} ${path} ${res.statusCode} in ${duration}ms`;
      if (capturedJsonResponse) {
        logLine += ` :: ${JSON.stringify(capturedJsonResponse)}`;
      }

      if (logLine.length > 80) {
        logLine = logLine.slice(0, 79) + "…";
      }

      log(logLine);
    }
  });

  next();
});

(async () => {
  const server = await registerRoutes(app);

  app.use((err: any, _req: Request, res: Response, _next: NextFunction) => {
    const status = err.status || err.statusCode || 500;
    const message = err.message || "Internal Server Error";

    res.status(status).json({ message });
    throw err;
  });

  // importantly only setup vite in development and after
  // setting up all the other routes so the catch-all route
  // doesn't interfere with the other routes
  if (app.get("env") === "development") {
    await setupVite(app, server);
  } else {
    serveStatic(app);
  }

  // ALWAYS serve the app on the port specified in the environment variable PORT
  // Other ports are firewalled. Default to 5000 if not specified.
  // this serves both the API and the client.
  // It is the only port that is not firewalled.
  const port = parseInt(process.env.PORT || '5000', 10);
  server.listen({
    port,
    host: "0.0.0.0",
    reusePort: true,
  }, () => {
    log(`serving on port ${port}`);
  });
})();


================================================================================
END: D:\QiEOS\QiAllyPortal\server\index.ts
================================================================================


================================================================================
FILE: D:\QiEOS\QiAllyPortal\server\routes.ts
================================================================================

import type { Express } from "express";
import { createServer, type Server } from "http";
import { WebSocketServer, WebSocket } from "ws";
import Stripe from "stripe";
import OpenAI from "openai";
import { storage } from "./storage";
import { insertUserSchema, insertProjectSchema, insertKbFileSchema, insertMessageSchema, insertInvoiceSchema, insertServiceRequestSchema } from "@shared/schema";
import { z } from "zod";

// Initialize services
const stripe = process.env.STRIPE_SECRET_KEY ? new Stripe(process.env.STRIPE_SECRET_KEY, {
  apiVersion: "2023-10-16",
}) : null;

// the newest OpenAI model is "gpt-5" which was released August 7, 2025. do not change this unless explicitly requested by the user
const openai = process.env.OPENAI_API_KEY ? new OpenAI({ 
  apiKey: process.env.OPENAI_API_KEY 
}) : null;

// Simple session tracking for demo
const sessions = new Map<string, { userId: string; clientSlug?: string }>();

// Authentication middleware
function requireAuth(req: any, res: any, next: any) {
  const sessionId = req.headers.authorization?.replace('Bearer ', '');
  if (!sessionId || !sessions.has(sessionId)) {
    return res.status(401).json({ message: "Unauthorized" });
  }
  req.session = sessions.get(sessionId);
  next();
}

// WebSocket clients map
const wsClients = new Map<string, WebSocket>();

export async function registerRoutes(app: Express): Promise<Server> {
  // Auth routes
  app.post("/api/auth/login", async (req, res) => {
    try {
      const { email, password } = req.body;
      const user = await storage.getUserByEmail(email);
      
      if (!user || user.password !== password) {
        return res.status(401).json({ message: "Invalid credentials" });
      }

      const sessionId = Math.random().toString(36);
      sessions.set(sessionId, { userId: user.id, clientSlug: user.clientSlug || undefined });
      
      res.json({ 
        sessionId, 
        user: { 
          id: user.id, 
          email: user.email, 
          role: user.role, 
          clientSlug: user.clientSlug,
          name: user.name 
        } 
      });
    } catch (error: any) {
      res.status(500).json({ message: error.message });
    }
  });

  app.post("/api/auth/register", async (req, res) => {
    try {
      const userData = insertUserSchema.parse(req.body);
      const user = await storage.createUser(userData);
      
      const sessionId = Math.random().toString(36);
      sessions.set(sessionId, { userId: user.id, clientSlug: user.clientSlug || undefined });
      
      res.json({ 
        sessionId, 
        user: { 
          id: user.id, 
          email: user.email, 
          role: user.role, 
          clientSlug: user.clientSlug,
          name: user.name 
        } 
      });
    } catch (error: any) {
      res.status(400).json({ message: error.message });
    }
  });

  app.post("/api/auth/logout", requireAuth, (req, res) => {
    const sessionId = req.headers.authorization?.replace('Bearer ', '');
    if (sessionId) {
      sessions.delete(sessionId);
    }
    res.json({ message: "Logged out" });
  });

  // User routes
  app.get("/api/user/me", requireAuth, async (req, res) => {
    try {
      const user = await storage.getUser(req.session.userId);
      if (!user) {
        return res.status(404).json({ message: "User not found" });
      }
      res.json({ 
        id: user.id, 
        email: user.email, 
        role: user.role, 
        clientSlug: user.clientSlug,
        name: user.name 
      });
    } catch (error: any) {
      res.status(500).json({ message: error.message });
    }
  });

  // Client routes
  app.get("/api/clients", requireAuth, async (req, res) => {
    try {
      const user = await storage.getUser(req.session.userId);
      if (user?.role !== "admin") {
        return res.status(403).json({ message: "Admin access required" });
      }
      const clients = await storage.getClients();
      res.json(clients);
    } catch (error: any) {
      res.status(500).json({ message: error.message });
    }
  });

  app.get("/api/clients/:slug", requireAuth, async (req, res) => {
    try {
      const { slug } = req.params;
      const user = await storage.getUser(req.session.userId);
      
      if (user?.role !== "admin" && user?.clientSlug !== slug) {
        return res.status(403).json({ message: "Access denied" });
      }
      
      const client = await storage.getClient(slug);
      if (!client) {
        return res.status(404).json({ message: "Client not found" });
      }
      res.json(client);
    } catch (error: any) {
      res.status(500).json({ message: error.message });
    }
  });

  // Project routes
  app.get("/api/projects", requireAuth, async (req, res) => {
    try {
      const user = await storage.getUser(req.session.userId);
      if (!user) return res.status(404).json({ message: "User not found" });
      
      let projects;
      if (user.role === "admin") {
        const clientSlug = req.query.clientSlug as string;
        if (!clientSlug) {
          return res.status(400).json({ message: "Client slug required for admin" });
        }
        projects = await storage.getProjects(clientSlug);
      } else {
        if (!user.clientSlug) {
          return res.status(400).json({ message: "User has no associated client" });
        }
        projects = await storage.getProjects(user.clientSlug);
      }
      
      res.json(projects);
    } catch (error: any) {
      res.status(500).json({ message: error.message });
    }
  });

  app.post("/api/projects", requireAuth, async (req, res) => {
    try {
      const projectData = insertProjectSchema.parse(req.body);
      const project = await storage.createProject(projectData);
      res.json(project);
    } catch (error: any) {
      res.status(400).json({ message: error.message });
    }
  });

  app.patch("/api/projects/:id", requireAuth, async (req, res) => {
    try {
      const { id } = req.params;
      const updates = req.body;
      const project = await storage.updateProject(id, updates);
      res.json(project);
    } catch (error: any) {
      res.status(400).json({ message: error.message });
    }
  });

  // Knowledge Base routes
  app.get("/api/kb", requireAuth, async (req, res) => {
    try {
      const user = await storage.getUser(req.session.userId);
      if (!user) return res.status(404).json({ message: "User not found" });
      
      let clientSlug;
      if (user.role === "admin") {
        clientSlug = req.query.clientSlug as string;
        if (!clientSlug) {
          return res.status(400).json({ message: "Client slug required for admin" });
        }
      } else {
        clientSlug = user.clientSlug;
      }
      
      if (!clientSlug) {
        return res.status(400).json({ message: "No client associated" });
      }
      
      const files = await storage.getKbFiles(clientSlug);
      res.json(files);
    } catch (error: any) {
      res.status(500).json({ message: error.message });
    }
  });

  app.get("/api/kb/search", requireAuth, async (req, res) => {
    try {
      const { q, clientSlug: queryClientSlug } = req.query;
      const user = await storage.getUser(req.session.userId);
      if (!user) return res.status(404).json({ message: "User not found" });
      
      let clientSlug;
      if (user.role === "admin") {
        clientSlug = queryClientSlug as string;
      } else {
        clientSlug = user.clientSlug;
      }
      
      if (!clientSlug || !q) {
        return res.status(400).json({ message: "Client slug and query required" });
      }
      
      const files = await storage.searchKbFiles(clientSlug, q as string);
      res.json(files);
    } catch (error: any) {
      res.status(500).json({ message: error.message });
    }
  });

  app.post("/api/kb", requireAuth, async (req, res) => {
    try {
      const kbFileData = insertKbFileSchema.parse(req.body);
      const kbFile = await storage.createKbFile(kbFileData);
      res.json(kbFile);
    } catch (error: any) {
      res.status(400).json({ message: error.message });
    }
  });

  // AI Chat routes
  app.post("/api/ai/chat", requireAuth, async (req, res) => {
    try {
      if (!openai) {
        return res.status(503).json({ message: "OpenAI service not available" });
      }

      const { message, clientSlug: queryClientSlug } = req.body;
      const user = await storage.getUser(req.session.userId);
      if (!user) return res.status(404).json({ message: "User not found" });
      
      let clientSlug;
      if (user.role === "admin") {
        clientSlug = queryClientSlug;
      } else {
        clientSlug = user.clientSlug;
      }
      
      if (!clientSlug) {
        return res.status(400).json({ message: "No client associated" });
      }

      // Get relevant KB files for context
      const kbFiles = await storage.searchKbFiles(clientSlug, message);
      const context = kbFiles.slice(0, 3).map(file => 
        `Title: ${file.title}\nContent: ${file.content?.substring(0, 500)}...`
      ).join('\n\n');

      const response = await openai.chat.completions.create({
        model: "gpt-5", // the newest OpenAI model is "gpt-5" which was released August 7, 2025
        messages: [
          {
            role: "system",
            content: `You are a helpful AI assistant for ${clientSlug}. Use the following knowledge base context to answer questions. If the answer isn't in the context, say so politely.\n\nContext:\n${context}`
          },
          {
            role: "user",
            content: message
          }
        ],
        response_format: { type: "json_object" },
      });

      const aiResponse = JSON.parse(response.choices[0].message.content || '{"response": "I apologize, but I cannot process your request at the moment."}');
      
      res.json({ 
        response: aiResponse.response,
        sources: kbFiles.slice(0, 3).map(file => ({
          title: file.title,
          path: file.path
        }))
      });
    } catch (error: any) {
      res.status(500).json({ message: error.message });
    }
  });

  // Message routes
  app.get("/api/conversations", requireAuth, async (req, res) => {
    try {
      const user = await storage.getUser(req.session.userId);
      if (!user) return res.status(404).json({ message: "User not found" });
      
      let clientSlug;
      if (user.role === "admin") {
        clientSlug = req.query.clientSlug as string;
        if (!clientSlug) {
          return res.status(400).json({ message: "Client slug required for admin" });
        }
      } else {
        clientSlug = user.clientSlug;
      }
      
      if (!clientSlug) {
        return res.status(400).json({ message: "No client associated" });
      }
      
      const conversations = await storage.getConversations(clientSlug);
      res.json(conversations);
    } catch (error: any) {
      res.status(500).json({ message: error.message });
    }
  });

  app.get("/api/conversations/:id/messages", requireAuth, async (req, res) => {
    try {
      const { id } = req.params;
      const messages = await storage.getMessages(id);
      res.json(messages);
    } catch (error: any) {
      res.status(500).json({ message: error.message });
    }
  });

  app.post("/api/conversations/:id/messages", requireAuth, async (req, res) => {
    try {
      const { id } = req.params;
      const messageData = insertMessageSchema.parse({
        ...req.body,
        conversationId: id,
        senderId: req.session.userId
      });
      
      const message = await storage.createMessage(messageData);
      
      // Broadcast to WebSocket clients
      const wsMessage = JSON.stringify({
        type: "new_message",
        data: message
      });
      
      wsClients.forEach((ws, clientId) => {
        if (ws.readyState === WebSocket.OPEN) {
          ws.send(wsMessage);
        }
      });
      
      res.json(message);
    } catch (error: any) {
      res.status(400).json({ message: error.message });
    }
  });

  // Invoice routes
  app.get("/api/invoices", requireAuth, async (req, res) => {
    try {
      const user = await storage.getUser(req.session.userId);
      if (!user) return res.status(404).json({ message: "User not found" });
      
      let clientSlug;
      if (user.role === "admin") {
        clientSlug = req.query.clientSlug as string;
        if (!clientSlug) {
          return res.status(400).json({ message: "Client slug required for admin" });
        }
      } else {
        clientSlug = user.clientSlug;
      }
      
      if (!clientSlug) {
        return res.status(400).json({ message: "No client associated" });
      }
      
      const invoices = await storage.getInvoices(clientSlug);
      res.json(invoices);
    } catch (error: any) {
      res.status(500).json({ message: error.message });
    }
  });

  // Stripe payment routes
  app.post("/api/create-payment-intent", requireAuth, async (req, res) => {
    try {
      if (!stripe) {
        return res.status(503).json({ message: "Stripe service not available" });
      }

      const { amount, invoiceId } = req.body;
      const paymentIntent = await stripe.paymentIntents.create({
        amount: Math.round(amount * 100), // Convert to cents
        currency: "usd",
        metadata: { invoiceId }
      });
      
      res.json({ clientSecret: paymentIntent.client_secret });
    } catch (error: any) {
      res.status(500).json({ message: "Error creating payment intent: " + error.message });
    }
  });

  app.post("/api/invoices/:id/pay", requireAuth, async (req, res) => {
    try {
      const { id } = req.params;
      const { paymentIntentId } = req.body;
      
      const invoice = await storage.updateInvoice(id, {
        status: "paid",
        stripePaymentIntentId: paymentIntentId,
        paidAt: new Date()
      });
      
      res.json(invoice);
    } catch (error: any) {
      res.status(400).json({ message: error.message });
    }
  });

  // Service Request routes
  app.get("/api/service-requests", requireAuth, async (req, res) => {
    try {
      const user = await storage.getUser(req.session.userId);
      if (!user) return res.status(404).json({ message: "User not found" });
      
      let clientSlug;
      if (user.role === "admin") {
        clientSlug = req.query.clientSlug as string;
        if (!clientSlug) {
          return res.status(400).json({ message: "Client slug required for admin" });
        }
      } else {
        clientSlug = user.clientSlug;
      }
      
      if (!clientSlug) {
        return res.status(400).json({ message: "No client associated" });
      }
      
      const requests = await storage.getServiceRequests(clientSlug);
      res.json(requests);
    } catch (error: any) {
      res.status(500).json({ message: error.message });
    }
  });

  app.post("/api/service-requests", requireAuth, async (req, res) => {
    try {
      const user = await storage.getUser(req.session.userId);
      if (!user?.clientSlug) {
        return res.status(400).json({ message: "User has no associated client" });
      }
      
      const requestData = insertServiceRequestSchema.parse({
        ...req.body,
        clientSlug: user.clientSlug,
        userId: user.id
      });
      
      const serviceRequest = await storage.createServiceRequest(requestData);
      res.json(serviceRequest);
    } catch (error: any) {
      res.status(400).json({ message: error.message });
    }
  });

  const httpServer = createServer(app);

  // WebSocket server for real-time messaging
  const wss = new WebSocketServer({ server: httpServer, path: '/ws' });
  
  wss.on('connection', (ws, req) => {
    const clientId = Math.random().toString(36);
    wsClients.set(clientId, ws);
    
    ws.on('close', () => {
      wsClients.delete(clientId);
    });
    
    ws.on('message', (data) => {
      try {
        const message = JSON.parse(data.toString());
        // Handle real-time message events
        console.log('WebSocket message:', message);
      } catch (error) {
        console.error('WebSocket message error:', error);
      }
    });
  });

  return httpServer;
}


================================================================================
END: D:\QiEOS\QiAllyPortal\server\routes.ts
================================================================================


================================================================================
FILE: D:\QiEOS\QiAllyPortal\server\storage.ts
================================================================================

import { 
  type User, 
  type InsertUser, 
  type Client, 
  type InsertClient,
  type Project,
  type InsertProject,
  type KbFile,
  type InsertKbFile,
  type Conversation,
  type InsertConversation,
  type Message,
  type InsertMessage,
  type Invoice,
  type InsertInvoice,
  type ServiceRequest,
  type InsertServiceRequest
} from "@shared/schema";
import { randomUUID } from "crypto";

export interface IStorage {
  // Users
  getUser(id: string): Promise<User | undefined>;
  getUserByEmail(email: string): Promise<User | undefined>;
  createUser(user: InsertUser): Promise<User>;
  updateUser(id: string, updates: Partial<User>): Promise<User>;
  updateUserStripeInfo(id: string, customerId: string, subscriptionId: string): Promise<User>;

  // Clients
  getClient(slug: string): Promise<Client | undefined>;
  getClients(): Promise<Client[]>;
  createClient(client: InsertClient): Promise<Client>;
  updateClient(slug: string, updates: Partial<Client>): Promise<Client>;
  getClientUsers(clientSlug: string): Promise<User[]>;

  // Projects
  getProjects(clientSlug: string): Promise<Project[]>;
  getProject(id: string): Promise<Project | undefined>;
  createProject(project: InsertProject): Promise<Project>;
  updateProject(id: string, updates: Partial<Project>): Promise<Project>;

  // Knowledge Base
  getKbFiles(clientSlug: string): Promise<KbFile[]>;
  getKbFile(id: string): Promise<KbFile | undefined>;
  createKbFile(kbFile: InsertKbFile): Promise<KbFile>;
  updateKbFile(id: string, updates: Partial<KbFile>): Promise<KbFile>;
  searchKbFiles(clientSlug: string, query: string): Promise<KbFile[]>;

  // Conversations & Messages
  getConversations(clientSlug: string): Promise<Conversation[]>;
  getConversation(id: string): Promise<Conversation | undefined>;
  createConversation(conversation: InsertConversation): Promise<Conversation>;
  getMessages(conversationId: string): Promise<Message[]>;
  createMessage(message: InsertMessage): Promise<Message>;
  markMessagesAsRead(conversationId: string, userId: string): Promise<void>;

  // Invoices
  getInvoices(clientSlug: string): Promise<Invoice[]>;
  getInvoice(id: string): Promise<Invoice | undefined>;
  createInvoice(invoice: InsertInvoice): Promise<Invoice>;
  updateInvoice(id: string, updates: Partial<Invoice>): Promise<Invoice>;

  // Service Requests
  getServiceRequests(clientSlug: string): Promise<ServiceRequest[]>;
  createServiceRequest(request: InsertServiceRequest): Promise<ServiceRequest>;
  updateServiceRequest(id: string, updates: Partial<ServiceRequest>): Promise<ServiceRequest>;
}

export class MemStorage implements IStorage {
  private users: Map<string, User> = new Map();
  private clients: Map<string, Client> = new Map();
  private projects: Map<string, Project> = new Map();
  private kbFiles: Map<string, KbFile> = new Map();
  private conversations: Map<string, Conversation> = new Map();
  private messages: Map<string, Message> = new Map();
  private invoices: Map<string, Invoice> = new Map();
  private serviceRequests: Map<string, ServiceRequest> = new Map();

  constructor() {
    this.seedData();
  }

  private seedData() {
    // Create demo admin user
    const adminUser: User = {
      id: randomUUID(),
      email: "admin@qially.com",
      password: "hashed_password",
      role: "admin",
      clientSlug: null,
      name: "John Doe",
      stripeCustomerId: null,
      stripeSubscriptionId: null,
      createdAt: new Date(),
      updatedAt: new Date(),
    };
    this.users.set(adminUser.id, adminUser);

    // Create demo clients
    const acmeClient: Client = {
      id: randomUUID(),
      slug: "acme-corp",
      name: "Acme Corp",
      branding: { primaryColor: "#6366F1", logo: null },
      featureFlags: { projects: true, kb: true, messages: true, payments: true, aiChat: true },
      settings: {},
      createdAt: new Date(),
      updatedAt: new Date(),
    };
    this.clients.set(acmeClient.slug, acmeClient);

    // Create demo client user
    const clientUser: User = {
      id: randomUUID(),
      email: "sarah@acmecorp.com",
      password: "hashed_password",
      role: "client_user",
      clientSlug: "acme-corp",
      name: "Sarah Miller",
      stripeCustomerId: null,
      stripeSubscriptionId: null,
      createdAt: new Date(),
      updatedAt: new Date(),
    };
    this.users.set(clientUser.id, clientUser);

    // Create demo projects
    const project1: Project = {
      id: randomUUID(),
      clientSlug: "acme-corp",
      title: "Website Redesign",
      description: "Complete redesign of company website",
      status: "in_progress",
      progress: 65,
      dueDate: new Date("2024-12-15"),
      createdAt: new Date(),
      updatedAt: new Date(),
    };
    this.projects.set(project1.id, project1);

    // Create demo KB files
    const kbFile1: KbFile = {
      id: randomUUID(),
      clientSlug: "acme-corp",
      path: "/brand/style-guide.md",
      title: "Brand Style Guide",
      content: "Complete brand guidelines including logo usage, colors, and typography...",
      tags: ["brand", "design", "guidelines"],
      visibility: "private",
      embedding: null,
      createdAt: new Date(),
      updatedAt: new Date(),
    };
    this.kbFiles.set(kbFile1.id, kbFile1);

    // Create demo invoice
    const invoice1: Invoice = {
      id: randomUUID(),
      clientSlug: "acme-corp",
      projectId: project1.id,
      invoiceNumber: "INV-001",
      amount: "3850.00",
      status: "pending",
      stripePaymentIntentId: null,
      dueDate: new Date("2024-12-15"),
      paidAt: null,
      createdAt: new Date(),
    };
    this.invoices.set(invoice1.id, invoice1);
  }

  // User methods
  async getUser(id: string): Promise<User | undefined> {
    return this.users.get(id);
  }

  async getUserByEmail(email: string): Promise<User | undefined> {
    return Array.from(this.users.values()).find(user => user.email === email);
  }

  async createUser(insertUser: InsertUser): Promise<User> {
    const id = randomUUID();
    const user: User = {
      ...insertUser,
      id,
      createdAt: new Date(),
      updatedAt: new Date(),
    };
    this.users.set(id, user);
    return user;
  }

  async updateUser(id: string, updates: Partial<User>): Promise<User> {
    const user = this.users.get(id);
    if (!user) throw new Error("User not found");
    const updatedUser = { ...user, ...updates, updatedAt: new Date() };
    this.users.set(id, updatedUser);
    return updatedUser;
  }

  async updateUserStripeInfo(id: string, customerId: string, subscriptionId: string): Promise<User> {
    return this.updateUser(id, { stripeCustomerId: customerId, stripeSubscriptionId: subscriptionId });
  }

  // Client methods
  async getClient(slug: string): Promise<Client | undefined> {
    return this.clients.get(slug);
  }

  async getClients(): Promise<Client[]> {
    return Array.from(this.clients.values());
  }

  async createClient(insertClient: InsertClient): Promise<Client> {
    const id = randomUUID();
    const client: Client = {
      ...insertClient,
      id,
      createdAt: new Date(),
      updatedAt: new Date(),
    };
    this.clients.set(client.slug, client);
    return client;
  }

  async updateClient(slug: string, updates: Partial<Client>): Promise<Client> {
    const client = this.clients.get(slug);
    if (!client) throw new Error("Client not found");
    const updatedClient = { ...client, ...updates, updatedAt: new Date() };
    this.clients.set(slug, updatedClient);
    return updatedClient;
  }

  async getClientUsers(clientSlug: string): Promise<User[]> {
    return Array.from(this.users.values()).filter(user => user.clientSlug === clientSlug);
  }

  // Project methods
  async getProjects(clientSlug: string): Promise<Project[]> {
    return Array.from(this.projects.values()).filter(project => project.clientSlug === clientSlug);
  }

  async getProject(id: string): Promise<Project | undefined> {
    return this.projects.get(id);
  }

  async createProject(insertProject: InsertProject): Promise<Project> {
    const id = randomUUID();
    const project: Project = {
      ...insertProject,
      id,
      createdAt: new Date(),
      updatedAt: new Date(),
    };
    this.projects.set(id, project);
    return project;
  }

  async updateProject(id: string, updates: Partial<Project>): Promise<Project> {
    const project = this.projects.get(id);
    if (!project) throw new Error("Project not found");
    const updatedProject = { ...project, ...updates, updatedAt: new Date() };
    this.projects.set(id, updatedProject);
    return updatedProject;
  }

  // Knowledge Base methods
  async getKbFiles(clientSlug: string): Promise<KbFile[]> {
    return Array.from(this.kbFiles.values()).filter(file => file.clientSlug === clientSlug);
  }

  async getKbFile(id: string): Promise<KbFile | undefined> {
    return this.kbFiles.get(id);
  }

  async createKbFile(insertKbFile: InsertKbFile): Promise<KbFile> {
    const id = randomUUID();
    const kbFile: KbFile = {
      ...insertKbFile,
      id,
      createdAt: new Date(),
      updatedAt: new Date(),
    };
    this.kbFiles.set(id, kbFile);
    return kbFile;
  }

  async updateKbFile(id: string, updates: Partial<KbFile>): Promise<KbFile> {
    const kbFile = this.kbFiles.get(id);
    if (!kbFile) throw new Error("KB file not found");
    const updatedKbFile = { ...kbFile, ...updates, updatedAt: new Date() };
    this.kbFiles.set(id, updatedKbFile);
    return updatedKbFile;
  }

  async searchKbFiles(clientSlug: string, query: string): Promise<KbFile[]> {
    const files = await this.getKbFiles(clientSlug);
    return files.filter(file => 
      file.title.toLowerCase().includes(query.toLowerCase()) ||
      file.content?.toLowerCase().includes(query.toLowerCase()) ||
      file.tags?.some(tag => tag.toLowerCase().includes(query.toLowerCase()))
    );
  }

  // Conversation methods
  async getConversations(clientSlug: string): Promise<Conversation[]> {
    return Array.from(this.conversations.values()).filter(conv => conv.clientSlug === clientSlug);
  }

  async getConversation(id: string): Promise<Conversation | undefined> {
    return this.conversations.get(id);
  }

  async createConversation(insertConversation: InsertConversation): Promise<Conversation> {
    const id = randomUUID();
    const conversation: Conversation = {
      ...insertConversation,
      id,
      createdAt: new Date(),
    };
    this.conversations.set(id, conversation);
    return conversation;
  }

  async getMessages(conversationId: string): Promise<Message[]> {
    return Array.from(this.messages.values())
      .filter(message => message.conversationId === conversationId)
      .sort((a, b) => a.createdAt.getTime() - b.createdAt.getTime());
  }

  async createMessage(insertMessage: InsertMessage): Promise<Message> {
    const id = randomUUID();
    const message: Message = {
      ...insertMessage,
      id,
      createdAt: new Date(),
    };
    this.messages.set(id, message);
    return message;
  }

  async markMessagesAsRead(conversationId: string, userId: string): Promise<void> {
    for (const [id, message] of this.messages.entries()) {
      if (message.conversationId === conversationId && message.senderId !== userId) {
        this.messages.set(id, { ...message, isRead: true });
      }
    }
  }

  // Invoice methods
  async getInvoices(clientSlug: string): Promise<Invoice[]> {
    return Array.from(this.invoices.values()).filter(invoice => invoice.clientSlug === clientSlug);
  }

  async getInvoice(id: string): Promise<Invoice | undefined> {
    return this.invoices.get(id);
  }

  async createInvoice(insertInvoice: InsertInvoice): Promise<Invoice> {
    const id = randomUUID();
    const invoice: Invoice = {
      ...insertInvoice,
      id,
      createdAt: new Date(),
    };
    this.invoices.set(id, invoice);
    return invoice;
  }

  async updateInvoice(id: string, updates: Partial<Invoice>): Promise<Invoice> {
    const invoice = this.invoices.get(id);
    if (!invoice) throw new Error("Invoice not found");
    const updatedInvoice = { ...invoice, ...updates };
    this.invoices.set(id, updatedInvoice);
    return updatedInvoice;
  }

  // Service Request methods
  async getServiceRequests(clientSlug: string): Promise<ServiceRequest[]> {
    return Array.from(this.serviceRequests.values()).filter(req => req.clientSlug === clientSlug);
  }

  async createServiceRequest(insertServiceRequest: InsertServiceRequest): Promise<ServiceRequest> {
    const id = randomUUID();
    const serviceRequest: ServiceRequest = {
      ...insertServiceRequest,
      id,
      createdAt: new Date(),
      updatedAt: new Date(),
    };
    this.serviceRequests.set(id, serviceRequest);
    return serviceRequest;
  }

  async updateServiceRequest(id: string, updates: Partial<ServiceRequest>): Promise<ServiceRequest> {
    const serviceRequest = this.serviceRequests.get(id);
    if (!serviceRequest) throw new Error("Service request not found");
    const updatedServiceRequest = { ...serviceRequest, ...updates, updatedAt: new Date() };
    this.serviceRequests.set(id, updatedServiceRequest);
    return updatedServiceRequest;
  }
}

export const storage = new MemStorage();


================================================================================
END: D:\QiEOS\QiAllyPortal\server\storage.ts
================================================================================


================================================================================
FILE: D:\QiEOS\QiAllyPortal\server\vite.ts
================================================================================

import express, { type Express } from "express";
import fs from "fs";
import path from "path";
import { createServer as createViteServer, createLogger } from "vite";
import { type Server } from "http";
import viteConfig from "../vite.config";
import { nanoid } from "nanoid";

const viteLogger = createLogger();

export function log(message: string, source = "express") {
  const formattedTime = new Date().toLocaleTimeString("en-US", {
    hour: "numeric",
    minute: "2-digit",
    second: "2-digit",
    hour12: true,
  });

  console.log(`${formattedTime} [${source}] ${message}`);
}

export async function setupVite(app: Express, server: Server) {
  const serverOptions = {
    middlewareMode: true,
    hmr: { server },
    allowedHosts: true as const,
  };

  const vite = await createViteServer({
    ...viteConfig,
    configFile: false,
    customLogger: {
      ...viteLogger,
      error: (msg, options) => {
        viteLogger.error(msg, options);
        process.exit(1);
      },
    },
    server: serverOptions,
    appType: "custom",
  });

  app.use(vite.middlewares);
  app.use("*", async (req, res, next) => {
    const url = req.originalUrl;

    try {
      const clientTemplate = path.resolve(
        import.meta.dirname,
        "..",
        "client",
        "index.html",
      );

      // always reload the index.html file from disk incase it changes
      let template = await fs.promises.readFile(clientTemplate, "utf-8");
      template = template.replace(
        `src="/src/main.tsx"`,
        `src="/src/main.tsx?v=${nanoid()}"`,
      );
      const page = await vite.transformIndexHtml(url, template);
      res.status(200).set({ "Content-Type": "text/html" }).end(page);
    } catch (e) {
      vite.ssrFixStacktrace(e as Error);
      next(e);
    }
  });
}

export function serveStatic(app: Express) {
  const distPath = path.resolve(import.meta.dirname, "public");

  if (!fs.existsSync(distPath)) {
    throw new Error(
      `Could not find the build directory: ${distPath}, make sure to build the client first`,
    );
  }

  app.use(express.static(distPath));

  // fall through to index.html if the file doesn't exist
  app.use("*", (_req, res) => {
    res.sendFile(path.resolve(distPath, "index.html"));
  });
}


================================================================================
END: D:\QiEOS\QiAllyPortal\server\vite.ts
================================================================================


================================================================================
FILE: D:\QiEOS\QiAllyPortal\shared\schema.ts
================================================================================

import { sql } from "drizzle-orm";
import { pgTable, text, varchar, timestamp, boolean, jsonb, integer, decimal } from "drizzle-orm/pg-core";
import { createInsertSchema } from "drizzle-zod";
import { z } from "zod";

// Users table with multi-tenant support
export const users = pgTable("users", {
  id: varchar("id").primaryKey().default(sql`gen_random_uuid()`),
  email: text("email").notNull().unique(),
  password: text("password").notNull(),
  role: text("role").notNull().default("client_user"), // admin, team_member, client_user
  clientSlug: text("client_slug"),
  name: text("name").notNull(),
  stripeCustomerId: text("stripe_customer_id"),
  stripeSubscriptionId: text("stripe_subscription_id"),
  createdAt: timestamp("created_at").defaultNow(),
  updatedAt: timestamp("updated_at").defaultNow(),
});

// Clients/Tenants table
export const clients = pgTable("clients", {
  id: varchar("id").primaryKey().default(sql`gen_random_uuid()`),
  slug: text("slug").notNull().unique(),
  name: text("name").notNull(),
  branding: jsonb("branding"), // colors, logo, etc.
  featureFlags: jsonb("feature_flags").default('{}'), // enabled modules
  settings: jsonb("settings").default('{}'),
  createdAt: timestamp("created_at").defaultNow(),
  updatedAt: timestamp("updated_at").defaultNow(),
});

// Projects table
export const projects = pgTable("projects", {
  id: varchar("id").primaryKey().default(sql`gen_random_uuid()`),
  clientSlug: text("client_slug").notNull(),
  title: text("title").notNull(),
  description: text("description"),
  status: text("status").notNull().default("pending"), // pending, in_progress, completed, cancelled
  progress: integer("progress").default(0), // 0-100
  dueDate: timestamp("due_date"),
  createdAt: timestamp("created_at").defaultNow(),
  updatedAt: timestamp("updated_at").defaultNow(),
});

// Knowledge base files
export const kbFiles = pgTable("kb_files", {
  id: varchar("id").primaryKey().default(sql`gen_random_uuid()`),
  clientSlug: text("client_slug").notNull(),
  path: text("path").notNull(),
  title: text("title").notNull(),
  content: text("content"),
  tags: text("tags").array(),
  visibility: text("visibility").notNull().default("private"), // public, private
  embedding: text("embedding"), // vector embedding for RAG
  createdAt: timestamp("created_at").defaultNow(),
  updatedAt: timestamp("updated_at").defaultNow(),
});

// Messages/conversations
export const conversations = pgTable("conversations", {
  id: varchar("id").primaryKey().default(sql`gen_random_uuid()`),
  clientSlug: text("client_slug").notNull(),
  projectId: varchar("project_id"),
  participants: text("participants").array(),
  title: text("title"),
  lastMessageAt: timestamp("last_message_at"),
  createdAt: timestamp("created_at").defaultNow(),
});

export const messages = pgTable("messages", {
  id: varchar("id").primaryKey().default(sql`gen_random_uuid()`),
  conversationId: varchar("conversation_id").notNull(),
  senderId: varchar("sender_id").notNull(),
  content: text("content").notNull(),
  messageType: text("message_type").default("text"), // text, file, system
  metadata: jsonb("metadata"), // file info, etc.
  isRead: boolean("is_read").default(false),
  createdAt: timestamp("created_at").defaultNow(),
});

// Invoices
export const invoices = pgTable("invoices", {
  id: varchar("id").primaryKey().default(sql`gen_random_uuid()`),
  clientSlug: text("client_slug").notNull(),
  projectId: varchar("project_id"),
  invoiceNumber: text("invoice_number").notNull().unique(),
  amount: decimal("amount", { precision: 10, scale: 2 }).notNull(),
  status: text("status").notNull().default("pending"), // pending, paid, overdue, cancelled
  stripePaymentIntentId: text("stripe_payment_intent_id"),
  dueDate: timestamp("due_date").notNull(),
  paidAt: timestamp("paid_at"),
  createdAt: timestamp("created_at").defaultNow(),
});

// Service requests
export const serviceRequests = pgTable("service_requests", {
  id: varchar("id").primaryKey().default(sql`gen_random_uuid()`),
  clientSlug: text("client_slug").notNull(),
  userId: varchar("user_id").notNull(),
  title: text("title").notNull(),
  description: text("description").notNull(),
  priority: text("priority").default("medium"), // low, medium, high, urgent
  status: text("status").default("open"), // open, in_progress, completed, closed
  assignedTo: varchar("assigned_to"),
  createdAt: timestamp("created_at").defaultNow(),
  updatedAt: timestamp("updated_at").defaultNow(),
});

// Insert schemas
export const insertUserSchema = createInsertSchema(users).omit({
  id: true,
  createdAt: true,
  updatedAt: true,
});

export const insertClientSchema = createInsertSchema(clients).omit({
  id: true,
  createdAt: true,
  updatedAt: true,
});

export const insertProjectSchema = createInsertSchema(projects).omit({
  id: true,
  createdAt: true,
  updatedAt: true,
});

export const insertKbFileSchema = createInsertSchema(kbFiles).omit({
  id: true,
  createdAt: true,
  updatedAt: true,
});

export const insertConversationSchema = createInsertSchema(conversations).omit({
  id: true,
  createdAt: true,
});

export const insertMessageSchema = createInsertSchema(messages).omit({
  id: true,
  createdAt: true,
});

export const insertInvoiceSchema = createInsertSchema(invoices).omit({
  id: true,
  createdAt: true,
});

export const insertServiceRequestSchema = createInsertSchema(serviceRequests).omit({
  id: true,
  createdAt: true,
  updatedAt: true,
});

// Types
export type User = typeof users.$inferSelect;
export type InsertUser = z.infer<typeof insertUserSchema>;
export type Client = typeof clients.$inferSelect;
export type InsertClient = z.infer<typeof insertClientSchema>;
export type Project = typeof projects.$inferSelect;
export type InsertProject = z.infer<typeof insertProjectSchema>;
export type KbFile = typeof kbFiles.$inferSelect;
export type InsertKbFile = z.infer<typeof insertKbFileSchema>;
export type Conversation = typeof conversations.$inferSelect;
export type InsertConversation = z.infer<typeof insertConversationSchema>;
export type Message = typeof messages.$inferSelect;
export type InsertMessage = z.infer<typeof insertMessageSchema>;
export type Invoice = typeof invoices.$inferSelect;
export type InsertInvoice = z.infer<typeof insertInvoiceSchema>;
export type ServiceRequest = typeof serviceRequests.$inferSelect;
export type InsertServiceRequest = z.infer<typeof insertServiceRequestSchema>;


================================================================================
END: D:\QiEOS\QiAllyPortal\shared\schema.ts
================================================================================


================================================================================
FILE: D:\QiEOS\qi_rag_modern\requirements.txt
================================================================================

# Core RAG Framework
langchain==0.2.0
langchain-community==0.2.0
langchain-openai==0.1.0
langchain-chroma==0.1.0

# Vector Database
chromadb==0.4.22

# Document Processing
pypdf==4.0.2
python-docx==1.1.0
markdown==3.5.2

# Web Framework
fastapi==0.110.0
uvicorn[standard]==0.27.1
python-multipart==0.0.9

# Authentication & Database
supabase==2.3.4
python-jose[cryptography]==3.3.0

# Utilities
python-dotenv==1.0.1
pydantic==2.6.0
pydantic-settings==2.2.0

# Development
pytest==8.0.0
black==24.1.0
ruff==0.2.0


================================================================================
END: D:\QiEOS\qi_rag_modern\requirements.txt
================================================================================


================================================================================
FILE: D:\QiEOS\qi_rag_modern\app\dependency_manager.py
================================================================================

"""
Dependency Management System for QiLife-Eos Modular Architecture
Handles shared dependencies, version conflicts, and multi-tenant isolation
"""

from __future__ import annotations

import asyncio
import json
import logging
import os
import subprocess
import sys
from datetime import datetime
from pathlib import Path
from typing import Dict, List, Optional, Any, Set, Tuple
from dataclasses import dataclass, field
from enum import Enum
import pkg_resources
import importlib

from .config import Settings

logger = logging.getLogger(__name__)

class DependencyType(Enum):
    """Types of dependencies"""
    SINGLETON = "singleton"      # Must be single instance (React, React-DOM)
    SHARED = "shared"           # Can be shared across apps
    ISOLATED = "isolated"       # App-specific, not shared
    UTILITY = "utility"         # Shared utility libraries

class VersionStrategy(Enum):
    """Version management strategies"""
    CENTRALIZED = "centralized"  # Host controls all versions
    STRICT = "strict"           # Exact version matching required
    NEGOTIATED = "negotiated"   # Allow compatible version ranges
    FLEXIBLE = "flexible"       # Allow any compatible version

@dataclass
class DependencyInfo:
    """Information about a dependency"""
    name: str
    version: str
    type: DependencyType
    required_version: Optional[str] = None
    singleton: bool = False
    eager: bool = False
    fallback: Optional[str] = None
    metadata: Dict = field(default_factory=dict)

@dataclass
class DependencyConflict:
    """Information about a dependency conflict"""
    dependency_name: str
    requested_versions: List[str]
    conflicting_apps: List[str]
    severity: str  # "error", "warning", "info"
    resolution: Optional[str] = None

class DependencyManager:
    """Manages dependencies across the modular architecture"""
    
    def __init__(self):
        self.settings = Settings()
        self.dependencies: Dict[str, DependencyInfo] = {}
        self.app_dependencies: Dict[str, Set[str]] = {}
        self.conflicts: List[DependencyConflict] = []
        self.version_strategy = VersionStrategy.CENTRALIZED
        
        # Load dependency definitions
        self._load_dependency_definitions()
        self._load_app_dependencies()
    
    def _load_dependency_definitions(self):
        """Load predefined dependency definitions"""
        # Core singleton dependencies (must be single instance)
        singleton_deps = {
            "react": DependencyInfo(
                name="react",
                version="^18.3.0",
                type=DependencyType.SINGLETON,
                required_version="^18.3.0",
                singleton=True,
                eager=True
            ),
            "react-dom": DependencyInfo(
                name="react-dom",
                version="^18.3.0",
                type=DependencyType.SINGLETON,
                required_version="^18.3.0",
                singleton=True,
                eager=True
            ),
            "vue": DependencyInfo(
                name="vue",
                version="^3.4.0",
                type=DependencyType.SINGLETON,
                required_version="^3.4.0",
                singleton=True,
                eager=True
            )
        }
        
        # Shared utility dependencies
        shared_deps = {
            "lodash-es": DependencyInfo(
                name="lodash-es",
                version="^4.17.21",
                type=DependencyType.SHARED,
                required_version="^4.17.21",
                singleton=False,
                eager=False
            ),
            "axios": DependencyInfo(
                name="axios",
                version="^1.6.0",
                type=DependencyType.SHARED,
                required_version="^1.6.0",
                singleton=False,
                eager=False
            ),
            "date-fns": DependencyInfo(
                name="date-fns",
                version="^2.30.0",
                type=DependencyType.SHARED,
                required_version="^2.30.0",
                singleton=False,
                eager=False
            )
        }
        
        # Python dependencies
        python_deps = {
            "fastapi": DependencyInfo(
                name="fastapi",
                version="^0.104.0",
                type=DependencyType.SHARED,
                required_version="^0.104.0",
                singleton=False,
                eager=True
            ),
            "uvicorn": DependencyInfo(
                name="uvicorn",
                version="^0.24.0",
                type=DependencyType.SHARED,
                required_version="^0.24.0",
                singleton=False,
                eager=True
            ),
            "langchain": DependencyInfo(
                name="langchain",
                version="^0.1.0",
                type=DependencyType.SHARED,
                required_version="^0.1.0",
                singleton=False,
                eager=False
            ),
            "chromadb": DependencyInfo(
                name="chromadb",
                version="^0.4.0",
                type=DependencyType.SHARED,
                required_version="^0.4.0",
                singleton=False,
                eager=False
            ),
            "openai": DependencyInfo(
                name="openai",
                version="^1.3.0",
                type=DependencyType.SHARED,
                required_version="^1.3.0",
                singleton=False,
                eager=False
            )
        }
        
        # Combine all dependencies
        self.dependencies.update(singleton_deps)
        self.dependencies.update(shared_deps)
        self.dependencies.update(python_deps)
        
        logger.info(f"Loaded {len(self.dependencies)} dependency definitions")
    
    def _load_app_dependencies(self):
        """Load dependencies from app manifests"""
        try:
            miniapps_dir = Path("miniapps")
            if not miniapps_dir.exists():
                return
            
            for app_dir in miniapps_dir.iterdir():
                if app_dir.is_dir():
                    manifest_path = app_dir / "manifest.json"
                    if manifest_path.exists():
                        try:
                            with open(manifest_path, 'r') as f:
                                manifest_data = json.load(f)
                            
                            app_name = manifest_data["name"]
                            dependencies = manifest_data.get("dependencies", [])
                            
                            self.app_dependencies[app_name] = set(dependencies)
                            
                            # Validate dependencies
                            self._validate_app_dependencies(app_name, dependencies)
                            
                        except Exception as e:
                            logger.error(f"Failed to load dependencies for {app_dir.name}: {e}")
            
            logger.info(f"Loaded dependencies for {len(self.app_dependencies)} apps")
            
        except Exception as e:
            logger.error(f"Error loading app dependencies: {e}")
    
    def _validate_app_dependencies(self, app_name: str, dependencies: List[str]):
        """Validate dependencies for an app"""
        for dep_name in dependencies:
            if dep_name not in self.dependencies:
                logger.warning(f"Unknown dependency '{dep_name}' in app '{app_name}'")
                continue
            
            dep_info = self.dependencies[dep_name]
            
            # Check for singleton conflicts
            if dep_info.singleton:
                self._check_singleton_conflicts(app_name, dep_name, dep_info)
    
    def _check_singleton_conflicts(self, app_name: str, dep_name: str, dep_info: DependencyInfo):
        """Check for singleton dependency conflicts"""
        # This would be implemented to check if multiple apps are trying to use
        # different versions of the same singleton dependency
        pass
    
    def get_dependency_info(self, dep_name: str) -> Optional[DependencyInfo]:
        """Get information about a dependency"""
        return self.dependencies.get(dep_name)
    
    def get_app_dependencies(self, app_name: str) -> Set[str]:
        """Get dependencies for a specific app"""
        return self.app_dependencies.get(app_name, set())
    
    def get_shared_dependencies(self) -> Dict[str, DependencyInfo]:
        """Get all shared dependencies"""
        return {
            name: info for name, info in self.dependencies.items()
            if info.type in [DependencyType.SHARED, DependencyType.SINGLETON]
        }
    
    def get_singleton_dependencies(self) -> Dict[str, DependencyInfo]:
        """Get all singleton dependencies"""
        return {
            name: info for name, info in self.dependencies.items()
            if info.singleton
        }
    
    def check_version_compatibility(self, dep_name: str, version: str) -> bool:
        """Check if a version is compatible with the required version"""
        dep_info = self.dependencies.get(dep_name)
        if not dep_info or not dep_info.required_version:
            return True
        
        try:
            # Use pkg_resources to check version compatibility
            return pkg_resources.require(f"{dep_name}{dep_info.required_version}")[0].version == version
        except Exception:
            return False
    
    def resolve_dependency_conflicts(self) -> List[DependencyConflict]:
        """Resolve dependency conflicts across all apps"""
        conflicts = []
        
        # Check for singleton conflicts
        singleton_deps = self.get_singleton_dependencies()
        for dep_name, dep_info in singleton_deps.items():
            conflict = self._check_singleton_conflicts_across_apps(dep_name, dep_info)
            if conflict:
                conflicts.append(conflict)
        
        # Check for version conflicts
        shared_deps = self.get_shared_dependencies()
        for dep_name, dep_info in shared_deps.items():
            conflict = self._check_version_conflicts(dep_name, dep_info)
            if conflict:
                conflicts.append(conflict)
        
        self.conflicts = conflicts
        return conflicts
    
    def _check_singleton_conflicts_across_apps(self, dep_name: str, dep_info: DependencyInfo) -> Optional[DependencyConflict]:
        """Check for singleton conflicts across all apps"""
        apps_using_dep = [
            app_name for app_name, deps in self.app_dependencies.items()
            if dep_name in deps
        ]
        
        if len(apps_using_dep) > 1:
            return DependencyConflict(
                dependency_name=dep_name,
                requested_versions=[dep_info.required_version or dep_info.version],
                conflicting_apps=apps_using_dep,
                severity="error",
                resolution="Use centralized singleton from host"
            )
        
        return None
    
    def _check_version_conflicts(self, dep_name: str, dep_info: DependencyInfo) -> Optional[DependencyConflict]:
        """Check for version conflicts"""
        # This would implement version conflict detection
        # For now, return None (no conflicts detected)
        return None
    
    def generate_webpack_config(self, app_name: str, is_host: bool = False) -> Dict:
        """Generate webpack Module Federation configuration"""
        app_deps = self.get_app_dependencies(app_name)
        shared_config = {}
        
        for dep_name in app_deps:
            dep_info = self.get_dependency_info(dep_name)
            if not dep_info:
                continue
            
            if dep_info.type in [DependencyType.SHARED, DependencyType.SINGLETON]:
                shared_config[dep_name] = {
                    "singleton": dep_info.singleton,
                    "requiredVersion": dep_info.required_version or dep_info.version,
                    "eager": dep_info.eager
                }
        
        if is_host:
            return {
                "name": "host",
                "remotes": {
                    # Remote configurations would be added here
                },
                "shared": shared_config
            }
        else:
            return {
                "name": app_name,
                "filename": "remoteEntry.js",
                "exposes": {
                    # Component exposes would be added here
                },
                "shared": shared_config
            }
    
    def generate_python_requirements(self, app_name: str) -> List[str]:
        """Generate Python requirements for an app"""
        app_deps = self.get_app_dependencies(app_name)
        requirements = []
        
        for dep_name in app_deps:
            dep_info = self.get_dependency_info(dep_name)
            if not dep_info:
                continue
            
            # Only include Python dependencies
            if dep_info.type in [DependencyType.SHARED, DependencyType.SINGLETON]:
                requirements.append(f"{dep_name}{dep_info.required_version or dep_info.version}")
        
        return requirements
    
    def validate_installation(self, app_name: str) -> Dict[str, Any]:
        """Validate that all dependencies are properly installed"""
        app_deps = self.get_app_dependencies(app_name)
        validation_results = {
            "app_name": app_name,
            "status": "valid",
            "missing_deps": [],
            "version_mismatches": [],
            "conflicts": []
        }
        
        for dep_name in app_deps:
            dep_info = self.get_dependency_info(dep_name)
            if not dep_info:
                validation_results["missing_deps"].append(dep_name)
                continue
            
            # Check if dependency is installed
            try:
                if dep_info.type in [DependencyType.SHARED, DependencyType.SINGLETON]:
                    module = importlib.import_module(dep_name)
                    installed_version = getattr(module, '__version__', 'unknown')
                    
                    if not self.check_version_compatibility(dep_name, installed_version):
                        validation_results["version_mismatches"].append({
                            "dependency": dep_name,
                            "installed": installed_version,
                            "required": dep_info.required_version or dep_info.version
                        })
                        
            except ImportError:
                validation_results["missing_deps"].append(dep_name)
        
        # Check for conflicts
        conflicts = self.resolve_dependency_conflicts()
        app_conflicts = [
            conflict for conflict in conflicts
            if app_name in conflict.conflicting_apps
        ]
        validation_results["conflicts"] = app_conflicts
        
        # Update status
        if validation_results["missing_deps"] or validation_results["version_mismatches"] or validation_results["conflicts"]:
            validation_results["status"] = "invalid"
        
        return validation_results
    
    def install_dependencies(self, app_name: str, python_only: bool = False) -> bool:
        """Install dependencies for an app"""
        try:
            if python_only:
                requirements = self.generate_python_requirements(app_name)
                if requirements:
                    cmd = [sys.executable, "-m", "pip", "install"] + requirements
                    result = subprocess.run(cmd, capture_output=True, text=True)
                    if result.returncode != 0:
                        logger.error(f"Failed to install Python dependencies for {app_name}: {result.stderr}")
                        return False
            else:
                # This would handle npm/yarn installation for JavaScript dependencies
                pass
            
            logger.info(f"Successfully installed dependencies for {app_name}")
            return True
            
        except Exception as e:
            logger.error(f"Error installing dependencies for {app_name}: {e}")
            return False
    
    def get_dependency_statistics(self) -> Dict[str, Any]:
        """Get statistics about dependencies"""
        total_deps = len(self.dependencies)
        singleton_deps = len(self.get_singleton_dependencies())
        shared_deps = len(self.get_shared_dependencies())
        
        app_dep_counts = {
            app_name: len(deps) for app_name, deps in self.app_dependencies.items()
        }
        
        return {
            "total_dependencies": total_deps,
            "singleton_dependencies": singleton_deps,
            "shared_dependencies": shared_deps,
            "app_dependency_counts": app_dep_counts,
            "conflicts": len(self.conflicts),
            "version_strategy": self.version_strategy.value
        }
    
    def update_dependency_version(self, dep_name: str, new_version: str) -> bool:
        """Update a dependency version"""
        if dep_name not in self.dependencies:
            return False
        
        dep_info = self.dependencies[dep_name]
        dep_info.version = new_version
        
        # Revalidate all apps that use this dependency
        for app_name in self.app_dependencies:
            if dep_name in self.app_dependencies[app_name]:
                validation = self.validate_installation(app_name)
                if validation["status"] == "invalid":
                    logger.warning(f"App {app_name} may have issues with updated {dep_name}")
        
        logger.info(f"Updated {dep_name} to version {new_version}")
        return True
    
    def export_dependency_config(self) -> Dict[str, Any]:
        """Export dependency configuration"""
        return {
            "version_strategy": self.version_strategy.value,
            "dependencies": {
                name: {
                    "version": info.version,
                    "type": info.type.value,
                    "required_version": info.required_version,
                    "singleton": info.singleton,
                    "eager": info.eager,
                    "metadata": info.metadata
                }
                for name, info in self.dependencies.items()
            },
            "app_dependencies": {
                app_name: list(deps) for app_name, deps in self.app_dependencies.items()
            },
            "conflicts": [
                {
                    "dependency_name": conflict.dependency_name,
                    "requested_versions": conflict.requested_versions,
                    "conflicting_apps": conflict.conflicting_apps,
                    "severity": conflict.severity,
                    "resolution": conflict.resolution
                }
                for conflict in self.conflicts
            ]
        }

# Global dependency manager instance
dependency_manager = DependencyManager()


================================================================================
END: D:\QiEOS\qi_rag_modern\app\dependency_manager.py
================================================================================


================================================================================
FILE: D:\QiEOS\qi_rag_modern\app\document_processor.py
================================================================================

"""
Advanced Document Processor for Automated Multimodal Data Ingestion
Handles chat transcripts, activity data, memory data, images, videos, and other file types
"""

from __future__ import annotations

import asyncio
import json
import logging
import os
from datetime import datetime
from pathlib import Path
from typing import Dict, List, Optional, Any, Union
from urllib.parse import urlparse

import pandas as pd
from PIL import Image
import cv2
import numpy as np

from langchain.schema import Document
from langchain_community.document_loaders import (
    TextLoader, 
    CSVLoader, 
    JSONLoader,
    UnstructuredFileLoader,
    PyPDFLoader,
    Docx2txtLoader
)
from langchain_text_splitters import RecursiveCharacterTextSplitter
from langchain_openai import OpenAIEmbeddings

from .config import Settings
from .rag_engine import RAGEngine

logger = logging.getLogger(__name__)

class DocumentProcessor:
    """Advanced document processor for automated multimodal data ingestion"""
    
    def __init__(self):
        self.settings = Settings()
        self.rag_engine = RAGEngine()
        self.text_splitter = RecursiveCharacterTextSplitter(
            chunk_size=1000,
            chunk_overlap=200,
            length_function=len,
        )
        
        # Supported file types
        self.supported_text_types = {
            '.txt', '.md', '.json', '.csv', '.tsv', '.xml', '.html', '.htm'
        }
        self.supported_document_types = {
            '.pdf', '.docx', '.doc', '.rtf', '.odt'
        }
        self.supported_image_types = {
            '.jpg', '.jpeg', '.png', '.gif', '.bmp', '.tiff', '.webp'
        }
        self.supported_video_types = {
            '.mp4', '.avi', '.mov', '.wmv', '.flv', '.webm', '.mkv'
        }
        self.supported_audio_types = {
            '.mp3', '.wav', '.flac', '.aac', '.ogg', '.m4a'
        }
        
        # Initialize multimodal embedding model
        self.multimodal_embeddings = None
        self._initialize_multimodal_embeddings()
    
    def _initialize_multimodal_embeddings(self):
        """Initialize multimodal embedding model"""
        try:
            # Try to initialize Google Gemini for multimodal embeddings
            import google.generativeai as genai
            genai.configure(api_key=self.settings.gemini_api_key)
            self.multimodal_embeddings = genai.GenerativeModel('gemini-pro-vision')
            logger.info("Multimodal embeddings (Gemini) initialized successfully")
        except ImportError:
            logger.warning("Google Gemini not available for multimodal embeddings")
        except Exception as e:
            logger.error(f"Failed to initialize multimodal embeddings: {e}")
    
    async def process_document(
        self, 
        file_path: str, 
        client_id: str, 
        document_type: Optional[str] = None,
        metadata: Optional[Dict] = None
    ) -> Dict[str, Any]:
        """Process a document and add it to the RAG system"""
        try:
            file_path = Path(file_path)
            
            if not file_path.exists():
                raise FileNotFoundError(f"File not found: {file_path}")
            
            # Determine file type if not provided
            if not document_type:
                document_type = self._determine_file_type(file_path)
            
            # Extract metadata
            if not metadata:
                metadata = self._extract_file_metadata(file_path)
            
            # Process based on file type
            if document_type in ['text', 'document']:
                documents = await self._process_text_document(file_path, client_id, metadata)
            elif document_type == 'image':
                documents = await self._process_image(file_path, client_id, metadata)
            elif document_type == 'video':
                documents = await self._process_video(file_path, client_id, metadata)
            elif document_type == 'audio':
                documents = await self._process_audio(file_path, client_id, metadata)
            elif document_type == 'chat_transcript':
                documents = await self._process_chat_transcript(file_path, client_id, metadata)
            elif document_type == 'activity_data':
                documents = await self._process_activity_data(file_path, client_id, metadata)
            elif document_type == 'memory_data':
                documents = await self._process_memory_data(file_path, client_id, metadata)
            else:
                raise ValueError(f"Unsupported document type: {document_type}")
            
            # Add documents to RAG system
            chunks_processed = await self.rag_engine.add_documents(documents, client_id)
            
            return {
                "status": "success",
                "document_type": document_type,
                "chunks_processed": chunks_processed,
                "file_path": str(file_path),
                "metadata": metadata
            }
            
        except Exception as e:
            logger.error(f"Document processing error: {e}")
            raise
    
    def _determine_file_type(self, file_path: Path) -> str:
        """Determine the type of file based on extension"""
        extension = file_path.suffix.lower()
        
        if extension in self.supported_text_types:
            return 'text'
        elif extension in self.supported_document_types:
            return 'document'
        elif extension in self.supported_image_types:
            return 'image'
        elif extension in self.supported_video_types:
            return 'video'
        elif extension in self.supported_audio_types:
            return 'audio'
        else:
            return 'text'  # Default to text
    
    def _extract_file_metadata(self, file_path: Path) -> Dict[str, Any]:
        """Extract metadata from file"""
        stat = file_path.stat()
        
        return {
            "file_name": file_path.name,
            "file_path": str(file_path),
            "file_size": stat.st_size,
            "created_date": datetime.fromtimestamp(stat.st_ctime).isoformat(),
            "modified_date": datetime.fromtimestamp(stat.st_mtime).isoformat(),
            "file_extension": file_path.suffix.lower(),
            "document_type": self._determine_file_type(file_path)
        }
    
    async def _process_text_document(
        self, 
        file_path: Path, 
        client_id: str, 
        metadata: Dict
    ) -> List[Document]:
        """Process text and document files"""
        try:
            extension = file_path.suffix.lower()
            
            # Choose appropriate loader
            if extension == '.pdf':
                loader = PyPDFLoader(str(file_path))
            elif extension in ['.docx', '.doc']:
                loader = Docx2txtLoader(str(file_path))
            elif extension == '.csv':
                loader = CSVLoader(str(file_path))
            elif extension == '.json':
                loader = JSONLoader(
                    file_path=str(file_path),
                    jq_schema='.[]',
                    text_content=False
                )
            else:
                loader = TextLoader(str(file_path))
            
            # Load documents
            documents = loader.load()
            
            # Add metadata
            for doc in documents:
                doc.metadata.update(metadata)
                doc.metadata.update({
                    "client_id": client_id,
                    "source": "file_upload",
                    "processing_date": datetime.now().isoformat()
                })
            
            # Split documents
            split_docs = self.text_splitter.split_documents(documents)
            
            return split_docs
            
        except Exception as e:
            logger.error(f"Text document processing error: {e}")
            raise
    
    async def _process_image(
        self, 
        file_path: Path, 
        client_id: str, 
        metadata: Dict
    ) -> List[Document]:
        """Process image files using multimodal embeddings"""
        try:
            # Load image
            image = Image.open(file_path)
            
            # Generate image description using multimodal model
            if self.multimodal_embeddings:
                image_description = await self._generate_image_description(image)
            else:
                # Fallback: use basic image analysis
                image_description = self._analyze_image_basic(image)
            
            # Create document from image description
            document = Document(
                page_content=image_description,
                metadata={
                    **metadata,
                    "client_id": client_id,
                    "source": "image_upload",
                    "processing_date": datetime.now().isoformat(),
                    "image_width": image.width,
                    "image_height": image.height,
                    "image_mode": image.mode,
                    "file_path": str(file_path)
                }
            )
            
            # Split if description is long
            split_docs = self.text_splitter.split_documents([document])
            
            return split_docs
            
        except Exception as e:
            logger.error(f"Image processing error: {e}")
            raise
    
    async def _process_video(
        self, 
        file_path: Path, 
        client_id: str, 
        metadata: Dict
    ) -> List[Document]:
        """Process video files by extracting keyframes"""
        try:
            # Open video file
            cap = cv2.VideoCapture(str(file_path))
            
            if not cap.isOpened():
                raise ValueError(f"Could not open video file: {file_path}")
            
            # Get video properties
            fps = cap.get(cv2.CAP_PROP_FPS)
            frame_count = int(cap.get(cv2.CAP_PROP_FRAME_COUNT))
            duration = frame_count / fps if fps > 0 else 0
            
            # Extract keyframes (one frame per 30 seconds)
            keyframe_interval = int(fps * 30)  # 30 seconds
            keyframes = []
            frame_descriptions = []
            
            frame_idx = 0
            while cap.isOpened():
                ret, frame = cap.read()
                if not ret:
                    break
                
                if frame_idx % keyframe_interval == 0:
                    # Convert BGR to RGB
                    frame_rgb = cv2.cvtColor(frame, cv2.COLOR_BGR2RGB)
                    keyframes.append(frame_rgb)
                    
                    # Generate description for this frame
                    if self.multimodal_embeddings:
                        frame_description = await self._generate_image_description(
                            Image.fromarray(frame_rgb)
                        )
                    else:
                        frame_description = f"Video frame at {frame_idx/fps:.1f} seconds"
                    
                    frame_descriptions.append(frame_description)
                
                frame_idx += 1
            
            cap.release()
            
            # Create document from video analysis
            video_content = f"Video Analysis:\nDuration: {duration:.1f} seconds\nFPS: {fps}\nTotal Frames: {frame_count}\n\nKeyframe Descriptions:\n"
            for i, desc in enumerate(frame_descriptions):
                timestamp = (i * keyframe_interval) / fps
                video_content += f"Frame at {timestamp:.1f}s: {desc}\n"
            
            document = Document(
                page_content=video_content,
                metadata={
                    **metadata,
                    "client_id": client_id,
                    "source": "video_upload",
                    "processing_date": datetime.now().isoformat(),
                    "video_duration": duration,
                    "video_fps": fps,
                    "video_frame_count": frame_count,
                    "keyframes_extracted": len(keyframes),
                    "file_path": str(file_path)
                }
            )
            
            # Split if content is long
            split_docs = self.text_splitter.split_documents([document])
            
            return split_docs
            
        except Exception as e:
            logger.error(f"Video processing error: {e}")
            raise
    
    async def _process_audio(
        self, 
        file_path: Path, 
        client_id: str, 
        metadata: Dict
    ) -> List[Document]:
        """Process audio files (placeholder for future implementation)"""
        try:
            # For now, create a basic document with audio metadata
            # In the future, this could use speech-to-text or audio analysis
            audio_content = f"Audio file: {file_path.name}\nType: {metadata.get('document_type', 'audio')}\nSize: {metadata.get('file_size', 0)} bytes"
            
            document = Document(
                page_content=audio_content,
                metadata={
                    **metadata,
                    "client_id": client_id,
                    "source": "audio_upload",
                    "processing_date": datetime.now().isoformat(),
                    "file_path": str(file_path)
                }
            )
            
            return [document]
            
        except Exception as e:
            logger.error(f"Audio processing error: {e}")
            raise
    
    async def _process_chat_transcript(
        self, 
        file_path: Path, 
        client_id: str, 
        metadata: Dict
    ) -> List[Document]:
        """Process chat transcript data"""
        try:
            # Load chat data
            if file_path.suffix.lower() == '.json':
                with open(file_path, 'r', encoding='utf-8') as f:
                    chat_data = json.load(f)
            elif file_path.suffix.lower() == '.csv':
                chat_data = pd.read_csv(file_path).to_dict('records')
            else:
                # Assume text file with chat format
                with open(file_path, 'r', encoding='utf-8') as f:
                    content = f.read()
                chat_data = self._parse_chat_text(content)
            
            # Convert to documents
            documents = []
            for entry in chat_data:
                # Extract message content and metadata
                message = entry.get('message', entry.get('content', str(entry)))
                timestamp = entry.get('timestamp', entry.get('date', ''))
                sender = entry.get('sender', entry.get('user', 'unknown'))
                
                # Create document
                doc_content = f"Chat Message from {sender} at {timestamp}:\n{message}"
                
                document = Document(
                    page_content=doc_content,
                    metadata={
                        **metadata,
                        "client_id": client_id,
                        "source": "chat_transcript",
                        "processing_date": datetime.now().isoformat(),
                        "chat_sender": sender,
                        "chat_timestamp": timestamp,
                        "message_type": entry.get('type', 'text')
                    }
                )
                documents.append(document)
            
            # Split documents
            split_docs = self.text_splitter.split_documents(documents)
            
            return split_docs
            
        except Exception as e:
            logger.error(f"Chat transcript processing error: {e}")
            raise
    
    async def _process_activity_data(
        self, 
        file_path: Path, 
        client_id: str, 
        metadata: Dict
    ) -> List[Document]:
        """Process activity tracker data"""
        try:
            # Load activity data
            if file_path.suffix.lower() == '.json':
                with open(file_path, 'r', encoding='utf-8') as f:
                    activity_data = json.load(f)
            elif file_path.suffix.lower() == '.csv':
                activity_data = pd.read_csv(file_path).to_dict('records')
            else:
                raise ValueError(f"Unsupported format for activity data: {file_path.suffix}")
            
            # Convert to documents
            documents = []
            for entry in activity_data:
                # Extract activity information
                activity_type = entry.get('type', entry.get('activity_type', 'unknown'))
                timestamp = entry.get('timestamp', entry.get('date', ''))
                duration = entry.get('duration', entry.get('time', ''))
                calories = entry.get('calories', entry.get('energy', ''))
                distance = entry.get('distance', '')
                steps = entry.get('steps', '')
                
                # Create descriptive content
                content_parts = [f"Activity: {activity_type}"]
                if timestamp:
                    content_parts.append(f"Time: {timestamp}")
                if duration:
                    content_parts.append(f"Duration: {duration}")
                if calories:
                    content_parts.append(f"Calories: {calories}")
                if distance:
                    content_parts.append(f"Distance: {distance}")
                if steps:
                    content_parts.append(f"Steps: {steps}")
                
                doc_content = " | ".join(content_parts)
                
                document = Document(
                    page_content=doc_content,
                    metadata={
                        **metadata,
                        "client_id": client_id,
                        "source": "activity_data",
                        "processing_date": datetime.now().isoformat(),
                        "activity_type": activity_type,
                        "activity_timestamp": timestamp,
                        "activity_duration": duration,
                        "activity_calories": calories,
                        "activity_distance": distance,
                        "activity_steps": steps
                    }
                )
                documents.append(document)
            
            # Split documents
            split_docs = self.text_splitter.split_documents(documents)
            
            return split_docs
            
        except Exception as e:
            logger.error(f"Activity data processing error: {e}")
            raise
    
    async def _process_memory_data(
        self, 
        file_path: Path, 
        client_id: str, 
        metadata: Dict
    ) -> List[Document]:
        """Process memory/journal data"""
        try:
            # Load memory data
            if file_path.suffix.lower() == '.json':
                with open(file_path, 'r', encoding='utf-8') as f:
                    memory_data = json.load(f)
            elif file_path.suffix.lower() == '.csv':
                memory_data = pd.read_csv(file_path).to_dict('records')
            else:
                # Assume text file with journal entries
                with open(file_path, 'r', encoding='utf-8') as f:
                    content = f.read()
                memory_data = self._parse_journal_text(content)
            
            # Convert to documents
            documents = []
            for entry in memory_data:
                # Extract memory content and metadata
                text = entry.get('text', entry.get('content', entry.get('memory', str(entry))))
                timestamp = entry.get('timestamp', entry.get('date', ''))
                mood = entry.get('mood', entry.get('emotion', ''))
                tags = entry.get('tags', entry.get('categories', []))
                
                # Create document
                doc_content = f"Memory Entry from {timestamp}:\n{text}"
                if mood:
                    doc_content += f"\nMood: {mood}"
                if tags:
                    doc_content += f"\nTags: {', '.join(tags) if isinstance(tags, list) else tags}"
                
                document = Document(
                    page_content=doc_content,
                    metadata={
                        **metadata,
                        "client_id": client_id,
                        "source": "memory_data",
                        "processing_date": datetime.now().isoformat(),
                        "memory_timestamp": timestamp,
                        "memory_mood": mood,
                        "memory_tags": tags if isinstance(tags, list) else [tags] if tags else []
                    }
                )
                documents.append(document)
            
            # Split documents
            split_docs = self.text_splitter.split_documents(documents)
            
            return split_docs
            
        except Exception as e:
            logger.error(f"Memory data processing error: {e}")
            raise
    
    async def _generate_image_description(self, image: Image.Image) -> str:
        """Generate description for an image using multimodal model"""
        try:
            if self.multimodal_embeddings:
                prompt = "Describe this image in detail, including objects, people, actions, colors, and any text visible."
                response = self.multimodal_embeddings.generate_content([prompt, image])
                return response.text
            else:
                return "Image description not available (multimodal model not initialized)"
        except Exception as e:
            logger.error(f"Image description generation error: {e}")
            return f"Image analysis failed: {str(e)}"
    
    def _analyze_image_basic(self, image: Image.Image) -> str:
        """Basic image analysis without multimodal model"""
        return f"Image: {image.width}x{image.height} pixels, mode: {image.mode}"
    
    def _parse_chat_text(self, content: str) -> List[Dict]:
        """Parse chat text into structured format"""
        lines = content.split('\n')
        chat_entries = []
        
        for line in lines:
            line = line.strip()
            if not line:
                continue
            
            # Simple parsing - can be enhanced based on actual format
            if ':' in line:
                parts = line.split(':', 2)
                if len(parts) >= 2:
                    chat_entries.append({
                        'sender': parts[0].strip(),
                        'message': parts[1].strip(),
                        'timestamp': datetime.now().isoformat()
                    })
            else:
                chat_entries.append({
                    'sender': 'unknown',
                    'message': line,
                    'timestamp': datetime.now().isoformat()
                })
        
        return chat_entries
    
    def _parse_journal_text(self, content: str) -> List[Dict]:
        """Parse journal text into structured format"""
        # Split by date patterns or other delimiters
        entries = []
        
        # Simple parsing - can be enhanced based on actual format
        lines = content.split('\n')
        current_entry = ""
        
        for line in lines:
            line = line.strip()
            if not line:
                continue
            
            # Check if line starts with date pattern
            if any(pattern in line.lower() for pattern in ['2024', '2023', 'jan', 'feb', 'mar', 'apr', 'may', 'jun', 'jul', 'aug', 'sep', 'oct', 'nov', 'dec']):
                # Save previous entry
                if current_entry:
                    entries.append({
                        'text': current_entry.strip(),
                        'timestamp': datetime.now().isoformat(),
                        'mood': '',
                        'tags': []
                    })
                current_entry = line
            else:
                current_entry += " " + line
        
        # Add last entry
        if current_entry:
            entries.append({
                'text': current_entry.strip(),
                'timestamp': datetime.now().isoformat(),
                'mood': '',
                'tags': []
            })
        
        return entries
    
    async def list_documents(self, client_id: str) -> List[Dict]:
        """List documents for a client"""
        try:
            # This would typically query a database or file system
            # For now, return basic information
            return [
                {
                    "client_id": client_id,
                    "document_count": await self.rag_engine.get_document_count(client_id),
                    "last_updated": datetime.now().isoformat()
                }
            ]
        except Exception as e:
            logger.error(f"List documents error: {e}")
            raise
    
    async def delete_document(self, client_id: str, document_id: str) -> bool:
        """Delete a document from the RAG system"""
        try:
            # This would typically delete from database and vector store
            # For now, return success
            logger.info(f"Deleted document {document_id} for client {client_id}")
            return True
        except Exception as e:
            logger.error(f"Delete document error: {e}")
            raise
    
    async def process_batch(
        self, 
        files: List[Dict], 
        client_id: str
    ) -> Dict[str, Any]:
        """Process multiple files in batch"""
        try:
            results = []
            total_chunks = 0
            
            for file_info in files:
                try:
                    result = await self.process_document(
                        file_path=file_info['path'],
                        client_id=client_id,
                        document_type=file_info.get('type'),
                        metadata=file_info.get('metadata')
                    )
                    results.append(result)
                    total_chunks += result['chunks_processed']
                except Exception as e:
                    logger.error(f"Failed to process file {file_info['path']}: {e}")
                    results.append({
                        "status": "error",
                        "file_path": file_info['path'],
                        "error": str(e)
                    })
            
            return {
                "status": "completed",
                "total_files": len(files),
                "successful_files": len([r for r in results if r['status'] == 'success']),
                "failed_files": len([r for r in results if r['status'] == 'error']),
                "total_chunks_processed": total_chunks,
                "results": results
            }
            
        except Exception as e:
            logger.error(f"Batch processing error: {e}")
            raise


================================================================================
END: D:\QiEOS\qi_rag_modern\app\document_processor.py
================================================================================


================================================================================
FILE: D:\QiEOS\qi_rag_modern\app\glassmorphism_ui.py
================================================================================

"""
Glassmorphism UI System for QiLife-Eos
Frosted glass cards, glowing interactive buttons, and modern glass aesthetic
"""

from __future__ import annotations

import json
import logging
from typing import Dict, List, Optional, Any, Union
from dataclasses import dataclass, field
from enum import Enum

logger = logging.getLogger(__name__)

class GlassEffect(Enum):
    """Glass effect types"""
    FROSTED = "frosted"
    CRYSTAL = "crystal"
    SMOKED = "smoked"
    MIRROR = "mirror"
    TRANSLUCENT = "translucent"

class GlowEffect(Enum):
    """Glow effect types"""
    NEON = "neon"
    SOFT = "soft"
    PULSE = "pulse"
    RADIANT = "radiant"
    AURORA = "aurora"

@dataclass
class GlassmorphismTheme:
    """Glassmorphism theme configuration"""
    name: str
    background: str = "linear-gradient(135deg, #667eea 0%, #764ba2 100%)"
    glass_background: str = "rgba(255, 255, 255, 0.1)"
    glass_border: str = "rgba(255, 255, 255, 0.2)"
    glass_shadow: str = "0 8px 32px 0 rgba(31, 38, 135, 0.37)"
    backdrop_blur: str = "blur(16px)"
    text_primary: str = "#ffffff"
    text_secondary: str = "rgba(255, 255, 255, 0.8)"
    accent_color: str = "#00d4ff"
    glow_color: str = "#00d4ff"
    border_radius: str = "16px"
    transition: str = "all 0.3s cubic-bezier(0.4, 0, 0.2, 1)"

class GlassmorphismUI:
    """Glassmorphism UI component system"""
    
    def __init__(self):
        self.themes = {
            "default": GlassmorphismTheme("default"),
            "ocean": GlassmorphismTheme(
                "ocean",
                background="linear-gradient(135deg, #667eea 0%, #764ba2 100%)",
                accent_color="#00d4ff",
                glow_color="#00d4ff"
            ),
            "sunset": GlassmorphismTheme(
                "sunset",
                background="linear-gradient(135deg, #ff6b6b 0%, #feca57 50%, #48dbfb 100%)",
                accent_color="#ff6b6b",
                glow_color="#ff6b6b"
            ),
            "aurora": GlassmorphismTheme(
                "aurora",
                background="linear-gradient(135deg, #a8edea 0%, #fed6e3 100%)",
                accent_color="#00d4ff",
                glow_color="#00d4ff"
            ),
            "midnight": GlassmorphismTheme(
                "midnight",
                background="linear-gradient(135deg, #2c3e50 0%, #34495e 100%)",
                glass_background="rgba(255, 255, 255, 0.05)",
                accent_color="#3498db",
                glow_color="#3498db"
            )
        }
        self.current_theme = "default"
    
    def get_theme(self, theme_name: str = None) -> GlassmorphismTheme:
        """Get theme configuration"""
        theme_name = theme_name or self.current_theme
        return self.themes.get(theme_name, self.themes["default"])
    
    def generate_card_styles(self, theme_name: str = None, effect: GlassEffect = GlassEffect.FROSTED) -> Dict[str, str]:
        """Generate glassmorphism card styles"""
        theme = self.get_theme(theme_name)
        
        base_styles = {
            "background": theme.glass_background,
            "backdrop-filter": theme.backdrop_blur,
            "border": f"1px solid {theme.glass_border}",
            "border-radius": theme.border_radius,
            "box-shadow": theme.glass_shadow,
            "padding": "24px",
            "transition": theme.transition,
            "position": "relative",
            "overflow": "hidden"
        }
        
        # Add effect-specific styles
        if effect == GlassEffect.CRYSTAL:
            base_styles.update({
                "background": "rgba(255, 255, 255, 0.15)",
                "backdrop-filter": "blur(20px)",
                "border": "1px solid rgba(255, 255, 255, 0.3)"
            })
        elif effect == GlassEffect.SMOKED:
            base_styles.update({
                "background": "rgba(0, 0, 0, 0.1)",
                "backdrop-filter": "blur(12px)",
                "border": "1px solid rgba(255, 255, 255, 0.1)"
            })
        elif effect == GlassEffect.MIRROR:
            base_styles.update({
                "background": "linear-gradient(135deg, rgba(255,255,255,0.1) 0%, rgba(255,255,255,0.05) 100%)",
                "backdrop-filter": "blur(24px)",
                "border": "1px solid rgba(255, 255, 255, 0.4)"
            })
        
        return base_styles
    
    def generate_button_styles(self, theme_name: str = None, glow_effect: GlowEffect = GlowEffect.NEON) -> Dict[str, str]:
        """Generate glowing button styles"""
        theme = self.get_theme(theme_name)
        
        base_styles = {
            "background": "rgba(255, 255, 255, 0.1)",
            "backdrop-filter": "blur(10px)",
            "border": f"1px solid {theme.glass_border}",
            "border-radius": "12px",
            "padding": "12px 24px",
            "color": theme.text_primary,
            "font-weight": "600",
            "cursor": "pointer",
            "transition": theme.transition,
            "position": "relative",
            "overflow": "hidden"
        }
        
        # Add glow effect styles
        if glow_effect == GlowEffect.NEON:
            base_styles.update({
                "box-shadow": f"0 0 20px {theme.glow_color}, inset 0 0 20px rgba(0, 212, 255, 0.1)",
                "text-shadow": f"0 0 10px {theme.glow_color}"
            })
        elif glow_effect == GlowEffect.SOFT:
            base_styles.update({
                "box-shadow": f"0 4px 15px rgba(0, 212, 255, 0.3)"
            })
        elif glow_effect == GlowEffect.PULSE:
            base_styles.update({
                "animation": "pulse-glow 2s infinite",
                "box-shadow": f"0 0 20px {theme.glow_color}"
            })
        elif glow_effect == GlowEffect.RADIANT:
            base_styles.update({
                "box-shadow": f"0 0 30px {theme.glow_color}, 0 0 60px rgba(0, 212, 255, 0.3)"
            })
        elif glow_effect == GlowEffect.AURORA:
            base_styles.update({
                "background": "linear-gradient(45deg, rgba(0,212,255,0.2), rgba(255,255,255,0.1))",
                "box-shadow": f"0 0 25px {theme.glow_color}"
            })
        
        return base_styles
    
    def generate_dashboard_styles(self, theme_name: str = None) -> Dict[str, str]:
        """Generate dashboard container styles"""
        theme = self.get_theme(theme_name)
        
        return {
            "background": theme.background,
            "min-height": "100vh",
            "padding": "24px",
            "font-family": "'Inter', -apple-system, BlinkMacSystemFont, sans-serif",
            "color": theme.text_primary
        }
    
    def generate_navigation_styles(self, theme_name: str = None) -> Dict[str, str]:
        """Generate navigation bar styles"""
        theme = self.get_theme(theme_name)
        
        return {
            "background": "rgba(255, 255, 255, 0.1)",
            "backdrop-filter": "blur(20px)",
            "border-bottom": f"1px solid {theme.glass_border}",
            "padding": "16px 24px",
            "position": "sticky",
            "top": "0",
            "z-index": "1000"
        }
    
    def generate_modal_styles(self, theme_name: str = None) -> Dict[str, str]:
        """Generate modal overlay and content styles"""
        theme = self.get_theme(theme_name)
        
        overlay_styles = {
            "background": "rgba(0, 0, 0, 0.5)",
            "backdrop-filter": "blur(8px)",
            "position": "fixed",
            "top": "0",
            "left": "0",
            "right": "0",
            "bottom": "0",
            "display": "flex",
            "align-items": "center",
            "justify-content": "center",
            "z-index": "10000"
        }
        
        content_styles = {
            "background": "rgba(255, 255, 255, 0.15)",
            "backdrop-filter": "blur(24px)",
            "border": f"1px solid {theme.glass_border}",
            "border-radius": "20px",
            "padding": "32px",
            "max-width": "500px",
            "width": "90%",
            "box-shadow": "0 25px 50px -12px rgba(0, 0, 0, 0.25)"
        }
        
        return {
            "overlay": overlay_styles,
            "content": content_styles
        }
    
    def generate_form_styles(self, theme_name: str = None) -> Dict[str, str]:
        """Generate form input styles"""
        theme = self.get_theme(theme_name)
        
        return {
            "background": "rgba(255, 255, 255, 0.1)",
            "backdrop-filter": "blur(10px)",
            "border": f"1px solid {theme.glass_border}",
            "border-radius": "12px",
            "padding": "12px 16px",
            "color": theme.text_primary,
            "font-size": "16px",
            "transition": theme.transition,
            "outline": "none"
        }
    
    def generate_animation_css(self) -> str:
        """Generate CSS animations for glassmorphism effects"""
        return """
        @keyframes pulse-glow {
            0%, 100% { box-shadow: 0 0 20px var(--glow-color); }
            50% { box-shadow: 0 0 30px var(--glow-color), 0 0 40px rgba(0, 212, 255, 0.5); }
        }
        
        @keyframes float {
            0%, 100% { transform: translateY(0px); }
            50% { transform: translateY(-10px); }
        }
        
        @keyframes shimmer {
            0% { background-position: -200% 0; }
            100% { background-position: 200% 0; }
        }
        
        .glass-card {
            transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
        }
        
        .glass-card:hover {
            transform: translateY(-5px);
            box-shadow: 0 20px 40px rgba(31, 38, 135, 0.5);
        }
        
        .glow-button {
            transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
        }
        
        .glow-button:hover {
            transform: scale(1.05);
            box-shadow: 0 0 30px var(--glow-color);
        }
        
        .glass-input:focus {
            border-color: var(--accent-color);
            box-shadow: 0 0 20px rgba(0, 212, 255, 0.3);
        }
        """
    
    def generate_react_components(self) -> Dict[str, str]:
        """Generate React component templates"""
        return {
            "GlassCard": """
import React from 'react';
import './Glassmorphism.css';

interface GlassCardProps {
  children: React.ReactNode;
  theme?: string;
  effect?: 'frosted' | 'crystal' | 'smoked' | 'mirror';
  className?: string;
  onClick?: () => void;
}

export const GlassCard: React.FC<GlassCardProps> = ({
  children,
  theme = 'default',
  effect = 'frosted',
  className = '',
  onClick
}) => {
  return (
    <div 
      className={`glass-card glass-${effect} theme-${theme} ${className}`}
      onClick={onClick}
    >
      {children}
    </div>
  );
};
""",
            "GlowButton": """
import React from 'react';
import './Glassmorphism.css';

interface GlowButtonProps {
  children: React.ReactNode;
  theme?: string;
  glowEffect?: 'neon' | 'soft' | 'pulse' | 'radiant' | 'aurora';
  className?: string;
  onClick?: () => void;
  disabled?: boolean;
}

export const GlowButton: React.FC<GlowButtonProps> = ({
  children,
  theme = 'default',
  glowEffect = 'neon',
  className = '',
  onClick,
  disabled = false
}) => {
  return (
    <button 
      className={`glow-button glow-${glowEffect} theme-${theme} ${className}`}
      onClick={onClick}
      disabled={disabled}
    >
      {children}
    </button>
  );
};
""",
            "GlassInput": """
import React from 'react';
import './Glassmorphism.css';

interface GlassInputProps {
  placeholder?: string;
  value?: string;
  onChange?: (value: string) => void;
  theme?: string;
  className?: string;
  type?: string;
}

export const GlassInput: React.FC<GlassInputProps> = ({
  placeholder,
  value,
  onChange,
  theme = 'default',
  className = '',
  type = 'text'
}) => {
  return (
    <input
      type={type}
      className={`glass-input theme-${theme} ${className}`}
      placeholder={placeholder}
      value={value}
      onChange={(e) => onChange?.(e.target.value)}
    />
  );
};
""",
            "GlassModal": """
import React from 'react';
import './Glassmorphism.css';

interface GlassModalProps {
  isOpen: boolean;
  onClose: () => void;
  children: React.ReactNode;
  theme?: string;
  className?: string;
}

export const GlassModal: React.FC<GlassModalProps> = ({
  isOpen,
  onClose,
  children,
  theme = 'default',
  className = ''
}) => {
  if (!isOpen) return null;

  return (
    <div className={`glass-modal-overlay theme-${theme}`} onClick={onClose}>
      <div 
        className={`glass-modal-content theme-${theme} ${className}`}
        onClick={(e) => e.stopPropagation()}
      >
        {children}
      </div>
    </div>
  );
};
"""
        }
    
    def generate_css_styles(self, theme_name: str = None) -> str:
        """Generate complete CSS styles for glassmorphism"""
        theme = self.get_theme(theme_name)
        
        return f"""
        :root {{
            --background: {theme.background};
            --glass-background: {theme.glass_background};
            --glass-border: {theme.glass_border};
            --glass-shadow: {theme.glass_shadow};
            --backdrop-blur: {theme.backdrop_blur};
            --text-primary: {theme.text_primary};
            --text-secondary: {theme.text_secondary};
            --accent-color: {theme.accent_color};
            --glow-color: {theme.glow_color};
            --border-radius: {theme.border_radius};
            --transition: {theme.transition};
        }}
        
        * {{
            box-sizing: border-box;
        }}
        
        body {{
            margin: 0;
            padding: 0;
            background: var(--background);
            font-family: 'Inter', -apple-system, BlinkMacSystemFont, sans-serif;
            color: var(--text-primary);
            min-height: 100vh;
        }}
        
        /* Glass Card Styles */
        .glass-card {{
            background: var(--glass-background);
            backdrop-filter: var(--backdrop-blur);
            border: 1px solid var(--glass-border);
            border-radius: var(--border-radius);
            box-shadow: var(--glass-shadow);
            padding: 24px;
            transition: var(--transition);
            position: relative;
            overflow: hidden;
        }}
        
        .glass-card::before {{
            content: '';
            position: absolute;
            top: 0;
            left: -100%;
            width: 100%;
            height: 100%;
            background: linear-gradient(90deg, transparent, rgba(255,255,255,0.1), transparent);
            transition: left 0.5s;
        }}
        
        .glass-card:hover::before {{
            left: 100%;
        }}
        
        /* Glow Button Styles */
        .glow-button {{
            background: rgba(255, 255, 255, 0.1);
            backdrop-filter: blur(10px);
            border: 1px solid var(--glass-border);
            border-radius: 12px;
            padding: 12px 24px;
            color: var(--text-primary);
            font-weight: 600;
            cursor: pointer;
            transition: var(--transition);
            position: relative;
            overflow: hidden;
            font-size: 16px;
        }}
        
        .glow-button:hover {{
            transform: scale(1.05);
            box-shadow: 0 0 30px var(--glow-color);
        }}
        
        .glow-button:active {{
            transform: scale(0.95);
        }}
        
        /* Glow Effects */
        .glow-neon {{
            box-shadow: 0 0 20px var(--glow-color), inset 0 0 20px rgba(0, 212, 255, 0.1);
            text-shadow: 0 0 10px var(--glow-color);
        }}
        
        .glow-soft {{
            box-shadow: 0 4px 15px rgba(0, 212, 255, 0.3);
        }}
        
        .glow-pulse {{
            animation: pulse-glow 2s infinite;
            box-shadow: 0 0 20px var(--glow-color);
        }}
        
        .glow-radiant {{
            box-shadow: 0 0 30px var(--glow-color), 0 0 60px rgba(0, 212, 255, 0.3);
        }}
        
        .glow-aurora {{
            background: linear-gradient(45deg, rgba(0,212,255,0.2), rgba(255,255,255,0.1));
            box-shadow: 0 0 25px var(--glow-color);
        }}
        
        /* Glass Input Styles */
        .glass-input {{
            background: rgba(255, 255, 255, 0.1);
            backdrop-filter: blur(10px);
            border: 1px solid var(--glass-border);
            border-radius: 12px;
            padding: 12px 16px;
            color: var(--text-primary);
            font-size: 16px;
            transition: var(--transition);
            outline: none;
            width: 100%;
        }}
        
        .glass-input::placeholder {{
            color: var(--text-secondary);
        }}
        
        .glass-input:focus {{
            border-color: var(--accent-color);
            box-shadow: 0 0 20px rgba(0, 212, 255, 0.3);
        }}
        
        /* Modal Styles */
        .glass-modal-overlay {{
            background: rgba(0, 0, 0, 0.5);
            backdrop-filter: blur(8px);
            position: fixed;
            top: 0;
            left: 0;
            right: 0;
            bottom: 0;
            display: flex;
            align-items: center;
            justify-content: center;
            z-index: 10000;
        }}
        
        .glass-modal-content {{
            background: rgba(255, 255, 255, 0.15);
            backdrop-filter: blur(24px);
            border: 1px solid var(--glass-border);
            border-radius: 20px;
            padding: 32px;
            max-width: 500px;
            width: 90%;
            box-shadow: 0 25px 50px -12px rgba(0, 0, 0, 0.25);
        }}
        
        /* Navigation Styles */
        .glass-nav {{
            background: rgba(255, 255, 255, 0.1);
            backdrop-filter: blur(20px);
            border-bottom: 1px solid var(--glass-border);
            padding: 16px 24px;
            position: sticky;
            top: 0;
            z-index: 1000;
        }}
        
        /* Dashboard Grid */
        .glass-dashboard {{
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
            gap: 24px;
            padding: 24px;
            max-width: 1200px;
            margin: 0 auto;
        }}
        
        /* Responsive Design */
        @media (max-width: 768px) {{
            .glass-dashboard {{
                grid-template-columns: 1fr;
                padding: 16px;
            }}
            
            .glass-card {{
                padding: 16px;
            }}
            
            .glass-modal-content {{
                padding: 24px;
                margin: 16px;
            }}
        }}
        
        /* Animations */
        {self.generate_animation_css()}
        """
    
    def generate_dashboard_template(self, theme_name: str = None) -> str:
        """Generate a complete dashboard template"""
        theme = self.get_theme(theme_name)
        
        return f"""
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>QiLife-Eos Glassmorphism Dashboard</title>
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700&display=swap" rel="stylesheet">
    <style>
        {self.generate_css_styles(theme_name)}
    </style>
</head>
<body>
    <nav class="glass-nav">
        <div style="display: flex; justify-content: space-between; align-items: center;">
            <h1 style="margin: 0; font-size: 24px; font-weight: 600;">QiLife-Eos</h1>
            <div style="display: flex; gap: 16px;">
                <button class="glow-button glow-neon">Dashboard</button>
                <button class="glow-button glow-soft">Apps</button>
                <button class="glow-button glow-pulse">Settings</button>
            </div>
        </div>
    </nav>
    
    <div class="glass-dashboard">
        <div class="glass-card">
            <h2 style="margin-top: 0; color: var(--accent-color);">RAG System</h2>
            <p style="color: var(--text-secondary);">Advanced retrieval-augmented generation with multimodal capabilities.</p>
            <button class="glow-button glow-neon" style="margin-top: 16px;">Launch RAG</button>
        </div>
        
        <div class="glass-card">
            <h2 style="margin-top: 0; color: var(--accent-color);">Document Sync</h2>
            <p style="color: var(--text-secondary);">Seamless Dropbox integration for document management.</p>
            <button class="glow-button glow-soft" style="margin-top: 16px;">Sync Files</button>
        </div>
        
        <div class="glass-card">
            <h2 style="margin-top: 0; color: var(--accent-color);">3D Visualization</h2>
            <p style="color: var(--text-secondary);">Interactive 3D document embeddings visualization.</p>
            <button class="glow-button glow-radiant" style="margin-top: 16px;">View 3D</button>
        </div>
        
        <div class="glass-card">
            <h2 style="margin-top: 0; color: var(--accent-color);">AR Experience</h2>
            <p style="color: var(--text-secondary);">Augmented reality document exploration.</p>
            <button class="glow-button glow-aurora" style="margin-top: 16px;">Start AR</button>
        </div>
    </div>
    
    <script>
        // Add interactive effects
        document.querySelectorAll('.glass-card').forEach(card => {{
            card.addEventListener('mouseenter', () => {{
                card.style.transform = 'translateY(-5px)';
                card.style.boxShadow = '0 20px 40px rgba(31, 38, 135, 0.5)';
            }});
            
            card.addEventListener('mouseleave', () => {{
                card.style.transform = 'translateY(0)';
                card.style.boxShadow = 'var(--glass-shadow)';
            }});
        }});
        
        document.querySelectorAll('.glow-button').forEach(button => {{
            button.addEventListener('click', () => {{
                button.style.transform = 'scale(0.95)';
                setTimeout(() => {{
                    button.style.transform = 'scale(1.05)';
                }}, 150);
            }});
        }});
    </script>
</body>
</html>
"""

# Global glassmorphism UI instance
glassmorphism_ui = GlassmorphismUI()


================================================================================
END: D:\QiEOS\qi_rag_modern\app\glassmorphism_ui.py
================================================================================


================================================================================
FILE: D:\QiEOS\qi_rag_modern\app\main.py
================================================================================

"""
Modern Multi-Tenant RAG System
Built with FastAPI, ChromaDB, LangChain, and Supabase
"""

from __future__ import annotations

import asyncio
import json
import logging
from typing import AsyncGenerator, Dict, List, Optional

from fastapi import FastAPI, HTTPException, Depends, BackgroundTasks, Request
from fastapi.middleware.cors import CORSMiddleware
from fastapi.responses import StreamingResponse
from pydantic import BaseModel, Field
import uvicorn

from .auth import get_current_user, User
from .rag_engine import RAGEngine
from .document_processor import DocumentProcessor
from .config import Settings
from .modular_architecture import modular_arch, AppMode
from .glassmorphism_ui import glassmorphism_ui, GlassEffect, GlowEffect

# Configure logging
logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)

# Initialize settings
settings = Settings()

# Initialize FastAPI app
app = FastAPI(
    title="Modern RAG API",
    description="Multi-tenant RAG system with ChromaDB and LangChain",
    version="1.0.0"
)

# Add CORS middleware
app.add_middleware(
    CORSMiddleware,
    allow_origins=["*"],  # Configure appropriately for production
    allow_credentials=True,
    allow_methods=["*"],
    allow_headers=["*"],
)

# Initialize core components
rag_engine = RAGEngine()
document_processor = DocumentProcessor()

# Pydantic models
class ChatRequest(BaseModel):
    message: str = Field(..., min_length=1, max_length=10000)
    client_id: Optional[str] = None
    use_streaming: bool = True
    max_tokens: int = Field(default=1000, ge=1, le=4000)

class ChatResponse(BaseModel):
    answer: str
    sources: List[Dict]
    metadata: Dict

class DocumentUploadRequest(BaseModel):
    file_path: str
    client_id: str
    document_type: Optional[str] = "general"

class DocumentUploadResponse(BaseModel):
    status: str
    document_id: str
    chunks_processed: int

class HealthResponse(BaseModel):
    status: str
    components: Dict[str, str]

@app.get("/health", response_model=HealthResponse)
async def health_check():
    """Health check endpoint"""
    try:
        # Check ChromaDB connection
        chroma_status = "healthy" if rag_engine.is_connected() else "unhealthy"
        
        return HealthResponse(
            status="healthy",
            components={
                "chromadb": chroma_status,
                "langchain": "healthy",
                "supabase": "healthy"  # Add actual check
            }
        )
    except Exception as e:
        logger.error(f"Health check failed: {e}")
        raise HTTPException(status_code=503, detail="Service unhealthy")

@app.post("/chat", response_model=ChatResponse)
async def chat(
    request: ChatRequest,
    current_user: User = Depends(get_current_user)
):
    """Chat endpoint with optional streaming"""
    try:
        # Use authenticated user's client_id if not provided
        client_id = request.client_id or current_user.client_id
        
        if request.use_streaming:
            # Return streaming response
            return StreamingResponse(
                stream_chat_response(request.message, client_id, request.max_tokens),
                media_type="text/plain"
            )
        else:
            # Return regular response
            response = await rag_engine.chat(
                message=request.message,
                client_id=client_id,
                max_tokens=request.max_tokens
            )
            return ChatResponse(**response)
            
    except Exception as e:
        logger.error(f"Chat error: {e}")
        raise HTTPException(status_code=500, detail=str(e))

async def stream_chat_response(
    message: str, 
    client_id: str, 
    max_tokens: int
) -> AsyncGenerator[str, None]:
    """Stream chat response token by token"""
    try:
        async for chunk in rag_engine.stream_chat(
            message=message,
            client_id=client_id,
            max_tokens=max_tokens
        ):
            yield f"data: {json.dumps(chunk)}\n\n"
        
        yield "data: [DONE]\n\n"
        
    except Exception as e:
        logger.error(f"Streaming error: {e}")
        yield f"data: {json.dumps({'error': str(e)})}\n\n"

@app.post("/ingest", response_model=DocumentUploadResponse)
async def ingest_document(
    request: DocumentUploadRequest,
    background_tasks: BackgroundTasks,
    current_user: User = Depends(get_current_user)
):
    """Ingest a document into the RAG system"""
    try:
        # Use authenticated user's client_id if not provided
        client_id = request.client_id or current_user.client_id
        
        # Start background processing
        background_tasks.add_task(
            document_processor.process_document,
            file_path=request.file_path,
            client_id=client_id,
            document_type=request.document_type
        )
        
        return DocumentUploadResponse(
            status="processing",
            document_id=f"doc_{client_id}_{hash(request.file_path)}",
            chunks_processed=0
        )
        
    except Exception as e:
        logger.error(f"Ingest error: {e}")
        raise HTTPException(status_code=500, detail=str(e))

@app.get("/documents/{client_id}")
async def list_documents(
    client_id: str,
    current_user: User = Depends(get_current_user)
):
    """List documents for a client"""
    try:
        # Verify user has access to this client_id
        if current_user.client_id != client_id:
            raise HTTPException(status_code=403, detail="Access denied")
        
        documents = await document_processor.list_documents(client_id)
        return {"documents": documents}
        
    except Exception as e:
        logger.error(f"List documents error: {e}")
        raise HTTPException(status_code=500, detail=str(e))

@app.delete("/documents/{client_id}/{document_id}")
async def delete_document(
    client_id: str,
    document_id: str,
    current_user: User = Depends(get_current_user)
):
    """Delete a document from the RAG system"""
    try:
        # Verify user has access to this client_id
        if current_user.client_id != client_id:
            raise HTTPException(status_code=403, detail="Access denied")
        
        await document_processor.delete_document(client_id, document_id)
        return {"status": "deleted"}
        
    except Exception as e:
        logger.error(f"Delete document error: {e}")
        raise HTTPException(status_code=500, detail=str(e))

# 3D Visualization Endpoints
@app.get("/visualization/{client_id}")
async def get_3d_visualization(
    client_id: str,
    method: str = "tsne",
    current_user: User = Depends(get_current_user)
):
    """Get 3D visualization data for documents"""
    try:
        # Verify user has access to this client_id
        if current_user.client_id != client_id:
            raise HTTPException(status_code=403, detail="Access denied")
        
        viz_data = await rag_engine.get_3d_visualization_data(client_id, method)
        return viz_data
        
    except Exception as e:
        logger.error(f"3D visualization error: {e}")
        raise HTTPException(status_code=500, detail=str(e))

@app.post("/visualization/{client_id}/query")
async def get_query_visualization(
    client_id: str,
    query: str,
    current_user: User = Depends(get_current_user)
):
    """Get visualization data highlighting relevant documents for a query"""
    try:
        # Verify user has access to this client_id
        if current_user.client_id != client_id:
            raise HTTPException(status_code=403, detail="Access denied")
        
        viz_data = await rag_engine.get_query_visualization(query, client_id)
        return viz_data
        
    except Exception as e:
        logger.error(f"Query visualization error: {e}")
        raise HTTPException(status_code=500, detail=str(e))

@app.get("/")
async def root():
    """Root endpoint"""
    return {
        "message": "Modern RAG API",
        "version": "1.0.0",
        "docs": "/docs"
    }

# Modular Architecture Endpoints
@app.get("/apps")
async def list_available_apps(
    current_user: User = Depends(get_current_user)
):
    """List available mini-apps for the current tenant"""
    try:
        apps = modular_arch.get_available_apps(current_user.client_id)
        return {
            "apps": [
                {
                    "name": app.name,
                    "version": app.version,
                    "description": app.description,
                    "mode": app.mode.value,
                    "dependencies": app.dependencies,
                    "exposed_components": app.exposed_components,
                    "api_endpoints": app.api_endpoints,
                    "permissions": app.permissions,
                    "metadata": app.metadata
                }
                for app in apps
            ]
        }
    except Exception as e:
        logger.error(f"Error listing apps: {e}")
        raise HTTPException(status_code=500, detail=str(e))

@app.post("/apps/{app_name}/instances")
async def create_app_instance(
    app_name: str,
    config: Optional[Dict] = None,
    current_user: User = Depends(get_current_user)
):
    """Create a new instance of a mini-app"""
    try:
        instance = modular_arch.create_app_instance(
            app_name=app_name,
            tenant_id=current_user.client_id,
            config=config or {}
        )
        
        return {
            "instance_id": instance.instance_id,
            "app_name": instance.manifest.name,
            "tenant_id": instance.tenant_id,
            "config": instance.config,
            "status": instance.status,
            "created_at": instance.created_at.isoformat()
        }
    except ValueError as e:
        raise HTTPException(status_code=404, detail=str(e))
    except Exception as e:
        logger.error(f"Error creating app instance: {e}")
        raise HTTPException(status_code=500, detail=str(e))

@app.get("/apps/instances")
async def list_app_instances(
    current_user: User = Depends(get_current_user)
):
    """List app instances for the current tenant"""
    try:
        instances = modular_arch.get_tenant_instances(current_user.client_id)
        return {
            "instances": [
                {
                    "instance_id": instance.instance_id,
                    "app_name": instance.manifest.name,
                    "tenant_id": instance.tenant_id,
                    "config": instance.config,
                    "status": instance.status,
                    "created_at": instance.created_at.isoformat(),
                    "last_accessed": instance.last_accessed.isoformat()
                }
                for instance in instances
            ]
        }
    except Exception as e:
        logger.error(f"Error listing app instances: {e}")
        raise HTTPException(status_code=500, detail=str(e))

@app.put("/apps/instances/{instance_id}/config")
async def update_app_config(
    instance_id: str,
    config: Dict,
    current_user: User = Depends(get_current_user)
):
    """Update configuration for an app instance"""
    try:
        instance = modular_arch.get_app_instance(instance_id)
        if not instance:
            raise HTTPException(status_code=404, detail="Instance not found")
        
        if instance.tenant_id != current_user.client_id:
            raise HTTPException(status_code=403, detail="Access denied")
        
        success = modular_arch.update_app_config(instance_id, config)
        if not success:
            raise HTTPException(status_code=400, detail="Failed to update config")
        
        return {"status": "updated", "instance_id": instance_id}
    except HTTPException:
        raise
    except Exception as e:
        logger.error(f"Error updating app config: {e}")
        raise HTTPException(status_code=500, detail=str(e))

@app.delete("/apps/instances/{instance_id}")
async def remove_app_instance(
    instance_id: str,
    current_user: User = Depends(get_current_user)
):
    """Remove an app instance"""
    try:
        instance = modular_arch.get_app_instance(instance_id)
        if not instance:
            raise HTTPException(status_code=404, detail="Instance not found")
        
        if instance.tenant_id != current_user.client_id:
            raise HTTPException(status_code=403, detail="Access denied")
        
        success = modular_arch.remove_app_instance(instance_id)
        if not success:
            raise HTTPException(status_code=400, detail="Failed to remove instance")
        
        return {"status": "removed", "instance_id": instance_id}
    except HTTPException:
        raise
    except Exception as e:
        logger.error(f"Error removing app instance: {e}")
        raise HTTPException(status_code=500, detail=str(e))

@app.get("/apps/ui-config")
async def get_ui_config(
    current_user: User = Depends(get_current_user)
):
    """Get UI configuration for orchestrated mode"""
    try:
        ui_config = modular_arch.get_orchestrated_ui_config(current_user.client_id)
        return {"ui_config": ui_config}
    except Exception as e:
        logger.error(f"Error getting UI config: {e}")
        raise HTTPException(status_code=500, detail=str(e))

@app.post("/apps/api/{endpoint}")
async def execute_app_api(
    endpoint: str,
    data: Optional[Dict] = None,
    current_user: User = Depends(get_current_user)
):
    """Execute an API call to a mini-app endpoint"""
    try:
        result = await modular_arch.execute_api_call(
            endpoint=endpoint,
            tenant_id=current_user.client_id,
            data=data
        )
        return {"result": result}
    except ValueError as e:
        raise HTTPException(status_code=404, detail=str(e))
    except Exception as e:
        logger.error(f"Error executing app API: {e}")
        raise HTTPException(status_code=500, detail=str(e))

@app.get("/apps/statistics")
async def get_app_statistics(
    current_user: User = Depends(get_current_user)
):
    """Get statistics about the modular architecture"""
    try:
        stats = modular_arch.get_app_statistics()
        return stats
    except Exception as e:
        logger.error(f"Error getting app statistics: {e}")
        raise HTTPException(status_code=500, detail=str(e))

# Glassmorphism UI Endpoints
@app.get("/ui/dashboard")
async def get_glassmorphism_dashboard(
    theme: str = "default",
    current_user: User = Depends(get_current_user)
):
    """Get glassmorphism dashboard HTML"""
    try:
        dashboard_html = glassmorphism_ui.generate_dashboard_template(theme)
        return {"html": dashboard_html}
    except Exception as e:
        logger.error(f"Error generating dashboard: {e}")
        raise HTTPException(status_code=500, detail=str(e))

@app.get("/ui/styles")
async def get_glassmorphism_styles(
    theme: str = "default"
):
    """Get glassmorphism CSS styles"""
    try:
        css_styles = glassmorphism_ui.generate_css_styles(theme)
        return {"css": css_styles}
    except Exception as e:
        logger.error(f"Error generating styles: {e}")
        raise HTTPException(status_code=500, detail=str(e))

@app.get("/ui/components")
async def get_glassmorphism_components():
    """Get React component templates"""
    try:
        components = glassmorphism_ui.generate_react_components()
        return components
    except Exception as e:
        logger.error(f"Error generating components: {e}")
        raise HTTPException(status_code=500, detail=str(e))

@app.get("/ui/themes")
async def get_available_themes():
    """Get available glassmorphism themes"""
    try:
        themes = {
            name: {
                "name": theme.name,
                "background": theme.background,
                "accent_color": theme.accent_color,
                "glow_color": theme.glow_color
            }
            for name, theme in glassmorphism_ui.themes.items()
        }
        return {"themes": themes}
    except Exception as e:
        logger.error(f"Error getting themes: {e}")
        raise HTTPException(status_code=500, detail=str(e))

@app.get("/ui/card-styles")
async def get_card_styles(
    theme: str = "default",
    effect: GlassEffect = GlassEffect.FROSTED
):
    """Get glassmorphism card styles"""
    try:
        styles = glassmorphism_ui.generate_card_styles(theme, effect)
        return {"styles": styles}
    except Exception as e:
        logger.error(f"Error generating card styles: {e}")
        raise HTTPException(status_code=500, detail=str(e))

@app.get("/ui/button-styles")
async def get_button_styles(
    theme: str = "default",
    glow_effect: GlowEffect = GlowEffect.NEON
):
    """Get glassmorphism button styles"""
    try:
        styles = glassmorphism_ui.generate_button_styles(theme, glow_effect)
        return {"styles": styles}
    except Exception as e:
        logger.error(f"Error generating button styles: {e}")
        raise HTTPException(status_code=500, detail=str(e))

if __name__ == "__main__":
    uvicorn.run(
        "app.main:app",
        host="0.0.0.0",
        port=8000,
        reload=True,
        log_level="info"
    )


================================================================================
END: D:\QiEOS\qi_rag_modern\app\main.py
================================================================================


================================================================================
FILE: D:\QiEOS\qi_rag_modern\app\modular_architecture.py
================================================================================

"""
Modular Architecture for QiLife-Eos
Supports both orchestrated control and independent portable mini-apps
"""

from __future__ import annotations

import asyncio
import json
import logging
import os
from datetime import datetime
from pathlib import Path
from typing import Dict, List, Optional, Any, Union, Callable
from dataclasses import dataclass, field
from enum import Enum

from .config import Settings

logger = logging.getLogger(__name__)

class AppMode(Enum):
    """Application modes"""
    ORCHESTRATED = "orchestrated"  # Part of main system
    INDEPENDENT = "independent"    # Standalone app
    HYBRID = "hybrid"             # Can work both ways

@dataclass
class MiniAppManifest:
    """Manifest for a mini-app"""
    name: str
    version: str
    description: str
    mode: AppMode
    entry_point: str
    dependencies: List[str] = field(default_factory=list)
    exposed_components: List[str] = field(default_factory=list)
    api_endpoints: List[str] = field(default_factory=list)
    config_schema: Dict = field(default_factory=dict)
    permissions: List[str] = field(default_factory=list)
    metadata: Dict = field(default_factory=dict)

@dataclass
class AppInstance:
    """Instance of a mini-app"""
    manifest: MiniAppManifest
    instance_id: str
    tenant_id: str
    config: Dict
    status: str = "active"
    created_at: datetime = field(default_factory=datetime.now)
    last_accessed: datetime = field(default_factory=datetime.now)

class ModularArchitecture:
    """Modular architecture manager for QiLife-Eos"""
    
    def __init__(self):
        self.settings = Settings()
        self.apps: Dict[str, MiniAppManifest] = {}
        self.instances: Dict[str, AppInstance] = {}
        self.component_registry: Dict[str, Callable] = {}
        self.api_registry: Dict[str, Callable] = {}
        
        # Load available mini-apps
        self._load_mini_apps()
    
    def _load_mini_apps(self):
        """Load available mini-apps from the miniapps directory"""
        try:
            miniapps_dir = Path("miniapps")
            if not miniapps_dir.exists():
                logger.warning("Miniapps directory not found")
                return
            
            for app_dir in miniapps_dir.iterdir():
                if app_dir.is_dir():
                    manifest_path = app_dir / "manifest.json"
                    if manifest_path.exists():
                        try:
                            with open(manifest_path, 'r') as f:
                                manifest_data = json.load(f)
                            
                            manifest = MiniAppManifest(
                                name=manifest_data["name"],
                                version=manifest_data["version"],
                                description=manifest_data["description"],
                                mode=AppMode(manifest_data["mode"]),
                                entry_point=manifest_data["entry_point"],
                                dependencies=manifest_data.get("dependencies", []),
                                exposed_components=manifest_data.get("exposed_components", []),
                                api_endpoints=manifest_data.get("api_endpoints", []),
                                config_schema=manifest_data.get("config_schema", {}),
                                permissions=manifest_data.get("permissions", []),
                                metadata=manifest_data.get("metadata", {})
                            )
                            
                            self.apps[manifest.name] = manifest
                            logger.info(f"Loaded mini-app: {manifest.name} v{manifest.version}")
                            
                        except Exception as e:
                            logger.error(f"Failed to load manifest for {app_dir.name}: {e}")
            
            logger.info(f"Loaded {len(self.apps)} mini-apps")
            
        except Exception as e:
            logger.error(f"Error loading mini-apps: {e}")
    
    def register_component(self, name: str, component: Callable):
        """Register a component for dynamic loading"""
        self.component_registry[name] = component
        logger.info(f"Registered component: {name}")
    
    def register_api_endpoint(self, name: str, handler: Callable):
        """Register an API endpoint handler"""
        self.api_registry[name] = handler
        logger.info(f"Registered API endpoint: {name}")
    
    def get_available_apps(self, tenant_id: Optional[str] = None) -> List[MiniAppManifest]:
        """Get available mini-apps for a tenant"""
        if not tenant_id:
            return list(self.apps.values())
        
        # Filter based on tenant permissions (implement as needed)
        return list(self.apps.values())
    
    def create_app_instance(
        self, 
        app_name: str, 
        tenant_id: str, 
        config: Optional[Dict] = None
    ) -> AppInstance:
        """Create a new instance of a mini-app"""
        if app_name not in self.apps:
            raise ValueError(f"Mini-app '{app_name}' not found")
        
        manifest = self.apps[app_name]
        instance_id = f"{app_name}_{tenant_id}_{datetime.now().timestamp()}"
        
        instance = AppInstance(
            manifest=manifest,
            instance_id=instance_id,
            tenant_id=tenant_id,
            config=config or {}
        )
        
        self.instances[instance_id] = instance
        logger.info(f"Created app instance: {instance_id}")
        
        return instance
    
    def get_app_instance(self, instance_id: str) -> Optional[AppInstance]:
        """Get an app instance by ID"""
        return self.instances.get(instance_id)
    
    def get_tenant_instances(self, tenant_id: str) -> List[AppInstance]:
        """Get all instances for a tenant"""
        return [
            instance for instance in self.instances.values()
            if instance.tenant_id == tenant_id
        ]
    
    def update_app_config(self, instance_id: str, config: Dict) -> bool:
        """Update configuration for an app instance"""
        if instance_id not in self.instances:
            return False
        
        self.instances[instance_id].config.update(config)
        self.instances[instance_id].last_accessed = datetime.now()
        logger.info(f"Updated config for instance: {instance_id}")
        return True
    
    def remove_app_instance(self, instance_id: str) -> bool:
        """Remove an app instance"""
        if instance_id not in self.instances:
            return False
        
        del self.instances[instance_id]
        logger.info(f"Removed app instance: {instance_id}")
        return True
    
    def get_orchestrated_ui_config(self, tenant_id: str) -> List[Dict]:
        """Get UI configuration for orchestrated mode"""
        instances = self.get_tenant_instances(tenant_id)
        ui_config = []
        
        for instance in instances:
            if instance.manifest.mode in [AppMode.ORCHESTRATED, AppMode.HYBRID]:
                for component in instance.manifest.exposed_components:
                    ui_config.append({
                        "component": component,
                        "instance_id": instance.instance_id,
                        "app_name": instance.manifest.name,
                        "props": {
                            "tenant_id": tenant_id,
                            "instance_id": instance.instance_id,
                            "config": instance.config,
                            **instance.config
                        }
                    })
        
        return ui_config
    
    async def execute_api_call(
        self, 
        endpoint: str, 
        tenant_id: str, 
        data: Optional[Dict] = None
    ) -> Any:
        """Execute an API call to a mini-app endpoint"""
        if endpoint not in self.api_registry:
            raise ValueError(f"API endpoint '{endpoint}' not found")
        
        handler = self.api_registry[endpoint]
        
        # Add tenant context
        context = {
            "tenant_id": tenant_id,
            "timestamp": datetime.now().isoformat()
        }
        
        try:
            if asyncio.iscoroutinefunction(handler):
                result = await handler(context, data or {})
            else:
                result = handler(context, data or {})
            
            return result
            
        except Exception as e:
            logger.error(f"API call failed for endpoint '{endpoint}': {e}")
            raise
    
    def get_app_dependencies(self, app_name: str) -> List[str]:
        """Get dependencies for a mini-app"""
        if app_name not in self.apps:
            return []
        
        return self.apps[app_name].dependencies
    
    def validate_app_config(self, app_name: str, config: Dict) -> bool:
        """Validate configuration against app schema"""
        if app_name not in self.apps:
            return False
        
        schema = self.apps[app_name].config_schema
        # Implement schema validation logic here
        return True
    
    def export_app_manifest(self, app_name: str) -> Optional[Dict]:
        """Export app manifest for external use"""
        if app_name not in self.apps:
            return None
        
        manifest = self.apps[app_name]
        return {
            "name": manifest.name,
            "version": manifest.version,
            "description": manifest.description,
            "mode": manifest.mode.value,
            "entry_point": manifest.entry_point,
            "dependencies": manifest.dependencies,
            "exposed_components": manifest.exposed_components,
            "api_endpoints": manifest.api_endpoints,
            "config_schema": manifest.config_schema,
            "permissions": manifest.permissions,
            "metadata": manifest.metadata
        }
    
    def import_app_manifest(self, manifest_data: Dict) -> bool:
        """Import an app manifest"""
        try:
            manifest = MiniAppManifest(
                name=manifest_data["name"],
                version=manifest_data["version"],
                description=manifest_data["description"],
                mode=AppMode(manifest_data["mode"]),
                entry_point=manifest_data["entry_point"],
                dependencies=manifest_data.get("dependencies", []),
                exposed_components=manifest_data.get("exposed_components", []),
                api_endpoints=manifest_data.get("api_endpoints", []),
                config_schema=manifest_data.get("config_schema", {}),
                permissions=manifest_data.get("permissions", []),
                metadata=manifest_data.get("metadata", {})
            )
            
            self.apps[manifest.name] = manifest
            logger.info(f"Imported app manifest: {manifest.name}")
            return True
            
        except Exception as e:
            logger.error(f"Failed to import app manifest: {e}")
            return False
    
    def get_app_statistics(self) -> Dict:
        """Get statistics about the modular architecture"""
        total_instances = len(self.instances)
        instances_by_app = {}
        instances_by_tenant = {}
        
        for instance in self.instances.values():
            # Count by app
            app_name = instance.manifest.name
            instances_by_app[app_name] = instances_by_app.get(app_name, 0) + 1
            
            # Count by tenant
            tenant_id = instance.tenant_id
            instances_by_tenant[tenant_id] = instances_by_tenant.get(tenant_id, 0) + 1
        
        return {
            "total_apps": len(self.apps),
            "total_instances": total_instances,
            "instances_by_app": instances_by_app,
            "instances_by_tenant": instances_by_tenant,
            "registered_components": len(self.component_registry),
            "registered_api_endpoints": len(self.api_registry)
        }

class MiniAppManager:
    """Manager for individual mini-apps"""
    
    def __init__(self, app_name: str, manifest: MiniAppManifest):
        self.app_name = app_name
        self.manifest = manifest
        self.components: Dict[str, Any] = {}
        self.api_handlers: Dict[str, Callable] = {}
        
    def register_component(self, name: str, component: Any):
        """Register a component for this mini-app"""
        if name in self.manifest.exposed_components:
            self.components[name] = component
            logger.info(f"Registered component '{name}' for app '{self.app_name}'")
        else:
            logger.warning(f"Component '{name}' not in exposed_components for app '{self.app_name}'")
    
    def register_api_handler(self, endpoint: str, handler: Callable):
        """Register an API handler for this mini-app"""
        if endpoint in self.manifest.api_endpoints:
            self.api_handlers[endpoint] = handler
            logger.info(f"Registered API handler '{endpoint}' for app '{self.app_name}'")
        else:
            logger.warning(f"API endpoint '{endpoint}' not in api_endpoints for app '{self.app_name}'")
    
    def get_component(self, name: str) -> Optional[Any]:
        """Get a registered component"""
        return self.components.get(name)
    
    def get_api_handler(self, endpoint: str) -> Optional[Callable]:
        """Get a registered API handler"""
        return self.api_handlers.get(endpoint)
    
    def can_run_independently(self) -> bool:
        """Check if this mini-app can run independently"""
        return self.manifest.mode in [AppMode.INDEPENDENT, AppMode.HYBRID]
    
    def can_run_orchestrated(self) -> bool:
        """Check if this mini-app can run in orchestrated mode"""
        return self.manifest.mode in [AppMode.ORCHESTRATED, AppMode.HYBRID]

# Global modular architecture instance
modular_arch = ModularArchitecture()


================================================================================
END: D:\QiEOS\qi_rag_modern\app\modular_architecture.py
================================================================================


================================================================================
FILE: D:\QiEOS\qi_rag_modern\app\multimodal_retriever.py
================================================================================

"""
Multi-Vector Retriever for Multimodal RAG
Handles text summaries, images, videos, and other multimodal content
"""

from __future__ import annotations

import asyncio
import logging
import uuid
from typing import Dict, List, Optional, Any, Union
from pathlib import Path

from langchain.retrievers.multi_vector import MultiVectorRetriever
from langchain.storage import InMemoryStore
from langchain_chroma import Chroma
from langchain_openai import OpenAIEmbeddings
from langchain.schema import Document
from langchain_core.prompts import ChatPromptTemplate
from langchain.chains import create_retrieval_chain
from langchain.chains.combine_documents import create_stuff_documents_chain

from .config import Settings

logger = logging.getLogger(__name__)

class MultimodalRetriever:
    """Multi-vector retriever for handling multimodal content"""
    
    def __init__(self, client_id: str):
        self.settings = Settings()
        self.client_id = client_id
        
        # Initialize embedding model
        self.embedding_model = OpenAIEmbeddings(
            openai_api_key=self.settings.openai_api_key,
            model="text-embedding-3-small"
        )
        
        # Initialize multimodal LLM
        self.multimodal_llm = None
        self._initialize_multimodal_llm()
        
        # Initialize vector store and document store
        self.vectorstore = Chroma(
            collection_name=f"client-{client_id}-multimodal",
            embedding_function=self.embedding_model,
        )
        
        self.docstore = InMemoryStore()
        
        # Create multi-vector retriever
        self.retriever = MultiVectorRetriever(
            vectorstore=self.vectorstore,
            docstore=self.docstore,
            id_key="doc_id",
        )
        
        # Initialize multimodal LLM for final response generation
        self._initialize_multimodal_llm()
    
    def _initialize_multimodal_llm(self):
        """Initialize multimodal LLM for final response generation"""
        try:
            # Try to initialize Google Gemini for multimodal responses
            import google.generativeai as genai
            genai.configure(api_key=self.settings.gemini_api_key)
            self.multimodal_llm = genai.GenerativeModel('gemini-pro-vision')
            logger.info("Multimodal LLM (Gemini) initialized successfully")
        except ImportError:
            logger.warning("Google Gemini not available for multimodal LLM")
        except Exception as e:
            logger.error(f"Failed to initialize multimodal LLM: {e}")
    
    async def add_text_document(
        self, 
        content: str, 
        metadata: Optional[Dict] = None
    ) -> str:
        """Add a text document to the multi-vector retriever"""
        try:
            doc_id = str(uuid.uuid4())
            
            # Create text document
            text_doc = Document(
                page_content=content,
                metadata={
                    "doc_id": doc_id,
                    "type": "text",
                    "client_id": self.client_id,
                    **(metadata or {})
                }
            )
            
            # Add to vector store
            self.retriever.vectorstore.add_documents([text_doc])
            
            # Store reference in document store
            self.retriever.docstore.mset([(doc_id, text_doc)])
            
            logger.info(f"Added text document with ID: {doc_id}")
            return doc_id
            
        except Exception as e:
            logger.error(f"Error adding text document: {e}")
            raise
    
    async def add_image_document(
        self, 
        image_path: str, 
        image_summary: str,
        metadata: Optional[Dict] = None
    ) -> str:
        """Add an image document with its text summary"""
        try:
            doc_id = str(uuid.uuid4())
            
            # Create image document (stores the image path)
            image_doc = Document(
                page_content=image_path,
                metadata={
                    "doc_id": doc_id,
                    "type": "image",
                    "client_id": self.client_id,
                    "image_summary": image_summary,
                    **(metadata or {})
                }
            )
            
            # Create text summary document for embedding
            summary_doc = Document(
                page_content=image_summary,
                metadata={
                    "doc_id": doc_id,
                    "type": "image_summary",
                    "client_id": self.client_id,
                    "original_image_path": image_path,
                    **(metadata or {})
                }
            )
            
            # Add summary to vector store for retrieval
            self.retriever.vectorstore.add_documents([summary_doc])
            
            # Store image reference in document store
            self.retriever.docstore.mset([(doc_id, image_doc)])
            
            logger.info(f"Added image document with ID: {doc_id}")
            return doc_id
            
        except Exception as e:
            logger.error(f"Error adding image document: {e}")
            raise
    
    async def add_video_document(
        self, 
        video_path: str, 
        video_summary: str,
        keyframe_summaries: Optional[List[str]] = None,
        audio_transcript: Optional[str] = None,
        metadata: Optional[Dict] = None
    ) -> str:
        """Add a video document with its summaries"""
        try:
            doc_id = str(uuid.uuid4())
            
            # Create video document
            video_doc = Document(
                page_content=video_path,
                metadata={
                    "doc_id": doc_id,
                    "type": "video",
                    "client_id": self.client_id,
                    "video_summary": video_summary,
                    "keyframe_summaries": keyframe_summaries or [],
                    "audio_transcript": audio_transcript,
                    **(metadata or {})
                }
            )
            
            # Create comprehensive text summary for embedding
            full_summary = f"Video Summary: {video_summary}"
            if keyframe_summaries:
                full_summary += f"\n\nKeyframe Descriptions:\n" + "\n".join(
                    f"- Frame {i+1}: {summary}" 
                    for i, summary in enumerate(keyframe_summaries)
                )
            if audio_transcript:
                full_summary += f"\n\nAudio Transcript: {audio_transcript}"
            
            summary_doc = Document(
                page_content=full_summary,
                metadata={
                    "doc_id": doc_id,
                    "type": "video_summary",
                    "client_id": self.client_id,
                    "original_video_path": video_path,
                    **(metadata or {})
                }
            )
            
            # Add summary to vector store
            self.retriever.vectorstore.add_documents([summary_doc])
            
            # Store video reference in document store
            self.retriever.docstore.mset([(doc_id, video_doc)])
            
            logger.info(f"Added video document with ID: {doc_id}")
            return doc_id
            
        except Exception as e:
            logger.error(f"Error adding video document: {e}")
            raise
    
    async def add_audio_document(
        self, 
        audio_path: str, 
        audio_transcript: str,
        metadata: Optional[Dict] = None
    ) -> str:
        """Add an audio document with its transcript"""
        try:
            doc_id = str(uuid.uuid4())
            
            # Create audio document
            audio_doc = Document(
                page_content=audio_path,
                metadata={
                    "doc_id": doc_id,
                    "type": "audio",
                    "client_id": self.client_id,
                    "audio_transcript": audio_transcript,
                    **(metadata or {})
                }
            )
            
            # Create transcript document for embedding
            transcript_doc = Document(
                page_content=audio_transcript,
                metadata={
                    "doc_id": doc_id,
                    "type": "audio_transcript",
                    "client_id": self.client_id,
                    "original_audio_path": audio_path,
                    **(metadata or {})
                }
            )
            
            # Add transcript to vector store
            self.retriever.vectorstore.add_documents([transcript_doc])
            
            # Store audio reference in document store
            self.retriever.docstore.mset([(doc_id, audio_doc)])
            
            logger.info(f"Added audio document with ID: {doc_id}")
            return doc_id
            
        except Exception as e:
            logger.error(f"Error adding audio document: {e}")
            raise
    
    async def retrieve_relevant_documents(
        self, 
        query: str, 
        k: int = 5
    ) -> List[Document]:
        """Retrieve relevant documents for a query"""
        try:
            # Use the multi-vector retriever to get relevant documents
            docs = await self.retriever.aget_relevant_documents(query, k=k)
            return docs
        except Exception as e:
            logger.error(f"Error retrieving documents: {e}")
            raise
    
    async def generate_multimodal_response(
        self, 
        query: str, 
        retrieved_docs: List[Document]
    ) -> str:
        """Generate a multimodal response using the retrieved documents"""
        try:
            if not self.multimodal_llm:
                # Fallback to text-only response
                return await self._generate_text_response(query, retrieved_docs)
            
            # Prepare multimodal content
            text_content = []
            image_paths = []
            video_paths = []
            audio_paths = []
            
            for doc in retrieved_docs:
                doc_type = doc.metadata.get("type", "text")
                
                if doc_type == "text":
                    text_content.append(doc.page_content)
                elif doc_type == "image":
                    image_paths.append(doc.page_content)
                    if "image_summary" in doc.metadata:
                        text_content.append(f"Image: {doc.metadata['image_summary']}")
                elif doc_type == "video":
                    video_paths.append(doc.page_content)
                    if "video_summary" in doc.metadata:
                        text_content.append(f"Video: {doc.metadata['video_summary']}")
                elif doc_type == "audio":
                    audio_paths.append(doc.page_content)
                    if "audio_transcript" in doc.metadata:
                        text_content.append(f"Audio: {doc.metadata['audio_transcript']}")
            
            # Combine text content
            combined_text = "\n\n".join(text_content)
            
            # Create multimodal prompt
            prompt = f"""You are a helpful AI assistant with access to multimodal content.

Context from retrieved documents:
{combined_text}

User Question: {query}

Please provide a comprehensive answer based on the available text, image, video, and audio content. If the content includes images, videos, or audio files, reference them appropriately in your response."""

            # Generate response
            if image_paths and self.multimodal_llm:
                # Load and include images in the response
                from PIL import Image
                images = []
                for img_path in image_paths[:3]:  # Limit to 3 images for performance
                    try:
                        img = Image.open(img_path)
                        images.append(img)
                    except Exception as e:
                        logger.warning(f"Could not load image {img_path}: {e}")
                
                if images:
                    response = self.multimodal_llm.generate_content([prompt, *images])
                    return response.text
            
            # Text-only response
            response = self.multimodal_llm.generate_content(prompt)
            return response.text
            
        except Exception as e:
            logger.error(f"Error generating multimodal response: {e}")
            # Fallback to text response
            return await self._generate_text_response(query, retrieved_docs)
    
    async def _generate_text_response(
        self, 
        query: str, 
        retrieved_docs: List[Document]
    ) -> str:
        """Generate a text-only response as fallback"""
        try:
            # Combine document content
            context = "\n\n".join([doc.page_content for doc in retrieved_docs])
            
            # Simple prompt for text response
            prompt = f"""Based on the following context, answer the user's question:

Context:
{context}

Question: {query}

Answer:"""
            
            # For now, return a simple response
            # In a full implementation, you'd use a text LLM here
            return f"Based on the retrieved documents, here's what I found:\n\n{context[:500]}..."
            
        except Exception as e:
            logger.error(f"Error generating text response: {e}")
            return "I'm sorry, I couldn't generate a response at this time."
    
    async def create_multimodal_rag_chain(self):
        """Create a multimodal RAG chain"""
        try:
            # Create prompt template
            prompt = ChatPromptTemplate.from_messages([
                ("system", "You are a helpful AI assistant with access to multimodal content. Use the provided context to answer the user's question."),
                ("human", "{input}"),
            ])
            
            # Create document combining chain
            document_chain = create_stuff_documents_chain(
                llm=None,  # We'll handle LLM separately for multimodal
                prompt=prompt
            )
            
            # Create retrieval chain
            retrieval_chain = create_retrieval_chain(
                retriever=self.retriever,
                combine_docs_chain=document_chain
            )
            
            return retrieval_chain
            
        except Exception as e:
            logger.error(f"Error creating multimodal RAG chain: {e}")
            raise
    
    async def delete_document(self, doc_id: str) -> bool:
        """Delete a document from the multi-vector retriever"""
        try:
            # Remove from document store
            self.retriever.docstore.mdelete([doc_id])
            
            # Note: ChromaDB doesn't have a direct delete by metadata method
            # In a production system, you'd need to implement proper deletion
            logger.info(f"Deleted document with ID: {doc_id}")
            return True
            
        except Exception as e:
            logger.error(f"Error deleting document: {e}")
            raise
    
    async def get_document_count(self) -> int:
        """Get the number of documents in the retriever"""
        try:
            # Get count from vector store
            return self.retriever.vectorstore._collection.count()
        except Exception as e:
            logger.error(f"Error getting document count: {e}")
            return 0
    
    async def clear_all_documents(self) -> bool:
        """Clear all documents from the retriever"""
        try:
            # Clear document store
            self.retriever.docstore.clear()
            
            # Clear vector store
            self.retriever.vectorstore._collection.delete()
            
            logger.info("Cleared all documents from multimodal retriever")
            return True
            
        except Exception as e:
            logger.error(f"Error clearing documents: {e}")
            raise


================================================================================
END: D:\QiEOS\qi_rag_modern\app\multimodal_retriever.py
================================================================================


================================================================================
FILE: D:\QiEOS\qi_rag_modern\app\rag_engine.py
================================================================================

"""
Modern RAG Engine with Hybrid Search and Advanced 3D Visualization
Combines BM25 keyword search with ChromaDB vector search
Includes UMAP, t-SNE, and PCA dimensionality reduction
"""

from __future__ import annotations

import asyncio
import logging
from typing import AsyncGenerator, Dict, List, Optional, Any, Tuple

import numpy as np
from sklearn.decomposition import PCA
from sklearn.manifold import TSNE
from sklearn.preprocessing import StandardScaler

from langchain.chains import create_retrieval_chain
from langchain.chains.combine_documents import create_stuff_documents_chain
from langchain_core.prompts import ChatPromptTemplate
from langchain_openai import ChatOpenAI, OpenAIEmbeddings
from langchain_chroma import Chroma
from langchain_community.retrievers import BM25Retriever
from langchain.retrievers import EnsembleRetriever
from langchain.schema import Document
from langchain_text_splitters import RecursiveCharacterTextSplitter

from .config import Settings

logger = logging.getLogger(__name__)

class RAGEngine:
    """Modern RAG engine with hybrid search and advanced 3D visualization capabilities"""
    
    def __init__(self):
        self.settings = Settings()
        self.embeddings = OpenAIEmbeddings(
            openai_api_key=self.settings.openai_api_key,
            model="text-embedding-3-small"
        )
        self.llm = ChatOpenAI(
            openai_api_key=self.settings.openai_api_key,
            model="gpt-3.5-turbo",
            temperature=0.1,
            streaming=True
        )
        self.text_splitter = RecursiveCharacterTextSplitter(
            chunk_size=1000,
            chunk_overlap=200,
            length_function=len,
        )
        
        # Initialize ChromaDB client
        self.chroma_client = None
        self._initialize_chroma()
        
        # Cache for retrievers and visualizations
        self._retriever_cache: Dict[str, Any] = {}
        self._viz_cache: Dict[str, Dict] = {}
        
        # Color palette for document types
        self.color_palette = {
            'pdf': '#FF6B6B',      # Red
            'docx': '#4ECDC4',     # Teal
            'txt': '#45B7D1',      # Blue
            'markdown': '#96CEB4',  # Green
            'html': '#FFA07A',     # Light Salmon
            'json': '#DDA0DD',     # Plum
            'csv': '#98FB98',      # Pale Green
            'general': '#FFEAA7'   # Yellow
        }
        
    def _initialize_chroma(self):
        """Initialize ChromaDB connection"""
        try:
            import chromadb
            self.chroma_client = chromadb.PersistentClient(
                path=self.settings.chroma_persist_directory
            )
            logger.info("ChromaDB initialized successfully")
        except Exception as e:
            logger.error(f"Failed to initialize ChromaDB: {e}")
            self.chroma_client = None
    
    def is_connected(self) -> bool:
        """Check if ChromaDB is connected"""
        return self.chroma_client is not None
    
    def _get_collection_name(self, client_id: str) -> str:
        """Get collection name for a client"""
        return f"client-{client_id}-documents"
    
    def _create_hybrid_retriever(self, client_id: str) -> EnsembleRetriever:
        """Create hybrid retriever combining BM25 and ChromaDB"""
        collection_name = self._get_collection_name(client_id)
        
        # Create ChromaDB vector store
        vectorstore = Chroma(
            client=self.chroma_client,
            collection_name=collection_name,
            embedding_function=self.embeddings,
        )
        
        # Get all documents from ChromaDB for BM25
        try:
            all_docs = vectorstore.get()
            documents = []
            
            if all_docs and 'documents' in all_docs:
                for i, doc_text in enumerate(all_docs['documents']):
                    metadata = all_docs['metadatas'][i] if 'metadatas' in all_docs else {}
                    documents.append(Document(
                        page_content=doc_text,
                        metadata=metadata
                    ))
            
            # Create BM25 retriever
            bm25_retriever = BM25Retriever.from_documents(documents)
            bm25_retriever.k = 10  # Number of documents to retrieve
            
            # Create ChromaDB retriever
            chroma_retriever = vectorstore.as_retriever(
                search_kwargs={"k": 10}
            )
            
            # Combine retrievers with weights
            ensemble_retriever = EnsembleRetriever(
                retrievers=[bm25_retriever, chroma_retriever],
                weights=[0.3, 0.7]  # Favor vector search slightly
            )
            
            return ensemble_retriever
            
        except Exception as e:
            logger.error(f"Failed to create hybrid retriever: {e}")
            # Fallback to ChromaDB only
            return vectorstore.as_retriever(search_kwargs={"k": 10})
    
    def _get_retriever(self, client_id: str) -> Any:
        """Get or create retriever for a client"""
        if client_id not in self._retriever_cache:
            self._retriever_cache[client_id] = self._create_hybrid_retriever(client_id)
        return self._retriever_cache[client_id]
    
    def _create_rag_chain(self, client_id: str):
        """Create RAG chain for a client"""
        retriever = self._get_retriever(client_id)
        
        # Create prompt template
        prompt = ChatPromptTemplate.from_template("""
You are a helpful AI assistant with access to the following context documents.

<context>
{context}
</context>

Answer the question based only on the provided context. If the context doesn't contain enough information to answer the question, say "I don't have enough information to answer that question."

Question: {input}
Answer:""")
        
        # Create document chain
        document_chain = create_stuff_documents_chain(
            llm=self.llm,
            prompt=prompt
        )
        
        # Create retrieval chain
        retrieval_chain = create_retrieval_chain(
            retriever=retriever,
            combine_docs_chain=document_chain
        )
        
        return retrieval_chain
    
    def _perform_dimensionality_reduction(
        self, 
        embeddings: np.ndarray, 
        method: str = "umap",
        **kwargs
    ) -> np.ndarray:
        """Perform dimensionality reduction using various algorithms"""
        # Standardize embeddings for better results
        scaler = StandardScaler()
        embeddings_scaled = scaler.fit_transform(embeddings)
        
        if method.lower() == "umap":
            try:
                import umap
                reducer = umap.UMAP(
                    n_components=3,
                    random_state=42,
                    n_neighbors=min(15, len(embeddings) - 1),
                    min_dist=0.1,
                    metric='cosine',
                    **kwargs
                )
            except ImportError:
                logger.warning("UMAP not available, falling back to t-SNE")
                method = "tsne"
        
        if method.lower() == "tsne":
            reducer = TSNE(
                n_components=3,
                random_state=42,
                perplexity=min(30, len(embeddings) - 1),
                metric='cosine',
                **kwargs
            )
        elif method.lower() == "pca":
            reducer = PCA(n_components=3, random_state=42)
        else:
            raise ValueError(f"Unsupported dimensionality reduction method: {method}")
        
        coords_3d = reducer.fit_transform(embeddings_scaled)
        return coords_3d
    
    def _get_visual_encoding(self, metadata: Dict, content: str) -> Dict[str, Any]:
        """Get comprehensive visual encoding for a document"""
        doc_type = metadata.get('document_type', 'general')
        file_size = metadata.get('file_size', 0)
        created_date = metadata.get('created_date')
        
        # Color coding
        color = self.color_palette.get(doc_type, self.color_palette['general'])
        
        # Size encoding based on content length or importance
        content_length = len(content)
        if content_length > 5000:
            size = 0.8  # Large documents
        elif content_length > 2000:
            size = 0.6  # Medium documents
        else:
            size = 0.4  # Small documents
        
        # Shape encoding based on document type
        shape_map = {
            'pdf': 'sphere',
            'docx': 'cube',
            'txt': 'cylinder',
            'markdown': 'octahedron',
            'html': 'torus',
            'json': 'dodecahedron',
            'csv': 'icosahedron',
            'general': 'sphere'
        }
        shape = shape_map.get(doc_type, 'sphere')
        
        # Opacity based on recency (if date available)
        opacity = 1.0
        if created_date:
            # Simple opacity based on whether it's recent
            opacity = 0.8  # Could be enhanced with actual date logic
        
        return {
            "color": color,
            "size": size,
            "shape": shape,
            "opacity": opacity,
            "content_length": content_length,
            "doc_type": doc_type
        }
    
    async def get_3d_visualization_data(
        self, 
        client_id: str, 
        method: str = "umap",
        use_cache: bool = True,
        **kwargs
    ) -> Dict[str, Any]:
        """Get advanced 3D visualization data for documents"""
        try:
            # Check cache first
            cache_key = f"{client_id}_{method}"
            if use_cache and cache_key in self._viz_cache:
                return self._viz_cache[cache_key]
            
            collection_name = self._get_collection_name(client_id)
            collection = self.chroma_client.get_collection(collection_name)
            
            # Get all embeddings and metadata
            results = collection.get(
                include=['embeddings', 'metadatas', 'documents', 'ids']
            )
            
            if not results['embeddings']:
                return {
                    "points": [], 
                    "metadata": [],
                    "method": method,
                    "total_documents": 0,
                    "clusters": [],
                    "statistics": {}
                }
            
            embeddings = np.array(results['embeddings'])
            
            # Perform dimensionality reduction
            coords_3d = self._perform_dimensionality_reduction(
                embeddings, method, **kwargs
            )
            
            # Prepare visualization data with enhanced encodings
            points = []
            metadata = []
            cluster_data = {}
            
            for i, coord in enumerate(coords_3d):
                doc_content = results['documents'][i]
                doc_metadata = results['metadatas'][i] if results['metadatas'] else {}
                doc_id = results['ids'][i] if 'ids' in results else str(i)
                
                # Get visual encoding
                visual_encoding = self._get_visual_encoding(doc_metadata, doc_content)
                
                # Create point data
                point = {
                    "id": doc_id,
                    "x": float(coord[0]),
                    "y": float(coord[1]),
                    "z": float(coord[2]),
                    "color": visual_encoding["color"],
                    "size": visual_encoding["size"],
                    "shape": visual_encoding["shape"],
                    "opacity": visual_encoding["opacity"],
                    "is_relevant": False,
                    "relevance_score": 0.0
                }
                points.append(point)
                
                # Create metadata
                meta = {
                    "id": doc_id,
                    "content": doc_content[:150] + "..." if len(doc_content) > 150 else doc_content,
                    "content_preview": doc_content[:50] + "...",
                    "metadata": doc_metadata,
                    "visual_encoding": visual_encoding,
                    "cluster": self._determine_cluster(coord, method),
                    "neighbors": []  # Will be populated for AR interactions
                }
                metadata.append(meta)
                
                # Track clusters
                cluster = meta["cluster"]
                if cluster not in cluster_data:
                    cluster_data[cluster] = {
                        "count": 0,
                        "doc_types": set(),
                        "center": [0, 0, 0],
                        "documents": []
                    }
                cluster_data[cluster]["count"] += 1
                cluster_data[cluster]["doc_types"].add(visual_encoding["doc_type"])
                cluster_data[cluster]["center"][0] += coord[0]
                cluster_data[cluster]["center"][1] += coord[1]
                cluster_data[cluster]["center"][2] += coord[2]
                cluster_data[cluster]["documents"].append(doc_id)
            
            # Calculate cluster centers
            clusters = []
            for cluster_id, cluster_info in cluster_data.items():
                count = cluster_info["count"]
                center = [
                    cluster_info["center"][0] / count,
                    cluster_info["center"][1] / count,
                    cluster_info["center"][2] / count
                ]
                clusters.append({
                    "id": cluster_id,
                    "center": center,
                    "count": count,
                    "doc_types": list(cluster_info["doc_types"]),
                    "documents": cluster_info["documents"]
                })
            
            # Calculate statistics
            statistics = {
                "total_documents": len(points),
                "document_types": {},
                "content_length_stats": {
                    "min": min([m["visual_encoding"]["content_length"] for m in metadata]),
                    "max": max([m["visual_encoding"]["content_length"] for m in metadata]),
                    "avg": sum([m["visual_encoding"]["content_length"] for m in metadata]) / len(metadata)
                },
                "clusters_count": len(clusters),
                "method": method
            }
            
            # Count document types
            for meta in metadata:
                doc_type = meta["visual_encoding"]["doc_type"]
                statistics["document_types"][doc_type] = statistics["document_types"].get(doc_type, 0) + 1
            
            result = {
                "points": points,
                "metadata": metadata,
                "clusters": clusters,
                "statistics": statistics,
                "method": method,
                "total_documents": len(points),
                "color_palette": self.color_palette,
                "shape_mapping": {
                    'pdf': 'sphere',
                    'docx': 'cube',
                    'txt': 'cylinder',
                    'markdown': 'octahedron',
                    'html': 'torus',
                    'json': 'dodecahedron',
                    'csv': 'icosahedron',
                    'general': 'sphere'
                }
            }
            
            # Cache the result
            if use_cache:
                self._viz_cache[cache_key] = result
            
            return result
            
        except Exception as e:
            logger.error(f"3D visualization error: {e}")
            raise
    
    def _determine_cluster(self, coord: np.ndarray, method: str) -> str:
        """Determine cluster for a point based on position"""
        # Simple clustering based on position
        # In a real implementation, you might use K-means or DBSCAN
        x, y, z = coord
        
        if abs(x) < 0.5 and abs(y) < 0.5 and abs(z) < 0.5:
            return "center"
        elif x > 0.5:
            return "right"
        elif x < -0.5:
            return "left"
        elif y > 0.5:
            return "front"
        elif y < -0.5:
            return "back"
        elif z > 0.5:
            return "top"
        elif z < -0.5:
            return "bottom"
        else:
            return "center"
    
    async def get_query_visualization(
        self, 
        query: str, 
        client_id: str,
        method: str = "umap"
    ) -> Dict[str, Any]:
        """Get visualization data highlighting relevant documents for a query"""
        try:
            # Get all visualization data
            viz_data = await self.get_3d_visualization_data(client_id, method)
            
            # Get relevant documents for the query
            retriever = self._get_retriever(client_id)
            relevant_docs = await retriever.aget_relevant_documents(query)
            
            # Mark relevant documents and calculate relevance scores
            relevant_ids = set()
            relevance_scores = {}
            
            for doc in relevant_docs:
                # Find the document ID in our visualization data
                for i, meta in enumerate(viz_data['metadata']):
                    if meta['content'].startswith(doc.page_content[:50]):
                        relevant_ids.add(meta['id'])
                        # Simple relevance scoring based on position in results
                        relevance_scores[meta['id']] = 1.0 - (len(relevance_scores) * 0.1)
                        break
            
            # Update visualization data with relevance information
            for i, point in enumerate(viz_data['points']):
                point['is_relevant'] = point['id'] in relevant_ids
                point['relevance_score'] = relevance_scores.get(point['id'], 0.0)
                
                # Enhance visual encoding for relevant documents
                if point['is_relevant']:
                    point['size'] *= 1.5  # Make relevant documents larger
                    point['opacity'] = 1.0  # Full opacity for relevant docs
                    point['color'] = '#FFD700'  # Gold color for relevant docs
            
            # Add query-specific information
            viz_data.update({
                "query": query,
                "relevant_count": len(relevant_ids),
                "relevance_scores": relevance_scores,
                "query_embedding": None  # Could be added for AR positioning
            })
            
            return viz_data
            
        except Exception as e:
            logger.error(f"Query visualization error: {e}")
            raise
    
    async def get_ar_visualization_data(
        self, 
        client_id: str,
        anchor_position: Optional[Dict[str, float]] = None,
        method: str = "umap"
    ) -> Dict[str, Any]:
        """Get AR-optimized visualization data"""
        try:
            # Get base visualization data
            viz_data = await self.get_3d_visualization_data(client_id, method)
            
            # Optimize for AR display
            ar_data = {
                **viz_data,
                "ar_optimized": True,
                "anchor_position": anchor_position or {"x": 0, "y": 0, "z": 0},
                "scale_factor": 0.1,  # Scale down for AR display
                "max_points_display": 100,  # Limit points for performance
                "interaction_zones": [],
                "gesture_controls": {
                    "pinch_zoom": True,
                    "two_finger_rotate": True,
                    "one_finger_drag": True,
                    "voice_commands": True
                }
            }
            
            # Limit points for AR performance
            if len(ar_data['points']) > ar_data['max_points_display']:
                # Sample points intelligently
                indices = np.linspace(0, len(ar_data['points'])-1, ar_data['max_points_display'], dtype=int)
                ar_data['points'] = [ar_data['points'][i] for i in indices]
                ar_data['metadata'] = [ar_data['metadata'][i] for i in indices]
            
            # Scale coordinates for AR
            for point in ar_data['points']:
                point['x'] *= ar_data['scale_factor']
                point['y'] *= ar_data['scale_factor']
                point['z'] *= ar_data['scale_factor']
                point['size'] *= ar_data['scale_factor']
            
            # Add interaction zones for AR
            for cluster in ar_data['clusters']:
                center = cluster['center']
                ar_data['interaction_zones'].append({
                    "id": f"zone_{cluster['id']}",
                    "center": [
                        center[0] * ar_data['scale_factor'],
                        center[1] * ar_data['scale_factor'],
                        center[2] * ar_data['scale_factor']
                    ],
                    "radius": 0.5 * ar_data['scale_factor'],
                    "cluster_id": cluster['id'],
                    "documents": cluster['documents']
                })
            
            return ar_data
            
        except Exception as e:
            logger.error(f"AR visualization error: {e}")
            raise
    
    async def chat(
        self, 
        message: str, 
        client_id: str, 
        max_tokens: int = 1000
    ) -> Dict[str, Any]:
        """Chat with RAG system"""
        try:
            chain = self._create_rag_chain(client_id)
            
            # Get response
            response = await chain.ainvoke({
                "input": message
            })
            
            # Get sources from retriever
            retriever = self._get_retriever(client_id)
            docs = await retriever.aget_relevant_documents(message)
            
            sources = []
            for doc in docs[:5]:  # Top 5 sources
                sources.append({
                    "content": doc.page_content[:200] + "...",
                    "metadata": doc.metadata
                })
            
            return {
                "answer": response["answer"],
                "sources": sources,
                "metadata": {
                    "client_id": client_id,
                    "model": "gpt-3.5-turbo",
                    "max_tokens": max_tokens
                }
            }
            
        except Exception as e:
            logger.error(f"Chat error: {e}")
            raise
    
    async def stream_chat(
        self, 
        message: str, 
        client_id: str, 
        max_tokens: int = 1000
    ) -> AsyncGenerator[Dict[str, Any], None]:
        """Stream chat response"""
        try:
            chain = self._create_rag_chain(client_id)
            
            # Stream response
            async for chunk in chain.astream({
                "input": message
            }):
                if "answer" in chunk:
                    yield {
                        "type": "content",
                        "content": chunk["answer"]
                    }
                elif "context" in chunk:
                    # Send sources info
                    docs = chunk["context"]
                    sources = []
                    for doc in docs[:3]:  # Top 3 sources
                        sources.append({
                            "content": doc.page_content[:150] + "...",
                            "metadata": doc.metadata
                        })
                    yield {
                        "type": "sources",
                        "sources": sources
                    }
            
            yield {"type": "done"}
            
        except Exception as e:
            logger.error(f"Stream chat error: {e}")
            yield {"type": "error", "error": str(e)}
    
    async def add_documents(
        self, 
        documents: List[Document], 
        client_id: str
    ) -> int:
        """Add documents to the RAG system"""
        try:
            collection_name = self._get_collection_name(client_id)
            
            # Split documents
            split_docs = self.text_splitter.split_documents(documents)
            
            # Add to ChromaDB
            vectorstore = Chroma(
                client=self.chroma_client,
                collection_name=collection_name,
                embedding_function=self.embeddings,
            )
            
            # Add documents
            vectorstore.add_documents(split_docs)
            
            # Clear caches for this client
            if client_id in self._retriever_cache:
                del self._retriever_cache[client_id]
            
            # Clear visualization cache
            cache_keys_to_remove = [k for k in self._viz_cache.keys() if k.startswith(f"{client_id}_")]
            for key in cache_keys_to_remove:
                del self._viz_cache[key]
            
            logger.info(f"Added {len(split_docs)} chunks for client {client_id}")
            return len(split_docs)
            
        except Exception as e:
            logger.error(f"Add documents error: {e}")
            raise
    
    async def delete_documents(self, client_id: str) -> bool:
        """Delete all documents for a client"""
        try:
            collection_name = self._get_collection_name(client_id)
            
            # Delete collection
            self.chroma_client.delete_collection(collection_name)
            
            # Clear caches
            if client_id in self._retriever_cache:
                del self._retriever_cache[client_id]
            
            # Clear visualization cache
            cache_keys_to_remove = [k for k in self._viz_cache.keys() if k.startswith(f"{client_id}_")]
            for key in cache_keys_to_remove:
                del self._viz_cache[key]
            
            logger.info(f"Deleted documents for client {client_id}")
            return True
            
        except Exception as e:
            logger.error(f"Delete documents error: {e}")
            raise
    
    async def get_document_count(self, client_id: str) -> int:
        """Get number of documents for a client"""
        try:
            collection_name = self._get_collection_name(client_id)
            collection = self.chroma_client.get_collection(collection_name)
            return collection.count()
        except Exception as e:
            logger.error(f"Get document count error: {e}")
            return 0
    
    def clear_cache(self, client_id: Optional[str] = None):
        """Clear visualization cache"""
        if client_id:
            cache_keys_to_remove = [k for k in self._viz_cache.keys() if k.startswith(f"{client_id}_")]
            for key in cache_keys_to_remove:
                del self._viz_cache[key]
        else:
            self._viz_cache.clear()


================================================================================
END: D:\QiEOS\qi_rag_modern\app\rag_engine.py
================================================================================


================================================================================
FILE: D:\QiEOS\qi_rag_private-repo\app.py
================================================================================

import json, os, socket
from pathlib import Path
from flask import Flask, jsonify

CFG = json.loads(Path("config.json").read_text())
app = Flask(__name__)

@app.get("/health")
def health():
    return jsonify({"status": "ok", "app": CFG["name"]})

@app.get("/")
def index():
    return jsonify({"hello": CFG["name"]})

def _pick_port():
    if CFG.get("port", 0):
        return CFG["port"]
    s = socket.socket()
    s.bind(("", 0))
    port = s.getsockname()[1]
    s.close()
    return port

if __name__ == "__main__":
    port = _pick_port()
    print(f"{CFG['name']} starting on http://{CFG['host']}:{port}")
    app.run(host=CFG["host"], port=port)


================================================================================
END: D:\QiEOS\qi_rag_private-repo\app.py
================================================================================


================================================================================
FILE: D:\QiEOS\qi_rag_private-repo\config.json
================================================================================

{
  "name": "qi_rag_private",
  "description": "Private RAG stack (demo stub).",
  "host": "127.0.0.1",
  "port": 0
}

================================================================================
END: D:\QiEOS\qi_rag_private-repo\config.json
================================================================================


================================================================================
FILE: D:\QiEOS\qi_rag_private-repo\docker-compose.yml
================================================================================

version: '3.9'

services:
  qdrant:
    image: qdrant/qdrant:v1.7.3
    restart: unless-stopped
    environment:
      QDRANT__SERVICE__HOST: 0.0.0.0
    volumes:
      - qdrant_data:/qdrant/storage
    ports:
      - "6333:6333"

  api:
    build:
      context: .
      dockerfile: Dockerfile
    restart: unless-stopped
    depends_on:
      - qdrant
    environment:
      - DATA_ROOT=${DATA_ROOT:-/data}
      - QDRANT_HOST=qdrant
      - QDRANT_PORT=6333
      - EMBEDDING_MODEL=${EMBEDDING_MODEL:-bge-small-en-v1.5}
      - OLLAMA_MODEL=${OLLAMA_MODEL:-llama3.1:8b}
      - TIER_COLLECTIONS=${TIER_COLLECTIONS:-UNCLASS:q_unclass,CLASSIFIED:q_classified,ULTRA:q_ultra,MEO:q_meo}
      - FOLDER_TIERS=${FOLDER_TIERS:-unclass:UNCLASS,classified:CLASSIFIED,ultra:ULTRA,meo:MEO}
      - TIER_POLICIES=${TIER_POLICIES:-"{\"UNCLASS\": true, \"CLASSIFIED\": true, \"ULTRA\": false, \"MEO\": false}"}
      - CLOUD_ENDPOINT=${CLOUD_ENDPOINT:-}
      - CHUNK_SIZE=${CHUNK_SIZE:-800}
      - CHUNK_OVERLAP=${CHUNK_OVERLAP:-100}
      - TOP_K=${TOP_K:-5}
    ports:
      - "8000:8000"
    volumes:
      - .:/app
      - ${DATA_ROOT:-./data}:${DATA_ROOT:-/data}
    command: ["uvicorn", "app.main:app", "--host", "0.0.0.0", "--port", "8000"]

  # Optional: Ollama service for local LLM inference.  Remove if using a remote LLM provider.
  ollama:
    image: ollama/ollama:0.1.16
    restart: unless-stopped
    ports:
      - "11434:11434"
    volumes:
      - ollama_data:/root/.ollama

volumes:
  qdrant_data:
  ollama_data:

================================================================================
END: D:\QiEOS\qi_rag_private-repo\docker-compose.yml
================================================================================


================================================================================
FILE: D:\QiEOS\qi_rag_private-repo\Dockerfile
================================================================================

FROM python:3.11-slim

# Install system dependencies for pdfminer and watchdog
RUN apt-get update && apt-get install -y --no-install-recommends \
        build-essential \
        python3-dev \
        libxml2-dev libxslt1-dev \
        && rm -rf /var/lib/apt/lists/*

WORKDIR /app

# Copy only the relevant files from the current package
COPY app ./app
COPY scripts ./scripts
COPY requirements.txt ./requirements.txt

RUN pip install --no-cache-dir -r requirements.txt

EXPOSE 8000

CMD ["uvicorn", "app.main:app", "--host", "0.0.0.0", "--port", "8000"]

================================================================================
END: D:\QiEOS\qi_rag_private-repo\Dockerfile
================================================================================


================================================================================
FILE: D:\QiEOS\qi_rag_private-repo\README.md
================================================================================

# Q Tiered RAG Stack (MVP)

This repository provides a **minimal viable product (MVP)** for a Retrieval‑Augmented Generation (RAG) system with support for multiple classification tiers.  You can ingest your personal or business documents into a vector database and query them via a chatbot while respecting classification boundaries.  Each tier can choose whether to sync to a cloud fallback node or remain local only.

The MVP is opinionated but deliberately simple: it runs locally with Docker, uses [Qdrant](https://qdrant.tech/) for embeddings storage and [FastAPI](https://fastapi.tiangolo.com/) to expose HTTP endpoints.  A folder watcher automatically ingests changed files.  You can extend it later to support user authentication, fancy UIs, or additional back‑ends.

## Features

- **Classification tiers** – Four built‑in tiers (`UNCLASS`, `CLASSIFIED`, `ULTRA`, `MEO`).  Files are routed to the appropriate Qdrant collection based on their folder name or front‑matter metadata.
- **Per‑tier policies** – Each tier declares whether it can fall back to a cloud node if the local node is unavailable.  By default `UNCLASS` and `CLASSIFIED` allow cloud fallback, while `ULTRA` and `MEO` are local‑only.
- **Local‑first retrieval** – Queries are answered from the local vector database first.  If the local node is unreachable for a given tier and fallback is allowed, the server proxies the request to a remote API defined in your `.env`.
- **Folder watcher** – A simple watcher monitors your data directories and triggers ingestion whenever files are created or modified.  It supports markdown, text and PDF files out of the box.
- **Environment driven configuration** – Configure collections, folder mapping, model names and cloud endpoint in a `.env` file.  An example file is provided.

## Getting Started

### 1. Install dependencies

```bash
git clone https://example.com/q_tier_rag.git
cd q_tier_rag

# create a virtualenv (optional)
python -m venv .venv
source .venv/bin/activate

pip install -r requirements.txt
```

Alternatively you can use Docker; see the `docker-compose.yml` at the root of the project.

### 2. Configure your environment

Copy `.env.example` to `.env` and adjust the values.  Important keys:

- `DATA_ROOT` – path to the directory containing per‑tier subfolders (e.g. `V:/data` on Windows or `/data` on Linux).  The watcher looks here.
- `QDRANT_HOST` & `QDRANT_PORT` – connection parameters for your local Qdrant instance.
- `TIER_COLLECTIONS` – mapping from tier name to Qdrant collection name.  Comma separated `tier:collection` entries.
- `FOLDER_TIERS` – mapping from folder name to tier.  For example `unclass:UNCLASS,classified:CLASSIFIED`.
- `CLOUD_ENDPOINT` – URL of your cloud fallback API; omit or leave empty if you do not have one.
- `TIER_POLICIES` – per‑tier JSON describing whether each tier permits cloud fallback.

### 3. Start Qdrant and the API server

To launch everything via Docker run:

```bash
docker compose up -d

# pull a model for Ollama if using local LLM (optional)
docker compose exec ollama ollama pull llama3.1:8b
```

If you prefer to run locally without Docker you must start Qdrant and then run:

```bash
uvicorn app.main:app --reload
```

### 4. Ingest your documents

Place files into subfolders under `DATA_ROOT` matching your tiers (e.g. `data/unclass`, `data/ultra`).  You can override the tier for a particular file by adding a YAML front‑matter block to a markdown file:

```md
---
title: Project Plan
classification: CLASSIFIED
---
This note is classified.
```

Run the ingestion script to index existing files:

```bash
python scripts/ingest.py path/to/folder
```

Or start the watcher to automatically ingest new/updated files:

```bash
python scripts/watch_folder.py
```

### 5. Ask questions

Send a POST request to the `/chat` endpoint with a `question` parameter.  Optionally include a comma‑separated list of tiers to search:

```bash
curl -X POST http://localhost:8000/chat -d "question=What is the project plan?&tiers=UNCLASS,CLASSIFIED"
```

The API will respond with an answer generated by the LLM along with context documents and their tiers.  If the local node cannot answer for some tiers and fallback is allowed, the server will call the configured `CLOUD_ENDPOINT`.

## Folder Layout

```
q_tier_rag/
├── app/
│   ├── main.py          # FastAPI application exposing /ingest and /chat endpoints
│   ├── rag.py           # Helper functions for embedding and retrieving text
│   ├── llm.py           # Abstraction to call a local LLM via Ollama or remote API
│   └── utils.py         # Classification and parsing utilities
├── scripts/
│   ├── ingest.py        # CLI script to ingest an entire directory
│   └── watch_folder.py  # Folder watcher that triggers ingestion on file changes
├── .env.example         # Example environment configuration
├── docker-compose.yml   # Bring up Qdrant, Ollama and the API server
├── requirements.txt     # Python dependencies
└── README.md            # This file
```

## Extending

- **Cloud fallback** – The current implementation supports proxying to a single remote API.  Add authentication or load balancing as needed.
- **Authentication** – Protect your endpoints using API keys, OAuth, Supabase Auth or another identity provider.  Modify `app/main.py` to enforce authentication and issue per‑tier claims.
- **Additional tiers** – Add more tiers by updating `TIER_COLLECTIONS`, `FOLDER_TIERS` and `TIER_POLICIES` in your `.env`.
- **Embedding models** – Change the `EMBEDDING_MODEL` environment variable to point at a different SentenceTransformer (e.g. `all-MiniLM-L6-v2`).
- **Chunking** – Adjust `CHUNK_SIZE` and `CHUNK_OVERLAP` in `.env` to tune how text is split prior to embedding.

## License

This MVP is provided as-is under the MIT license.  Use at your own risk and feel free to adapt it for personal or commercial use.

================================================================================
END: D:\QiEOS\qi_rag_private-repo\README.md
================================================================================


================================================================================
FILE: D:\QiEOS\qi_rag_private-repo\requirements.txt
================================================================================

# Core framework
fastapi==0.110.0
uvicorn[standard]==0.27.1

# Vector storage
qdrant-client==1.9.1

# Embedding
sentence-transformers==2.2.2

# File watching
watchdog==4.0.0

# Utilities
python-dotenv==1.0.1
requests==2.31.0
PyYAML==6.0.1

# PDF support (optional)
pdfminer.six==20221105

# Optional: if using Ollama for local LLM
# pip install ollama

================================================================================
END: D:\QiEOS\qi_rag_private-repo\requirements.txt
================================================================================


================================================================================
FILE: D:\QiEOS\qi_rag_private-repo\run.ps1
================================================================================

#Requires -Version 5.0
if (Test-Path ".\.venv\Scripts\Activate.ps1") {
  . .\.venv\Scripts\Activate.ps1
}
python .\app.py


================================================================================
END: D:\QiEOS\qi_rag_private-repo\run.ps1
================================================================================


================================================================================
FILE: D:\QiEOS\qi_rag_private-repo\run.sh
================================================================================

#!/usr/bin/env bash
set -e
if [ -d ".venv" ]; then
  . .venv/bin/activate
fi
python app.py


================================================================================
END: D:\QiEOS\qi_rag_private-repo\run.sh
================================================================================


================================================================================
FILE: D:\QiEOS\qi_rag_private-repo\start_simple.py
================================================================================

#!/usr/bin/env python3
"""
Simple startup script for testing the RAG application locally.
This script sets up basic environment variables and starts the FastAPI server.
"""

import os
import sys
from pathlib import Path

# Add the app directory to the Python path
app_dir = Path(__file__).parent / "app"
sys.path.insert(0, str(app_dir))

# Set basic environment variables if not already set
os.environ.setdefault("DATA_ROOT", str(Path(__file__).parent / "data"))
os.environ.setdefault("QDRANT_HOST", "localhost")
os.environ.setdefault("QDRANT_PORT", "6333")
os.environ.setdefault("EMBEDDING_MODEL", "bge-small-en-v1.5")
os.environ.setdefault("OLLAMA_MODEL", "llama3.1:8b")
os.environ.setdefault("TIER_COLLECTIONS", "UNCLASS:q_unclass,CLASSIFIED:q_classified")
os.environ.setdefault("FOLDER_TIERS", "unclass:UNCLASS,classified:CLASSIFIED")
os.environ.setdefault("TIER_POLICIES", '{"UNCLASS": true, "CLASSIFIED": true}')
os.environ.setdefault("CHUNK_SIZE", "800")
os.environ.setdefault("CHUNK_OVERLAP", "100")
os.environ.setdefault("TOP_K", "5")
os.environ.setdefault("CLOUD_REQUEST_TIMEOUT", "30")

# Create data directory if it doesn't exist
data_dir = Path(os.environ["DATA_ROOT"])
data_dir.mkdir(exist_ok=True)

if __name__ == "__main__":
    print("Starting RAG application in simple mode...")
    print(f"Data directory: {data_dir}")
    print("Note: This requires Qdrant to be running on localhost:6333")
    print("You can start Qdrant with: docker run -p 6333:6333 qdrant/qdrant")
    print()
    
    try:
        import uvicorn
        from main import app
        
        uvicorn.run(app, host="127.0.0.1", port=8000, log_level="info")
    except ImportError as e:
        print(f"Missing dependency: {e}")
        print("Please install requirements: pip install -r requirements.txt")
    except Exception as e:
        print(f"Failed to start application: {e}")
        print("Make sure Qdrant is running and all dependencies are installed.")


================================================================================
END: D:\QiEOS\qi_rag_private-repo\start_simple.py
================================================================================


================================================================================
FILE: D:\QiEOS\qi_rag_private-repo\app\llm.py
================================================================================

"""LLM abstraction layer.

This module encapsulates calls to a local language model (via Ollama) or to a
remote provider.  It exposes a simple `generate_answer` function which
constructs a prompt from the user question and retrieved context.
"""

from __future__ import annotations

import os
import requests
from typing import List


def build_prompt(question: str, contexts: List[str]) -> str:
    """Compose a prompt for the language model.

    The prompt concatenates the retrieved contexts and asks the model to
    answer the question based solely on these documents.  If you change
    this function please update your retrieval logic accordingly.
    """
    context_str = "\n\n".join(contexts)
    prompt = (
        "You are an assistant with access to the following context documents:\n\n"
        f"{context_str}\n\n"
        "Answer the question using only the provided documents. "
        "Cite the document index when relevant (e.g. [1], [2]).\n\n"
        f"Question: {question}\nAnswer:"
    )
    return prompt


def call_ollama(prompt: str, model: str) -> str:
    """Send a prompt to a local Ollama server and return the generated text.

    Requires the `ollama/ollama` Docker container to be running with port
    11434 exposed.  See the project README for details.
    """
    url = "http://localhost:11434/api/generate"
    payload = {"model": model, "prompt": prompt, "stream": False}
    try:
        resp = requests.post(url, json=payload, timeout=60)
        resp.raise_for_status()
        data = resp.json()
        response = data.get("response", "").strip()
        if not response:
            raise RuntimeError("Empty response from Ollama")
        return response
    except requests.exceptions.Timeout:
        raise RuntimeError(f"Ollama request timed out after 60 seconds for model {model}")
    except requests.exceptions.ConnectionError:
        raise RuntimeError(f"Failed to connect to Ollama server at {url}. Is Ollama running?")
    except requests.exceptions.HTTPError as e:
        raise RuntimeError(f"Ollama HTTP error: {e.response.status_code} - {e.response.text}")
    except Exception as exc:
        raise RuntimeError(f"Failed to call Ollama with model {model}: {exc}")


def generate_answer(question: str, contexts: List[str]) -> str:
    """Generate an answer to a question given a list of context passages.

    Depending on your environment variables this function will either call a
    local Ollama server or another provider.  For the MVP we support only
    the local Ollama pathway.
    """
    prompt = build_prompt(question, contexts)
    model = os.getenv("OLLAMA_MODEL", "llama3.1:8b")
    # In a more complete implementation you could branch here based on
    # LLM_PROVIDER environment variables or similar.
    return call_ollama(prompt, model)

================================================================================
END: D:\QiEOS\qi_rag_private-repo\app\llm.py
================================================================================


================================================================================
FILE: D:\QiEOS\qi_rag_private-repo\app\main.py
================================================================================

"""FastAPI application for the tiered RAG backend."""

from __future__ import annotations

import json
import os
from pathlib import Path
from typing import List, Optional

import requests
from fastapi import FastAPI, HTTPException, Query
from pydantic import BaseModel

from .llm import generate_answer
from .rag import RagEngine
from .utils import load_tier_policies

# Instantiate the engine once at startup
engine = RagEngine()
app = FastAPI(title="Tiered RAG API", version="0.1.0")

# Load tier policies and cloud endpoint from environment
tier_policies = load_tier_policies()
cloud_endpoint = os.getenv("CLOUD_ENDPOINT", "").strip() or None


class IngestRequest(BaseModel):
    path: str


@app.post("/ingest")
def ingest(req: IngestRequest) -> dict:
    """Ingest a single file specified by its path relative to DATA_ROOT."""
    # Validate path to prevent path traversal attacks
    if ".." in req.path or req.path.startswith("/") or req.path.startswith("\\"):
        raise HTTPException(status_code=400, detail="Invalid path: path traversal not allowed")
    
    # Resolve path relative to data root
    full_path = Path(engine.data_root) / req.path
    try:
        # Ensure the resolved path is within the data root directory
        full_path = full_path.resolve()
        if not str(full_path).startswith(str(engine.data_root.resolve())):
            raise HTTPException(status_code=400, detail="Invalid path: outside data root")
    except (ValueError, RuntimeError):
        raise HTTPException(status_code=400, detail="Invalid path")
    
    if not full_path.exists() or not full_path.is_file():
        raise HTTPException(status_code=404, detail=f"File not found: {full_path}")
    try:
        engine.upsert_document(full_path)
    except Exception as exc:
        raise HTTPException(status_code=500, detail=str(exc))
    return {"status": "ok", "path": str(full_path)}


class ChatResponse(BaseModel):
    answer: str
    sources: List[dict]
    fallback_used: bool


@app.post("/chat", response_model=ChatResponse)
def chat(question: str = Query(...), tiers: Optional[str] = Query(None)) -> ChatResponse:
    """Answer a question using content from the specified classification tiers."""
    # Validate input
    if not question or not question.strip():
        raise HTTPException(status_code=400, detail="Question cannot be empty")
    
    if len(question) > 10000:  # Reasonable limit for question length
        raise HTTPException(status_code=400, detail="Question too long (max 10000 characters)")
    
    # Determine which tiers to search
    if tiers:
        requested_tiers = [t.strip().upper() for t in tiers.split(",") if t.strip()]
    else:
        # Default to UNCLASS and CLASSIFIED
        requested_tiers = ["UNCLASS", "CLASSIFIED"]

    # Query local collections
    results = engine.query(question, requested_tiers)
    # Determine which tiers returned nothing and allow fallback
    missing_tiers = set(requested_tiers) - {res[2].get("tier") for res in results}
    fallback_used = False
    remote_answer: Optional[str] = None

    if missing_tiers and cloud_endpoint:
        # Check policy: we only fall back for tiers whose policy is true
        allowed_tiers = [t for t in missing_tiers if tier_policies.get(t, False)]
        if allowed_tiers:
            # Proxy the query to the remote endpoint
            try:
                timeout = int(os.getenv("CLOUD_REQUEST_TIMEOUT", "30"))
                resp = requests.post(
                    cloud_endpoint.rstrip("/") + "/chat",
                    params={"question": question, "tiers": ",".join(allowed_tiers)},
                    timeout=timeout,
                )
                resp.raise_for_status()
                data = resp.json()
                remote_answer = data.get("answer") or None
                fallback_used = True
            except Exception:
                remote_answer = None

    # Compose context texts for the local answer
    contexts = [res[0] for res in results]
    if contexts:
        answer = generate_answer(question, contexts)
    elif remote_answer:
        answer = remote_answer
    else:
        answer = "No relevant information available."

    # Prepare sources list
    sources = [
        {
            "text": res[0],
            "score": res[1],
            "tier": res[2].get("tier"),
            "path": res[2].get("path"),
        }
        for res in results
    ]

    return ChatResponse(answer=answer, sources=sources, fallback_used=fallback_used)


@app.get("/")
def root() -> dict:
    return {"message": "Tiered RAG API is running."}

================================================================================
END: D:\QiEOS\qi_rag_private-repo\app\main.py
================================================================================


================================================================================
FILE: D:\QiEOS\qi_rag_private-repo\app\rag.py
================================================================================

"""Core retrieval and ingestion logic.

This module provides helper functions to create a Qdrant client, split
documents into chunks, generate embeddings and perform similarity search.
"""

from __future__ import annotations

import logging
import os
import uuid
from pathlib import Path
from typing import Dict, Iterable, List, Optional, Tuple

from qdrant_client import QdrantClient
from qdrant_client.http import models as qmodels
from sentence_transformers import SentenceTransformer

from .utils import (
    determine_tier_for_file,
    load_env_mapping,
    parse_front_matter,
    read_pdf,
    read_text_file,
)

logger = logging.getLogger(__name__)


class RagEngine:
    """Encapsulates embedding, storage and retrieval operations."""

    def __init__(self) -> None:
        # Load environment variables
        self.data_root = Path(os.getenv("DATA_ROOT", "."))
        self.qdrant_host = os.getenv("QDRANT_HOST", "localhost")
        self.qdrant_port = int(os.getenv("QDRANT_PORT", "6333"))
        self.embedding_model_name = os.getenv("EMBEDDING_MODEL", "bge-small-en-v1.5")
        self.chunk_size = int(os.getenv("CHUNK_SIZE", "800"))
        self.chunk_overlap = int(os.getenv("CHUNK_OVERLAP", "100"))
        self.top_k = int(os.getenv("TOP_K", "5"))

        # Load mapping from env
        self.tier_collections = load_env_mapping("TIER_COLLECTIONS")
        self.folder_tiers = load_env_mapping("FOLDER_TIERS")

        # Initialise components
        self._client = QdrantClient(host=self.qdrant_host, port=self.qdrant_port)
        self._embedder: Optional[SentenceTransformer] = None

    def embedder(self) -> SentenceTransformer:
        """Lazy load the embedding model."""
        if self._embedder is None:
            self._embedder = SentenceTransformer(self.embedding_model_name)
        return self._embedder

    # Document handling
    def load_document(self, path: Path) -> Tuple[str, Dict[str, str]]:
        """Load the contents of a document and return (text, metadata)."""
        if path.suffix.lower() == ".pdf":
            text = read_pdf(path)
        else:
            text = read_text_file(path)
        # Extract front‑matter if present
        meta, body = parse_front_matter(text) if path.suffix.lower() in {".md", ".markdown"} else ({}, text)
        return body, meta or {}

    def split_text(self, text: str) -> List[str]:
        """Split a document into overlapping chunks.

        We perform a naive word‑based segmentation using whitespace to approximate
        tokens.  Each chunk contains at most `chunk_size` words with
        `chunk_overlap` words overlap with the previous chunk.  You may
        substitute a more sophisticated tokeniser here.
        """
        words = text.split()
        if not words:
            return []
        chunks: List[str] = []
        step = self.chunk_size - self.chunk_overlap
        for i in range(0, len(words), step):
            chunk_words = words[i : i + self.chunk_size]
            chunk = " ".join(chunk_words)
            chunks.append(chunk)
            if i + self.chunk_size >= len(words):
                break
        return chunks

    def ensure_collection(self, collection_name: str, vector_size: int) -> None:
        """Create a collection if it does not already exist."""
        try:
            self._client.get_collection(collection_name)
        except Exception:
            # Use default configuration: HNSW + cosine distance
            self._client.create_collection(
                collection_name=collection_name,
                vectors_config=qmodels.VectorParams(size=vector_size, distance=qmodels.Distance.COSINE),
            )

    def upsert_document(self, path: Path) -> None:
        """Ingest a single file into the appropriate tier collection."""
        try:
            logger.info(f"Starting ingestion of document: {path}")
            body, meta = self.load_document(path)
            tier = determine_tier_for_file(path, self.folder_tiers)
            collection = self.tier_collections.get(tier, f"q_{tier.lower()}")

            # Split into chunks and embed
            chunks = self.split_text(body)
            if not chunks:
                logger.warning(f"No chunks generated for document: {path}")
                return
            
            logger.info(f"Generated {len(chunks)} chunks for document: {path}")
            embeddings = self.embedder().encode(chunks).tolist()
            
            # Ensure collection exists
            self.ensure_collection(collection, len(embeddings[0]))
            
            points: List[qmodels.PointStruct] = []
            for idx, vector in enumerate(embeddings):
                payload = {
                    "path": str(path),
                    "tier": tier,
                    "metadata": meta,
                    "chunk_index": idx,
                }
                points.append(
                    qmodels.PointStruct(
                        id=str(uuid.uuid4()),
                        vector=vector,
                        payload=payload,
                    )
                )
            
            # Upsert points
            self._client.upsert(collection_name=collection, points=points)
            logger.info(f"Successfully ingested document: {path} into collection: {collection}")
            
        except Exception as e:
            logger.error(f"Failed to ingest document {path}: {str(e)}")
            raise

    def query(self, question: str, tiers: List[str]) -> List[Tuple[str, float, Dict[str, str]]]:
        """Search for relevant chunks across multiple tiers.

        Returns a list of tuples `(text, score, payload)`.  The text is the chunk
        content, score is the similarity score (the higher the better), and
        payload contains metadata such as the original file path and tier.
        """
        # Embed the question
        q_emb = self.embedder().encode([question]).tolist()[0]
        results: List[Tuple[str, float, Dict[str, str]]] = []
        for tier in tiers:
            collection = self.tier_collections.get(tier, f"q_{tier.lower()}")
            try:
                search_res = self._client.search(collection, q_emb, limit=self.top_k)
            except Exception:
                continue
            for res in search_res:
                payload = res.payload or {}
                # We need to fetch the actual chunk text.  Qdrant stores only the
                # embedding and payload; to reconstruct the text we must read
                # the document and split again.  For MVP we include the chunk
                # index in the payload and re‑compute the split.
                path = Path(payload.get("path", ""))
                idx = payload.get("chunk_index", 0)
                try:
                    text, _ = self.load_document(path)
                    chunk = self.split_text(text)[idx]
                except Exception:
                    chunk = ""
                results.append((chunk, res.score, payload))
        # Sort results by descending score
        results.sort(key=lambda x: x[1], reverse=True)
        return results

================================================================================
END: D:\QiEOS\qi_rag_private-repo\app\rag.py
================================================================================


================================================================================
FILE: D:\QiEOS\qi_rag_private-repo\app\utils.py
================================================================================

"""Utility functions for file parsing and classification.

This module centralises small helpers used by the ingestion and retrieval pipeline.
"""

from __future__ import annotations

import json
import os
import re
from pathlib import Path
from typing import Dict, Optional, Tuple

import yaml


def parse_front_matter(text: str) -> Tuple[Dict[str, str], str]:
    """Extract YAML front‑matter from a markdown document.

    Returns a tuple of (metadata, remainder) where metadata is a dict parsed
    from the front‑matter and remainder is the document content without the
    front‑matter block.  If no front‑matter is found the metadata will be
    empty and the original text returned.
    """
    if text.startswith("---\n"):
        end = text.find("\n---", 4)
        if end != -1:
            fm = text[4:end]
            try:
                data = yaml.safe_load(fm) or {}
            except Exception:
                data = {}
            remainder = text[end + 4 :]
            return data, remainder
    return {}, text


def read_text_file(path: Path) -> str:
    """Read a text or markdown file and return its contents as a string."""
    return path.read_text(encoding="utf-8", errors="ignore")


def read_pdf(path: Path) -> str:
    """Extract text from a PDF file using pdfminer.six.

    If pdfminer is not installed this function will raise ImportError.
    """
    from pdfminer.high_level import extract_text  # type: ignore

    try:
        return extract_text(str(path))
    except Exception as e:
        raise RuntimeError(f"Failed to extract text from PDF {path}: {str(e)}")


def load_env_mapping(var: str) -> Dict[str, str]:
    """Parse a comma‑separated mapping from an environment variable.

    Example: "unclass:UNCLASS,classified:CLASSIFIED" -> {"unclass": "UNCLASS", ...}
    """
    mapping_str = os.getenv(var) or ""
    result: Dict[str, str] = {}
    for entry in mapping_str.split(","):
        if not entry:
            continue
        parts = entry.split(":", 1)
        if len(parts) == 2:
            key, value = parts[0].strip(), parts[1].strip()
            result[key] = value
    return result


def determine_tier_from_path(path: Path, folder_tiers: Dict[str, str]) -> Optional[str]:
    """Determine the classification tier for a file based on its parent folder.

    Looks at each part of the path relative to the data root.  Returns the tier
    name if found in the folder_tiers mapping, else None.
    """
    for part in path.parts:
        if part in folder_tiers:
            return folder_tiers[part]
    return None


def determine_tier_for_file(path: Path, folder_tiers: Dict[str, str]) -> str:
    """Determine the classification tier for a file.

    The tier is determined in the following order:
      1. YAML front‑matter field `classification` in a markdown file.
      2. Folder name mapping (e.g. `data/unclass`).
      3. Defaults to UNCLASS.
    """
    tier = None
    # Only attempt front‑matter parsing for markdown files
    if path.suffix.lower() in {".md", ".markdown"}:
        try:
            meta, _ = parse_front_matter(read_text_file(path))
            if isinstance(meta, dict) and meta.get("classification"):
                tier = str(meta["classification"]).strip().upper()
        except Exception:
            tier = None

    if not tier:
        tier = determine_tier_from_path(path, folder_tiers)

    return tier or "UNCLASS"


def load_tier_policies() -> Dict[str, bool]:
    """Load per‑tier fallback policy from the TIER_POLICIES environment variable."""
    raw = os.getenv("TIER_POLICIES", "{}")
    try:
        policies = json.loads(raw)
        return {str(k): bool(v) for k, v in policies.items()}
    except Exception:
        return {}

================================================================================
END: D:\QiEOS\qi_rag_private-repo\app\utils.py
================================================================================


================================================================================
FILE: D:\QiEOS\qi_rag_private-repo\scripts\ingest.py
================================================================================

#!/usr/bin/env python
"""CLI tool to ingest documents from a folder.

Usage:
    python scripts/ingest.py /path/to/file_or_folder

The script walks through the provided path.  If a file is given it is ingested
directly; if a directory is given all files within are ingested recursively.

The ingestion honours classification tiers defined in your environment.
"""

from __future__ import annotations

import argparse
from pathlib import Path

from app.rag import RagEngine


def ingest_path(engine: RagEngine, path: Path) -> None:
    if path.is_dir():
        for item in path.rglob("*"):
            if item.is_file():
                print(f"Ingesting {item}")
                engine.upsert_document(item)
    elif path.is_file():
        print(f"Ingesting {path}")
        engine.upsert_document(path)
    else:
        print(f"Skipping unknown path: {path}")


def main() -> None:
    parser = argparse.ArgumentParser(description="Ingest documents into Qdrant.")
    parser.add_argument("paths", nargs="+", type=Path, help="Files or directories to ingest")
    args = parser.parse_args()

    engine = RagEngine()
    for path in args.paths:
        ingest_path(engine, path)


if __name__ == "__main__":
    main()

================================================================================
END: D:\QiEOS\qi_rag_private-repo\scripts\ingest.py
================================================================================


================================================================================
FILE: D:\QiEOS\qi_rag_private-repo\scripts\rclone_template.sh
================================================================================

#!/usr/bin/env bash
# Example rclone sync script for the tiered RAG stack.
#
# This script demonstrates how you could synchronise UNCLASS and CLASSIFIED
# documents and snapshots to an encrypted remote (e.g. Google Drive).  It
# assumes you have configured encrypted remotes named `unclass_crypt` and
# `classified_crypt` via `rclone config`.  See the README for details.

set -euo pipefail

# Location of your data and snapshot folders.  Adjust to match your DATA_ROOT
DATA_ROOT="${DATA_ROOT:-./data}"
SNAPSHOT_ROOT="${SNAPSHOT_ROOT:-./snapshots}"

echo "Syncing UNCLASS documents…"
rclone sync "$DATA_ROOT/unclass" unclass_crypt:data
echo "Syncing UNCLASS snapshots…"
rclone sync "$SNAPSHOT_ROOT/q_unclass" unclass_crypt:snapshots

echo "Syncing CLASSIFIED documents…"
rclone sync "$DATA_ROOT/classified" classified_crypt:data
echo "Syncing CLASSIFIED snapshots…"
rclone sync "$SNAPSHOT_ROOT/q_classified" classified_crypt:snapshots

echo "Sync complete.  ULTRA and MEO tiers are intentionally excluded."

================================================================================
END: D:\QiEOS\qi_rag_private-repo\scripts\rclone_template.sh
================================================================================


================================================================================
FILE: D:\QiEOS\qi_rag_private-repo\scripts\watch_folder.py
================================================================================

#!/usr/bin/env python
"""Watch a directory tree and ingest documents on changes.

This script uses watchdog to monitor the directory specified by the `DATA_ROOT`
environment variable.  When a file is created or modified it will be
ingested into the appropriate Qdrant collection.

Run this script in a long‑running process alongside your API server.
"""

from __future__ import annotations

import os
import threading
import time
from pathlib import Path
from typing import Optional

from watchdog.events import FileSystemEventHandler
from watchdog.observers import Observer

from app.rag import RagEngine


class IngestionHandler(FileSystemEventHandler):
    def __init__(self, engine: RagEngine, data_root: Path) -> None:
        super().__init__()
        self.engine = engine
        self.data_root = data_root

    def on_created(self, event):
        if not event.is_directory:
            self.handle(Path(event.src_path))

    def on_modified(self, event):
        if not event.is_directory:
            self.handle(Path(event.src_path))

    def handle(self, path: Path) -> None:
        # Only process files under data_root
        try:
            path.relative_to(self.data_root)
        except ValueError:
            return
        try:
            print(f"[watcher] ingesting {path}")
            self.engine.upsert_document(path)
        except Exception as exc:
            print(f"[watcher] failed to ingest {path}: {exc}")


def main() -> None:
    data_root = Path(os.getenv("DATA_ROOT", ".")).resolve()
    print(f"Watching {data_root}")
    engine = RagEngine()
    event_handler = IngestionHandler(engine, data_root)
    observer = Observer()
    observer.schedule(event_handler, str(data_root), recursive=True)
    observer.start()
    try:
        while True:
            time.sleep(1)
    except KeyboardInterrupt:
        observer.stop()
    observer.join()


if __name__ == "__main__":
    main()

================================================================================
END: D:\QiEOS\qi_rag_private-repo\scripts\watch_folder.py
================================================================================


================================================================================
FILE: D:\QiEOS\scripts\bootstrap_venvs.ps1
================================================================================

<#!
# Create Python virtual environments for the cockpit and each miniapp.
#
# This script assumes you have Python installed and available in the PATH. It
# iterates over the cockpit and each miniapp directory and creates a `.venv`
# folder if one does not exist. It then installs any dependencies from
# `requirements.txt`.
#>  

$RootDir = (Get-Item -Path $PSScriptRoot).Parent.FullName

function Create-Venv {
    param([string]$Dir)
    Write-Host "Creating venv in $Dir/.venv"
    python -m venv "$Dir/.venv"
    & "$Dir/.venv/Scripts/activate.ps1"
    if (Test-Path "$Dir/requirements.txt") {
        pip install --upgrade pip | Out-Null
        pip install -r "$Dir/requirements.txt" | Out-Null
    }
    & "$Env:PSHOME\..\Scripts\deactivate"
}

# Cockpit
Create-Venv "$RootDir\cockpit"

# Miniapps
Get-ChildItem -Path "$RootDir\miniapps" -Directory | ForEach-Object {
    Create-Venv $_.FullName
}

Write-Host "Virtual environments created."

================================================================================
END: D:\QiEOS\scripts\bootstrap_venvs.ps1
================================================================================


================================================================================
FILE: D:\QiEOS\scripts\bootstrap_venvs.sh
================================================================================

#!/usr/bin/env bash
# Create Python virtual environments for the cockpit and each miniapp.
#
# This script iterates over the cockpit and each miniapp directory and
# initializes a virtual environment in a `.venv` subfolder if one does
# not already exist. It then installs the dependencies listed in
# `requirements.txt` (if present) into the environment.

set -euo pipefail

ROOT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")/.." && pwd)"

create_venv() {
  local dir=$1
  echo "Creating venv in $dir/.venv"
  python -m venv "$dir/.venv"
  source "$dir/.venv/bin/activate"
  if [[ -f "$dir/requirements.txt" ]]; then
    pip install --upgrade pip >/dev/null
    pip install -r "$dir/requirements.txt"
  fi
  deactivate
}

# Create venv for cockpit
create_venv "$ROOT_DIR/cockpit"

# Create venvs for each miniapp
for app_dir in "$ROOT_DIR"/miniapps/*; do
  if [[ -d "$app_dir" ]]; then
    create_venv "$app_dir"
  fi
done

echo "Virtual environments created."

================================================================================
END: D:\QiEOS\scripts\bootstrap_venvs.sh
================================================================================


================================================================================
FILE: D:\QiEOS\scripts\run_miniapp.ps1
================================================================================

#!/usr/bin/env pwsh
<#
.SYNOPSIS
    Run a miniapp from the root directory.

.DESCRIPTION
    This script allows you to run any miniapp from the root directory without
    having to navigate to the specific miniapp directory.

.PARAMETER AppName
    The name of the miniapp to run (e.g., "qivect-dropbox", "qi_rag_private")

.EXAMPLE
    .\scripts\run_miniapp.ps1 -AppName "qivect-dropbox"
#>

param(
    [Parameter(Mandatory=$true)]
    [string]$AppName
)

$RootDir = (Get-Item -Path $PSScriptRoot).Parent.FullName
$AppDir = Join-Path -Path $RootDir -ChildPath "miniapps" -AdditionalChildPath $AppName

if (-not (Test-Path $AppDir)) {
    Write-Error "Miniapp '$AppName' not found in $AppDir"
    Write-Host "Available miniapps:"
    Get-ChildItem -Path (Join-Path -Path $RootDir -ChildPath "miniapps") -Directory | ForEach-Object {
        Write-Host "  - $($_.Name)"
    }
    exit 1
}

$AppPy = Join-Path -Path $AppDir -ChildPath "app.py"
if (-not (Test-Path $AppPy)) {
    Write-Error "app.py not found in $AppDir"
    exit 1
}

Write-Host "Starting $AppName..."
Write-Host "Working directory: $AppDir"
Write-Host ""

# Change to the app directory and run it
Push-Location $AppDir
try {
    & python app.py
}
finally {
    Pop-Location
}


================================================================================
END: D:\QiEOS\scripts\run_miniapp.ps1
================================================================================


================================================================================
FILE: D:\QiEOS\scripts\run_miniapp.sh
================================================================================

#!/usr/bin/env bash
# Run a miniapp from the root directory.

set -euo pipefail

# Get the root directory
ROOT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")/.." && pwd)"

# Check if app name is provided
if [ $# -eq 0 ]; then
    echo "Usage: $0 <app-name>"
    echo "Available miniapps:"
    for app_dir in "$ROOT_DIR"/miniapps/*; do
        if [ -d "$app_dir" ]; then
            echo "  - $(basename "$app_dir")"
        fi
    done
    exit 1
fi

APP_NAME="$1"
APP_DIR="$ROOT_DIR/miniapps/$APP_NAME"

# Check if app directory exists
if [ ! -d "$APP_DIR" ]; then
    echo "Error: Miniapp '$APP_NAME' not found in $APP_DIR"
    echo "Available miniapps:"
    for app_dir in "$ROOT_DIR"/miniapps/*; do
        if [ -d "$app_dir" ]; then
            echo "  - $(basename "$app_dir")"
        fi
    done
    exit 1
fi

# Check if app.py exists
if [ ! -f "$APP_DIR/app.py" ]; then
    echo "Error: app.py not found in $APP_DIR"
    exit 1
fi

echo "Starting $APP_NAME..."
echo "Working directory: $APP_DIR"
echo ""

# Change to the app directory and run it
cd "$APP_DIR"
python app.py


================================================================================
END: D:\QiEOS\scripts\run_miniapp.sh
================================================================================


================================================================================
FILE: D:\QiEOS\shared\__init__.py
================================================================================

"""Shared utilities for the Qi miniapps ecosystem.

This package exposes helpers that can be reused by both the cockpit and
individual miniapps. To keep the surface area small, only import what you
need from the submodules (for example, ``from shared.process_utils import start_subprocess``).
"""

from .process_utils import start_subprocess, stream_process_output

__all__ = [
    "start_subprocess",
    "stream_process_output",
]

================================================================================
END: D:\QiEOS\shared\__init__.py
================================================================================


================================================================================
FILE: D:\QiEOS\shared\config_schema.py
================================================================================

from dataclasses import dataclass
from typing import Optional

@dataclass
class MiniAppConfig:
    name: str
    description: Optional[str] = None
    host: str = "127.0.0.1"
    port: int = 0  # 0 => auto-pick


================================================================================
END: D:\QiEOS\shared\config_schema.py
================================================================================


================================================================================
FILE: D:\QiEOS\shared\logging_utils.py
================================================================================

import logging

def setup_logger(name: str) -> logging.Logger:
    logger = logging.getLogger(name)
    if not logger.handlers:
        logger.setLevel(logging.INFO)
        ch = logging.StreamHandler()
        fmt = logging.Formatter('%(asctime)s | %(levelname)s | %(name)s | %(message)s')
        ch.setFormatter(fmt)
        logger.addHandler(ch)
    return logger


================================================================================
END: D:\QiEOS\shared\logging_utils.py
================================================================================


================================================================================
FILE: D:\QiEOS\shared\process_utils.py
================================================================================

"""Helpers for spawning and streaming subprocesses.

These functions are used by the cockpit to launch miniapps as separate
processes and forward their output back to the user. They can also be
imported by miniapps themselves if they need to run other commands.

All subprocesses are created with ``text=True`` and unbuffered
standard output to ensure that log messages appear immediately.
"""
from __future__ import annotations

import os
import subprocess
import threading
import queue
from typing import Iterator, Iterable, Tuple, Optional


def start_subprocess(cwd: str, entry: str, python_executable: Optional[str] = None) -> subprocess.Popen:
    """Launch a Python subprocess for the given entry point in a working directory.

    Parameters
    ----------
    cwd: str
        The working directory where the entry script resides.
    entry: str
        Path to the Python script relative to ``cwd`` that should be executed.
    python_executable: Optional[str]
        Absolute path to the Python interpreter to use. If ``None`` the
        interpreter from the current process (``sys.executable``) is used.

    Returns
    -------
    subprocess.Popen
        A handle to the started process. The caller is responsible for
        terminating it when appropriate.
    """
    import sys
    exe = python_executable or sys.executable
    cmd = [exe, entry]
    return subprocess.Popen(
        cmd,
        cwd=cwd,
        stdout=subprocess.PIPE,
        stderr=subprocess.STDOUT,
        text=True,
        bufsize=1,
        universal_newlines=True,
    )


def stream_process_output(proc: subprocess.Popen) -> Iterator[str]:
    """Yield lines of output from a running subprocess.

    The generator will block until the process terminates. To stop
    streaming early call ``proc.terminate()`` from another thread.

    Parameters
    ----------
    proc: subprocess.Popen
        The process whose output should be consumed.

    Yields
    ------
    str
        Lines of text output by the process.
    """
    if proc.stdout is None:
        return
    
    try:
        # Iterate over lines as they become available.
        for line in proc.stdout:
            yield line.rstrip("\n")
    except Exception as e:
        # Ensure process is terminated on error
        try:
            proc.terminate()
            proc.wait(timeout=5)
        except subprocess.TimeoutExpired:
            proc.kill()
            proc.wait()
        except Exception:
            pass  # Process may already be terminated
        raise RuntimeError(f"Error reading subprocess output: {e}")

================================================================================
END: D:\QiEOS\shared\process_utils.py
================================================================================


================================================================================
FILE: D:\QiEOS\src\components\CalendlyEmbed.tsx
================================================================================

import React from "react";

interface CalendlyEmbedProps {
  url: string;
  className?: string;
}

export default function CalendlyEmbed({
  url,
  className = "",
}: CalendlyEmbedProps) {
  return (
    <div
      className={`w-full aspect-[16/9] rounded-2xl overflow-hidden shadow-xl ${className}`}
    >
      <iframe
        src={url}
        className="w-full h-full border-0"
        title="Schedule a meeting"
        loading="lazy"
        allow="camera; microphone; geolocation"
      />
    </div>
  );
}


================================================================================
END: D:\QiEOS\src\components\CalendlyEmbed.tsx
================================================================================


================================================================================
FILE: D:\QiEOS\src\components\Footer.tsx
================================================================================

import React from "react";
import { Link } from "react-router-dom";
import { Facebook, Twitter, Youtube, Mail, Phone } from "lucide-react";

const Footer = () => {
  return (
    <footer className="bg-background/80 backdrop-blur-md print:hidden mt-16 border-t border-border/50">
      <div className="max-w-7xl mx-auto px-6 md:px-8 py-12">
        <div className="grid grid-cols-1 md:grid-cols-3 gap-8">
          {/* About */}
          <div>
            <div className="flex items-center space-x-2 mb-4">
              <img
                src="https://res.cloudinary.com/dp5b5fymz/image/upload/v1755927329/qibird.svg"
                alt="QiAlly Logo"
                className="w-6 h-6"
              />
              <h3 className="text-xl font-bold">QiAlly</h3>
            </div>
            <p className="text-muted-foreground mb-4">
              Your ally in business, providing expert services in tax, HR, tech,
              and automation. Empowering entrepreneurs to simplify the chaos.
            </p>
            <div className="flex space-x-4">
              <a
                href="https://www.facebook.com/qially1/"
                target="_blank"
                rel="noopener noreferrer"
                className="text-muted-foreground hover:text-primary"
              >
                <Facebook className="h-5 w-5" />
              </a>
              <a
                href="https://x.com/QiAlly"
                target="_blank"
                rel="noopener noreferrer"
                className="text-muted-foreground hover:text-primary"
              >
                <Twitter className="h-5 w-5" />
              </a>
              <a
                href="https://www.youtube.com/@qiallyme"
                target="_blank"
                rel="noopener noreferrer"
                className="text-muted-foreground hover:text-primary"
              >
                <Youtube className="h-5 w-5" />
              </a>
            </div>
          </div>

          {/* Links */}
          <div>
            <h4 className="font-semibold mb-4">Quick Links</h4>
            <div className="space-y-2">
              <Link
                to="/about"
                className="block text-muted-foreground hover:text-primary"
              >
                About
              </Link>
              <Link
                to="/services"
                className="block text-muted-foreground hover:text-primary"
              >
                Services
              </Link>
              <Link
                to="/contact"
                className="block text-muted-foreground hover:text-primary"
              >
                Contact
              </Link>
              <Link
                to="/terms"
                className="block text-muted-foreground hover:text-primary"
              >
                Terms
              </Link>
              <Link
                to="/privacy"
                className="block text-muted-foreground hover:text-primary"
              >
                Privacy
              </Link>
            </div>
          </div>

          {/* Contact */}
          <div>
            <h4 className="font-semibold mb-4">Contact Info</h4>
            <div className="space-y-2">
              <div className="flex items-center space-x-2 text-muted-foreground">
                <Mail className="h-4 w-4" />
                <span>Info@qially.me</span>
              </div>
              <div className="flex items-center space-x-2 text-muted-foreground">
                <Phone className="h-4 w-4" />
                <span>+1 (765) 443-4769</span>
              </div>
            </div>
          </div>
        </div>

        <div className="border-t border-border/50 mt-8 pt-8 text-center text-muted-foreground">
          <p>© {new Date().getFullYear()} QiAlly. All rights reserved.</p>
        </div>
      </div>
    </footer>
  );
};

export { Footer };


================================================================================
END: D:\QiEOS\src\components\Footer.tsx
================================================================================


================================================================================
FILE: D:\QiEOS\src\components\Nav.tsx
================================================================================

import React, { useState } from "react";
import { Link, NavLink } from "react-router-dom";
import { Menu, X } from "lucide-react";
import { Button } from "./ui/button";
import { ThemeToggle } from "./ThemeToggle";

const navLinks = [
  { to: "/", text: "Home" },
  { to: "/about", text: "About" },
  { to: "/services", text: "Services" },
  { to: "/contact", text: "Contact" },
];

export function Nav() {
  const [isOpen, setIsOpen] = useState(false);

  return (
    <nav className="sticky top-0 z-50 bg-background/80 backdrop-blur-md border-b border-border/50">
      <div className="max-w-7xl mx-auto px-6 md:px-8">
        <div className="flex justify-between items-center h-16">
          {/* Logo */}
          <Link to="/" className="flex items-center space-x-2">
            <img
              src="https://res.cloudinary.com/dp5b5fymz/image/upload/v1755927329/qibird.svg"
              alt="QiAlly Logo"
              className="w-8 h-8"
            />
            <span className="text-xl font-bold">QiAlly</span>
          </Link>

          {/* Desktop Navigation */}
          <div className="hidden md:flex items-center space-x-8">
            {navLinks.map((link) => (
              <NavLink
                key={link.to}
                to={link.to}
                className={({ isActive }) =>
                  `text-sm font-medium transition-colors hover:text-primary ${
                    isActive ? "text-primary" : "text-muted-foreground"
                  }`
                }
              >
                {link.text}
              </NavLink>
            ))}
          </div>

          {/* Right side actions */}
          <div className="flex items-center space-x-4">
            <ThemeToggle />
            <Button asChild className="hidden sm:inline-flex">
              <a
                href="https://crm.qially.com/bookings/qimoment"
                target="_blank"
                rel="noopener noreferrer"
              >
                Book a Consult
              </a>
            </Button>

            {/* Mobile menu button */}
            <Button
              variant="ghost"
              size="icon"
              className="md:hidden"
              onClick={() => setIsOpen(!isOpen)}
              aria-label="Toggle menu"
            >
              {isOpen ? (
                <X className="h-5 w-5" />
              ) : (
                <Menu className="h-5 w-5" />
              )}
            </Button>
          </div>
        </div>

        {/* Mobile Navigation */}
        {isOpen && (
          <div className="md:hidden border-t border-border/50">
            <div className="px-2 pt-2 pb-3 space-y-1">
              {navLinks.map((link) => (
                <NavLink
                  key={link.to}
                  to={link.to}
                  onClick={() => setIsOpen(false)}
                  className={({ isActive }) =>
                    `block px-3 py-2 rounded-md text-base font-medium transition-colors ${
                      isActive
                        ? "bg-accent text-accent-foreground"
                        : "text-muted-foreground hover:text-primary hover:bg-accent"
                    }`
                  }
                >
                  {link.text}
                </NavLink>
              ))}
              <div className="pt-4">
                <Button asChild className="w-full">
                  <a
                    href="https://crm.qially.com/bookings/qimoment"
                    target="_blank"
                    rel="noopener noreferrer"
                  >
                    Book a Consult
                  </a>
                </Button>
              </div>
            </div>
          </div>
        )}
      </div>
    </nav>
  );
}


================================================================================
END: D:\QiEOS\src\components\Nav.tsx
================================================================================


================================================================================
FILE: D:\QiEOS\src\components\ThemeToggle.tsx
================================================================================

import React from "react";
import { Sun, Moon } from "lucide-react";
import { useTheme } from "../hooks/useTheme";
import { Button } from "./ui/button";

export function ThemeToggle() {
  const [theme, toggleTheme] = useTheme();

  return (
    <Button
      variant="ghost"
      size="icon"
      onClick={toggleTheme}
      className="h-9 w-9"
      aria-label={`Switch to ${theme === "light" ? "dark" : "light"} mode`}
    >
      {theme === "light" ? (
        <Moon className="h-4 w-4" />
      ) : (
        <Sun className="h-4 w-4" />
      )}
    </Button>
  );
}


================================================================================
END: D:\QiEOS\src\components\ThemeToggle.tsx
================================================================================


================================================================================
FILE: D:\QiEOS\src\components\ui\button.tsx
================================================================================

import * as React from "react";
import { cn } from "../../lib/utils";

const buttonVariants = {
  default: "bg-primary text-primary-foreground hover:bg-primary/90",
  destructive:
    "bg-destructive text-destructive-foreground hover:bg-destructive/90",
  outline:
    "border border-input bg-background hover:bg-accent hover:text-accent-foreground",
  secondary: "bg-secondary text-secondary-foreground hover:bg-secondary/80",
  ghost: "hover:bg-accent hover:text-accent-foreground",
  link: "text-primary underline-offset-4 hover:underline",
};

const buttonSizes = {
  default: "h-10 px-4 py-2",
  sm: "h-9 rounded-md px-3",
  lg: "h-11 rounded-md px-8",
  icon: "h-10 w-10",
};

export interface ButtonProps
  extends React.ButtonHTMLAttributes<HTMLButtonElement> {
  variant?: keyof typeof buttonVariants;
  size?: keyof typeof buttonSizes;
  asChild?: boolean;
}

const Button = React.forwardRef<HTMLButtonElement, ButtonProps>(
  (
    {
      className,
      variant = "default",
      size = "default",
      asChild = false,
      ...props
    },
    ref
  ) => {
    const Comp = asChild ? "button" : "button";
    return (
      <Comp
        className={cn(
          "inline-flex items-center justify-center whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50",
          buttonVariants[variant],
          buttonSizes[size],
          className
        )}
        ref={ref}
        {...props}
      />
    );
  }
);
Button.displayName = "Button";

export { Button };


================================================================================
END: D:\QiEOS\src\components\ui\button.tsx
================================================================================


================================================================================
FILE: D:\QiEOS\src\components\ui\card.tsx
================================================================================

import * as React from "react";
import { cn } from "../../lib/utils";

const Card = React.forwardRef<
  HTMLDivElement,
  React.HTMLAttributes<HTMLDivElement>
>(({ className, ...props }, ref) => (
  <div
    ref={ref}
    className={cn(
      "rounded-2xl border bg-card text-card-foreground shadow-sm",
      className
    )}
    {...props}
  />
));
Card.displayName = "Card";

const CardHeader = React.forwardRef<
  HTMLDivElement,
  React.HTMLAttributes<HTMLDivElement>
>(({ className, ...props }, ref) => (
  <div
    ref={ref}
    className={cn("flex flex-col space-y-1.5 p-6", className)}
    {...props}
  />
));
CardHeader.displayName = "CardHeader";

const CardTitle = React.forwardRef<
  HTMLParagraphElement,
  React.HTMLAttributes<HTMLHeadingElement>
>(({ className, ...props }, ref) => (
  <h3
    ref={ref}
    className={cn(
      "text-2xl font-semibold leading-none tracking-tight",
      className
    )}
    {...props}
  />
));
CardTitle.displayName = "CardTitle";

const CardDescription = React.forwardRef<
  HTMLParagraphElement,
  React.HTMLAttributes<HTMLParagraphElement>
>(({ className, ...props }, ref) => (
  <p
    ref={ref}
    className={cn("text-sm text-muted-foreground", className)}
    {...props}
  />
));
CardDescription.displayName = "CardDescription";

const CardContent = React.forwardRef<
  HTMLDivElement,
  React.HTMLAttributes<HTMLDivElement>
>(({ className, ...props }, ref) => (
  <div ref={ref} className={cn("p-6 pt-0", className)} {...props} />
));
CardContent.displayName = "CardContent";

const CardFooter = React.forwardRef<
  HTMLDivElement,
  React.HTMLAttributes<HTMLDivElement>
>(({ className, ...props }, ref) => (
  <div
    ref={ref}
    className={cn("flex items-center p-6 pt-0", className)}
    {...props}
  />
));
CardFooter.displayName = "CardFooter";

export {
  Card,
  CardHeader,
  CardFooter,
  CardTitle,
  CardDescription,
  CardContent,
};


================================================================================
END: D:\QiEOS\src\components\ui\card.tsx
================================================================================


================================================================================
FILE: D:\QiEOS\src\components\ui\container.tsx
================================================================================

import * as React from "react";
import { cn } from "../../lib/utils";

interface ContainerProps extends React.HTMLAttributes<HTMLDivElement> {
  size?: "sm" | "md" | "lg" | "xl" | "full";
}

const Container = React.forwardRef<HTMLDivElement, ContainerProps>(
  ({ className, size = "lg", ...props }, ref) => {
    const sizeClasses = {
      sm: "max-w-3xl",
      md: "max-w-5xl",
      lg: "max-w-7xl",
      xl: "max-w-8xl",
      full: "max-w-none",
    };

    return (
      <div
        ref={ref}
        className={cn("mx-auto px-6 md:px-8", sizeClasses[size], className)}
        {...props}
      />
    );
  }
);
Container.displayName = "Container";

export { Container };


================================================================================
END: D:\QiEOS\src\components\ui\container.tsx
================================================================================


================================================================================
FILE: D:\QiEOS\src\components\ui\glass-card.tsx
================================================================================

import * as React from "react"
import { cn } from "../../lib/utils"

interface GlassCardProps extends React.HTMLAttributes<HTMLDivElement> {
  variant?: "default" | "subtle" | "strong"
}

const GlassCard = React.forwardRef<HTMLDivElement, GlassCardProps>(
  ({ className, variant = "default", ...props }, ref) => {
    const variantClasses = {
      default: "bg-white/10 backdrop-blur-md border border-white/20",
      subtle: "bg-white/5 backdrop-blur-sm border border-white/10",
      strong: "bg-white/20 backdrop-blur-lg border border-white/30"
    }

    return (
      <div
        ref={ref}
        className={cn(
          "rounded-2xl shadow-xl",
          variantClasses[variant],
          className
        )}
        {...props}
      />
    )
  }
)
GlassCard.displayName = "GlassCard"

export { GlassCard }


================================================================================
END: D:\QiEOS\src\components\ui\glass-card.tsx
================================================================================


================================================================================
FILE: D:\QiEOS\src\components\ui\gradient-text.tsx
================================================================================

import * as React from "react";
import { cn } from "../../lib/utils";

interface GradientTextProps extends React.HTMLAttributes<HTMLSpanElement> {
  gradient?: "default" | "accent" | "success" | "warning";
}

const GradientText = React.forwardRef<HTMLSpanElement, GradientTextProps>(
  ({ className, gradient = "default", ...props }, ref) => {
    const gradientClasses = {
      default: "bg-gradient-to-r from-indigo-500 via-violet-500 to-fuchsia-500",
      accent: "bg-gradient-to-r from-blue-500 to-purple-600",
      success: "bg-gradient-to-r from-green-500 to-emerald-600",
      warning: "bg-gradient-to-r from-orange-500 to-red-600",
    };

    return (
      <span
        ref={ref}
        className={cn(
          "bg-clip-text text-transparent",
          gradientClasses[gradient],
          className
        )}
        {...props}
      />
    );
  }
);
GradientText.displayName = "GradientText";

export { GradientText };


================================================================================
END: D:\QiEOS\src\components\ui\gradient-text.tsx
================================================================================


================================================================================
FILE: D:\QiEOS\src\components\ui\section.tsx
================================================================================

import * as React from "react";
import { cn } from "../../lib/utils";

interface SectionProps extends React.HTMLAttributes<HTMLElement> {
  spacing?: "sm" | "md" | "lg" | "xl";
}

const Section = React.forwardRef<HTMLElement, SectionProps>(
  ({ className, spacing = "lg", ...props }, ref) => {
    const spacingClasses = {
      sm: "py-12",
      md: "py-16",
      lg: "py-20",
      xl: "py-24 md:py-32",
    };

    return (
      <section
        ref={ref}
        className={cn(spacingClasses[spacing], className)}
        {...props}
      />
    );
  }
);
Section.displayName = "Section";

export { Section };


================================================================================
END: D:\QiEOS\src\components\ui\section.tsx
================================================================================


================================================================================
FILE: D:\QiEOS\src\lib\utils.ts
================================================================================

import { type ClassValue, clsx } from "clsx"
import { twMerge } from "tailwind-merge"

export function cn(...inputs: ClassValue[]) {
  return twMerge(clsx(inputs))
}


================================================================================
END: D:\QiEOS\src\lib\utils.ts
================================================================================


================================================================================
FILE: D:\QiEOS\src\pages\404.tsx
================================================================================

import React from "react";
import { motion } from "framer-motion";
import { Home, ArrowLeft } from "lucide-react";
import { Container } from "../components/ui/container";
import { Section } from "../components/ui/section";
import { Button } from "../components/ui/button";
import { GradientText } from "../components/ui/gradient-text";

export default function NotFoundPage() {
  return (
    <div className="min-h-screen flex items-center justify-center">
      <Section>
        <Container>
          <motion.div
            initial={{ opacity: 0, y: 20 }}
            animate={{ opacity: 1, y: 0 }}
            transition={{ duration: 0.6 }}
            className="text-center"
          >
            <div className="mb-8">
              <h1 className="text-8xl md:text-9xl font-bold text-primary/20 mb-4">
                404
              </h1>
              <h2 className="text-3xl md:text-4xl font-semibold tracking-tight mb-4">
                Oops! Page Not Found
              </h2>
              <p className="text-lg text-muted-foreground max-w-2xl mx-auto mb-8">
                The page you're looking for doesn't exist or has been moved.
                Let's get you back on track.
              </p>
            </div>

            <div className="flex flex-col sm:flex-row items-center justify-center gap-4">
              <Button size="lg" asChild>
                <a href="/">
                  <Home className="mr-2 h-4 w-4" />
                  Back to Home
                </a>
              </Button>

              <Button
                size="lg"
                variant="outline"
                onClick={() => window.history.back()}
              >
                <ArrowLeft className="mr-2 h-4 w-4" />
                Go Back
              </Button>
            </div>

            <div className="mt-12 text-center">
              <p className="text-sm text-muted-foreground">
                Need help?{" "}
                <a href="/contact" className="text-primary hover:underline">
                  Contact us
                </a>
              </p>
            </div>
          </motion.div>
        </Container>
      </Section>
    </div>
  );
}


================================================================================
END: D:\QiEOS\src\pages\404.tsx
================================================================================


================================================================================
FILE: D:\QiEOS\src\pages\about.tsx
================================================================================

import React from "react";
import { motion } from "framer-motion";
import { CheckCircle, Award, Users, TrendingUp } from "lucide-react";
import { Container } from "../components/ui/container";
import { Section } from "../components/ui/section";
import { GlassCard } from "../components/ui/glass-card";
import { Button } from "../components/ui/button";
import { GradientText } from "../components/ui/gradient-text";

const values = [
  "Clear, direct communication",
  "ADHD-friendly, async-ready approach",
  "No jargon, no run-around",
  "Proactive problem solving",
  "Measurable results",
];

const stats = [
  { number: "200+", label: "Systems Optimized" },
  { number: "$3M+", label: "Savings Delivered" },
  { number: "80+", label: "Solutions Implemented" },
  { number: "20+", label: "Years Experience" },
];

export default function AboutPage() {
  return (
    <div className="min-h-screen">
      {/* Hero Section */}
      <Section className="relative overflow-hidden">
        <div className="absolute inset-0 -z-10">
          <div className="absolute -top-32 -left-20 h-96 w-96 rounded-full bg-gradient-to-br from-indigo-500/20 via-violet-500/20 to-fuchsia-500/20 blur-3xl" />
        </div>

        <Container>
          <div className="grid grid-cols-1 lg:grid-cols-2 gap-12 items-center">
            <motion.div
              initial={{ opacity: 0, x: -20 }}
              animate={{ opacity: 1, x: 0 }}
              transition={{ duration: 0.6 }}
            >
              <h1 className="text-4xl md:text-5xl font-semibold tracking-tight mb-6">
                Hi, I'm <GradientText>Cody</GradientText> – your ally in all
                things business.
              </h1>

              <p className="text-lg text-muted-foreground mb-8">
                With over 20 years of experience juggling everything from
                Fortune 500 tech to Main Street startups, I provide solo
                operator, personal service to get you real results.
              </p>

              <div className="space-y-4">
                {values.map((value, index) => (
                  <motion.div
                    key={value}
                    initial={{ opacity: 0, x: -20 }}
                    animate={{ opacity: 1, x: 0 }}
                    transition={{ delay: index * 0.1, duration: 0.5 }}
                    className="flex items-center space-x-3"
                  >
                    <CheckCircle className="h-5 w-5 text-primary flex-shrink-0" />
                    <span className="text-muted-foreground">{value}</span>
                  </motion.div>
                ))}
              </div>
            </motion.div>

            <motion.div
              initial={{ opacity: 0, x: 20 }}
              animate={{ opacity: 1, x: 0 }}
              transition={{ duration: 0.6, delay: 0.2 }}
              className="relative"
            >
              <GlassCard className="p-8">
                <div className="text-center">
                  <div className="w-32 h-32 bg-gradient-to-br from-indigo-500 to-violet-500 rounded-full mx-auto mb-6 flex items-center justify-center">
                    <span className="text-4xl font-bold text-white">C</span>
                  </div>
                  <h3 className="text-2xl font-semibold mb-2">Cody</h3>
                  <p className="text-muted-foreground mb-4">
                    Business Operations Specialist
                  </p>
                  <div className="flex justify-center space-x-4">
                    <div className="text-center">
                      <Award className="h-6 w-6 text-primary mx-auto mb-1" />
                      <span className="text-sm text-muted-foreground">
                        Certified
                      </span>
                    </div>
                    <div className="text-center">
                      <Users className="h-6 w-6 text-primary mx-auto mb-1" />
                      <span className="text-sm text-muted-foreground">
                        Expert
                      </span>
                    </div>
                    <div className="text-center">
                      <TrendingUp className="h-6 w-6 text-primary mx-auto mb-1" />
                      <span className="text-sm text-muted-foreground">
                        Results
                      </span>
                    </div>
                  </div>
                </div>
              </GlassCard>
            </motion.div>
          </div>
        </Container>
      </Section>

      {/* Stats Section */}
      <Section className="bg-muted/30">
        <Container>
          <motion.div
            initial={{ opacity: 0, y: 20 }}
            whileInView={{ opacity: 1, y: 0 }}
            transition={{ duration: 0.6 }}
            viewport={{ once: true }}
            className="text-center mb-12"
          >
            <h2 className="text-3xl md:text-4xl font-semibold tracking-tight mb-4">
              My Outstanding Achievements
            </h2>
            <p className="text-lg text-muted-foreground">
              Explore my track record of driving savings and growth
            </p>
          </motion.div>

          <div className="grid grid-cols-2 md:grid-cols-4 gap-6">
            {stats.map((stat, index) => (
              <motion.div
                key={stat.label}
                initial={{ opacity: 0, y: 20 }}
                whileInView={{ opacity: 1, y: 0 }}
                transition={{ delay: index * 0.1, duration: 0.5 }}
                viewport={{ once: true }}
              >
                <GlassCard className="p-6 text-center">
                  <div className="text-3xl md:text-4xl font-bold text-primary mb-2">
                    {stat.number}
                  </div>
                  <div className="text-sm text-muted-foreground">
                    {stat.label}
                  </div>
                </GlassCard>
              </motion.div>
            ))}
          </div>
        </Container>
      </Section>

      {/* CTA Section */}
      <Section>
        <Container>
          <motion.div
            initial={{ opacity: 0, y: 20 }}
            whileInView={{ opacity: 1, y: 0 }}
            transition={{ duration: 0.6 }}
            viewport={{ once: true }}
            className="text-center"
          >
            <h2 className="text-3xl md:text-4xl font-semibold tracking-tight mb-4">
              Let's Work Together
            </h2>
            <p className="text-lg text-muted-foreground mb-8 max-w-2xl mx-auto">
              Ready to transform your business operations? Let's discuss how I
              can help you achieve your goals.
            </p>
            <Button size="lg" asChild>
              <a
                href="https://crm.qially.com/bookings/qimoment"
                target="_blank"
                rel="noopener noreferrer"
              >
                Book a Consultation
              </a>
            </Button>
          </motion.div>
        </Container>
      </Section>
    </div>
  );
}


================================================================================
END: D:\QiEOS\src\pages\about.tsx
================================================================================


================================================================================
FILE: D:\QiEOS\src\pages\contact.tsx
================================================================================

import React, { useState } from "react";
import { motion } from "framer-motion";
import {
  Mail,
  Phone,
  MapPin,
  Send,
  CheckCircle,
  AlertCircle,
} from "lucide-react";
import { Container } from "../components/ui/container";
import { Section } from "../components/ui/section";
import { GlassCard } from "../components/ui/glass-card";
import { Button } from "../components/ui/button";
import { GradientText } from "../components/ui/gradient-text";
import CalendlyEmbed from "../components/CalendlyEmbed";

interface FormData {
  name: string;
  email: string;
  message: string;
  honeypot: string; // Anti-spam field
}

interface FormStatus {
  type: "idle" | "loading" | "success" | "error";
  message: string;
}

export default function ContactPage() {
  const [formData, setFormData] = useState<FormData>({
    name: "",
    email: "",
    message: "",
    honeypot: "",
  });

  const [formStatus, setFormStatus] = useState<FormStatus>({
    type: "idle",
    message: "",
  });

  const handleInputChange = (
    e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>
  ) => {
    const { name, value } = e.target;
    setFormData((prev) => ({
      ...prev,
      [name]: value,
    }));
  };

  const handleSubmit = async (e: React.FormEvent) => {
    e.preventDefault();

    // Check honeypot
    if (formData.honeypot) {
      return; // Silent fail for bots
    }

    setFormStatus({ type: "loading", message: "Sending message..." });

    try {
      const response = await fetch("/api/contact", {
        method: "POST",
        headers: {
          "Content-Type": "application/json",
        },
        body: JSON.stringify({
          name: formData.name,
          email: formData.email,
          message: formData.message,
        }),
      });

      if (response.ok) {
        setFormStatus({
          type: "success",
          message: "Thank you! Your message has been sent successfully.",
        });
        setFormData({ name: "", email: "", message: "", honeypot: "" });
      } else {
        throw new Error("Failed to send message");
      }
    } catch (error) {
      setFormStatus({
        type: "error",
        message:
          "Sorry, there was an error sending your message. Please try again or contact us directly.",
      });
    }
  };

  const contactInfo = [
    {
      icon: Mail,
      title: "Email",
      value: "Info@qially.me",
      href: "mailto:Info@qially.me",
    },
    {
      icon: Phone,
      title: "Phone",
      value: "+1 (765) 443-4769",
      href: "tel:+17654434769",
    },
    {
      icon: MapPin,
      title: "Location",
      value: "Remote Services Available",
      href: "#",
    },
  ];

  return (
    <div className="min-h-screen">
      {/* Hero Section */}
      <Section className="relative overflow-hidden">
        <div className="absolute inset-0 -z-10">
          <div className="absolute -top-32 -left-20 h-96 w-96 rounded-full bg-gradient-to-br from-indigo-500/20 via-violet-500/20 to-fuchsia-500/20 blur-3xl" />
        </div>

        <Container>
          <motion.div
            initial={{ opacity: 0, y: 20 }}
            animate={{ opacity: 1, y: 0 }}
            transition={{ duration: 0.6 }}
            className="text-center"
          >
            <h1 className="text-4xl md:text-5xl font-semibold tracking-tight mb-6">
              Let's <GradientText>Connect</GradientText>
            </h1>
            <p className="text-lg text-muted-foreground max-w-3xl mx-auto">
              Ready to transform your business operations? Get in touch and
              let's discuss how I can help you achieve your goals.
            </p>
          </motion.div>
        </Container>
      </Section>

      {/* Contact Info */}
      <Section>
        <Container>
          <div className="grid grid-cols-1 md:grid-cols-3 gap-6 mb-16">
            {contactInfo.map((info, index) => (
              <motion.div
                key={info.title}
                initial={{ opacity: 0, y: 20 }}
                whileInView={{ opacity: 1, y: 0 }}
                transition={{ delay: index * 0.1, duration: 0.5 }}
                viewport={{ once: true }}
              >
                <GlassCard className="p-6 text-center">
                  <info.icon className="h-8 w-8 text-primary mx-auto mb-4" />
                  <h3 className="text-lg font-semibold mb-2">{info.title}</h3>
                  <a
                    href={info.href}
                    className="text-muted-foreground hover:text-primary transition-colors"
                  >
                    {info.value}
                  </a>
                </GlassCard>
              </motion.div>
            ))}
          </div>
        </Container>
      </Section>

      {/* Contact Form & Calendly */}
      <Section>
        <Container>
          <div className="grid grid-cols-1 lg:grid-cols-2 gap-12">
            {/* Contact Form */}
            <motion.div
              initial={{ opacity: 0, x: -20 }}
              whileInView={{ opacity: 1, x: 0 }}
              transition={{ duration: 0.6 }}
              viewport={{ once: true }}
            >
              <GlassCard className="p-8">
                <h2 className="text-2xl font-semibold mb-6">Send a Message</h2>

                <form onSubmit={handleSubmit} className="space-y-6">
                  {/* Honeypot field - hidden from users */}
                  <input
                    type="text"
                    name="honeypot"
                    value={formData.honeypot}
                    onChange={handleInputChange}
                    style={{ display: "none" }}
                    tabIndex={-1}
                    autoComplete="off"
                  />

                  <div>
                    <label
                      htmlFor="name"
                      className="block text-sm font-medium mb-2"
                    >
                      Name *
                    </label>
                    <input
                      type="text"
                      id="name"
                      name="name"
                      value={formData.name}
                      onChange={handleInputChange}
                      required
                      className="w-full px-4 py-3 rounded-lg border border-input bg-background text-foreground focus:outline-none focus:ring-2 focus:ring-ring focus:border-transparent"
                      placeholder="Your full name"
                    />
                  </div>

                  <div>
                    <label
                      htmlFor="email"
                      className="block text-sm font-medium mb-2"
                    >
                      Email *
                    </label>
                    <input
                      type="email"
                      id="email"
                      name="email"
                      value={formData.email}
                      onChange={handleInputChange}
                      required
                      className="w-full px-4 py-3 rounded-lg border border-input bg-background text-foreground focus:outline-none focus:ring-2 focus:ring-ring focus:border-transparent"
                      placeholder="your.email@example.com"
                    />
                  </div>

                  <div>
                    <label
                      htmlFor="message"
                      className="block text-sm font-medium mb-2"
                    >
                      Message *
                    </label>
                    <textarea
                      id="message"
                      name="message"
                      value={formData.message}
                      onChange={handleInputChange}
                      required
                      rows={5}
                      className="w-full px-4 py-3 rounded-lg border border-input bg-background text-foreground focus:outline-none focus:ring-2 focus:ring-ring focus:border-transparent resize-none"
                      placeholder="Tell me about your business needs..."
                    />
                  </div>

                  {/* Status Message */}
                  {formStatus.type !== "idle" && (
                    <div
                      className={`flex items-center space-x-2 p-4 rounded-lg ${
                        formStatus.type === "success"
                          ? "bg-green-50 text-green-800 border border-green-200"
                          : formStatus.type === "error"
                          ? "bg-red-50 text-red-800 border border-red-200"
                          : "bg-blue-50 text-blue-800 border border-blue-200"
                      }`}
                    >
                      {formStatus.type === "success" && (
                        <CheckCircle className="h-5 w-5" />
                      )}
                      {formStatus.type === "error" && (
                        <AlertCircle className="h-5 w-5" />
                      )}
                      <span className="text-sm">{formStatus.message}</span>
                    </div>
                  )}

                  <Button
                    type="submit"
                    className="w-full"
                    disabled={formStatus.type === "loading"}
                  >
                    {formStatus.type === "loading" ? (
                      "Sending..."
                    ) : (
                      <>
                        <Send className="mr-2 h-4 w-4" />
                        Send Message
                      </>
                    )}
                  </Button>
                </form>
              </GlassCard>
            </motion.div>

            {/* Calendly Embed */}
            <motion.div
              initial={{ opacity: 0, x: 20 }}
              whileInView={{ opacity: 1, x: 0 }}
              transition={{ duration: 0.6, delay: 0.2 }}
              viewport={{ once: true }}
            >
              <GlassCard className="p-8">
                <h2 className="text-2xl font-semibold mb-6">Book a Meeting</h2>
                <p className="text-muted-foreground mb-6">
                  Prefer to schedule a call? Book a time that works for you and
                  let's discuss your business needs.
                </p>
                <CalendlyEmbed url="https://calendly.com/qially/qimoment" />
              </GlassCard>
            </motion.div>
          </div>
        </Container>
      </Section>
    </div>
  );
}


================================================================================
END: D:\QiEOS\src\pages\contact.tsx
================================================================================


================================================================================
FILE: D:\QiEOS\src\pages\index.tsx
================================================================================

import React from "react";
import Hero from "../sections/Hero";
import Trust from "../sections/Trust";
import ServicesGrid from "../sections/ServicesGrid";
import Process from "../sections/Process";
import Testimonials from "../sections/Testimonials";
import CtaBanner from "../sections/CtaBanner";

export default function HomePage() {
  return (
    <div className="min-h-screen">
      <Hero />
      <Trust />
      <ServicesGrid />
      <Process />
      <Testimonials />
      <CtaBanner />
    </div>
  );
}


================================================================================
END: D:\QiEOS\src\pages\index.tsx
================================================================================


================================================================================
FILE: D:\QiEOS\src\pages\privacy.tsx
================================================================================

import React from "react";
import { Container } from "../components/ui/container";
import { Section } from "../components/ui/section";

export default function PrivacyPage() {
  return (
    <div className="min-h-screen">
      <Section>
        <Container>
          <div className="max-w-4xl mx-auto">
            <h1 className="text-4xl font-bold mb-8">Privacy Policy</h1>

            <div className="prose prose-lg max-w-none">
              <p className="text-muted-foreground mb-6">
                Last updated: {new Date().toLocaleDateString()}
              </p>

              <h2>1. Information We Collect</h2>
              <p>
                We collect information you provide directly to us, such as when
                you contact us, book a consultation, or use our services. This
                may include your name, email address, phone number, and business
                information.
              </p>

              <h2>2. How We Use Your Information</h2>
              <p>
                We use the information we collect to provide, maintain, and
                improve our services, communicate with you, and process
                transactions.
              </p>

              <h2>3. Information Sharing</h2>
              <p>
                We do not sell, trade, or otherwise transfer your personal
                information to third parties without your consent, except as
                described in this policy or as required by law.
              </p>

              <h2>4. Data Security</h2>
              <p>
                We implement appropriate security measures to protect your
                personal information against unauthorized access, alteration,
                disclosure, or destruction.
              </p>

              <h2>5. Cookies and Tracking</h2>
              <p>
                We may use cookies and similar tracking technologies to enhance
                your experience on our website and analyze usage patterns.
              </p>

              <h2>6. Your Rights</h2>
              <p>
                You have the right to access, update, or delete your personal
                information. You may also opt out of certain communications from
                us.
              </p>

              <h2>7. Contact Us</h2>
              <p>
                If you have questions about this privacy policy, please contact
                us at Info@qially.me or +1 (765) 443-4769.
              </p>
            </div>
          </div>
        </Container>
      </Section>
    </div>
  );
}


================================================================================
END: D:\QiEOS\src\pages\privacy.tsx
================================================================================


================================================================================
FILE: D:\QiEOS\src\pages\services.tsx
================================================================================

import React, { useState } from "react";
import { motion } from "framer-motion";
import {
  ChevronDown,
  Calculator,
  Users,
  Zap,
  Settings,
  Check,
  ArrowRight,
} from "lucide-react";
import { Container } from "../components/ui/container";
import { Section } from "../components/ui/section";
import { GlassCard } from "../components/ui/glass-card";
import { Button } from "../components/ui/button";
import { GradientText } from "../components/ui/gradient-text";

const services = [
  {
    icon: Calculator,
    title: "Taxes & Bookkeeping",
    description:
      "Comprehensive financial management to keep your business compliant and profitable.",
    features: [
      "Tax preparation and filing",
      "Monthly bookkeeping services",
      "Financial statement preparation",
      "Tax planning and strategy",
      "Audit support and representation",
      "Payroll processing",
    ],
    pricing: "Starting at $200/month",
  },
  {
    icon: Users,
    title: "HR & Compliance",
    description:
      "Navigate complex HR requirements with confidence and stay compliant.",
    features: [
      "Employee handbook development",
      "Policy creation and updates",
      "Compliance audits and training",
      "Employee relations support",
      "Benefits administration",
      "Workplace safety programs",
    ],
    pricing: "Starting at $150/month",
  },
  {
    icon: Zap,
    title: "Automation & Tools",
    description:
      "Streamline operations with smart automation and the right technology stack.",
    features: [
      "Process automation setup",
      "Tool integration and training",
      "Workflow optimization",
      "Data migration services",
      "Custom solution development",
      "Ongoing support and maintenance",
    ],
    pricing: "Starting at $300/month",
  },
  {
    icon: Settings,
    title: "IT & Strategy",
    description:
      "Strategic IT planning and implementation for sustainable growth.",
    features: [
      "IT strategy and planning",
      "System setup and configuration",
      "Security assessments",
      "Cloud migration services",
      "Technical support",
      "Vendor management",
    ],
    pricing: "Starting at $250/month",
  },
];

const pricingPlans = [
  {
    name: "Starter",
    price: "$500",
    period: "/month",
    description: "Perfect for small businesses getting started",
    features: [
      "Basic bookkeeping",
      "Tax preparation",
      "Monthly check-ins",
      "Email support",
    ],
    popular: false,
  },
  {
    name: "Grow",
    price: "$1,200",
    period: "/month",
    description: "Comprehensive support for growing businesses",
    features: [
      "Full bookkeeping & tax services",
      "HR compliance support",
      "Process automation",
      "Weekly check-ins",
      "Priority support",
      "Custom reporting",
    ],
    popular: true,
  },
  {
    name: "Scale",
    price: "Custom",
    period: "",
    description: "Tailored solutions for established businesses",
    features: [
      "All Grow features",
      "Dedicated account manager",
      "Custom automation",
      "Strategic planning",
      "24/7 support",
      "Custom integrations",
    ],
    popular: false,
  },
];

export default function ServicesPage() {
  const [expandedService, setExpandedService] = useState<number | null>(null);

  return (
    <div className="min-h-screen">
      {/* Hero Section */}
      <Section className="relative overflow-hidden">
        <div className="absolute inset-0 -z-10">
          <div className="absolute -top-32 -left-20 h-96 w-96 rounded-full bg-gradient-to-br from-indigo-500/20 via-violet-500/20 to-fuchsia-500/20 blur-3xl" />
        </div>

        <Container>
          <motion.div
            initial={{ opacity: 0, y: 20 }}
            animate={{ opacity: 1, y: 0 }}
            transition={{ duration: 0.6 }}
            className="text-center"
          >
            <h1 className="text-4xl md:text-5xl font-semibold tracking-tight mb-6">
              Comprehensive <GradientText>Business Services</GradientText>
            </h1>
            <p className="text-lg text-muted-foreground max-w-3xl mx-auto">
              From tax preparation to IT strategy, I provide end-to-end
              solutions that simplify your operations and drive sustainable
              growth.
            </p>
          </motion.div>
        </Container>
      </Section>

      {/* Services Section */}
      <Section>
        <Container>
          <motion.div
            initial={{ opacity: 0, y: 20 }}
            whileInView={{ opacity: 1, y: 0 }}
            transition={{ duration: 0.6 }}
            viewport={{ once: true }}
            className="text-center mb-16"
          >
            <h2 className="text-3xl md:text-4xl font-semibold tracking-tight mb-4">
              What I Can Help You With
            </h2>
            <p className="text-lg text-muted-foreground max-w-2xl mx-auto">
              Detailed breakdown of services and what's included in each
              package.
            </p>
          </motion.div>

          <div className="space-y-6">
            {services.map((service, index) => (
              <motion.div
                key={service.title}
                initial={{ opacity: 0, y: 20 }}
                whileInView={{ opacity: 1, y: 0 }}
                transition={{ delay: index * 0.1, duration: 0.5 }}
                viewport={{ once: true }}
              >
                <GlassCard className="p-6">
                  <div
                    className="flex items-center justify-between cursor-pointer"
                    onClick={() =>
                      setExpandedService(
                        expandedService === index ? null : index
                      )
                    }
                  >
                    <div className="flex items-center space-x-4">
                      <div className="p-3 rounded-lg bg-primary/10">
                        <service.icon className="h-6 w-6 text-primary" />
                      </div>
                      <div>
                        <h3 className="text-xl font-semibold">
                          {service.title}
                        </h3>
                        <p className="text-muted-foreground">
                          {service.description}
                        </p>
                        <p className="text-sm text-primary font-medium mt-1">
                          {service.pricing}
                        </p>
                      </div>
                    </div>
                    <ChevronDown
                      className={`h-5 w-5 text-muted-foreground transition-transform ${
                        expandedService === index ? "rotate-180" : ""
                      }`}
                    />
                  </div>

                  {expandedService === index && (
                    <motion.div
                      initial={{ opacity: 0, height: 0 }}
                      animate={{ opacity: 1, height: "auto" }}
                      exit={{ opacity: 0, height: 0 }}
                      transition={{ duration: 0.3 }}
                      className="mt-6 pt-6 border-t"
                    >
                      <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
                        {service.features.map((feature) => (
                          <div
                            key={feature}
                            className="flex items-center space-x-2"
                          >
                            <Check className="h-4 w-4 text-primary flex-shrink-0" />
                            <span className="text-muted-foreground">
                              {feature}
                            </span>
                          </div>
                        ))}
                      </div>
                    </motion.div>
                  )}
                </GlassCard>
              </motion.div>
            ))}
          </div>
        </Container>
      </Section>

      {/* Pricing Section */}
      <Section className="bg-muted/30">
        <Container>
          <motion.div
            initial={{ opacity: 0, y: 20 }}
            whileInView={{ opacity: 1, y: 0 }}
            transition={{ duration: 0.6 }}
            viewport={{ once: true }}
            className="text-center mb-16"
          >
            <h2 className="text-3xl md:text-4xl font-semibold tracking-tight mb-4">
              Simple, Transparent Pricing
            </h2>
            <p className="text-lg text-muted-foreground max-w-2xl mx-auto">
              Choose the plan that fits your business needs. All plans include
              ongoing support and consultation.
            </p>
          </motion.div>

          <div className="grid grid-cols-1 md:grid-cols-3 gap-8">
            {pricingPlans.map((plan, index) => (
              <motion.div
                key={plan.name}
                initial={{ opacity: 0, y: 20 }}
                whileInView={{ opacity: 1, y: 0 }}
                transition={{ delay: index * 0.1, duration: 0.5 }}
                viewport={{ once: true }}
              >
                <GlassCard
                  className={`p-8 h-full flex flex-col ${
                    plan.popular ? "ring-2 ring-primary" : ""
                  }`}
                >
                  {plan.popular && (
                    <div className="bg-primary text-primary-foreground text-sm font-medium px-3 py-1 rounded-full text-center mb-4">
                      Most Popular
                    </div>
                  )}

                  <div className="text-center mb-6">
                    <h3 className="text-2xl font-semibold mb-2">{plan.name}</h3>
                    <div className="text-4xl font-bold mb-1">
                      {plan.price}
                      <span className="text-lg text-muted-foreground">
                        {plan.period}
                      </span>
                    </div>
                    <p className="text-muted-foreground">{plan.description}</p>
                  </div>

                  <ul className="space-y-3 mb-8 flex-grow">
                    {plan.features.map((feature) => (
                      <li key={feature} className="flex items-center space-x-2">
                        <Check className="h-4 w-4 text-primary flex-shrink-0" />
                        <span className="text-muted-foreground">{feature}</span>
                      </li>
                    ))}
                  </ul>

                  <Button
                    className="w-full"
                    variant={plan.popular ? "default" : "outline"}
                    asChild
                  >
                    <a
                      href="https://crm.qially.com/bookings/qimoment"
                      target="_blank"
                      rel="noopener noreferrer"
                    >
                      Get Started <ArrowRight className="ml-2 h-4 w-4" />
                    </a>
                  </Button>
                </GlassCard>
              </motion.div>
            ))}
          </div>
        </Container>
      </Section>

      {/* CTA Section */}
      <Section>
        <Container>
          <motion.div
            initial={{ opacity: 0, y: 20 }}
            whileInView={{ opacity: 1, y: 0 }}
            transition={{ duration: 0.6 }}
            viewport={{ once: true }}
            className="text-center"
          >
            <h2 className="text-3xl md:text-4xl font-semibold tracking-tight mb-4">
              Ready to Get Started?
            </h2>
            <p className="text-lg text-muted-foreground mb-8 max-w-2xl mx-auto">
              Let's discuss your specific needs and find the perfect solution
              for your business.
            </p>
            <Button size="lg" asChild>
              <a
                href="https://crm.qially.com/bookings/qimoment"
                target="_blank"
                rel="noopener noreferrer"
              >
                Book a Free Consultation
              </a>
            </Button>
          </motion.div>
        </Container>
      </Section>
    </div>
  );
}


================================================================================
END: D:\QiEOS\src\pages\services.tsx
================================================================================


================================================================================
FILE: D:\QiEOS\src\pages\terms.tsx
================================================================================

import React from "react";
import { Container } from "../components/ui/container";
import { Section } from "../components/ui/section";

export default function TermsPage() {
  return (
    <div className="min-h-screen">
      <Section>
        <Container>
          <div className="max-w-4xl mx-auto">
            <h1 className="text-4xl font-bold mb-8">Terms of Service</h1>

            <div className="prose prose-lg max-w-none">
              <p className="text-muted-foreground mb-6">
                Last updated: {new Date().toLocaleDateString()}
              </p>

              <h2>1. Acceptance of Terms</h2>
              <p>
                By accessing and using QiAlly services, you accept and agree to
                be bound by the terms and provision of this agreement.
              </p>

              <h2>2. Services</h2>
              <p>
                QiAlly provides business consulting, tax preparation, HR
                compliance, automation, and IT strategy services. All services
                are provided on a professional basis with the goal of improving
                your business operations.
              </p>

              <h2>3. Client Responsibilities</h2>
              <p>
                Clients are responsible for providing accurate information,
                timely responses, and necessary documentation to ensure
                successful service delivery.
              </p>

              <h2>4. Confidentiality</h2>
              <p>
                All client information is treated as confidential and will not
                be disclosed to third parties without written consent, except as
                required by law.
              </p>

              <h2>5. Limitation of Liability</h2>
              <p>
                QiAlly's liability is limited to the amount paid for services.
                We are not responsible for indirect or consequential damages.
              </p>

              <h2>6. Contact Information</h2>
              <p>
                For questions about these terms, please contact us at
                Info@qially.me or +1 (765) 443-4769.
              </p>
            </div>
          </div>
        </Container>
      </Section>
    </div>
  );
}


================================================================================
END: D:\QiEOS\src\pages\terms.tsx
================================================================================


================================================================================
FILE: D:\QiEOS\src\sections\CtaBanner.tsx
================================================================================

import { motion } from "framer-motion";
import { ArrowRight, Calendar } from "lucide-react";
import { Container } from "../components/ui/container";
import { Section } from "../components/ui/section";
import { Button } from "../components/ui/button";
import { GradientText } from "../components/ui/gradient-text";

export default function CtaBanner() {
  return (
    <Section className="relative overflow-hidden">
      {/* Gradient background */}
      <div className="absolute inset-0 bg-gradient-to-r from-indigo-500 via-violet-500 to-fuchsia-500" />
      <div className="absolute inset-0 bg-black/20" />

      <Container className="relative z-10">
        <motion.div
          initial={{ opacity: 0, y: 20 }}
          whileInView={{ opacity: 1, y: 0 }}
          transition={{ duration: 0.6 }}
          viewport={{ once: true }}
          className="text-center text-white"
        >
          <h2 className="text-3xl md:text-5xl font-semibold tracking-tight mb-4">
            Ready to{" "}
            <GradientText className="text-white">Transform</GradientText> Your
            Business?
          </h2>

          <p className="text-xl text-white/90 mb-8 max-w-2xl mx-auto">
            Let's discuss how we can streamline your operations, reduce costs,
            and drive sustainable growth.
          </p>

          <div className="flex flex-col sm:flex-row items-center justify-center gap-4">
            <Button size="lg" variant="secondary" asChild>
              <a
                href="https://crm.qially.com/bookings/qimoment"
                target="_blank"
                rel="noopener noreferrer"
              >
                <Calendar className="mr-2 h-5 w-5" />
                Book a Free Consultation
              </a>
            </Button>

            <Button
              size="lg"
              variant="outline"
              className="bg-white/10 border-white/20 text-white hover:bg-white/20"
              asChild
            >
              <a href="/contact">
                Get in Touch <ArrowRight className="ml-2 h-4 w-4" />
              </a>
            </Button>
          </div>

          <p className="text-sm text-white/70 mt-6">
            No sales pressure, just a conversation about your business needs.
          </p>
        </motion.div>
      </Container>
    </Section>
  );
}


================================================================================
END: D:\QiEOS\src\sections\CtaBanner.tsx
================================================================================


================================================================================
FILE: D:\QiEOS\src\sections\Hero.tsx
================================================================================

import { motion } from "framer-motion";
import { ArrowRight } from "lucide-react";
import { Button } from "../components/ui/button";
import { Container } from "../components/ui/container";
import { Section } from "../components/ui/section";
import { GradientText } from "../components/ui/gradient-text";

export default function Hero() {
  return (
    <Section className="relative overflow-hidden">
      {/* Animated gradient orb background */}
      <div className="absolute inset-0 -z-10">
        <div className="absolute -top-32 -left-20 h-96 w-96 rounded-full bg-gradient-to-br from-indigo-500/30 via-violet-500/30 to-fuchsia-500/30 blur-3xl animate-pulse" />
        <div className="absolute -bottom-32 -right-20 h-96 w-96 rounded-full bg-gradient-to-br from-violet-500/20 via-fuchsia-500/20 to-pink-500/20 blur-3xl animate-pulse" style={{ animationDelay: '1s' }} />
      </div>

      <Container>
        <div className="text-center">
          <motion.h1
            initial={{ opacity: 0, y: 20 }}
            animate={{ opacity: 1, y: 0 }}
            transition={{ duration: 0.6 }}
            className="text-4xl md:text-6xl font-semibold tracking-tight mb-6"
          >
            Empower. Innovate. Grow.
          </motion.h1>

          <motion.p
            initial={{ opacity: 0, y: 20 }}
            animate={{ opacity: 1, y: 0 }}
            transition={{ delay: 0.1, duration: 0.6 }}
            className="text-xl text-slate-600 dark:text-slate-300 mb-8 max-w-3xl mx-auto"
          >
            I help entrepreneurs simplify the chaos — tax, HR, tech, automation
            for small business life. <GradientText>Build it clean. Ship it fast. Own your ops.</GradientText>
          </motion.p>

          <motion.div
            initial={{ opacity: 0, y: 20 }}
            animate={{ opacity: 1, y: 0 }}
            transition={{ delay: 0.2, duration: 0.6 }}
            className="flex flex-col sm:flex-row items-center justify-center gap-4"
          >
            <Button size="lg" asChild>
              <a href="https://crm.qially.com/bookings/qimoment" target="_blank" rel="noopener noreferrer">
                Book a Consult <ArrowRight className="ml-2 h-4 w-4" />
              </a>
            </Button>
            <a href="/services" className="text-sm font-medium underline-offset-4 hover:underline text-muted-foreground">
              See services
            </a>
          </motion.div>
        </div>
      </Container>
    </Section>
  );
}


================================================================================
END: D:\QiEOS\src\sections\Hero.tsx
================================================================================


================================================================================
FILE: D:\QiEOS\src\sections\Process.tsx
================================================================================

import { motion } from "framer-motion";
import { Search, Target, Zap, CheckCircle } from "lucide-react";
import { Container } from "../components/ui/container";
import { Section } from "../components/ui/section";

const steps = [
  {
    icon: Search,
    title: "Discovery",
    description:
      "We analyze your current processes, identify pain points, and understand your business goals.",
  },
  {
    icon: Target,
    title: "Strategy",
    description:
      "Develop a customized roadmap with clear objectives and measurable outcomes.",
  },
  {
    icon: Zap,
    title: "Implementation",
    description:
      "Execute the plan with precision, integrating tools and processes seamlessly.",
  },
  {
    icon: CheckCircle,
    title: "Optimization",
    description:
      "Monitor results, gather feedback, and continuously improve for maximum impact.",
  },
];

export default function Process() {
  return (
    <Section className="bg-muted/30">
      <Container>
        <motion.div
          initial={{ opacity: 0, y: 20 }}
          whileInView={{ opacity: 1, y: 0 }}
          transition={{ duration: 0.6 }}
          viewport={{ once: true }}
          className="text-center mb-16"
        >
          <h2 className="text-3xl md:text-5xl font-semibold tracking-tight mb-4">
            How We Work Together
          </h2>
          <p className="text-lg text-muted-foreground max-w-2xl mx-auto">
            A proven process that delivers results through systematic approach
            and continuous improvement.
          </p>
        </motion.div>

        <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-8">
          {steps.map((step, index) => (
            <motion.div
              key={step.title}
              initial={{ opacity: 0, y: 20 }}
              whileInView={{ opacity: 1, y: 0 }}
              transition={{ delay: index * 0.1, duration: 0.5 }}
              viewport={{ once: true }}
              className="text-center"
            >
              <div className="relative">
                <div className="mx-auto w-16 h-16 bg-primary/10 rounded-full flex items-center justify-center mb-4">
                  <step.icon className="h-8 w-8 text-primary" />
                </div>

                {/* Connection line */}
                {index < steps.length - 1 && (
                  <div className="hidden lg:block absolute top-8 left-1/2 w-full h-0.5 bg-border transform translate-x-8" />
                )}
              </div>

              <h3 className="text-xl font-semibold mb-2">{step.title}</h3>
              <p className="text-muted-foreground">{step.description}</p>
            </motion.div>
          ))}
        </div>
      </Container>
    </Section>
  );
}


================================================================================
END: D:\QiEOS\src\sections\Process.tsx
================================================================================


================================================================================
FILE: D:\QiEOS\src\sections\ServicesGrid.tsx
================================================================================

import { motion } from "framer-motion";
import { ArrowRight, Calculator, Users, Zap, Settings } from "lucide-react";
import { Container } from "../components/ui/container";
import { Section } from "../components/ui/section";
import { GlassCard } from "../components/ui/glass-card";
import { Button } from "../components/ui/button";

const services = [
  {
    icon: Calculator,
    title: "Taxes & Bookkeeping",
    description:
      "Stress-free tax preparation and meticulous bookkeeping to keep your financials in order.",
    features: [
      "Tax Preparation",
      "Bookkeeping",
      "Financial Planning",
      "Compliance",
    ],
  },
  {
    icon: Users,
    title: "HR & Compliance",
    description:
      "Navigating the complexities of HR and ensuring your business stays compliant.",
    features: ["HR Policies", "Compliance", "Employee Relations", "Training"],
  },
  {
    icon: Zap,
    title: "Automation & Tools",
    description:
      "Implementing smart automation and the right tools to boost your productivity.",
    features: [
      "Process Automation",
      "Tool Integration",
      "Workflow Optimization",
      "Training",
    ],
  },
  {
    icon: Settings,
    title: "IT & Strategy",
    description:
      "From tech support to long-term IT strategy, I've got your back.",
    features: ["IT Strategy", "System Setup", "Security", "Support"],
  },
];

export default function ServicesGrid() {
  return (
    <Section>
      <Container>
        <motion.div
          initial={{ opacity: 0, y: 20 }}
          whileInView={{ opacity: 1, y: 0 }}
          transition={{ duration: 0.6 }}
          viewport={{ once: true }}
          className="text-center mb-16"
        >
          <h2 className="text-3xl md:text-5xl font-semibold tracking-tight mb-4">
            What I Can Help You With
          </h2>
          <p className="text-lg text-muted-foreground max-w-2xl mx-auto">
            Comprehensive business services designed to simplify your operations
            and drive growth.
          </p>
        </motion.div>

        <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6">
          {services.map((service, index) => (
            <motion.div
              key={service.title}
              initial={{ opacity: 0, y: 20 }}
              whileInView={{ opacity: 1, y: 0 }}
              transition={{ delay: index * 0.1, duration: 0.5 }}
              viewport={{ once: true }}
            >
              <GlassCard className="p-6 h-full flex flex-col">
                <div className="flex items-center space-x-3 mb-4">
                  <div className="p-2 rounded-lg bg-primary/10">
                    <service.icon className="h-6 w-6 text-primary" />
                  </div>
                  <h3 className="text-xl font-semibold">{service.title}</h3>
                </div>

                <p className="text-muted-foreground mb-4 flex-grow">
                  {service.description}
                </p>

                <ul className="space-y-1 mb-6">
                  {service.features.map((feature) => (
                    <li
                      key={feature}
                      className="text-sm text-muted-foreground flex items-center"
                    >
                      <span className="w-1.5 h-1.5 bg-primary rounded-full mr-2" />
                      {feature}
                    </li>
                  ))}
                </ul>

                <Button variant="outline" size="sm" className="w-full">
                  Learn more <ArrowRight className="ml-2 h-4 w-4" />
                </Button>
              </GlassCard>
            </motion.div>
          ))}
        </div>
      </Container>
    </Section>
  );
}


================================================================================
END: D:\QiEOS\src\sections\ServicesGrid.tsx
================================================================================


================================================================================
FILE: D:\QiEOS\src\sections\Testimonials.tsx
================================================================================

import { motion } from "framer-motion";
import { Star, Quote } from "lucide-react";
import { Container } from "../components/ui/container";
import { Section } from "../components/ui/section";
import { GlassCard } from "../components/ui/glass-card";

const testimonials = [
  {
    quote:
      "Cody is the best, they didn't just get the job done, they found and correct other issues along the ways proactively. Huge savings and potential from the start.",
    author: "Nick Pecoraro",
    role: "Director at MSIL",
    rating: 5,
  },
  {
    quote:
      "The automation solutions implemented have saved us countless hours and significantly improved our operational efficiency. Highly recommended!",
    author: "Sarah Johnson",
    role: "CEO at TechStart",
    rating: 5,
  },
  {
    quote:
      "Professional, thorough, and results-driven. The HR compliance work was exceptional and gave us peace of mind.",
    author: "Michael Chen",
    role: "Founder at GrowthCo",
    rating: 5,
  },
];

export default function Testimonials() {
  return (
    <Section>
      <Container>
        <motion.div
          initial={{ opacity: 0, y: 20 }}
          whileInView={{ opacity: 1, y: 0 }}
          transition={{ duration: 0.6 }}
          viewport={{ once: true }}
          className="text-center mb-16"
        >
          <h2 className="text-3xl md:text-5xl font-semibold tracking-tight mb-4">
            What My Clients Are Saying
          </h2>
          <p className="text-lg text-muted-foreground max-w-2xl mx-auto">
            Real feedback from businesses that have transformed their
            operations.
          </p>
        </motion.div>

        <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8">
          {testimonials.map((testimonial, index) => (
            <motion.div
              key={testimonial.author}
              initial={{ opacity: 0, y: 20 }}
              whileInView={{ opacity: 1, y: 0 }}
              transition={{ delay: index * 0.1, duration: 0.5 }}
              viewport={{ once: true }}
            >
              <GlassCard className="p-6 h-full flex flex-col">
                <div className="flex items-center mb-4">
                  <Quote className="h-8 w-8 text-primary/50 mr-2" />
                  <div className="flex">
                    {[...Array(testimonial.rating)].map((_, i) => (
                      <Star
                        key={i}
                        className="h-4 w-4 fill-yellow-400 text-yellow-400"
                      />
                    ))}
                  </div>
                </div>

                <blockquote className="text-muted-foreground mb-6 flex-grow">
                  "{testimonial.quote}"
                </blockquote>

                <div className="border-t pt-4">
                  <div className="font-semibold">{testimonial.author}</div>
                  <div className="text-sm text-muted-foreground">
                    {testimonial.role}
                  </div>
                </div>
              </GlassCard>
            </motion.div>
          ))}
        </div>
      </Container>
    </Section>
  );
}


================================================================================
END: D:\QiEOS\src\sections\Testimonials.tsx
================================================================================


================================================================================
FILE: D:\QiEOS\src\sections\Trust.tsx
================================================================================

import { motion } from "framer-motion";
import { Container } from "../components/ui/container";
import { Section } from "../components/ui/section";

const clients = [
  { name: "MSIL", logo: "🏢" },
  { name: "TechStart", logo: "🚀" },
  { name: "GrowthCo", logo: "📈" },
  { name: "InnovateLab", logo: "💡" },
  { name: "ScaleUp", logo: "⚡" },
  { name: "FutureBiz", logo: "🌟" },
];

export default function Trust() {
  return (
    <Section className="bg-muted/30">
      <Container>
        <motion.div
          initial={{ opacity: 0, y: 20 }}
          whileInView={{ opacity: 1, y: 0 }}
          transition={{ duration: 0.6 }}
          viewport={{ once: true }}
          className="text-center"
        >
          <p className="text-sm font-medium text-muted-foreground mb-8">
            Trusted by forward-thinking businesses
          </p>

          <div className="grid grid-cols-2 md:grid-cols-3 lg:grid-cols-6 gap-8 items-center">
            {clients.map((client, index) => (
              <motion.div
                key={client.name}
                initial={{ opacity: 0, y: 20 }}
                whileInView={{ opacity: 1, y: 0 }}
                transition={{ delay: index * 0.1, duration: 0.5 }}
                viewport={{ once: true }}
                className="flex flex-col items-center space-y-2 p-4 rounded-lg hover:bg-background/50 transition-colors"
              >
                <div className="text-2xl">{client.logo}</div>
                <span className="text-sm font-medium text-muted-foreground">
                  {client.name}
                </span>
              </motion.div>
            ))}
          </div>
        </motion.div>
      </Container>
    </Section>
  );
}


================================================================================
END: D:\QiEOS\src\sections\Trust.tsx
================================================================================


================================================================================
FILE: D:\QiEOS\supabase\config.toml
================================================================================

# For detailed configuration reference documentation, visit:
# https://supabase.com/docs/guides/local-development/cli/config
# A string used to distinguish different Supabase projects on the same host. Defaults to the
# working directory name when running `supabase init`.
project_id = "supabase"

[api]
enabled = true
# Port to use for the API URL.
port = 54321
# Schemas to expose in your API. Tables, views and stored procedures in this schema will get API
# endpoints. `public` and `graphql_public` schemas are included by default.
schemas = ["public", "graphql_public"]
# Extra schemas to add to the search_path of every request.
extra_search_path = ["public", "extensions"]
# The maximum number of rows returns from a view, table, or stored procedure. Limits payload size
# for accidental or malicious requests.
max_rows = 1000

[api.tls]
# Enable HTTPS endpoints locally using a self-signed certificate.
enabled = false

[db]
# Port to use for the local database URL.
port = 54322
# Port used by db diff command to initialize the shadow database.
shadow_port = 54320
# The database major version to use. This has to be the same as your remote database's. Run `SHOW
# server_version;` on the remote database to check.
major_version = 17

[db.pooler]
enabled = false
# Port to use for the local connection pooler.
port = 54329
# Specifies when a server connection can be reused by other clients.
# Configure one of the supported pooler modes: `transaction`, `session`.
pool_mode = "transaction"
# How many server connections to allow per user/database pair.
default_pool_size = 20
# Maximum number of client connections allowed.
max_client_conn = 100

# [db.vault]
# secret_key = "env(SECRET_VALUE)"

[db.migrations]
# If disabled, migrations will be skipped during a db push or reset.
enabled = true
# Specifies an ordered list of schema files that describe your database.
# Supports glob patterns relative to supabase directory: "./schemas/*.sql"
schema_paths = []

[db.seed]
# If enabled, seeds the database after migrations during a db reset.
enabled = true
# Specifies an ordered list of seed files to load during db reset.
# Supports glob patterns relative to supabase directory: "./seeds/*.sql"
sql_paths = ["./seed.sql"]

[db.network_restrictions]
# Enable management of network restrictions.
enabled = false
# List of IPv4 CIDR blocks allowed to connect to the database.
# Defaults to allow all IPv4 connections. Set empty array to block all IPs.
allowed_cidrs = ["0.0.0.0/0"]
# List of IPv6 CIDR blocks allowed to connect to the database.
# Defaults to allow all IPv6 connections. Set empty array to block all IPs.
allowed_cidrs_v6 = ["::/0"]

[realtime]
enabled = true
# Bind realtime via either IPv4 or IPv6. (default: IPv4)
# ip_version = "IPv6"
# The maximum length in bytes of HTTP request headers. (default: 4096)
# max_header_length = 4096

[studio]
enabled = true
# Port to use for Supabase Studio.
port = 54323
# External URL of the API server that frontend connects to.
api_url = "http://127.0.0.1"
# OpenAI API Key to use for Supabase AI in the Supabase Studio.
openai_api_key = "env(OPENAI_API_KEY)"

# Email testing server. Emails sent with the local dev setup are not actually sent - rather, they
# are monitored, and you can view the emails that would have been sent from the web interface.
[inbucket]
enabled = true
# Port to use for the email testing server web interface.
port = 54324
# Uncomment to expose additional ports for testing user applications that send emails.
# smtp_port = 54325
# pop3_port = 54326
# admin_email = "admin@email.com"
# sender_name = "Admin"

[storage]
enabled = true
# The maximum file size allowed (e.g. "5MB", "500KB").
file_size_limit = "50MiB"

# Image transformation API is available to Supabase Pro plan.
# [storage.image_transformation]
# enabled = true

# Uncomment to configure local storage buckets
# [storage.buckets.images]
# public = false
# file_size_limit = "50MiB"
# allowed_mime_types = ["image/png", "image/jpeg"]
# objects_path = "./images"

[auth]
enabled = true
# The base URL of your website. Used as an allow-list for redirects and for constructing URLs used
# in emails.
site_url = "http://127.0.0.1:3000"
# A list of *exact* URLs that auth providers are permitted to redirect to post authentication.
additional_redirect_urls = ["https://127.0.0.1:3000"]
# How long tokens are valid for, in seconds. Defaults to 3600 (1 hour), maximum 604,800 (1 week).
jwt_expiry = 3600
# Path to JWT signing key. DO NOT commit your signing keys file to git.
# signing_keys_path = "./signing_keys.json"
# If disabled, the refresh token will never expire.
enable_refresh_token_rotation = true
# Allows refresh tokens to be reused after expiry, up to the specified interval in seconds.
# Requires enable_refresh_token_rotation = true.
refresh_token_reuse_interval = 10
# Allow/disallow new user signups to your project.
enable_signup = true
# Allow/disallow anonymous sign-ins to your project.
enable_anonymous_sign_ins = false
# Allow/disallow testing manual linking of accounts
enable_manual_linking = false
# Passwords shorter than this value will be rejected as weak. Minimum 6, recommended 8 or more.
minimum_password_length = 6
# Passwords that do not meet the following requirements will be rejected as weak. Supported values
# are: `letters_digits`, `lower_upper_letters_digits`, `lower_upper_letters_digits_symbols`
password_requirements = ""

[auth.rate_limit]
# Number of emails that can be sent per hour. Requires auth.email.smtp to be enabled.
email_sent = 2
# Number of SMS messages that can be sent per hour. Requires auth.sms to be enabled.
sms_sent = 30
# Number of anonymous sign-ins that can be made per hour per IP address. Requires enable_anonymous_sign_ins = true.
anonymous_users = 30
# Number of sessions that can be refreshed in a 5 minute interval per IP address.
token_refresh = 150
# Number of sign up and sign-in requests that can be made in a 5 minute interval per IP address (excludes anonymous users).
sign_in_sign_ups = 30
# Number of OTP / Magic link verifications that can be made in a 5 minute interval per IP address.
token_verifications = 30
# Number of Web3 logins that can be made in a 5 minute interval per IP address.
web3 = 30

# Configure one of the supported captcha providers: `hcaptcha`, `turnstile`.
# [auth.captcha]
# enabled = true
# provider = "hcaptcha"
# secret = ""

[auth.email]
# Allow/disallow new user signups via email to your project.
enable_signup = true
# If enabled, a user will be required to confirm any email change on both the old, and new email
# addresses. If disabled, only the new email is required to confirm.
double_confirm_changes = true
# If enabled, users need to confirm their email address before signing in.
enable_confirmations = false
# If enabled, users will need to reauthenticate or have logged in recently to change their password.
secure_password_change = false
# Controls the minimum amount of time that must pass before sending another signup confirmation or password reset email.
max_frequency = "1s"
# Number of characters used in the email OTP.
otp_length = 6
# Number of seconds before the email OTP expires (defaults to 1 hour).
otp_expiry = 3600

# Use a production-ready SMTP server
# [auth.email.smtp]
# enabled = true
# host = "smtp.sendgrid.net"
# port = 587
# user = "apikey"
# pass = "env(SENDGRID_API_KEY)"
# admin_email = "admin@email.com"
# sender_name = "Admin"

# Uncomment to customize email template
# [auth.email.template.invite]
# subject = "You have been invited"
# content_path = "./supabase/templates/invite.html"

[auth.sms]
# Allow/disallow new user signups via SMS to your project.
enable_signup = false
# If enabled, users need to confirm their phone number before signing in.
enable_confirmations = false
# Template for sending OTP to users
template = "Your code is {{ .Code }}"
# Controls the minimum amount of time that must pass before sending another sms otp.
max_frequency = "5s"

# Use pre-defined map of phone number to OTP for testing.
# [auth.sms.test_otp]
# 4152127777 = "123456"

# Configure logged in session timeouts.
# [auth.sessions]
# Force log out after the specified duration.
# timebox = "24h"
# Force log out if the user has been inactive longer than the specified duration.
# inactivity_timeout = "8h"

# This hook runs before a new user is created and allows developers to reject the request based on the incoming user object.
# [auth.hook.before_user_created]
# enabled = true
# uri = "pg-functions://postgres/auth/before-user-created-hook"

# This hook runs before a token is issued and allows you to add additional claims based on the authentication method used.
# [auth.hook.custom_access_token]
# enabled = true
# uri = "pg-functions://<database>/<schema>/<hook_name>"

# Configure one of the supported SMS providers: `twilio`, `twilio_verify`, `messagebird`, `textlocal`, `vonage`.
[auth.sms.twilio]
enabled = false
account_sid = ""
message_service_sid = ""
# DO NOT commit your Twilio auth token to git. Use environment variable substitution instead:
auth_token = "env(SUPABASE_AUTH_SMS_TWILIO_AUTH_TOKEN)"

# Multi-factor-authentication is available to Supabase Pro plan.
[auth.mfa]
# Control how many MFA factors can be enrolled at once per user.
max_enrolled_factors = 10

# Control MFA via App Authenticator (TOTP)
[auth.mfa.totp]
enroll_enabled = false
verify_enabled = false

# Configure MFA via Phone Messaging
[auth.mfa.phone]
enroll_enabled = false
verify_enabled = false
otp_length = 6
template = "Your code is {{ .Code }}"
max_frequency = "5s"

# Configure MFA via WebAuthn
# [auth.mfa.web_authn]
# enroll_enabled = true
# verify_enabled = true

# Use an external OAuth provider. The full list of providers are: `apple`, `azure`, `bitbucket`,
# `discord`, `facebook`, `github`, `gitlab`, `google`, `keycloak`, `linkedin_oidc`, `notion`, `twitch`,
# `twitter`, `slack`, `spotify`, `workos`, `zoom`.
[auth.external.apple]
enabled = false
client_id = ""
# DO NOT commit your OAuth provider secret to git. Use environment variable substitution instead:
secret = "env(SUPABASE_AUTH_EXTERNAL_APPLE_SECRET)"
# Overrides the default auth redirectUrl.
redirect_uri = ""
# Overrides the default auth provider URL. Used to support self-hosted gitlab, single-tenant Azure,
# or any other third-party OIDC providers.
url = ""
# If enabled, the nonce check will be skipped. Required for local sign in with Google auth.
skip_nonce_check = false

# Allow Solana wallet holders to sign in to your project via the Sign in with Solana (SIWS, EIP-4361) standard.
# You can configure "web3" rate limit in the [auth.rate_limit] section and set up [auth.captcha] if self-hosting.
[auth.web3.solana]
enabled = false

# Use Firebase Auth as a third-party provider alongside Supabase Auth.
[auth.third_party.firebase]
enabled = false
# project_id = "my-firebase-project"

# Use Auth0 as a third-party provider alongside Supabase Auth.
[auth.third_party.auth0]
enabled = false
# tenant = "my-auth0-tenant"
# tenant_region = "us"

# Use AWS Cognito (Amplify) as a third-party provider alongside Supabase Auth.
[auth.third_party.aws_cognito]
enabled = false
# user_pool_id = "my-user-pool-id"
# user_pool_region = "us-east-1"

# Use Clerk as a third-party provider alongside Supabase Auth.
[auth.third_party.clerk]
enabled = false
# Obtain from https://clerk.com/setup/supabase
# domain = "example.clerk.accounts.dev"

[edge_runtime]
enabled = true
# Supported request policies: `oneshot`, `per_worker`.
# `per_worker` (default) — enables hot reload during local development.
# `oneshot` — fallback mode if hot reload causes issues (e.g. in large repos or with symlinks).
policy = "per_worker"
# Port to attach the Chrome inspector for debugging edge functions.
inspector_port = 8083
# The Deno major version to use.
deno_version = 2

# [edge_runtime.secrets]
# secret_key = "env(SECRET_VALUE)"

[analytics]
enabled = true
port = 54327
# Configure one of the supported backends: `postgres`, `bigquery`.
backend = "postgres"

# Experimental features may be deprecated any time
[experimental]
# Configures Postgres storage engine to use OrioleDB (S3)
orioledb_version = ""
# Configures S3 bucket URL, eg. <bucket_name>.s3-<region>.amazonaws.com
s3_host = "env(S3_HOST)"
# Configures S3 bucket region, eg. us-east-1
s3_region = "env(S3_REGION)"
# Configures AWS_ACCESS_KEY_ID for S3 bucket
s3_access_key = "env(S3_ACCESS_KEY)"
# Configures AWS_SECRET_ACCESS_KEY for S3 bucket
s3_secret_key = "env(S3_SECRET_KEY)"


================================================================================
END: D:\QiEOS\supabase\config.toml
================================================================================


================================================================================
FILE: D:\QiEOS\supabase\note.md
================================================================================

supabase secrets set `
  SUPABASE_URL=https://vwqkhjnkummwtvfxgqml.supabase.co `
  SUPABASE_ANON_KEY=sb_publishable_I7JH7fI8hWP1AtGKskpWew_E4ws1YDa `
  SUPABASE_SERVICE_ROLE=<YOUR_SERVICE_ROLE> `
  KB_BUCKET=kb-sites `
  --project-ref vwqkhjnkummwtvfxgqml

================================================================================
END: D:\QiEOS\supabase\note.md
================================================================================


================================================================================
FILE: D:\QiEOS\supabase\package.json
================================================================================

{
  "devDependencies": {
    "supabase": "^2.39.2"
  }
}


================================================================================
END: D:\QiEOS\supabase\package.json
================================================================================


================================================================================
FILE: D:\QiEOS\workers\api\package.json
================================================================================

{
  "name": "qieos-api-worker",
  "version": "1.0.0",
  "description": "QiEOS API Worker for Cloudflare",
  "main": "src/index.ts",
  "scripts": {
    "dev": "wrangler dev",
    "deploy": "wrangler deploy",
    "build": "tsc",
    "type-check": "tsc --noEmit"
  },
  "dependencies": {
    "@supabase/supabase-js": "^2.39.0"
  },
  "devDependencies": {
    "@cloudflare/workers-types": "^4.20231218.0",
    "typescript": "^5.3.0",
    "wrangler": "^3.22.0"
  }
}


================================================================================
END: D:\QiEOS\workers\api\package.json
================================================================================


================================================================================
FILE: D:\QiEOS\workers\api\tsconfig.json
================================================================================

{
  "compilerOptions": {
    "target": "ES2022",
    "lib": ["ES2022"],
    "module": "ES2022",
    "moduleResolution": "node",
    "allowSyntheticDefaultImports": true,
    "esModuleInterop": true,
    "allowJs": true,
    "checkJs": false,
    "strict": true,
    "skipLibCheck": true,
    "forceConsistentCasingInFileNames": true,
    "resolveJsonModule": true,
    "isolatedModules": true,
    "noEmit": true,
    "types": ["@cloudflare/workers-types"]
  },
  "include": ["src/**/*"],
  "exclude": ["node_modules", "dist"]
}


================================================================================
END: D:\QiEOS\workers\api\tsconfig.json
================================================================================


================================================================================
FILE: D:\QiEOS\workers\api\wrangler.toml
================================================================================

name = "qieos-api"
main = "src/index.ts"
compatibility_date = "2025-01-27"

[vars]
SUPABASE_URL = ""
SUPABASE_SERVICE_ROLE_KEY = ""
OPENAI_API_KEY = ""
STRIPE_SECRET_KEY = ""
JWT_ISSUER = "qieos"
EMBEDDING_DIM = "1536"

[[r2_buckets]]
binding = "R2"
bucket_name = "qieos-files"
preview_bucket_name = "qieos-files-dev"

[env.production]
name = "qieos-api"

[env.staging]
name = "qieos-api-staging"


================================================================================
END: D:\QiEOS\workers\api\wrangler.toml
================================================================================


================================================================================
FILE: D:\QiEOS\workers\api\src\index.ts
================================================================================

import { createClient } from "@supabase/supabase-js";

export interface Env {
  SUPABASE_URL: string;
  SUPABASE_SERVICE_ROLE_KEY: string;
  JWT_ISSUER: string;
  JWT_SECRET: string;
}

export default {
  async fetch(
    request: Request,
    env: Env,
    ctx: ExecutionContext
  ): Promise<Response> {
    const url = new URL(request.url);
    const path = url.pathname;

    // CORS headers
    const corsHeaders = {
      "Access-Control-Allow-Origin": "*",
      "Access-Control-Allow-Methods": "GET, POST, PUT, DELETE, OPTIONS",
      "Access-Control-Allow-Headers": "Content-Type, Authorization",
    };

    // Handle preflight requests
    if (request.method === "OPTIONS") {
      return new Response(null, { status: 200, headers: corsHeaders });
    }

    try {
      // Initialize Supabase client
      const supabase = createClient(
        env.SUPABASE_URL,
        env.SUPABASE_SERVICE_ROLE_KEY
      );

      // Route: POST /auth/session
      if (path === "/auth/session" && request.method === "POST") {
        const { token } = await request.json();

        if (!token) {
          return new Response(
            JSON.stringify({ success: false, error: "Token required" }),
            {
              status: 400,
              headers: { ...corsHeaders, "Content-Type": "application/json" },
            }
          );
        }

        // Verify the JWT token with Supabase
        const {
          data: { user },
          error: authError,
        } = await supabase.auth.getUser(token);

        if (authError || !user) {
          return new Response(
            JSON.stringify({ success: false, error: "Invalid token" }),
            {
              status: 401,
              headers: { ...corsHeaders, "Content-Type": "application/json" },
            }
          );
        }

        // Get user profile and client slug with JOIN query
        const { data: profileData, error: profileError } = await supabase
          .from("profiles")
          .select(
            `
            id,
            email,
            full_name,
            role,
            avatar_url,
            is_active,
            onboarding_complete,
            preferred_locale,
            timezone,
            metadata,
            sms_opt_in,
            email_opt_in,
            last_sign_in_at,
            mfa_enabled,
            tos_version,
            privacy_version,
            consent_at,
            created_at,
            updated_at,
            memberships!inner(
              client_id,
              role,
              clients!inner(
                id,
                name,
                status,
                slugs!inner(
                  slug
                )
              )
            )
          `
          )
          .eq("id", user.id)
          .single();

        if (profileError) {
          console.error("Profile fetch error:", profileError);
          return new Response(
            JSON.stringify({ success: false, error: "Profile not found" }),
            {
              status: 404,
              headers: { ...corsHeaders, "Content-Type": "application/json" },
            }
          );
        }

        // Extract client slug from the nested data
        let clientSlug: string | undefined;
        if (profileData.memberships && profileData.memberships.length > 0) {
          const membership = profileData.memberships[0];
          if (
            membership.clients &&
            membership.clients.slugs &&
            membership.clients.slugs.length > 0
          ) {
            clientSlug = membership.clients.slugs[0].slug;
          }
        }

        // Build claims object
        const claims = {
          user_id: user.id,
          email: profileData.email,
          role: profileData.role,
          org_id: profileData.memberships?.[0]?.client_id || null,
          company_ids:
            profileData.memberships?.map((m: any) => m.client_id) || [],
          department: profileData.role === "admin" ? "internal" : "external",
          features: {
            // Default features - you can customize this based on your needs
            crm: true,
            projects: true,
            tasks: true,
            messaging: true,
            kb: true,
            ai_rag: true,
            billing: true,
            lms: false,
            client_tools: true,
            voice_assistant: false,
            vision_tools: false,
            client_sites: true,
            public_drops: true,
          },
          client_slug: clientSlug,
        };

        return new Response(
          JSON.stringify({
            success: true,
            claims,
          }),
          {
            status: 200,
            headers: { ...corsHeaders, "Content-Type": "application/json" },
          }
        );
      }

      // Route: GET /health
      if (path === "/health" && request.method === "GET") {
        return new Response(
          JSON.stringify({
            status: "ok",
            timestamp: new Date().toISOString(),
          }),
          {
            status: 200,
            headers: { ...corsHeaders, "Content-Type": "application/json" },
          }
        );
      }

      // 404 for unmatched routes
      return new Response(JSON.stringify({ error: "Not found" }), {
        status: 404,
        headers: { ...corsHeaders, "Content-Type": "application/json" },
      });
    } catch (error) {
      console.error("Worker error:", error);
      return new Response(
        JSON.stringify({
          error: "Internal server error",
          message: error instanceof Error ? error.message : "Unknown error",
        }),
        {
          status: 500,
          headers: { ...corsHeaders, "Content-Type": "application/json" },
        }
      );
    }
  },
};


================================================================================
END: D:\QiEOS\workers\api\src\index.ts
================================================================================


================================================================================
COMPLETE - 518 files extracted
================================================================================
